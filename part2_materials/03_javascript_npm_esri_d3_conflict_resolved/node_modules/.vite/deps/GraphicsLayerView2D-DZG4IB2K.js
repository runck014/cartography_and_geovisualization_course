import {
  e as e2
} from "./chunk-SGZGPX6H.js";
import {
  t
} from "./chunk-VKINFEL6.js";
import {
  j,
  y
} from "./chunk-EVT35YP5.js";
import "./chunk-OHKRFTGD.js";
import {
  F as F2
} from "./chunk-4BM4QPL6.js";
import "./chunk-LAXNQQQH.js";
import "./chunk-5PECYTTZ.js";
import "./chunk-ZGL6Q57M.js";
import "./chunk-KDQTUT24.js";
import "./chunk-TZAPBN5J.js";
import "./chunk-FKL5AVF4.js";
import "./chunk-QLTGZ6EP.js";
import "./chunk-CKPBZSTT.js";
import "./chunk-HB2JTNV2.js";
import "./chunk-3T3LUDWR.js";
import "./chunk-VBS2Y7KE.js";
import "./chunk-2O2NCM6Y.js";
import "./chunk-OXCT6NNS.js";
import "./chunk-J3GKRP7Y.js";
import "./chunk-Q3K5MAUZ.js";
import "./chunk-DPVSO6BH.js";
import "./chunk-5VEO4IUH.js";
import "./chunk-2XVRGGEF.js";
import "./chunk-6TRZLPPJ.js";
import "./chunk-U6IFI7EK.js";
import "./chunk-N42IF4WX.js";
import "./chunk-MCHNAU6L.js";
import "./chunk-MYNRH67A.js";
import "./chunk-VAGIPHHR.js";
import "./chunk-JMY2H33H.js";
import "./chunk-BXIXSFGX.js";
import "./chunk-EVK6ZSVY.js";
import "./chunk-YEDSTDY4.js";
import "./chunk-OMMWWGIU.js";
import "./chunk-JPQIRBN6.js";
import "./chunk-CH3XVKUV.js";
import "./chunk-KI5F6KDS.js";
import "./chunk-HACIIBEF.js";
import "./chunk-C2RS46RL.js";
import "./chunk-AHZHHHCW.js";
import "./chunk-BN24XFSK.js";
import "./chunk-YAGJS3MX.js";
import "./chunk-OC7D2HR4.js";
import "./chunk-KKH7HGO3.js";
import "./chunk-QYSQ6XPQ.js";
import "./chunk-2RIHQI4N.js";
import "./chunk-VLKWWBLY.js";
import "./chunk-NXGNMEHZ.js";
import "./chunk-P2IB5HBH.js";
import "./chunk-CGSFKZP2.js";
import "./chunk-EPAKCM4A.js";
import "./chunk-RXJCBLN2.js";
import "./chunk-EFVIMN4N.js";
import "./chunk-2U5JYYSG.js";
import "./chunk-AFULL6KA.js";
import "./chunk-URFLFG2R.js";
import "./chunk-T23XXKIL.js";
import "./chunk-4V237NE5.js";
import "./chunk-F3ZOBTPK.js";
import "./chunk-EZCH3ZAJ.js";
import "./chunk-KDUYQUT4.js";
import "./chunk-73FHIZIF.js";
import "./chunk-ICIPRMPO.js";
import "./chunk-2IVHP3HQ.js";
import "./chunk-EHD5KM2T.js";
import "./chunk-G6LMYOSA.js";
import "./chunk-YNC2IEH2.js";
import "./chunk-QJXYURT2.js";
import "./chunk-CGJUTDVJ.js";
import "./chunk-D6FJTDNK.js";
import "./chunk-GYV5TPN6.js";
import "./chunk-D3FSVA7H.js";
import "./chunk-6B4OMNPA.js";
import "./chunk-3GQ4PJDJ.js";
import "./chunk-QEJMJI2R.js";
import "./chunk-KV3S4QI2.js";
import "./chunk-ECMDQ4LS.js";
import "./chunk-LP6TMAPE.js";
import "./chunk-RENLZYKC.js";
import "./chunk-2X7T37AY.js";
import {
  d
} from "./chunk-6Q7GN2CW.js";
import "./chunk-MYUZZ3A3.js";
import "./chunk-2IGXKE5P.js";
import "./chunk-JFI4ESYU.js";
import "./chunk-4X2UADDH.js";
import "./chunk-ZICJB3ML.js";
import "./chunk-AVBIV2K3.js";
import "./chunk-4NJWIUZG.js";
import "./chunk-F3NUC2RS.js";
import "./chunk-LE3YW4Y3.js";
import "./chunk-TA32QX7Z.js";
import "./chunk-NYLL2YZF.js";
import "./chunk-NYLBGE62.js";
import "./chunk-QCBTLG25.js";
import "./chunk-ECCHNTW6.js";
import "./chunk-WWNVF22O.js";
import "./chunk-SUZN3TAH.js";
import "./chunk-K5RYAJV4.js";
import "./chunk-XGYM66XX.js";
import "./chunk-JOOGZSAP.js";
import "./chunk-J6GHQIZ2.js";
import "./chunk-W6D3ECTZ.js";
import "./chunk-QXDQJEIU.js";
import "./chunk-MGMVRMXQ.js";
import "./chunk-SEUZ3J6J.js";
import "./chunk-BWTCR2DR.js";
import "./chunk-SMOTPOZ7.js";
import "./chunk-YVSEBNS4.js";
import "./chunk-Y2XCZQML.js";
import "./chunk-EZXLBRAS.js";
import "./chunk-GNWAZIVF.js";
import "./chunk-2PK57UYA.js";
import "./chunk-3L2AYCZY.js";
import "./chunk-TSVUPARM.js";
import "./chunk-VUJERGGB.js";
import "./chunk-NTI2OCVI.js";
import "./chunk-ZCHZRNUG.js";
import "./chunk-G6REFQRQ.js";
import "./chunk-2TEGRXBS.js";
import "./chunk-6Y2LNRVP.js";
import "./chunk-JVEZN6WF.js";
import "./chunk-E2RPCJOE.js";
import "./chunk-NHJGPXZH.js";
import "./chunk-JS7R723S.js";
import {
  V
} from "./chunk-RCLWOQNR.js";
import "./chunk-DOTSJZHK.js";
import "./chunk-UCO66LNK.js";
import "./chunk-5YRJ4YFE.js";
import "./chunk-SEG3PRUR.js";
import "./chunk-B6VE32RA.js";
import "./chunk-AIYFWM42.js";
import "./chunk-2M53HYNY.js";
import "./chunk-6YWQXXBX.js";
import "./chunk-Q7TEBZSN.js";
import "./chunk-FG3XOAFD.js";
import "./chunk-GN5RE63N.js";
import "./chunk-2WXAPZBK.js";
import "./chunk-E2I7HYXQ.js";
import "./chunk-P5H5PJSC.js";
import "./chunk-WTNHDCCU.js";
import "./chunk-7O7KFKCG.js";
import "./chunk-TVTRNT6K.js";
import "./chunk-CRH37WFF.js";
import "./chunk-YFGQMO6E.js";
import "./chunk-HAF6QJ32.js";
import {
  m
} from "./chunk-H77COA2S.js";
import {
  a4 as a
} from "./chunk-7LJCT7EA.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import {
  e
} from "./chunk-GRW2QIBT.js";
import {
  u
} from "./chunk-R2PAF6JT.js";
import "./chunk-6WE7SNQY.js";
import "./chunk-L6CCOEVE.js";
import "./chunk-PKLD5YJF.js";
import {
  F
} from "./chunk-XKQWTZMW.js";
import "./chunk-A4OFG7JM.js";

// node_modules/@arcgis/core/views/2d/layers/GraphicsLayerView2D.js
var d2 = class extends j(y) {
  constructor() {
    super(...arguments), this._highlightCounter = new e2();
  }
  attach() {
    this.graphicsView = new F2({ requestUpdateCallback: () => this.requestUpdate(), view: this.view, graphics: this.layer.graphics, container: new t(this.view.featuresTilingScheme), layerId: this.layer.id }), this.container.addChild(this.graphicsView.container), this.addAttachHandles([this.layer.on("graphic-update", this.graphicsView.graphicUpdateHandler), this.watch("layer.visible", (i) => {
      i && (this.graphicsView.update({ state: this.view.state }), this.graphicsView.pushUpdate());
    })]), this._updateHighlights();
  }
  detach() {
    this.container.removeAllChildren(), this.graphicsView = u(this.graphicsView);
  }
  async hitTest(i) {
    return this.graphicsView ? this.graphicsView.hitTest(i).map((t2) => ({ type: "graphic", graphic: t2, mapPoint: i, layer: this.layer })) : null;
  }
  queryGraphics() {
    return Promise.resolve(this.graphicsView.graphics);
  }
  update(i) {
    this.graphicsView.processUpdate(i);
  }
  viewChange() {
    this.graphicsView.viewChange();
  }
  moveEnd() {
  }
  isUpdating() {
    return !this.graphicsView || this.graphicsView.updating;
  }
  highlight(i, h = "default") {
    let a2;
    "number" == typeof i ? a2 = [i] : i instanceof d ? a2 = [i.uid] : Array.isArray(i) && i.length > 0 ? a2 = "number" == typeof i[0] ? i : i.map((i2) => i2 && i2.uid) : V.isCollection(i) && i.length > 0 && (a2 = i.map((i2) => i2 && i2.uid).toArray());
    const o = a2 == null ? void 0 : a2.filter(F);
    return (o == null ? void 0 : o.length) ? (this._addHighlight(o, h), e(() => this._removeHighlight(o, h))) : e();
  }
  _addHighlight(i, t2) {
    this._highlightCounter.addGroup(i, t2), this._updateHighlights();
  }
  _removeHighlight(i, t2) {
    this._highlightCounter.deleteGroup(i, t2), this._updateHighlights();
  }
  _updateHighlights() {
    var _a;
    const i = [];
    for (const t2 of this._highlightCounter.ids()) {
      const e3 = this._highlightCounter.getHighlightGroups(t2), r2 = this._getHighlightBits(e3);
      i.push({ objectId: t2, highlightFlags: r2 });
    }
    (_a = this.graphicsView) == null ? void 0 : _a.setHighlight(i);
  }
};
r([m()], d2.prototype, "graphicsView", void 0), d2 = r([a("esri.views.2d.layers.GraphicsLayerView2D")], d2);
var u2 = d2;
export {
  u2 as default
};
//# sourceMappingURL=GraphicsLayerView2D-DZG4IB2K.js.map
