import {
  M,
  W,
  r as r4
} from "./chunk-F4M4YVE2.js";
import {
  s as s4
} from "./chunk-S6R6PMEL.js";
import {
  u,
  y as y2
} from "./chunk-2L7UGRIC.js";
import {
  m as m2
} from "./chunk-NJKQE6C5.js";
import {
  V
} from "./chunk-NW6OWOSJ.js";
import {
  ot
} from "./chunk-OMMWWGIU.js";
import {
  e as e3
} from "./chunk-CH3XVKUV.js";
import {
  c as c2,
  p as p2
} from "./chunk-JED7FM2Q.js";
import {
  c as c3,
  p as p3
} from "./chunk-CQFC4JO6.js";
import {
  c,
  p
} from "./chunk-CQTV4C3X.js";
import {
  s as s3
} from "./chunk-GEPD6W23.js";
import {
  C,
  n as n3
} from "./chunk-TP6LRQ42.js";
import {
  f as f3,
  l as l2
} from "./chunk-ZE6OS33V.js";
import {
  d as d3
} from "./chunk-MWZJIOOL.js";
import {
  p as p4
} from "./chunk-ULSRCITK.js";
import {
  m as m3,
  t as t2
} from "./chunk-5GQ62KHN.js";
import {
  f as f2
} from "./chunk-PV3ZZQOV.js";
import {
  a as a3,
  l,
  s as s2
} from "./chunk-SM2VXWMT.js";
import {
  t
} from "./chunk-IGMG7ERK.js";
import {
  d as d4,
  f2 as f4,
  j as j2,
  l as l3,
  p as p6,
  v as v2
} from "./chunk-HKYICNT2.js";
import {
  S
} from "./chunk-VGUQMPM6.js";
import {
  d as d2
} from "./chunk-PVHAAI32.js";
import {
  f as f5
} from "./chunk-QMGMKWTA.js";
import {
  E
} from "./chunk-4SUK447J.js";
import {
  q
} from "./chunk-MYUZZ3A3.js";
import {
  b as b2
} from "./chunk-F3NUC2RS.js";
import {
  y
} from "./chunk-QCBTLG25.js";
import {
  K,
  N
} from "./chunk-XGYM66XX.js";
import {
  g as g2,
  p as p5
} from "./chunk-BWTCR2DR.js";
import {
  e as e2
} from "./chunk-SMOTPOZ7.js";
import {
  o
} from "./chunk-2PK57UYA.js";
import {
  f
} from "./chunk-3L2AYCZY.js";
import {
  d,
  v2 as v
} from "./chunk-VUJERGGB.js";
import {
  j2 as j,
  w
} from "./chunk-FG3XOAFD.js";
import {
  g,
  r as r3
} from "./chunk-2WXAPZBK.js";
import {
  U as U2
} from "./chunk-E2I7HYXQ.js";
import {
  n as n2
} from "./chunk-TVTRNT6K.js";
import {
  U
} from "./chunk-CRH37WFF.js";
import {
  b2 as b,
  e,
  m
} from "./chunk-H77COA2S.js";
import {
  a4 as a2,
  r2
} from "./chunk-7LJCT7EA.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import {
  a,
  n2 as n,
  s2 as s
} from "./chunk-PKLD5YJF.js";

// node_modules/@arcgis/core/layers/knowledgeGraph/layerUtils.js
var a4 = "ESRI__ID";
var t3 = "ESRI__OriginID";
var r5 = "ESRI__DestID";
var n4 = "ESRI__LayoutGeometry";
var o2 = "ESRI__AggregationCount";
var s5 = "LC.ESRI__IsSpatial";
var i = { initializeLayersFromClientData: async (a6, t7) => {
  if (t7 || (t7 = [...a6.layers, ...a6.tables].map((e5) => e5.graphTypeName)), 0 === (t7 == null ? void 0 : t7.length)) return;
  const r7 = /* @__PURE__ */ new Map();
  for (const e5 of t7) r7.set(e5, l4(a6, e5));
  const n6 = await W(a6.dataManager.knowledgeGraph, Array.from(r7.values()));
  for (const e5 of [...a6.layers, ...a6.tables]) {
    const t8 = e5.objectType.name;
    if (null === t8) continue;
    const r8 = n6.get(l4(a6, t8));
    if (r8) {
      const a7 = JSON.parse(r8);
      null === a7 || "object" != typeof a7 || a7.hasOwnProperty("showLabels") || (a7.showLabels = false), e5.read(a7, { origin: "service" });
    }
  }
} };
var l4 = (e5, a6) => "knowledge-graph" === e5.type ? `${a6}/Map` : `${a6}/LinkChart/LinkChartSubLayer`;
async function c4(e5, a6) {
  return i.initializeLayersFromClientData(e5, a6);
}

// node_modules/@arcgis/core/layers/knowledgeGraph/SessionMemoryStorage.js
var o3 = class _o {
  constructor() {
    this._featureLookup = /* @__PURE__ */ new Map();
  }
  static getInstance() {
    return _o.instance || (_o.instance = new _o()), _o.instance;
  }
  static resetInstance() {
    _o.instance && (_o.instance = null);
  }
  deleteFromStore(e5) {
    e5.forEach((e6) => {
      this._featureLookup.delete(e6);
    });
  }
  readFromStoreByList(e5) {
    const t7 = [];
    return e5.forEach((e6) => {
      const r7 = this.readFromStoreById(e6);
      r7 && t7.push(r7);
    }), t7;
  }
  readFromStoreById(e5) {
    return this._featureLookup.get(e5) ?? null;
  }
  writeToStore(o5, p10, n6) {
    const a6 = [];
    return o5.forEach((o6) => {
      if (!(o6 == null ? void 0 : o6.id)) return;
      o6.properties || (o6.properties = []);
      let u3, l8 = null;
      if (n6 && o6.properties[n6] && (l8 = ot(o6.properties[n6])), "originId" in o6 && "destinationId" in o6 && (o6.properties[t3] = o6.originId, o6.properties[r5] = o6.destinationId), o6.properties[p10] = o6.id, o6.id && this._featureLookup.has(o6.id) && this._featureLookup.get(o6.id).attributes) {
        const e5 = this._featureLookup.get(o6.id), r7 = JSON.parse(JSON.stringify(Object.assign(e5.attributes, o6.properties)));
        n6 && o6.properties[n6] && (r7[n6] = f(o6.properties[n6])), u3 = new e3(l8 ? JSON.parse(JSON.stringify(l8)) : (e5 == null ? void 0 : e5.geometry) ? JSON.parse(JSON.stringify(e5.geometry)) : null, r7, null, o6.properties[p10]);
      } else u3 = new e3(l8 ? JSON.parse(JSON.stringify(l8)) : null, o6.properties, null, o6.properties[p10]);
      this._featureLookup.set(`${o6.typeName ? `${o6.typeName}__${o6.id}` : o6.id}`, u3), a6.push(u3);
    }), a6;
  }
};

// node_modules/@arcgis/core/libs/linkchartlayout/LinkChartLayout.js
var t4;
var n5 = null;
function a5() {
  return t4 || (t4 = import("./lclayout-LN2Q7BTG.js").then((e5) => e5.l).then(({ default: t7 }) => t7({ locateFile: (t8) => n2(`esri/libs/linkchartlayout/${t8}`) })).then((e5) => {
    i2(e5);
  }), t4);
}
function i2(e5) {
  n5 = e5;
}
var s6;
var o4;
var u2;
var l5;
function y3(e5) {
  const t7 = Object.keys(u2).filter((e6) => isNaN(parseInt(e6, 10))).indexOf(e5.timeDirection), n6 = Object.keys(l5).filter((e6) => isNaN(parseInt(e6, 10))).indexOf(e5.eventsTicksVisualization);
  return { timeDirection: { value: t7 > -1 ? t7 : u2.right }, timeBannerUTCOffsetInMinutes: e5.timeBannerUTCOffsetInMinutes, eventsTicksVisualization: { value: n6 > -1 ? n6 : l5.startAndEnd }, showDurationLineForNonZeroDurationEntityEvents: e5.showDurationLineForNonZeroDurationEntityEvents, durationLineWidth: e5.durationLineWidth, entityPositionAtDurationRatio: e5.entityPositionAtDurationRatio, showNonZeroDurationIntervalBounds: e5.showNonZeroDurationIntervalBounds, separateTimeOverlaps: e5.separateTimeOverlaps, separateTimelineOverlaps: e5.separateTimelineOverlaps, moveFirstBends: e5.moveFirstBends, secondBendRatio: e5.secondBendRatio, lineSeparationMultiplier: e5.lineSeparationMultiplier, spaceSeparatedLinesEvenly: e5.spaceSeparatedLinesEvenly, useBezierCurves: e5.useBezierCurves, separatedLineShapeRatio: e5.separatedLineShapeRatio };
}
function c5(e5, t7, r7, a6, i4, s9) {
  const o5 = r7.length, u3 = i4.length, l8 = Float64Array.BYTES_PER_ELEMENT, y4 = Uint32Array.BYTES_PER_ELEMENT, c7 = Uint8Array.BYTES_PER_ELEMENT, p10 = 16, E5 = p10 + o5 * (c7 + 2 * l8) + u3 * (2 * y4), d10 = n5._malloc(E5);
  try {
    const c8 = d10 + p10 - d10 % p10, E6 = c8 + o5 * l8, f7 = E6 + o5 * l8, A3 = f7 + u3 * y4, v4 = A3 + u3 * y4, h4 = () => [n5.HEAPF64.subarray(c8 >> 3, (c8 >> 3) + o5), n5.HEAPF64.subarray(E6 >> 3, (E6 >> 3) + o5), n5.HEAPU32.subarray(f7 >> 2, (f7 >> 2) + u3), n5.HEAPU32.subarray(A3 >> 2, (A3 >> 2) + u3), n5.HEAPU8.subarray(v4, v4 + o5)], [m7, L2, b4, P3, _2] = h4();
    m7.set(r7), L2.set(a6), b4.set(i4), P3.set(s9), _2.set(t7);
    let B = e5(o5, v4, c8, E6, u3, f7, A3), g3 = null, C3 = null;
    if (B) {
      const e6 = n5.getLayoutLinksTypes(), t8 = n5.getLayoutLinksVerticesEndIndices(), r8 = n5.getLayoutLinksVertices(), a7 = n5.countLayoutLinksVertices();
      !u3 || e6 && t8 ? a7 && !r8 ? B = false : (g3 = { types: new Uint8Array(n5.HEAPU8.subarray(e6, e6 + u3)), vertexEndIndex: new Uint32Array(n5.HEAPU32.subarray(t8 >> 2, (t8 >> 2) + u3)), vertices: new Float64Array(n5.HEAPF64.subarray(r8 >> 3, (r8 >> 3) + 2 * a7)) }, C3 = n5.getAuxiliaryGraphicElements()) : B = false;
    }
    const [F2, T3, R2, H, N2] = h4();
    return r7.set(F2), a6.set(T3), i4.set(R2), s9.set(H), t7.set(N2), { success: B, links: g3, graphics: C3 };
  } finally {
    n5._free(d10), n5.cleanupLayout();
  }
}
!function(e5) {
  e5[e5.None = 0] = "None", e5[e5.IsMovable = 1] = "IsMovable", e5[e5.IsGeographic = 2] = "IsGeographic", e5[e5.IsRoot = 4] = "IsRoot", e5[e5.IsOld = 8] = "IsOld";
}(s6 || (s6 = {})), function(e5) {
  e5[e5.Regular = 0] = "Regular", e5[e5.Curved = 1] = "Curved", e5[e5.Recursive = 2] = "Recursive";
}(o4 || (o4 = {})), function(e5) {
  e5[e5.right = 0] = "right", e5[e5.left = 1] = "left", e5[e5.top = 2] = "top", e5[e5.bottom = 3] = "bottom";
}(u2 || (u2 = {})), function(e5) {
  e5[e5.none = 0] = "none", e5[e5.startOnly = 1] = "startOnly", e5[e5.startAndEnd = 2] = "startAndEnd";
}(l5 || (l5 = {}));
var p7 = 2;
var E2 = 1;
var d5 = -1;
var f6;
var A;
var v3;
var h;
var m4;
var L;
var b3;
var P;
var _;
!function(e5) {
  function t7() {
    return n5.getMinIdealEdgeLength();
  }
  function r7(e6, t8, r8, a6, i4, s9 = p7, o5 = E2, u3 = d5) {
    return c5((e7, t9, r9, a7, i5, l8, y4) => n5.applyForceDirectedLayout(e7, t9, r9, a7, i5, l8, y4, s9, o5, u3), e6, t8, r8, a6, i4);
  }
  e5.getMinIdealEdgeLength = t7, e5.apply = r7;
}(f6 || (f6 = {})), function(e5) {
  function t7(e6, t8, r7, a6, i4, s9 = p7, o5 = E2, u3 = d5) {
    return c5((e7, t9, r8, a7, i5, l8, y4) => n5.applyCommunityLayout(e7, t9, r8, a7, i5, l8, y4, s9, o5, u3), e6, t8, r7, a6, i4);
  }
  e5.apply = t7;
}(A || (A = {})), function(e5) {
  function t7(e6, t8, r7, a6, i4) {
    return c5(n5.applySimpleLayout, e6, t8, r7, a6, i4);
  }
  e5.apply = t7;
}(v3 || (v3 = {})), function(e5) {
  function t7(e6, t8, r7, a6, i4) {
    return c5(n5.applyHierarchicalLayout, e6, t8, r7, a6, i4);
  }
  e5.apply = t7;
}(h || (h = {})), function(e5) {
  function t7(e6, t8, r7, a6, i4) {
    return c5(n5.applyRadialTreeLayout, e6, t8, r7, a6, i4);
  }
  e5.apply = t7;
}(m4 || (m4 = {})), function(e5) {
  function t7(e6, t8, r7, a6, i4) {
    return c5(n5.applySmartTreeLayout, e6, t8, r7, a6, i4);
  }
  e5.apply = t7;
}(L || (L = {})), function(e5) {
  function t7(e6, t8, r7, a6, i4, s9, o5, p10, E5, d10, f7) {
    const A3 = { timeDirection: u2.right, timeBannerUTCOffsetInMinutes: 0, eventsTicksVisualization: l5.startAndEnd, showDurationLineForNonZeroDurationEntityEvents: true, durationLineWidth: 5, entityPositionAtDurationRatio: 1, showNonZeroDurationIntervalBounds: false, separateTimeOverlaps: true, separateTimelineOverlaps: true, moveFirstBends: true, secondBendRatio: 0.3, lineSeparationMultiplier: 1, spaceSeparatedLinesEvenly: false, useBezierCurves: false, separatedLineShapeRatio: 0 };
    return c5((e7, t9, r8, s10, o6, u3, l8) => {
      if (a6.length !== e7) return false;
      if (i4.length !== e7) return false;
      if (p10.length !== o6) return false;
      if (E5.length !== o6) return false;
      const c7 = Float64Array.BYTES_PER_ELEMENT, v4 = 16, h4 = n5._malloc(v4 + e7 * c7), m7 = n5._malloc(v4 + e7 * c7), L2 = n5._malloc(v4 + o6 * c7), b4 = n5._malloc(v4 + o6 * c7), P3 = h4 + v4 - h4 % v4, _2 = m7 + v4 - m7 % v4, B = L2 + v4 - L2 % v4, g3 = b4 + v4 - b4 % v4;
      try {
        n5.HEAPF64.subarray(P3 >> 3, (P3 >> 3) + e7).set(a6), n5.HEAPF64.subarray(_2 >> 3, (_2 >> 3) + e7).set(i4), n5.HEAPF64.subarray(B >> 3, (B >> 3) + o6).set(p10), n5.HEAPF64.subarray(g3 >> 3, (g3 >> 3) + o6).set(E5);
        const c8 = y3(Object.assign(A3, f7));
        return n5.applyChronologicalLayout(e7, t9, r8, s10, P3, _2, o6, u3, l8, B, g3, d10, c8);
      } finally {
        n5._free(h4), n5._free(m7), n5._free(L2), n5._free(b4);
      }
    }, e6, t8, r7, s9, o5);
  }
  e5.apply = t7;
}(b3 || (b3 = {})), function(e5) {
  e5[e5.Undirected = 0] = "Undirected", e5[e5.Directed = 1] = "Directed", e5[e5.Reversed = 2] = "Reversed";
}(P || (P = {})), function(e5) {
  e5[e5.ByCC_Raw = 0] = "ByCC_Raw", e5[e5.ByCC_NormalizeGlobally = 1] = "ByCC_NormalizeGlobally", e5[e5.ByCC_NormalizeByCC = 2] = "ByCC_NormalizeByCC";
}(_ || (_ = {}));

// node_modules/@arcgis/core/rest/knowledgeGraph/ProtoFeatureCollection.js
var T;
!function(s9) {
  s9.ELEMENTUID = "ELEMENTUID", s9.TYPENAME = "TYPENAME";
}(T || (T = {}));
var m5 = [T.ELEMENTUID, T.TYPENAME];
var d6;
var p8;
!function(s9) {
  s9[s9.ELEMENTUID = 0] = "ELEMENTUID", s9[s9.TYPENAME = 1] = "TYPENAME";
}(d6 || (d6 = {})), function(s9) {
  s9[s9.ELEMENTUID = 0] = "ELEMENTUID", s9[s9.TYPENAME = 1] = "TYPENAME", s9[s9.FROMUID = 2] = "FROMUID", s9[s9.TOUID = 3] = "TOUID";
}(p8 || (p8 = {}));

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/WasmSerializedLayerData.js
var e4;
var l6;
var s7;
var T2;
!function(e5) {
  e5[e5.featureResult = 0] = "featureResult", e5[e5.countResult = 1] = "countResult", e5[e5.idsResult = 2] = "idsResult";
}(e4 || (e4 = {})), function(e5) {
  e5[e5.upperLeft = 0] = "upperLeft", e5[e5.lowerLeft = 1] = "lowerLeft";
}(l6 || (l6 = {})), function(e5) {
  e5[e5.sqlTypeBigInt = 0] = "sqlTypeBigInt", e5[e5.sqlTypeBinary = 1] = "sqlTypeBinary", e5[e5.sqlTypeBit = 2] = "sqlTypeBit", e5[e5.sqlTypeChar = 3] = "sqlTypeChar", e5[e5.sqlTypeDate = 4] = "sqlTypeDate", e5[e5.sqlTypeDecimal = 5] = "sqlTypeDecimal", e5[e5.sqlTypeDouble = 6] = "sqlTypeDouble", e5[e5.sqlTypeFloat = 7] = "sqlTypeFloat", e5[e5.sqlTypeGeometry = 8] = "sqlTypeGeometry", e5[e5.sqlTypeGUID = 9] = "sqlTypeGUID", e5[e5.sqlTypeInteger = 10] = "sqlTypeInteger", e5[e5.sqlTypeLongNVarchar = 11] = "sqlTypeLongNVarchar", e5[e5.sqlTypeLongVarbinary = 12] = "sqlTypeLongVarbinary", e5[e5.sqlTypeLongVarchar = 13] = "sqlTypeLongVarchar", e5[e5.sqlTypeNChar = 14] = "sqlTypeNChar", e5[e5.sqlTypeNVarChar = 15] = "sqlTypeNVarChar", e5[e5.sqlTypeOther = 16] = "sqlTypeOther", e5[e5.sqlTypeReal = 17] = "sqlTypeReal", e5[e5.sqlTypeSmallInt = 18] = "sqlTypeSmallInt", e5[e5.sqlTypeSqlXml = 19] = "sqlTypeSqlXml", e5[e5.sqlTypeTime = 20] = "sqlTypeTime", e5[e5.sqlTypeTimestamp = 21] = "sqlTypeTimestamp", e5[e5.sqlTypeTimestamp2 = 22] = "sqlTypeTimestamp2", e5[e5.sqlTypeTinyInt = 23] = "sqlTypeTinyInt", e5[e5.sqlTypeVarbinary = 24] = "sqlTypeVarbinary", e5[e5.sqlTypeVarchar = 25] = "sqlTypeVarchar";
}(s7 || (s7 = {})), function(e5) {
  e5[e5.OID_ARRAY = 0] = "OID_ARRAY", e5[e5.GLOBALID_ARRAY = 1] = "GLOBALID_ARRAY", e5[e5.STRING_ARRAY = 2] = "STRING_ARRAY", e5[e5.IDENTIFIER_ARRAY = 3] = "IDENTIFIER_ARRAY";
}(T2 || (T2 = {}));

// node_modules/@arcgis/core/layers/knowledgeGraph/supportUtils.js
function C2(e5) {
  if (!e5.spatialReference.isWGS84) throw new s("knowledge-graph:layer-support-utils", "The extentToInBoundsRings function only supports WGS84 spatial references.");
  return e5.clone().normalize().map((e6) => [[e6.xmin, e6.ymin], [e6.xmin, e6.ymax], [e6.xmax, e6.ymax], [e6.xmax, e6.ymin], [e6.xmin, e6.ymin]]);
}
async function A2(e5, t7) {
  var _a, _b;
  const r7 = [], o5 = /* @__PURE__ */ new Map(), n6 = [];
  if ((_a = t7.dataModel) == null ? void 0 : _a.relationshipTypes) for (const i4 of t7.dataModel.relationshipTypes) i4.name && o5.set(i4.name, []);
  for (const i4 of e5) o5.has(i4.typeName) && ((_b = o5.get(i4.typeName)) == null ? void 0 : _b.push(i4.id));
  for (const [i4, s9] of o5) {
    if (s9.length < 1) continue;
    const e6 = new s4({ openCypherQuery: `MATCH (n)-[r:${i4}]->(m) WHERE id(r) in $ids RETURN id(n), labels(n)[0], id(m), labels(m)[0]`, bindParameters: { ids: s9 } });
    n6.push(M(t7, e6).then(async (e7) => {
      const t8 = e7.resultRowsStream.getReader();
      for (; ; ) {
        const { done: e8, value: o6 } = await t8.read();
        if (e8) break;
        for (const t9 of o6) r7.push({ id: t9[0], typeName: t9[1] }), r7.push({ id: t9[2], typeName: t9[3] });
      }
    }));
  }
  return await Promise.all(n6), r7;
}
async function F(e5, t7) {
  t7 ?? (t7 = false);
  const r7 = { generateAllSublayers: t7, namedTypeDefinitions: /* @__PURE__ */ new Map() };
  return await P2(e5).then((e6) => {
    z(e6, r7);
  }), r7;
}
async function R(e5) {
  const t7 = await r4(), o5 = new t7.MapOfObjectIdentifierSets();
  D(o5, t7, e5);
  const n6 = new t7.MapOfObjectIdentifierSetsEncoder();
  try {
    n6.set_map_of_identifier_sets(o5), n6.encode();
    const e6 = n6.get_encoding_result();
    if (0 !== e6.error.error_code) throw new s("knowledge-graph:layer-support-utils", e6.error.error_message);
    const t8 = structuredClone(e6.get_byte_buffer());
    return n6.delete(), t8;
  } finally {
    o5.delete();
  }
}
function D(e5, t7, r7) {
  for (const [o5, n6] of r7.namedTypeDefinitions) {
    if (!n6.members || n6.useAllData) continue;
    const r8 = n6.members.keys();
    let i4 = false, s9 = true;
    const a6 = new t7.ObjectIdArray(), l8 = new t7.StringArray(), c7 = new t7.GlobalIdArray(), d10 = new t7.IdentifierArray(), m7 = new t7.ObjectIdentifierSet();
    for (const e6 of r8) s9 && (i4 = !isNaN(Number(e6)), s9 = false), i4 ? a6.add_objectid(Number(e6)) : (l8.add_string(e6), c7.add_globalid(e6)), d10.add_identifier(e6);
    m7.set_oid_array(a6), m7.set_string_array(l8), m7.set_globalid_array(c7), m7.set_identifier_array(d10), a6.delete(), l8.delete(), c7.delete(), d10.delete(), e5.put_identifier_set(o5, m7), m7.delete();
  }
  return e5;
}
async function P2(e5) {
  const r7 = await U(e5, { responseType: "array-buffer" }), o5 = await r7.data;
  return O(new Uint8Array(o5));
}
async function O(e5) {
  const t7 = new (await r4()).MapOfObjectIdentifierSetsDecoder(), o5 = t7.decode(new Uint8Array(e5)), n6 = /* @__PURE__ */ new Map();
  if (0 !== o5.error_code) throw new s("knowledge-graph:layer-support-utils", o5.error_message);
  const i4 = t7.get_map_of_identifier_sets(), s9 = i4.keys, a6 = s9.size();
  for (let l8 = 0; l8 < a6; l8++) {
    const e6 = s9.get(l8), t8 = i4.query_identifier_set(e6), o6 = [];
    if (t8.id_array_type.value === T2.GLOBALID_ARRAY) {
      const e7 = t8.get_globalid_array(), r7 = e7.count();
      for (let t9 = 0; t9 < r7; t9++) o6.push(e7.get_globalid_at(t9));
    } else if (t8.id_array_type.value === T2.IDENTIFIER_ARRAY) {
      const e7 = t8.get_identifier_array(), r7 = e7.count();
      for (let t9 = 0; t9 < r7; t9++) o6.push(e7.get_identifier_at(t9).toString());
    } else if (t8.id_array_type.value === T2.STRING_ARRAY) {
      const e7 = t8.get_string_array(), r7 = e7.count();
      for (let t9 = 0; t9 < r7; t9++) o6.push(e7.get_string_at(t9));
    } else {
      if (t8.id_array_type.value !== T2.OID_ARRAY) throw new s("knowledge-graph:layer-support-utils", "Tried to encode an unexpected ID Array type.");
      {
        const e7 = t8.get_oid_array(), r7 = e7.count();
        for (let t9 = 0; t9 < r7; t9++) o6.push(e7.get_objectid_at(t9).toString());
      }
    }
    n6.set(e6, o6);
  }
  return t7.delete(), n6;
}
function z(e5, t7) {
  for (const [r7, n6] of e5) {
    const e6 = r2(t7.namedTypeDefinitions, r7, () => ({ useAllData: false, members: /* @__PURE__ */ new Map() }));
    for (const t8 of n6) e6.members.has(t8) || e6.members.set(t8, { id: t8 });
  }
  return t7;
}

// node_modules/@arcgis/core/layers/knowledgeGraph/KnowledgeGraphLayerDataManager.js
var E4 = class extends b {
  constructor(e5) {
    var _a, _b, _c;
    super(e5), this._processingCacheUpdatesLookup = /* @__PURE__ */ new Map(), this.knowledgeGraph = null, this.inclusionModeDefinition = { generateAllSublayers: true, namedTypeDefinitions: /* @__PURE__ */ new Map() }, this.entityTypeNames = /* @__PURE__ */ new Set(), this.relationshipTypeNames = /* @__PURE__ */ new Set(), this.geographicLookup = /* @__PURE__ */ new Map(), this.sublayerCaches = /* @__PURE__ */ new Map(), this.nodeConnectionsLookup = /* @__PURE__ */ new Map(), this.relationshipConnectionsLookup = /* @__PURE__ */ new Map(), this.memberIdTypeLookup = /* @__PURE__ */ new Map();
    const t7 = /* @__PURE__ */ new Map();
    (_a = e5.knowledgeGraph.dataModel.entityTypes) == null ? void 0 : _a.forEach((i4) => {
      var _a2, _b2;
      i4.name && (t7.set(i4.name, "entity"), this._processingCacheUpdatesLookup.set(i4.name, []), e5.inclusionModeDefinition && !((_a2 = e5.inclusionModeDefinition) == null ? void 0 : _a2.generateAllSublayers) || this.entityTypeNames.add(i4.name), (_b2 = i4.properties) == null ? void 0 : _b2.forEach((e6) => {
        e6.geometryType && "esriGeometryNull" !== e6.geometryType && this.geographicLookup.set(i4.name, { name: e6.name ?? "", geometryType: e6.geometryType });
      }));
    }), (_b = e5.knowledgeGraph.dataModel.relationshipTypes) == null ? void 0 : _b.forEach((i4) => {
      var _a2, _b2;
      i4.name && (t7.set(i4.name, "relationship"), this._processingCacheUpdatesLookup.set(i4.name, []), e5.inclusionModeDefinition && !((_a2 = e5.inclusionModeDefinition) == null ? void 0 : _a2.generateAllSublayers) || this.relationshipTypeNames.add(i4.name), (_b2 = i4.properties) == null ? void 0 : _b2.forEach((e6) => {
        e6.geometryType && "esriGeometryNull" !== e6.geometryType && this.geographicLookup.set(i4.name, { name: e6.name ?? "", geometryType: e6.geometryType });
      }));
    }), (_c = e5.inclusionModeDefinition) == null ? void 0 : _c.namedTypeDefinitions.forEach((i4, s9) => {
      var _a2, _b2;
      if ("entity" === t7.get(s9)) this.entityTypeNames.add(s9);
      else {
        if ("relationship" !== t7.get(s9)) return n.getLogger(this).warn(`A named type, ${s9}, was in the inclusion list that wasn't in the data model and will be removed`), void ((_a2 = e5.inclusionModeDefinition) == null ? void 0 : _a2.namedTypeDefinitions.delete(s9));
        this.relationshipTypeNames.add(s9);
      }
      const r7 = /* @__PURE__ */ new Map();
      (_b2 = i4.members) == null ? void 0 : _b2.forEach((e6) => {
        r2(this.memberIdTypeLookup, e6.id, () => /* @__PURE__ */ new Set()).add(s9);
        const t8 = this.getById(e6.id);
        t8 && r7.set(e6.id, t8);
      }), this.sublayerCaches.set(s9, r7);
    });
  }
  addToLayer(e5) {
    e5.forEach(({ typeName: e6, id: t7 }) => {
      if (!this.inclusionModeDefinition) throw new s("knowledge-graph:layer-data-manager", "You cannot add to a layer's exclusion list if it was not created with an exclusion list originally");
      if (this.inclusionModeDefinition.namedTypeDefinitions.has(e6)) {
        if (this.inclusionModeDefinition.namedTypeDefinitions.has(e6)) {
          const i4 = this.inclusionModeDefinition.namedTypeDefinitions.get(e6);
          i4.members || (i4.members = /* @__PURE__ */ new Map()), i4.members.set(t7, { id: t7 }), r2(this.memberIdTypeLookup, t7, () => /* @__PURE__ */ new Set()).add(e6);
        }
      } else {
        const i4 = /* @__PURE__ */ new Map();
        i4.set(t7, { id: t7 }), this.inclusionModeDefinition.namedTypeDefinitions.set(e6, { useAllData: false, members: i4 }), r2(this.memberIdTypeLookup, t7, () => /* @__PURE__ */ new Set()).add(e6);
      }
    });
  }
  getById(e5) {
    return o3.getInstance().readFromStoreById(e5);
  }
  async getData(e5, t7, i4) {
    var _a, _b;
    if (t7.objectType.name && ((_a = this.inclusionModeDefinition) == null ? void 0 : _a.namedTypeDefinitions) && this.inclusionModeDefinition.namedTypeDefinitions.size > 0 && !this.inclusionModeDefinition.namedTypeDefinitions.has(t7.objectType.name)) return [];
    let n6;
    if (n6 = e5 || new b2({ where: "1=1", outFields: ["*"] }), "link-chart" === t7.parentCompositeLayer.type) {
      const e6 = t7.parentCompositeLayer, i5 = this._processingCacheUpdatesLookup.get(t7.objectType.name ?? ""), o5 = n6.outFields;
      o5 && 1 === o5.length && o5[0] === a4 && "1=1" === n6.where || await Promise.all(i5 ?? []);
      const s9 = this.sublayerCaches.has(t7.objectType.name ?? "") ? Array.from((_b = this.sublayerCaches.get(t7.objectType.name)) == null ? void 0 : _b.values()) : [], r7 = [];
      return s9.forEach((i6) => {
        if (this.relationshipTypeNames.has(t7.objectType.name)) {
          i6.geometry = e6.relationshipLinkChartDiagramLookup.get(i6.attributes[t7.objectIdField]);
          const n7 = this.memberIdTypeLookup.get(i6.attributes[t3]), o6 = this.memberIdTypeLookup.get(i6.attributes[r5]), s10 = this._isEndEntitySpatial(n7, i6, t3), r8 = this._isEndEntitySpatial(o6, i6, r5);
          i6.attributes[s5] = Number(s10 && r8);
        } else {
          i6.geometry = e6.entityLinkChartDiagramLookup.get(i6.attributes[t7.objectIdField]);
          const n7 = this.geographicLookup.get(t7.objectType.name);
          n7 && i6.attributes[n7.name] ? i6.attributes[s5] = 1 : i6.attributes[s5] = 0;
        }
        i6.attributes[n4] = i6.geometry, r7.push(i6);
      }), r7;
    }
    return this.retrieveDataFromService(n6, t7, i4);
  }
  async getConnectedRecordIds(e5, t7) {
    const i4 = [];
    let o5 = "";
    const s9 = [], r7 = /* @__PURE__ */ new Map();
    if (e5.forEach((e6) => {
      var _a;
      if (this.memberIdTypeLookup.has(e6)) for (const t8 of this.memberIdTypeLookup.get(e6)) {
        if (!this.entityTypeNames.has(t8)) return;
        r7.has(t8) ? (_a = r7.get(t8)) == null ? void 0 : _a.push(e6) : r7.set(t8, [e6]);
      }
    }), t7 && 0 !== (t7 == null ? void 0 : t7.length)) {
      for (const e6 of t7) o5 = o5 + e6 + "|";
      o5 = o5.slice(0, -1);
    }
    const a6 = {};
    let p10 = "", d10 = -1;
    for (const [n6, m7] of r7) {
      d10++, 0 !== d10 && (p10 += " UNION ");
      const e6 = `${n6}_ids`;
      a6[e6] = m7, p10 += t7 && 0 !== (t7 == null ? void 0 : t7.length) ? `MATCH (n:${n6}) WHERE id(n) IN $${e6} WITH n MATCH (n)-[r:${o5}]-(m) RETURN id(r), type(r), id(m), labels(m)[0]` : `MATCH (n:${n6}) WHERE id(n) IN $${e6} WITH n MATCH (n)-[r]-(m) RETURN id(r), type(r), id(m), labels(m)[0]`;
    }
    if (!p10) return i4;
    const l8 = new Promise((e6) => {
      (async () => {
        const e7 = (await M(this.knowledgeGraph, new s4({ openCypherQuery: p10, bindParameters: a6 }))).resultRowsStream.getReader();
        try {
          for (; ; ) {
            const { done: t8, value: n6 } = await e7.read();
            if (t8) break;
            for (let e8 = 0; e8 < n6.length; e8++) {
              const t9 = n6[e8];
              i4.push({ id: t9[0], typeName: t9[1] }), i4.push({ id: t9[2], typeName: t9[3] });
            }
          }
        } catch (t8) {
          if ("AbortError" !== t8.name) throw t8;
          n.getLogger(this).info("Request aborted as expected");
        }
      })().then(() => {
        e6();
      });
    });
    return s9.push(l8), this.refreshCacheContent(), await Promise.all(s9), i4;
  }
  async getRelationshipsBetweenNodes(e5, t7) {
    const i4 = [], o5 = "MATCH (n)-[r]->(m) WHERE id(n) IN $nodeIds AND id(m) in $nodeIds AND NOT id(r) IN $relationshipExclusionIds return id(r), type(r)", s9 = (await M(this.knowledgeGraph, new s4({ openCypherQuery: o5, bindParameters: { nodeIds: e5, relationshipExclusionIds: t7 } }))).resultRowsStream.getReader();
    try {
      for (; ; ) {
        const { done: e6, value: t8 } = await s9.read();
        if (e6) break;
        for (let n6 = 0; n6 < t8.length; n6++) {
          const e7 = t8[n6];
          i4.push({ id: e7[0], typeName: e7[1] });
        }
      }
    } catch (r7) {
      if ("AbortError" !== r7.name) throw r7;
      n.getLogger(this).info("Request aborted as expected");
    }
    return i4;
  }
  async getRelationshipsFromNodes(e5, t7, i4) {
    const o5 = [], s9 = "MATCH (n)-[r]-(m) WHERE id(n) IN $targetEntityIds AND id(m) in $possibleConnectionEntityIds AND NOT id(r) IN $relationshipExclusionIds return id(r), type(r)", r7 = (await M(this.knowledgeGraph, new s4({ openCypherQuery: s9, bindParameters: { targetEntityIds: e5, possibleConnectionEntityIds: t7, relationshipExclusionIds: i4 } }))).resultRowsStream.getReader();
    try {
      for (; ; ) {
        const { done: e6, value: t8 } = await r7.read();
        if (e6) break;
        for (let i5 = 0; i5 < t8.length; i5++) {
          const e7 = t8[i5];
          o5.push({ id: e7[0], typeName: e7[1] });
        }
      }
    } catch (a6) {
      if ("AbortError" !== a6.name) throw a6;
      n.getLogger(this).info("Request aborted as expected");
    }
    return o5;
  }
  async refreshCacheContent(e5, t7, n6, s9 = true) {
    var _a, _b, _c, _d, _e, _f, _g;
    const r7 = o3.getInstance(), a6 = [], p10 = /* @__PURE__ */ new Map(), d10 = /* @__PURE__ */ new Map();
    (_a = this.knowledgeGraph.dataModel.entityTypes) == null ? void 0 : _a.forEach((e6) => {
      e6.name && d10.set(e6.name, e6);
    }), (_b = this.knowledgeGraph.dataModel.relationshipTypes) == null ? void 0 : _b.forEach((e6) => {
      e6.name && d10.set(e6.name, e6);
    }), e5 || this.inclusionModeDefinition ? e5 ? e5.forEach((e6) => {
      var _a2;
      if (this.memberIdTypeLookup.has(e6)) for (const t8 of this.memberIdTypeLookup.get(e6)) p10.has(t8) ? (_a2 = p10.get(t8)) == null ? void 0 : _a2.push(e6) : p10.set(t8, [e6]);
    }) : (_d = (_c = this.inclusionModeDefinition) == null ? void 0 : _c.namedTypeDefinitions) == null ? void 0 : _d.forEach((e6, t8) => {
      e6.useAllData ? p10.set(t8, null) : e6.members && e6.members.forEach((e7) => {
        var _a2;
        p10.has(t8) && null !== p10.get(t8) ? (_a2 = p10.get(t8)) == null ? void 0 : _a2.push(e7.id) : p10.set(t8, [e7.id]);
      });
    }) : ((_e = this.knowledgeGraph.dataModel.entityTypes) == null ? void 0 : _e.forEach((e6) => {
      e6.name && p10.set(e6.name, null);
    }), (_f = this.knowledgeGraph.dataModel.entityTypes) == null ? void 0 : _f.forEach((e6) => {
      e6.name && p10.set(e6.name, null);
    }));
    for (const [l8, m7] of p10) {
      const e6 = new Promise((e7) => {
        const a7 = async () => {
          var _a2, _b2, _c2, _d2, _e2, _f2, _g2;
          const e8 = /* @__PURE__ */ new Set(), a8 = [];
          let p11, c7 = "", y4 = false;
          if (t7 || ((_b2 = (_a2 = d10.get(l8)) == null ? void 0 : _a2.properties) == null ? void 0 : _b2.forEach((t8) => {
            t8.name && e8.add(t8.name);
          })), n6 && this.geographicLookup.has(l8)) {
            const t8 = (_c2 = this.geographicLookup.get(l8)) == null ? void 0 : _c2.name;
            t8 && e8.add(t8);
          }
          if (this.entityTypeNames.has(l8)) c7 = `MATCH (n:${l8}) ${m7 ? "WHERE id(n) IN $ids " : ""}return ID(n)`, e8.forEach((e9) => {
            c7 += `, n.${e9}`, a8.push(e9);
          });
          else {
            if (!this.relationshipTypeNames.has(l8)) throw new s("knowledge-graph:layer-data-manager", `The graph type of ${l8} could not be determined. Was this type set in the KG data model and inclusion definition?`);
            y4 = true, c7 = `MATCH ()-[n:${l8}]->() ${m7 ? "WHERE id(n) IN $ids " : ""}return ID(n), id(startNode(n)), id(endNode(n))`, e8.forEach((e9) => {
              c7 += `, n.${e9}`, a8.push(e9);
            });
          }
          p11 = new s4(m7 ? { openCypherQuery: c7, bindParameters: { ids: m7 } } : { openCypherQuery: c7 });
          const u3 = (await M(this.knowledgeGraph, p11)).resultRowsStream.getReader();
          for (; ; ) {
            const { done: e9, value: t8 } = await u3.read();
            if (e9) break;
            const i4 = [];
            for (let s10 = 0; s10 < t8.length; s10++) {
              const e10 = t8[s10];
              let n8 = 0, r8 = 0;
              const p13 = { properties: {} };
              for (p13.id = e10[n8], n8++, r8++, y4 && (p13.originId = e10[n8], n8++, r8++, p13.destinationId = e10[n8], n8++, r8++, r2(this.nodeConnectionsLookup, p13.originId, () => /* @__PURE__ */ new Set()).add(p13.id), r2(this.nodeConnectionsLookup, p13.destinationId, () => /* @__PURE__ */ new Set()).add(p13.id), r2(this.relationshipConnectionsLookup, p13.id, () => [p13.originId, p13.destinationId])); n8 < e10.length; n8++) p13.properties[a8[n8 - r8]] = e10[n8];
              i4.push(p13);
            }
            const n7 = r7.writeToStore(i4, a4, (_d2 = this.geographicLookup.get(l8)) == null ? void 0 : _d2.name);
            this.sublayerCaches.has(l8) || this.sublayerCaches.set(l8, /* @__PURE__ */ new Map()), s9 && !((_e2 = this.inclusionModeDefinition) == null ? void 0 : _e2.namedTypeDefinitions.has(l8)) && ((_f2 = this.inclusionModeDefinition) == null ? void 0 : _f2.namedTypeDefinitions.set(l8, { useAllData: false, members: /* @__PURE__ */ new Map() })), s9 && !((_g2 = this.inclusionModeDefinition) == null ? void 0 : _g2.namedTypeDefinitions.get(l8).members) && (this.inclusionModeDefinition.namedTypeDefinitions.get(l8).members = /* @__PURE__ */ new Map());
            const p12 = this.sublayerCaches.get(l8);
            n7.forEach((e10) => {
              var _a3, _b3;
              p12 == null ? void 0 : p12.set(e10.attributes[a4], e10), s9 && !((_a3 = this.inclusionModeDefinition) == null ? void 0 : _a3.namedTypeDefinitions.get(l8).members.has(e10.attributes[a4])) && ((_b3 = this.inclusionModeDefinition) == null ? void 0 : _b3.namedTypeDefinitions.get(l8).members.set(e10.attributes[a4], { id: e10.attributes[a4] }), r2(this.memberIdTypeLookup, e10.attributes[a4], () => /* @__PURE__ */ new Set()).add(l8));
            });
          }
        };
        a7().then(() => {
          e7(null);
        });
      });
      a6.push(e6), (_g = this._processingCacheUpdatesLookup.get(l8)) == null ? void 0 : _g.push(e6);
    }
    await Promise.all(a6);
  }
  removeFromLayer(e5) {
    var _a, _b, _c;
    const t7 = /* @__PURE__ */ new Set(), i4 = new Set(e5.map((e6) => e6.id));
    for (const n6 of e5) t7.add(n6.typeName), 1 === ((_a = this.memberIdTypeLookup.get(n6.id)) == null ? void 0 : _a.size) ? this.memberIdTypeLookup.delete(n6.id) : (_b = this.memberIdTypeLookup.get(n6.id)) == null ? void 0 : _b.delete(n6.typeName), (_c = this.inclusionModeDefinition) == null ? void 0 : _c.namedTypeDefinitions.forEach((e6, t8) => {
      var _a2;
      t8 === n6.typeName && ((_a2 = e6.members) == null ? void 0 : _a2.has(n6.id)) && e6.members.delete(n6.id);
    });
    t7.forEach((e6) => {
      var _a2;
      (_a2 = this.sublayerCaches.get(e6)) == null ? void 0 : _a2.forEach((t8, n6) => {
        var _a3;
        i4.has(n6) && ((_a3 = this.sublayerCaches.get(e6)) == null ? void 0 : _a3.delete(n6));
      });
    });
  }
  async retrieveDataFromService(e5, t7, n6) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r;
    const o5 = o3.getInstance(), r7 = /* @__PURE__ */ new Set(), a6 = [];
    let c7, y4 = "", u3 = [];
    const f7 = "relationship" === t7.graphType, D2 = (_c = (_b = (_a = this.inclusionModeDefinition) == null ? void 0 : _a.namedTypeDefinitions) == null ? void 0 : _b.get(t7.objectType.name)) == null ? void 0 : _c.useAllData, E5 = t7.parentCompositeLayer.sublayerIdsCache.get(t7.objectType.name);
    let M2 = !D2 && E5 ? Array.from(E5).sort() : null;
    if ((_f = (_e = (_d = this.inclusionModeDefinition) == null ? void 0 : _d.namedTypeDefinitions) == null ? void 0 : _e.get(t7.objectType.name)) == null ? void 0 : _f.useAllData) ((_i = (_h = (_g = this.inclusionModeDefinition) == null ? void 0 : _g.namedTypeDefinitions) == null ? void 0 : _h.get(t7.objectType.name)) == null ? void 0 : _i.useAllData) && null != e5.objectIds && (M2 = e5.objectIds);
    else if (null != e5.objectIds && M2 && M2.length > 0) {
      const t8 = e5.objectIds;
      e5.objectIds = M2.filter((e6) => t8.includes(e6));
    } else if (null != e5.objectIds) M2 = e5.objectIds;
    else {
      if (((_j = this.inclusionModeDefinition) == null ? void 0 : _j.namedTypeDefinitions.has(t7.objectType.name)) && (!((_k = this.inclusionModeDefinition.namedTypeDefinitions.get(t7.objectType.name)) == null ? void 0 : _k.members) || ((_m = (_l = this.inclusionModeDefinition.namedTypeDefinitions.get(t7.objectType.name)) == null ? void 0 : _l.members) == null ? void 0 : _m.size) < 1)) return e5.objectIds = [], [];
      e5.objectIds = M2;
    }
    if (null != e5.outFields) {
      const i4 = e5.outFields;
      i4.includes("*") ? t7.fields.forEach((e6) => {
        r7.add(e6.name);
      }) : i4.forEach((e6) => {
        e6 !== a4 && e6 !== t7.geometryFieldName && r7.add(e6);
      });
    }
    if (null != e5.geometry) {
      const n7 = e5.geometry;
      let o6;
      const h4 = t7.parentCompositeLayer.dataManager.knowledgeGraph.serviceDefinition, u4 = h4 == null ? void 0 : h4.spatialReference, g3 = (_n = h4 == null ? void 0 : h4.serviceCapabilities) == null ? void 0 : _n.geometryCapabilities;
      let w2 = g3 == null ? void 0 : g3.geometryMaxBoundingRectangleSizeX, D3 = g3 == null ? void 0 : g3.geometryMaxBoundingRectangleSizeY;
      if ("point" === n7.type) {
        let e6 = n7;
        ((_o = e6.spatialReference) == null ? void 0 : _o.isWGS84) || (await N(e6.spatialReference, U2), e6 = K(e6, U2)), o6 = new w({ spatialReference: U2, xmin: e6.x - 1e-4, ymin: e6.y - 1e-4, xmax: e6.x + 1e-4, ymax: e6.y + 1e-4 });
      } else ((_p = n7 == null ? void 0 : n7.extent) == null ? void 0 : _p.spatialReference) && !((_q = n7.spatialReference) == null ? void 0 : _q.isWGS84) ? (await N(n7.extent.spatialReference, U2), o6 = K(n7.extent, U2)) : o6 = n7.extent;
      if (w2 && D3 && u4) {
        if (4326 !== u4.wkid) {
          const e6 = new w({ spatialReference: u4, xmax: w2, ymax: D3 }), t8 = K(e6, U2);
          w2 = t8.xmax, D3 = t8.ymax;
        }
        if (o6.xmax - o6.xmin > w2) throw new s("knowledge-graph:layer-data-manager", `Extent x bounds should be within ${w2}° latitude, limit exceeded`);
        if (o6.ymax - o6.ymin > D3) throw new s("knowledge-graph:layer-data-manager", `Extent y bounds should be within ${D3}° longitude, limit exceeded`);
      }
      if (null != e5.where && "1=1" !== e5.where) {
        const i4 = await e2(e5.where.toUpperCase(), t7.fieldsIndex);
        t7.fields.forEach((e6) => {
          i4.fieldNames.includes(e6.name) && r7.add(e6.name);
        });
      }
      y4 = f7 ? `Match ()-[n:${t7.objectType.name}]->() WHERE esri.graph.ST_Intersects($param_filter_geom, n.${t7.geometryFieldName}) return ID(n), id(startNode(r)), id(endNode(r))` : `Match (n:${t7.objectType.name}) WHERE esri.graph.ST_Intersects($param_filter_geom, n.${t7.geometryFieldName}) return ID(n)`, t7.geometryFieldName && r7.add(t7.geometryFieldName), r7.forEach((e6) => {
        y4 += `, n.${e6}`, a6.push(e6);
      }), c7 = new s4({ openCypherQuery: y4, bindParameters: { param_filter_geom: new v({ rings: C2(o6) }) } });
    } else {
      let i4 = "";
      if (null != e5.where && "1=1" !== e5.where) {
        const n8 = await e2(e5.where, t7.fieldsIndex);
        t7.fields.forEach((e6) => {
          n8.fieldNames.includes(e6.name) && r7.add(e6.name);
        });
        const o7 = /* @__PURE__ */ new Set(["column-reference", "string", "number", "binary-expression"]), a7 = /* @__PURE__ */ new Set(["=", "<", "<=", "<>", ">", ">=", "AND", "OR", "LIKE"]);
        let p10 = false;
        const d10 = (e6) => {
          if ("column-reference" === e6.type) return `n.${e6.column}`;
          if ("string" === e6.type) return `'${e6.value}'`;
          if ("number" === e6.type) return `${e6.value}`;
          if ("binary-expression" === e6.type && o7.has(e6.left.type) && o7.has(e6.right.type) && a7.has(e6.operator)) return `${d10(e6.left)} ${e6.operator} ${d10(e6.right)}`;
          if ("binary-expression" === e6.type && "LIKE" === e6.operator) {
            let t8 = "";
            if ("function" === e6.left.type && "column-reference" === e6.left.args.value[0].type) t8 += `lower(n.${e6.left.args.value[0].column})`;
            else {
              if ("column-reference" !== e6.left.type) return p10 = true, "";
              t8 += `lower(n.${e6.left.column})`;
            }
            if (t8 += " CONTAINS (", "string" !== e6.right.type) return p10 = true, "";
            {
              let i5 = e6.right.value;
              "%" === i5.charAt(0) && (i5 = i5.slice(1)), "%" === i5.charAt(i5.length - 1) && (i5 = i5.slice(0, -1)), t8 += `'${i5.toLowerCase()}')`;
            }
            return t8;
          }
          return p10 = true, "";
        };
        i4 = d10(n8.parseTree), p10 && (i4 = "");
      }
      let n7 = "";
      n7 = f7 ? `Match ()-[n:${t7.objectType.name}]->()` : `Match (n:${t7.objectType.name})`;
      let o6 = false;
      M2 && (o6 = true, n7 += " WHERE ID(n) IN $ids"), i4 && (n7 += o6 ? " AND" : " WHERE", n7 += ` ${i4}`), n7 += " return ID(n)", f7 && (n7 += ", id(startNode(n)), id(endNode(n))"), e5.returnGeometry && t7.geometryFieldName && r7.add(t7.geometryFieldName), r7.forEach((e6) => {
        n7 += `, n.${e6}`, a6.push(e6);
      }), c7 = new s4(M2 ? { openCypherQuery: n7, bindParameters: { ids: M2 } } : { openCypherQuery: n7 });
    }
    const k = (await M(t7.parentCompositeLayer.dataManager.knowledgeGraph, c7, n6)).resultRowsStream.getReader();
    for (; ; ) {
      const { done: e6, value: i4 } = await k.read();
      if (e6) break;
      const n7 = [];
      for (let t8 = 0; t8 < i4.length; t8++) {
        const e7 = i4[t8];
        let o6 = 0, s9 = 0;
        const r8 = { properties: {} };
        for (r8.id = e7[o6], o6++, s9++, f7 && (r8.originId = e7[o6], o6++, s9++, r8.destinationId = e7[o6], o6++, s9++); o6 < e7.length; o6++) r8.properties[a6[o6 - s9]] = e7[o6];
        n7.push(r8);
      }
      u3 = u3.concat(o5.writeToStore(n7, a4, (_r = t7.parentCompositeLayer.dataManager.geographicLookup.get(t7.objectType.name)) == null ? void 0 : _r.name));
    }
    return u3;
  }
  _isEndEntitySpatial(e5, t7, i4) {
    var _a;
    for (const n6 of e5 ?? []) if (this.entityTypeNames.has(n6)) {
      const e6 = this.geographicLookup.get(n6), o5 = e6 && ((_a = this.sublayerCaches.get(n6)) == null ? void 0 : _a.get(t7.attributes[i4]));
      if (e6 && (o5 == null ? void 0 : o5.attributes[e6.name])) return true;
    }
    return false;
  }
};
r([m()], E4.prototype, "knowledgeGraph", void 0), r([m()], E4.prototype, "inclusionModeDefinition", void 0), r([m()], E4.prototype, "entityTypeNames", void 0), r([m()], E4.prototype, "relationshipTypeNames", void 0), r([m()], E4.prototype, "geographicLookup", void 0), r([m()], E4.prototype, "sublayerCaches", void 0), r([m()], E4.prototype, "nodeConnectionsLookup", void 0), r([m()], E4.prototype, "relationshipConnectionsLookup", void 0), r([m()], E4.prototype, "memberIdTypeLookup", void 0), E4 = r([a2("esri.layers.knowledgeGraph.KnowledgeGraphLayerDataManager")], E4);

// node_modules/@arcgis/core/layers/knowledgeGraph/KnowledgeGraphSublayerBase.js
var t6 = s3();
var p9 = (s9) => {
  let p10 = class extends s9 {
    constructor() {
      super(...arguments), this.fields = [], this.fieldsIndex = null;
    }
  };
  return r([m(t6.fields)], p10.prototype, "fields", void 0), r([m(t6.fieldsIndex)], p10.prototype, "fieldsIndex", void 0), p10 = r([a2("esri.layers.knowledgeGraph.KnowledgeGraphSublayerBase")], p10), p10;
};

// node_modules/@arcgis/core/layers/knowledgeGraph/KnowledgeGraphSublayer.js
function ie(e5) {
  if (!e5.json) return e5;
  e5.json.write = ne(e5.json.write);
  const t7 = e5.json.origins;
  if (!t7) return e5;
  let r7;
  for (r7 in t7) {
    const e6 = t7[r7];
    e6 && (e6.write = ne(e6.write));
  }
  return e5;
}
function ne(e5) {
  return "object" == typeof e5 && e5 ? (false !== e5.enabled && (e5.overridePolicy = se(e5)), e5) : true === e5 ? ae() : e5;
}
function se(e5) {
  const { target: t7, writer: r7, overridePolicy: o5, ...i4 } = e5;
  return function(e6, t8) {
    const r8 = pe.call(this, e6, t8);
    return r8.enabled ? { ...i4, ...r8 } : r8;
  };
}
function ae() {
  return { overridePolicy: pe };
}
function pe(e5, t7) {
  const r7 = !!this.geometryType;
  let o5 = { enabled: r7 };
  return r7 && (o5 = { ...o5, ...le.call(this, e5, t7) }), o5;
}
function le(e5, t7) {
  return { ignoreOrigin: this.originIdOf(t7) > e.DEFAULTS };
}
var ye = class extends p9(c2(c(l(p3(l2(t(f2(S(f5))))))))) {
  constructor(e5) {
    super(e5), this.blendMode = "normal", this.capabilities = y2(false, false), this.charts = null, this.definitionExpression = null, this.displayField = "", this.effect = null, this.elevationInfo = null, this.featureEffect = null, this.graphType = null, this.labelsVisible = true, this.labelingInfo = null, this.layerType = null, this.legendEnabled = true, this.maxScale = 0, this.minScale = 0, this.objectIdField = a4, this.objectType = null, this.opacity = 1, this.orderBy = null, this.parent = null, this.parentCompositeLayer = null, this.persistenceEnabled = true, this.popupEnabled = true, this.popupTemplate = null, this.refreshInterval = 0, this.source = { openPorts: () => this.load().then(() => {
      const e6 = new MessageChannel();
      return new E(e6.port1, { channel: e6, client: { queryFeatures: (e7, t7 = {}) => {
        const r7 = b2.fromJSON(e7);
        return this.queryFeaturesJSON(r7, t7);
      } } }), [e6.port2];
    }) }, this.type = "knowledge-graph-sublayer", this.useViewTime = true, this.visible = true;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  set featureReduction(e5) {
    const t7 = this._normalizeFeatureReduction(e5);
    this._set("featureReduction", t7);
  }
  get fields() {
    var _a, _b;
    const e5 = [];
    return (_b = (_a = this.objectType) == null ? void 0 : _a.properties) == null ? void 0 : _b.forEach((t7) => {
      const r7 = "esriFieldTypeOID" === t7.fieldType ? "esriFieldTypeInteger" : t7.fieldType;
      e5.push(y.fromJSON({ name: t7.name, type: r7, alias: t7.alias, defaultValue: t7.defaultValue, editable: t7.editable, nullable: t7.nullable }));
    }), e5.push(y.fromJSON({ name: this.objectIdField, type: "esriFieldTypeString", alias: this.objectIdField, editable: false }), y.fromJSON({ name: o2, type: "esriFieldTypeInteger", alias: o2, editable: false }), y.fromJSON({ name: s5, type: "esriFieldTypeInteger", alias: s5, editable: false })), e5;
  }
  get geometryType() {
    var _a, _b, _c;
    if ("link-chart" === ((_a = this.parentCompositeLayer) == null ? void 0 : _a.type)) return "relationship" === this.graphType ? "polyline" : "point";
    const e5 = (_c = this.parentCompositeLayer) == null ? void 0 : _c.dataManager.geographicLookup.get((_b = this.objectType) == null ? void 0 : _b.name), t7 = e5 == null ? void 0 : e5.geometryType;
    return t7 && "esriGeometryNull" !== t7 ? o.fromJSON(t7) : null;
  }
  get geometryFieldName() {
    var _a, _b, _c;
    if ("link-chart" === ((_a = this.parentCompositeLayer) == null ? void 0 : _a.type)) return n4;
    const e5 = (_c = this.parentCompositeLayer) == null ? void 0 : _c.dataManager.geographicLookup.get((_b = this.objectType) == null ? void 0 : _b.name);
    return (e5 == null ? void 0 : e5.name) ?? null;
  }
  get graphTypeName() {
    var _a;
    return (_a = this.objectType) == null ? void 0 : _a.name;
  }
  get hasM() {
    var _a, _b, _c, _d;
    const e5 = (_b = this.parentCompositeLayer) == null ? void 0 : _b.dataManager.geographicLookup.get((_a = this.objectType) == null ? void 0 : _a.name), t7 = e5 == null ? void 0 : e5.name, r7 = t7 ? (_d = (_c = this.objectType) == null ? void 0 : _c.properties) == null ? void 0 : _d[t7] : null;
    return (r7 == null ? void 0 : r7.hasM) ?? false;
  }
  get hasZ() {
    var _a, _b, _c, _d;
    const e5 = (_b = this.parentCompositeLayer) == null ? void 0 : _b.dataManager.geographicLookup.get((_a = this.objectType) == null ? void 0 : _a.name), t7 = e5 == null ? void 0 : e5.name, r7 = t7 ? (_d = (_c = this.objectType) == null ? void 0 : _c.properties) == null ? void 0 : _d[t7] : null;
    return (r7 == null ? void 0 : r7.hasZ) ?? false;
  }
  set renderer(e5) {
    p5(e5, this.fieldsIndex), this._set("renderer", e5);
  }
  get renderer() {
    var _a;
    return this._isOverridden("renderer") ? this._get("renderer") : "link-chart" === ((_a = this.parentCompositeLayer) == null ? void 0 : _a.type) ? "relationship" === this.graphType ? t2(u(o.toJSON("polyline")).renderer) : t2(u(o.toJSON("point")).renderer) : t2(u(o.toJSON(this.geometryType)).renderer);
  }
  get spatialReference() {
    var _a, _b, _c, _d;
    return ((_d = (_c = (_b = (_a = this.parentCompositeLayer) == null ? void 0 : _a.dataManager) == null ? void 0 : _b.knowledgeGraph) == null ? void 0 : _c.dataModel) == null ? void 0 : _d.spatialReference) ?? g.WGS84;
  }
  set timeInfo(e5) {
    this._set("timeInfo", e5);
  }
  get title() {
    return this._isOverridden("title") ? this._get("title") : this.graphTypeName;
  }
  set title(e5) {
    this._set("title", e5);
  }
  writeTitle(e5, t7) {
    t7.title = e5 ?? "Layer";
  }
  createPopupTemplate(e5) {
    return p4(this, e5);
  }
  createQuery() {
    return new b2({ where: "1=1", outFields: ["*"] });
  }
  getField(e5) {
    for (let t7 = 0; t7 < this.fields.length; t7++) if (this.fields[t7].name === e5) return this.fields[t7];
    return null;
  }
  getFieldDomain(e5, t7) {
    return null;
  }
  async queryFeatures(e5, t7) {
    const { resolvedQuery: r7, queryEngine: o5 } = await this._setupQueryObjects(e5), i4 = d2.fromJSON(await o5.executeQuery(r7.toJSON(), t7 == null ? void 0 : t7.signal));
    return i4.features.forEach((e6) => {
      e6.sourceLayer = this;
    }), i4;
  }
  async queryFeaturesJSON(e5, t7) {
    const { resolvedQuery: r7, queryEngine: o5 } = await this._setupQueryObjects(e5);
    return await o5.executeQuery(r7.toJSON(), t7 == null ? void 0 : t7.signal);
  }
  async queryFeatureCount(e5, t7) {
    const { resolvedQuery: r7, queryEngine: o5 } = await this._setupQueryObjects(e5);
    return o5.executeQueryForCount(r7.toJSON(), t7 == null ? void 0 : t7.signal);
  }
  async queryExtent(e5 = {}, t7) {
    var _a, _b, _c, _d;
    const r7 = { ...e5, returnGeometry: true }, { resolvedQuery: o5, queryEngine: i4 } = await this._setupQueryObjects(r7), n6 = await i4.executeQueryForExtent(o5.toJSON(), t7 == null ? void 0 : t7.signal);
    let s9;
    return s9 = null != ((_a = n6.extent) == null ? void 0 : _a.xmin) && null != ((_b = n6.extent) == null ? void 0 : _b.xmax) && null != ((_c = n6.extent) == null ? void 0 : _c.ymin) && null != ((_d = n6.extent) == null ? void 0 : _d.ymax) ? new w(n6.extent) : new w(), { count: n6.count, extent: s9 };
  }
  async queryObjectIds(e5, t7) {
    const r7 = b2.from(e5);
    let o5;
    if ("link-chart" === this.parentCompositeLayer.type && this._cachedQueryEngine) o5 = this._cachedQueryEngine;
    else {
      const e6 = await this.parentCompositeLayer.dataManager.getData(r7, this, t7);
      o5 = this.loadQueryEngine(e6);
    }
    return o5.executeQueryForIds(r7.toJSON(), t7 == null ? void 0 : t7.signal);
  }
  loadQueryEngine(e5) {
    var _a;
    const t7 = new m2({ geometryType: o.toJSON(this.geometryType), hasM: this.hasM, hasZ: this.hasZ }), r7 = new V({ fieldsIndex: this.fieldsIndex.toJSON(), geometryType: o.toJSON(this.geometryType), hasM: this.hasM, hasZ: this.hasZ, objectIdField: this.objectIdField, spatialReference: this.spatialReference.toJSON(), timeInfo: (_a = this.timeInfo) == null ? void 0 : _a.toJSON(), featureStore: t7 });
    return r7.featureStore.addMany(e5), r7;
  }
  async refreshCachedQueryEngine() {
    const e5 = await this.parentCompositeLayer.dataManager.getData(new b2({ where: "1=1", outFields: [a4] }), this);
    this._cachedQueryEngine = this.loadQueryEngine(e5);
  }
  load(e5) {
    return this.addResolvingPromise(this.parent.load(e5).then(() => {
      g2(this.timeInfo, this.fieldsIndex);
    })), Promise.resolve(this);
  }
  async _setupQueryObjects(e5, t7) {
    var _a;
    const r7 = b2.from(e5), o5 = r7.geometry;
    let i4;
    if (o5 && !((_a = o5.spatialReference) == null ? void 0 : _a.isWGS84) && (await N(o5.spatialReference, U2), r7.geometry = K(o5 instanceof v || o5 instanceof d || o5 instanceof j ? o5 : o5.extent, U2)), "link-chart" === this.parentCompositeLayer.type && this._cachedQueryEngine) i4 = this._cachedQueryEngine;
    else {
      const e6 = await this.parentCompositeLayer.dataManager.getData(r7, this, t7);
      i4 = this.loadQueryEngine(e6);
    }
    return { resolvedQuery: r7, queryEngine: i4 };
  }
};
r([m(ie(a(s2)))], ye.prototype, "blendMode", void 0), r([m()], ye.prototype, "capabilities", void 0), r([m({ json: { origins: { "web-scene": { write: false } }, write: ae() } })], ye.prototype, "charts", void 0), r([m({ readOnly: true })], ye.prototype, "defaultPopupTemplate", null), r([m({ type: String, json: { origins: { service: { read: false } }, name: "layerDefinition.definitionExpression", write: { ignoreOrigin: true } } })], ye.prototype, "definitionExpression", void 0), r([m()], ye.prototype, "displayField", void 0), r([m(ie(a(a3)))], ye.prototype, "effect", void 0), r([m()], ye.prototype, "elevationInfo", void 0), r([m(ie(a(p)))], ye.prototype, "featureEffect", void 0), r([m(ie(a(p2)))], ye.prototype, "featureReduction", null), r([m()], ye.prototype, "fields", null), r([m()], ye.prototype, "geometryType", null), r([m()], ye.prototype, "geometryFieldName", null), r([m({ type: ["entity", "relationship"], nonNullable: true, json: { write: { isRequired: true, ignoreOrigin: true } } })], ye.prototype, "graphType", void 0), r([m({ type: String, nonNullable: true, json: { write: { isRequired: true, ignoreOrigin: true } } })], ye.prototype, "graphTypeName", null), r([m()], ye.prototype, "hasM", null), r([m()], ye.prototype, "hasZ", null), r([m({ type: String, json: { origins: { service: { read: false }, "portal-item": { read: false } }, write: { ignoreOrigin: true } } })], ye.prototype, "id", void 0), r([m(ie(a(p6)))], ye.prototype, "labelsVisible", void 0), r([m({ type: [C], json: { name: "layerDefinition.drawingInfo.labelingInfo", read: n3, write: ae() } })], ye.prototype, "labelingInfo", void 0), r([m({ readOnly: true, json: { read: false, write: { writer(e5, t7) {
  switch (this.parentCompositeLayer.type) {
    case "link-chart":
      t7.layerType = "LinkChartSubLayer";
      break;
    case "knowledge-graph":
      t7.layerType = this.geometryType ? "KnowledgeGraphSubLayer" : "KnowledgeGraphSubTable";
  }
}, isRequired: true, ignoreOrigin: true, writerEnsuresNonNull: true } } })], ye.prototype, "layerType", void 0), r([m(ie(a(d4)))], ye.prototype, "legendEnabled", void 0), r([m(ie(a(v2)))], ye.prototype, "maxScale", void 0), r([m(ie(a(j2)))], ye.prototype, "minScale", void 0), r([m()], ye.prototype, "objectIdField", void 0), r([m()], ye.prototype, "objectType", void 0), r([m(ie(a(f4)))], ye.prototype, "opacity", void 0), r([m(ie(a(c3)))], ye.prototype, "orderBy", void 0), r([m({ clonable: false })], ye.prototype, "parent", void 0), r([m()], ye.prototype, "parentCompositeLayer", void 0), r([m(ie(a(l3)))], ye.prototype, "popupEnabled", void 0), r([m({ type: q, json: { name: "popupInfo", write: { ignoreOrigin: true } } })], ye.prototype, "popupTemplate", void 0), r([m({ type: Number, json: { write: { overridePolicy: le } } })], ye.prototype, "refreshInterval", void 0), r([m({ types: m3, json: { name: "layerDefinition.drawingInfo.renderer", write: ae() } })], ye.prototype, "renderer", null), r([m()], ye.prototype, "source", void 0), r([m()], ye.prototype, "spatialReference", null), r([m({ type: d3, json: { name: "layerDefinition.timeInfo", write: true, origins: { "web-document": { name: "layerDefinition.timeInfo", read: true, write: true }, "portal-item": { name: "layerDefinition.timeInfo", read: true, write: true } } } })], ye.prototype, "timeInfo", null), r([m({ type: String, json: { write: { isRequired: true, ignoreOrigin: true, writerEnsuresNonNull: true } } })], ye.prototype, "title", null), r([r3("title")], ye.prototype, "writeTitle", null), r([m({ json: { read: false } })], ye.prototype, "type", void 0), r([m(ie(a(f3)))], ye.prototype, "useViewTime", void 0), r([m({ type: Boolean, json: { name: "visibility", write: ae() } })], ye.prototype, "visible", void 0), ye = r([a2("esri.layers.knowledgeGraph.KnowledgeGraphSublayer")], ye);
var ue = ye;

export {
  a4 as a,
  t3 as t,
  r5 as r,
  n4 as n,
  o2 as o,
  c4 as c,
  o3 as o2,
  a5 as a2,
  s6 as s,
  o4 as o3,
  f6 as f,
  A,
  v3 as v,
  h,
  m4 as m,
  L,
  b3 as b,
  A2,
  F,
  R,
  E4 as E,
  ue
};
//# sourceMappingURL=chunk-VD7LJKWR.js.map
