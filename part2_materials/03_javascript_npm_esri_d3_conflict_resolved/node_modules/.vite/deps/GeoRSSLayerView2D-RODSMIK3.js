import {
  t as t2
} from "./chunk-VKINFEL6.js";
import {
  j,
  y
} from "./chunk-EVT35YP5.js";
import "./chunk-OHKRFTGD.js";
import {
  F
} from "./chunk-4BM4QPL6.js";
import "./chunk-LAXNQQQH.js";
import "./chunk-5PECYTTZ.js";
import "./chunk-ZGL6Q57M.js";
import "./chunk-KDQTUT24.js";
import "./chunk-TZAPBN5J.js";
import "./chunk-FKL5AVF4.js";
import "./chunk-QLTGZ6EP.js";
import "./chunk-CKPBZSTT.js";
import "./chunk-HB2JTNV2.js";
import "./chunk-3T3LUDWR.js";
import "./chunk-VBS2Y7KE.js";
import "./chunk-2O2NCM6Y.js";
import "./chunk-OXCT6NNS.js";
import "./chunk-J3GKRP7Y.js";
import "./chunk-Q3K5MAUZ.js";
import "./chunk-DPVSO6BH.js";
import "./chunk-5VEO4IUH.js";
import "./chunk-2XVRGGEF.js";
import "./chunk-6TRZLPPJ.js";
import "./chunk-U6IFI7EK.js";
import "./chunk-N42IF4WX.js";
import "./chunk-MCHNAU6L.js";
import "./chunk-MYNRH67A.js";
import "./chunk-VAGIPHHR.js";
import "./chunk-JMY2H33H.js";
import "./chunk-BXIXSFGX.js";
import "./chunk-EVK6ZSVY.js";
import "./chunk-YEDSTDY4.js";
import "./chunk-OMMWWGIU.js";
import "./chunk-JPQIRBN6.js";
import "./chunk-CH3XVKUV.js";
import "./chunk-KI5F6KDS.js";
import "./chunk-HACIIBEF.js";
import "./chunk-C2RS46RL.js";
import "./chunk-AHZHHHCW.js";
import "./chunk-BN24XFSK.js";
import {
  t
} from "./chunk-5GQ62KHN.js";
import "./chunk-YAGJS3MX.js";
import "./chunk-43KBLSS3.js";
import "./chunk-OC7D2HR4.js";
import "./chunk-KKH7HGO3.js";
import {
  p
} from "./chunk-7VNQKVOW.js";
import "./chunk-PNVXSHN2.js";
import "./chunk-3DVL3O3F.js";
import "./chunk-RN66FJAW.js";
import "./chunk-QYSQ6XPQ.js";
import "./chunk-2RIHQI4N.js";
import "./chunk-VLKWWBLY.js";
import "./chunk-NXGNMEHZ.js";
import "./chunk-TWYDW6LU.js";
import {
  d as d2
} from "./chunk-PVHAAI32.js";
import "./chunk-MLATPUII.js";
import "./chunk-NVFQGMP6.js";
import "./chunk-P2IB5HBH.js";
import "./chunk-XX37BOHH.js";
import "./chunk-5CRXWQ3Y.js";
import "./chunk-CGSFKZP2.js";
import "./chunk-EPAKCM4A.js";
import "./chunk-WPERPIJF.js";
import "./chunk-RXJCBLN2.js";
import "./chunk-EFVIMN4N.js";
import "./chunk-XKMN3LJN.js";
import "./chunk-2U5JYYSG.js";
import "./chunk-AFULL6KA.js";
import "./chunk-URFLFG2R.js";
import "./chunk-T23XXKIL.js";
import "./chunk-4V237NE5.js";
import "./chunk-F3ZOBTPK.js";
import "./chunk-EZCH3ZAJ.js";
import "./chunk-KDUYQUT4.js";
import "./chunk-73FHIZIF.js";
import "./chunk-ICIPRMPO.js";
import "./chunk-2IVHP3HQ.js";
import "./chunk-EHD5KM2T.js";
import "./chunk-G6LMYOSA.js";
import "./chunk-YNC2IEH2.js";
import "./chunk-QJXYURT2.js";
import "./chunk-CGJUTDVJ.js";
import "./chunk-D6FJTDNK.js";
import "./chunk-GYV5TPN6.js";
import "./chunk-D3FSVA7H.js";
import "./chunk-6B4OMNPA.js";
import "./chunk-3GQ4PJDJ.js";
import "./chunk-QEJMJI2R.js";
import "./chunk-KV3S4QI2.js";
import "./chunk-ECMDQ4LS.js";
import "./chunk-LP6TMAPE.js";
import "./chunk-RENLZYKC.js";
import "./chunk-2X7T37AY.js";
import "./chunk-XQH2QDB2.js";
import "./chunk-6Q7GN2CW.js";
import {
  q
} from "./chunk-MYUZZ3A3.js";
import "./chunk-2IGXKE5P.js";
import "./chunk-JFI4ESYU.js";
import "./chunk-4X2UADDH.js";
import "./chunk-ZICJB3ML.js";
import "./chunk-AVBIV2K3.js";
import "./chunk-4NJWIUZG.js";
import "./chunk-F3NUC2RS.js";
import "./chunk-LE3YW4Y3.js";
import "./chunk-TA32QX7Z.js";
import "./chunk-NYLL2YZF.js";
import "./chunk-NYLBGE62.js";
import "./chunk-LPNAPHOF.js";
import "./chunk-QCBTLG25.js";
import "./chunk-ECCHNTW6.js";
import "./chunk-WWNVF22O.js";
import "./chunk-SUZN3TAH.js";
import "./chunk-K5RYAJV4.js";
import "./chunk-XGYM66XX.js";
import "./chunk-JOOGZSAP.js";
import "./chunk-J6GHQIZ2.js";
import {
  P,
  d
} from "./chunk-W6D3ECTZ.js";
import "./chunk-QXDQJEIU.js";
import "./chunk-MGMVRMXQ.js";
import "./chunk-SEUZ3J6J.js";
import "./chunk-BWTCR2DR.js";
import "./chunk-SMOTPOZ7.js";
import "./chunk-YVSEBNS4.js";
import "./chunk-Y2XCZQML.js";
import "./chunk-EZXLBRAS.js";
import "./chunk-7FJIOZSE.js";
import "./chunk-GNWAZIVF.js";
import "./chunk-2PK57UYA.js";
import "./chunk-3L2AYCZY.js";
import "./chunk-TSVUPARM.js";
import "./chunk-VUJERGGB.js";
import "./chunk-NTI2OCVI.js";
import "./chunk-ZCHZRNUG.js";
import "./chunk-G6REFQRQ.js";
import "./chunk-2TEGRXBS.js";
import "./chunk-6Y2LNRVP.js";
import "./chunk-JVEZN6WF.js";
import "./chunk-E2RPCJOE.js";
import "./chunk-NHJGPXZH.js";
import "./chunk-JS7R723S.js";
import {
  V
} from "./chunk-RCLWOQNR.js";
import "./chunk-DOTSJZHK.js";
import "./chunk-UCO66LNK.js";
import "./chunk-5YRJ4YFE.js";
import "./chunk-SEG3PRUR.js";
import "./chunk-B6VE32RA.js";
import "./chunk-AIYFWM42.js";
import "./chunk-2M53HYNY.js";
import "./chunk-6YWQXXBX.js";
import "./chunk-Q7TEBZSN.js";
import "./chunk-FG3XOAFD.js";
import "./chunk-GN5RE63N.js";
import "./chunk-2WXAPZBK.js";
import "./chunk-E2I7HYXQ.js";
import "./chunk-P5H5PJSC.js";
import "./chunk-WTNHDCCU.js";
import "./chunk-7O7KFKCG.js";
import "./chunk-TVTRNT6K.js";
import "./chunk-CRH37WFF.js";
import "./chunk-YFGQMO6E.js";
import "./chunk-HAF6QJ32.js";
import "./chunk-H77COA2S.js";
import {
  a4 as a
} from "./chunk-7LJCT7EA.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import "./chunk-GRW2QIBT.js";
import "./chunk-R2PAF6JT.js";
import "./chunk-6WE7SNQY.js";
import "./chunk-L6CCOEVE.js";
import "./chunk-PKLD5YJF.js";
import "./chunk-XKQWTZMW.js";
import "./chunk-A4OFG7JM.js";

// node_modules/@arcgis/core/views/2d/layers/GeoRSSLayerView2D.js
var y2 = class extends j(y) {
  constructor() {
    super(...arguments), this._graphicsViewMap = {}, this._popupTemplates = /* @__PURE__ */ new Map(), this.graphicsViews = [];
  }
  async hitTest(e, r2) {
    if (!this.graphicsViews.length) return null;
    const s = this.layer;
    return this.graphicsViews.reverse().flatMap((r3) => {
      const i = this._popupTemplates.get(r3), t3 = r3.hitTest(e);
      for (const e2 of t3) e2.layer = s, e2.sourceLayer = s, e2.popupTemplate = i;
      return t3;
    }).map((r3) => ({ type: "graphic", graphic: r3, layer: s, mapPoint: e }));
  }
  update(e) {
    if (this.graphicsViews) for (const r2 of this.graphicsViews) r2.processUpdate(e);
  }
  attach() {
    this.addAttachHandles([d(() => {
      var _a;
      return (_a = this.layer) == null ? void 0 : _a.featureCollections;
    }, (e) => {
      this._clear();
      for (const { popupInfo: i, featureSet: t3, layerDefinition: o } of e) {
        const e2 = d2.fromJSON(t3), p2 = new V(e2.features), n = o.drawingInfo, m = i ? q.fromJSON(i) : null, y3 = t(n.renderer), g2 = new F({ requestUpdateCallback: () => this.requestUpdate(), view: this.view, graphics: p2, renderer: y3, container: new t2(this.view.featuresTilingScheme) });
        this._graphicsViewMap[e2.geometryType] = g2, this._popupTemplates.set(g2, m), "polygon" !== e2.geometryType || this.layer.polygonSymbol ? "polyline" !== e2.geometryType || this.layer.lineSymbol ? "point" !== e2.geometryType || this.layer.pointSymbol || (this.layer.pointSymbol = y3.symbol) : this.layer.lineSymbol = y3.symbol : this.layer.polygonSymbol = y3.symbol, this.graphicsViews.push(g2), this.container.addChild(g2.container);
      }
    }, P), d(() => {
      var _a;
      return (_a = this.layer) == null ? void 0 : _a.polygonSymbol;
    }, (e) => {
      this._graphicsViewMap.polygon.renderer = new p({ symbol: e });
    }, P), d(() => {
      var _a;
      return (_a = this.layer) == null ? void 0 : _a.lineSymbol;
    }, (e) => {
      this._graphicsViewMap.polyline.renderer = new p({ symbol: e });
    }, P), d(() => {
      var _a;
      return (_a = this.layer) == null ? void 0 : _a.pointSymbol;
    }, (e) => {
      this._graphicsViewMap.point.renderer = new p({ symbol: e });
    }, P)]);
  }
  detach() {
    this._clear();
  }
  moveEnd() {
  }
  viewChange() {
    for (const e of this.graphicsViews) e.viewChange();
  }
  _clear() {
    this.container.removeAllChildren();
    for (const e of this.graphicsViews) e.destroy();
    this._graphicsViewMap = {}, this._popupTemplates.clear(), this.graphicsViews.length = 0;
  }
};
y2 = r([a("esri.views.2d.layers.GeoRSSLayerView2D")], y2);
var g = y2;
export {
  g as default
};
//# sourceMappingURL=GeoRSSLayerView2D-RODSMIK3.js.map
