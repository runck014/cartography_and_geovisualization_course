import {
  a,
  c as c2
} from "./chunk-XTI4SH5M.js";
import {
  h,
  i as i2,
  m,
  p as p3,
  y
} from "./chunk-MLATPUII.js";
import {
  p as p2
} from "./chunk-NVFQGMP6.js";
import {
  c,
  i2 as i,
  x
} from "./chunk-JFI4ESYU.js";
import {
  b
} from "./chunk-SEG3PRUR.js";
import {
  p
} from "./chunk-AIYFWM42.js";
import {
  I,
  Rt
} from "./chunk-YFGQMO6E.js";
import {
  s2 as s
} from "./chunk-PKLD5YJF.js";

// node_modules/@arcgis/core/symbols/support/webStyleSymbolUtils.js
function g(t, e, r, o) {
  const n = t.name;
  return null == n ? Promise.reject(new s("symbolstyleutils:style-symbol-reference-name-missing", "Missing name in style symbol reference")) : "Esri2DPointSymbolsStyle" === t.styleName ? d(n, e, o) : i2(t, e, o).then((t2) => h2(t2, n, e, r, y, o));
}
function j(t, e) {
  return e.items.find((e2) => e2.name === t);
}
function h2(u, y2, c3, g2, h3, d2) {
  var _a, _b;
  const U = null != (c3 == null ? void 0 : c3.portal) ? c3.portal : b.getDefault(), N = { portal: U, url: I(u.baseUrl), origin: "portal-item" }, w = j(y2, u.data);
  if (!w) {
    const t = `The symbol name '${y2}' could not be found`;
    return Promise.reject(new s("symbolstyleutils:symbol-name-not-found", t, { symbolName: y2 }));
  }
  let S = p(h3(w, g2), N), D = ((_a = w.thumbnail) == null ? void 0 : _a.href) ?? null;
  const O = (_b = w.thumbnail) == null ? void 0 : _b.imageData;
  c2() && (S = a(S) ?? "", D = a(D));
  const P = { portal: U, url: I(Rt(S)), origin: "portal-item" };
  return p3(S, d2).then((e) => {
    const r = "cimRef" === g2 ? m(e.data) : e.data, l = p2(r, P);
    if (l && x(l)) {
      if (D) {
        const t = p(D, N);
        l.thumbnail = new c({ url: t });
      } else O && (l.thumbnail = new c({ url: `data:image/png;base64,${O}` }));
      u.styleUrl ? l.styleOrigin = new i({ portal: c3.portal, styleUrl: u.styleUrl, name: y2 }) : u.styleName && (l.styleOrigin = new i({ portal: c3.portal, styleName: u.styleName, name: y2 }));
    }
    return l;
  });
}
function d(t, e, r) {
  const l = h.replaceAll(/\{SymbolName\}/gi, t), i3 = null != e.portal ? e.portal : b.getDefault();
  return p3(l, r).then((t2) => {
    const e2 = m(t2.data);
    return p2(e2, { portal: i3, url: I(Rt(l)), origin: "portal-item" });
  });
}

export {
  g,
  j,
  h2 as h
};
//# sourceMappingURL=chunk-7PNHGV6W.js.map
