import {
  l as l2,
  n2 as n5,
  t as t2
} from "./chunk-EKHEOE6A.js";
import {
  n as n4
} from "./chunk-VIP4NQFO.js";
import {
  n as n3,
  r as r4
} from "./chunk-ZICJB3ML.js";
import {
  l
} from "./chunk-4NJWIUZG.js";
import {
  o as o2
} from "./chunk-LPNAPHOF.js";
import {
  A,
  d
} from "./chunk-W6D3ECTZ.js";
import {
  b as b3,
  m as m3,
  y
} from "./chunk-PJNOPBRY.js";
import {
  F
} from "./chunk-23TJP3F6.js";
import {
  t
} from "./chunk-EDGKOPSL.js";
import {
  n as n2
} from "./chunk-SEUZ3J6J.js";
import {
  B,
  O
} from "./chunk-7FJIOZSE.js";
import {
  r as r3
} from "./chunk-TSVUPARM.js";
import {
  V
} from "./chunk-RCLWOQNR.js";
import {
  o
} from "./chunk-DOTSJZHK.js";
import {
  m as m2
} from "./chunk-B6VE32RA.js";
import {
  r as r2
} from "./chunk-2WXAPZBK.js";
import {
  s as s3
} from "./chunk-WTNHDCCU.js";
import {
  f,
  u2
} from "./chunk-HAF6QJ32.js";
import {
  b2,
  m
} from "./chunk-H77COA2S.js";
import {
  a4 as a2,
  w,
  x
} from "./chunk-7LJCT7EA.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import {
  b,
  e,
  s as s2
} from "./chunk-GRW2QIBT.js";
import {
  u
} from "./chunk-R2PAF6JT.js";
import {
  a,
  n2 as n,
  s2 as s
} from "./chunk-PKLD5YJF.js";

// node_modules/@arcgis/core/ground/NavigationConstraint.js
var s4;
var p = s4 = class extends f {
  constructor(o3) {
    super(o3), this.type = "none";
  }
  clone() {
    return new s4({ type: this.type });
  }
};
r([r3({ none: "none", stayAbove: "stay-above" })], p.prototype, "type", void 0), p = s4 = r([a2("esri.ground.NavigationConstraint")], p);

// node_modules/@arcgis/core/Ground.js
var S;
var C = S = class extends u2(m2) {
  constructor(r6) {
    super(r6), this.opacity = 1, this.surfaceColor = null, this.navigationConstraint = null, this.layers = new V();
    const e3 = (r7) => {
      r7.parent && r7.parent !== this && "remove" in r7.parent && r7.parent.remove(r7), r7.parent = this, "elevation" !== r7.type && "base-elevation" !== r7.type && n.getLogger(this).error(`Layer '${r7.title}, id:${r7.id}' of type '${r7.type}' is not supported as a ground layer and will therefore be ignored. Only layers of type 'elevation' are supported.`);
    }, t4 = (r7) => {
      r7.parent = null;
    };
    this.addHandles([this.layers.on("after-add", (r7) => e3(r7.item)), this.layers.on("after-remove", (r7) => t4(r7.item))]);
  }
  initialize() {
    this.when().catch((r6) => {
      b(r6) || n.getLogger(this).error("#load()", "Failed to load ground", r6);
    }), this.resourceInfo && this.read(this.resourceInfo.data, this.resourceInfo.context);
  }
  destroy() {
    const r6 = this.layers.removeAll();
    for (const e3 of r6) u(e3);
    this.layers.destroy();
  }
  normalizeCtorArgs(r6) {
    return r6 && "resourceInfo" in r6 && (this._set("resourceInfo", r6.resourceInfo), delete (r6 = { ...r6 }).resourceInfo), r6;
  }
  set layers(r6) {
    this._set("layers", n2(r6, this._get("layers")));
  }
  writeLayers(r6, e3, o3, t4) {
    const i2 = [];
    r6 ? (t4 = { ...t4, layerContainerType: "ground" }, r6.forEach((r7) => {
      if ("write" in r7) {
        const e4 = {};
        o2(r7)().write(e4, t4) && i2.push(e4);
      } else (t4 == null ? void 0 : t4.messages) && t4.messages.push(new s("layer:unsupported", `Layers (${r7.title}, ${r7.id}) of type '${r7.declaredClass}' cannot be persisted in the ground`, { layer: r7 }));
    }), e3.layers = i2) : e3.layers = i2;
  }
  load(r6) {
    return this.addResolvingPromise(this._loadFromSource(r6)), Promise.resolve(this);
  }
  loadAll() {
    return t(this, (r6) => {
      r6(this.layers);
    });
  }
  async queryElevation(r6, e3) {
    await this.load({ signal: e3 == null ? void 0 : e3.signal });
    const { ElevationQuery: o3 } = await import("./ElevationQuery-BSLC6LGZ.js");
    s2(e3);
    const t4 = new o3(), s5 = this.layers.filter(L).toArray();
    return t4.queryAll(s5, r6, e3);
  }
  async createElevationSampler(r6, e3) {
    await this.load({ signal: e3 == null ? void 0 : e3.signal });
    const { ElevationQuery: o3 } = await import("./ElevationQuery-BSLC6LGZ.js");
    s2(e3);
    const t4 = new o3(), s5 = this.layers.filter(L).toArray();
    return t4.createSamplerAll(s5, r6, e3);
  }
  clone() {
    const r6 = { opacity: this.opacity, surfaceColor: a(this.surfaceColor), navigationConstraint: a(this.navigationConstraint), layers: this.layers.slice() };
    return this.loaded && (r6.loadStatus = "loaded"), new S({ resourceInfo: this.resourceInfo }).set(r6);
  }
  read(r6, e3) {
    this.resourceInfo || this._set("resourceInfo", { data: r6, context: e3 }), super.read(r6, e3);
  }
  _loadFromSource(r6) {
    const e3 = this.resourceInfo;
    return e3 ? this._loadLayersFromJSON(e3.data, e3.context, r6) : Promise.resolve();
  }
  async _loadLayersFromJSON(r6, e3, o3) {
    const t4 = (e3 == null ? void 0 : e3.origin) || "web-scene", s5 = (e3 == null ? void 0 : e3.portal) || null, a5 = (e3 == null ? void 0 : e3.url) || null, { populateOperationalLayers: i2 } = await import("./layersCreator-OQ2G4CDH.js");
    s2(o3);
    const n7 = [];
    if (r6.layers && Array.isArray(r6.layers)) {
      const e4 = { context: { origin: t4, url: a5, portal: s5, layerContainerType: "ground" }, defaultLayerType: "ArcGISTiledElevationServiceLayer" };
      n7.push(i2(this.layers, r6.layers, e4));
    }
    await Promise.allSettled(n7);
  }
};
function I(r6) {
  return r6 && "createElevationSampler" in r6;
}
function L(r6) {
  return "elevation" === r6.type || I(r6);
}
r([m({ json: { read: false } })], C.prototype, "layers", null), r([r2("layers")], C.prototype, "writeLayers", null), r([m({ readOnly: true })], C.prototype, "resourceInfo", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 1 }, json: { type: x, read: { reader: r4, source: "transparency" }, write: { writer: (r6, e3) => {
  e3.transparency = n3(r6);
}, target: "transparency" } } })], C.prototype, "opacity", void 0), r([m({ type: l, json: { type: [x], write: (r6, e3) => {
  e3.surfaceColor = r6.toJSON().slice(0, 3);
} } })], C.prototype, "surfaceColor", void 0), r([m({ type: p, json: { write: true } })], C.prototype, "navigationConstraint", void 0), C = S = r([a2("esri.Ground")], C);
var b4 = C;

// node_modules/@arcgis/core/layers/catalog/catalogUtils.js
var r5 = /* @__PURE__ */ new WeakMap();
function a3(o3) {
  return !o3.destroyed && (r5.has(o3) || o3.addHandles([d(() => {
    const e3 = o3.parent;
    return !(!e3 || !("type" in e3)) && ("catalog-dynamic-group" === e3.type || a3(e3));
  }, (e3) => r5.set(o3, e3), A), e(() => r5.delete(o3))]), r5.get(o3));
}

// node_modules/@arcgis/core/layers/support/editableLayers.js
function n6(t4) {
  return "object" == typeof t4 && null != t4 && "loaded" in t4 && true === t4.loaded && "type" in t4;
}
function e2(e3) {
  var _a, _b;
  return !(!n6(e3) || !((_b = (_a = O(e3)) == null ? void 0 : _a.operations) == null ? void 0 : _b.supportsEditing) || "editingEnabled" in e3 && !B(e3) || a3(e3));
}

// node_modules/@arcgis/core/support/groundUtils.js
var i = { "world-elevation": { id: "worldElevation", url: "//elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer", layerType: "ArcGISTiledElevationServiceLayer" }, "world-topobathymetry": { id: "worldTopoBathymetry", url: "//elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/TopoBathy3D/ImageServer", layerType: "ArcGISTiledElevationServiceLayer" } };
function t3(t4) {
  let a5 = null;
  if ("string" == typeof t4) if (t4 in i) {
    const r6 = i[t4];
    a5 = new b4({ resourceInfo: { data: { layers: [r6] } } });
  } else n.getLogger("esri.support.groundUtils").warn(`Unable to find ground definition for: ${t4}. Try "world-elevation"`);
  else a5 = w(b4, t4);
  return a5;
}

// node_modules/@arcgis/core/Map.js
var j = class extends n5(l2(o.EventedMixin(b2))) {
  constructor(e3) {
    super(e3), this.allLayers = new n4({ getCollections: () => {
      var _a, _b, _c;
      return [(_a = this.basemap) == null ? void 0 : _a.baseLayers, (_b = this.ground) == null ? void 0 : _b.layers, this.layers, (_c = this.basemap) == null ? void 0 : _c.referenceLayers];
    }, getChildrenFunction: (e4) => "layers" in e4 ? e4.layers : null }), this.allTables = t2(this), this.basemap = null, this.editableLayers = new n4({ getCollections: () => [this.allLayers], itemFilterFunction: e2 }), this.ground = new b4(), this._basemapCache = y();
  }
  destroy() {
    m3(this._basemapCache), this._basemapCache = null, this.allLayers.destroy(), this.allTables.destroy(), this.editableLayers.destroy(), this.basemap = u(this.basemap), u(this.ground), this._set("ground", null);
  }
  castBasemap(e3) {
    return b3(e3, this._basemapCache);
  }
  castGround(e3) {
    const s5 = t3(e3);
    return s5 ?? this._get("ground");
  }
  findLayerById(e3) {
    return this.allLayers.find((s5) => s5.id === e3);
  }
  findTableById(e3) {
    return this.allTables.find((s5) => s5.id === e3);
  }
};
r([m({ readOnly: true, dependsOn: [] })], j.prototype, "allLayers", void 0), r([m({ readOnly: true })], j.prototype, "allTables", void 0), r([m({ type: F, json: { read: { source: "baseMap" }, write: { target: "baseMap" } } })], j.prototype, "basemap", void 0), r([s3("basemap")], j.prototype, "castBasemap", null), r([m({ readOnly: true })], j.prototype, "editableLayers", void 0), r([m({ type: b4, nonNullable: true })], j.prototype, "ground", void 0), r([s3("ground")], j.prototype, "castGround", null), r([m()], j.prototype, "undoRedo", void 0), j = r([a2("esri.Map")], j);
var L2 = j;

// node_modules/@arcgis/core/webmap/background/ColorBackground.js
var p2;
var a4 = p2 = class extends f {
  constructor(o3) {
    super(o3), this.color = new l([0, 0, 0, 1]);
  }
  clone() {
    return new p2(a({ color: this.color }));
  }
};
r([m({ type: l, json: { write: true } })], a4.prototype, "color", void 0), a4 = p2 = r([a2("esri.webmap.background.ColorBackground")], a4);
var m4 = a4;

export {
  L2 as L,
  m4 as m
};
//# sourceMappingURL=chunk-KFSYVBTW.js.map
