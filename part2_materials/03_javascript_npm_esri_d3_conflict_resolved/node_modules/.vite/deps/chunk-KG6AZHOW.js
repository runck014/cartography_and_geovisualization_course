import {
  E
} from "./chunk-VVL7KRSE.js";
import {
  a
} from "./chunk-B3SR7LF7.js";
import {
  l
} from "./chunk-JVEZN6WF.js";
import {
  r as r2
} from "./chunk-6YWQXXBX.js";
import {
  A3 as A,
  D2 as D,
  G3 as G,
  H,
  I2 as I,
  J,
  K,
  T2 as T
} from "./chunk-E2I7HYXQ.js";
import {
  r
} from "./chunk-PKLD5YJF.js";

// node_modules/@arcgis/core/core/quantityUtils.js
function r3(t, u) {
  return { type: D(u), value: t, unit: u };
}
function i(n) {
  return { value: n };
}
function a2(t, u) {
  return { type: D(u), value: t, unit: u };
}
function l2(t, u) {
  return { type: D(u), value: t, unit: u };
}
function o(t, u, e = "arithmetic") {
  return { type: D(u), value: t, unit: u, rotationType: e };
}
function s(n, t) {
  const u = f(n, t);
  return "angle" === n.type ? o(u, t, n.rotationType) : r3(u, t);
}
function f(n, t) {
  return I(n.value, n.unit, t);
}
function m(n, t, u) {
  if (t === u) return n;
  switch (u) {
    case "arithmetic":
    case "geographic":
      return 90 - n;
  }
}
var h = a2(0, "meters");
var d = l2(0, "square-meters");
var T2 = o(0, "radians");
var U = o(0, "degrees");
var j = o(0, "degrees", "geographic");

// node_modules/@arcgis/core/core/unitFormatUtils.js
function b(t, n, i2) {
  return t.units[n][i2];
}
function g(t, n, i2, r4 = 2, o2 = "abbr") {
  return `${l(n, { minimumFractionDigits: r4, maximumFractionDigits: r4, signDisplay: n > 0 ? "never" : "exceptZero" })} ${b(t, i2, o2)}`;
}
function p(t, n, i2, r4 = 2, o2 = "abbr") {
  return `${l(n, { minimumFractionDigits: r4, maximumFractionDigits: r4, signDisplay: "exceptZero" })} ${b(t, i2, o2)}`;
}
function D2(t, n, i2, r4 = 2, o2 = "abbr") {
  const u = G(n, i2);
  return g(t, I(n, i2, u), u, r4, o2);
}
function x(t, n, i2, r4 = 2, o2 = "abbr") {
  const u = G(n, i2);
  return p(t, I(n, i2, u), u, r4, o2);
}
function y(t, n, i2, r4 = 2, o2 = "abbr") {
  const e = J(n, i2);
  return g(t, I(n, i2, e), e, r4, o2);
}
function F(t, n, i2, r4 = 2, o2 = "abbr") {
  const e = J(n, i2);
  return p(t, I(n, i2, e), e, r4, o2);
}
function d2(t, n, i2, r4 = 2, o2 = "abbr") {
  const e = T(n, i2);
  return g(t, I(n, i2, e), e, r4, o2);
}
function h2(t, n, i2, r4 = 2, o2 = "abbr") {
  const e = T(n, i2);
  return p(t, I(n, i2, e), e, r4, o2);
}
function B(t, n, i2, r4 = 2, o2 = "abbr") {
  const e = K(n, i2);
  return g(t, I(n, i2, e), e, r4, o2);
}
function M(t, n, i2, r4 = 2, o2 = "abbr") {
  const e = K(n, i2);
  return p(t, I(n, i2, e), e, r4, o2);
}
function $(t, n, i2, r4 = 2, o2 = "abbr") {
  const e = A(n, i2);
  return g(t, I(n, i2, e), e, r4, o2);
}
function j2(t, n, i2, r4 = 2, o2 = "abbr") {
  const e = H(n, i2);
  return g(t, I(n, i2, e), e, r4, o2);
}
var U2 = (t, n) => ({ style: "unit", unitDisplay: "narrow", unit: "degree", maximumFractionDigits: n, minimumFractionDigits: n, signDisplay: t > 0 ? "never" : "exceptZero" });
function w(t, i2, o2, e, u, c = a, a3 = true) {
  let m2 = c.normalize(m(I(t, i2, "degrees"), o2, e), 0, a3);
  const f2 = U2(m2, u ?? 2);
  return m2 = I2(m2, f2), l(m2, f2);
}
var z = /* @__PURE__ */ new Map();
function I2(t, n) {
  const i2 = JSON.stringify(n);
  let r4 = z.get(i2);
  return r4 || (r4 = new Intl.NumberFormat("en-US", n), z.set(i2, r4)), /^[-+]?360\.?0*Â°?$/.test(r4.format(t)) ? 0 : t;
}
var O = ["B", "kB", "MB", "GB", "TB"];
function T3(n, r4) {
  let e = 0 === (r4 = Math.round(r4)) ? 0 : Math.floor(Math.log(r4) / Math.log(E.KILOBYTES));
  e = r2(e, 0, O.length - 1);
  const s2 = l(r4 / E.KILOBYTES ** e, { maximumFractionDigits: 2 });
  return r(n.units.bytes[O[e]], { fileSize: s2 });
}

export {
  i,
  a2 as a,
  l2 as l,
  o,
  s,
  f,
  m,
  h,
  d,
  U,
  j,
  b,
  g,
  p,
  D2 as D,
  x,
  y,
  F,
  d2,
  h2,
  B,
  M,
  $,
  j2,
  w,
  T3 as T
};
//# sourceMappingURL=chunk-KG6AZHOW.js.map
