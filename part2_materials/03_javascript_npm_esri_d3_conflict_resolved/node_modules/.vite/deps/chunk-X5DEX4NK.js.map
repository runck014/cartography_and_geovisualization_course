{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/Normals.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/ComputeNormalTexture.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/TextureTransformUV.glsl.js", "../../@arcgis/core/chunks/DefaultMaterial.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.31/esri/copyright.txt for details.\n*/\nimport{neverReached as a}from\"../../../../../../core/compilerUtils.js\";import{glsl as r}from\"../../shaderModules/interfaces.js\";function e(e,o){const n=e.fragment;switch(n.code.add(r`struct ShadingNormalParameters {\nvec3 normalView;\nvec3 viewDirection;\n} shadingParams;`),o.doubleSidedMode){case i.None:n.code.add(r`vec3 shadingNormal(ShadingNormalParameters params) {\nreturn normalize(params.normalView);\n}`);break;case i.View:n.code.add(r`vec3 shadingNormal(ShadingNormalParameters params) {\nreturn dot(params.normalView, params.viewDirection) > 0.0 ? normalize(-params.normalView) : normalize(params.normalView);\n}`);break;case i.WindingOrder:n.code.add(r`vec3 shadingNormal(ShadingNormalParameters params) {\nreturn gl_FrontFacing ? normalize(params.normalView) : normalize(-params.normalView);\n}`);break;default:a(o.doubleSidedMode);case i.COUNT:}}var i;!function(a){a[a.None=0]=\"None\",a[a.View=1]=\"View\",a[a.WindingOrder=2]=\"WindingOrder\",a[a.COUNT=3]=\"COUNT\"}(i||(i={}));export{e as Normals,i as NormalsDoubleSidedMode};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.31/esri/copyright.txt for details.\n*/\nimport{IDENTITY as e}from\"../../../../../../core/libs/gl-matrix-2/factories/mat3f64.js\";import{ONES as t}from\"../../../../../../core/libs/gl-matrix-2/factories/vec2f64.js\";import{TextureCoordinateType as r}from\"../attributes/TextureCoordinateAttribute.glsl.js\";import{VertexTextureCoordinates as a}from\"../attributes/VertexTextureCoordinates.glsl.js\";import{NormalsDoubleSidedMode as n}from\"./Normals.glsl.js\";import{Float2PassUniform as o}from\"../../shaderModules/Float2PassUniform.js\";import{glsl as s}from\"../../shaderModules/interfaces.js\";import{Matrix3PassUniform as m}from\"../../shaderModules/Matrix3PassUniform.js\";import{Texture2DDrawUniform as d}from\"../../shaderModules/Texture2DDrawUniform.js\";import{Texture2DPassUniform as l}from\"../../shaderModules/Texture2DPassUniform.js\";import{BindType as i}from\"../../shaderTechnique/BindType.js\";import{VertexAttribute as c}from\"../../../lib/VertexAttribute.js\";function T(T,u){const x=T.fragment;u.hasVertexTangents?(T.attributes.add(c.TANGENT,\"vec4\"),T.varyings.add(\"vTangent\",\"vec4\"),u.doubleSidedMode===n.WindingOrder?x.code.add(s`mat3 computeTangentSpace(vec3 normal) {\nfloat tangentHeadedness = gl_FrontFacing ? vTangent.w : -vTangent.w;\nvec3 tangent = normalize(gl_FrontFacing ? vTangent.xyz : -vTangent.xyz);\nvec3 bitangent = cross(normal, tangent) * tangentHeadedness;\nreturn mat3(tangent, bitangent, normal);\n}`):x.code.add(s`mat3 computeTangentSpace(vec3 normal) {\nfloat tangentHeadedness = vTangent.w;\nvec3 tangent = normalize(vTangent.xyz);\nvec3 bitangent = cross(normal, tangent) * tangentHeadedness;\nreturn mat3(tangent, bitangent, normal);\n}`)):x.code.add(s`mat3 computeTangentSpace(vec3 normal, vec3 pos, vec2 st) {\nvec3 Q1 = dFdx(pos);\nvec3 Q2 = dFdy(pos);\nvec2 stx = dFdx(st);\nvec2 sty = dFdy(st);\nfloat det = stx.t * sty.s - sty.t * stx.s;\nvec3 T = stx.t * Q2 - sty.t * Q1;\nT = T - normal * dot(normal, T);\nT *= inversesqrt(max(dot(T,T), 1.e-10));\nvec3 B = sign(det) * cross(normal, T);\nreturn mat3(T, B, normal);\n}`),u.textureCoordinateType!==r.None&&(T.include(a,u),x.uniforms.add(u.bindType===i.Pass?new l(\"normalTexture\",(e=>e.textureNormal)):new d(\"normalTexture\",(e=>e.textureNormal))),u.hasNormalTextureTransform&&(x.uniforms.add(new o(\"scale\",(e=>e.scale??t))),x.uniforms.add(new m(\"normalTextureTransformMatrix\",(t=>t.normalTextureTransformMatrix??e)))),x.code.add(s`vec3 computeTextureNormal(mat3 tangentSpace, vec2 uv) {\nvec3 rawNormal = textureLookup(normalTexture, uv).rgb * 2.0 - 1.0;`),u.hasNormalTextureTransform&&x.code.add(s`mat3 normalTextureRotation = mat3(normalTextureTransformMatrix[0][0]/scale[0], normalTextureTransformMatrix[0][1]/scale[1], 0.0,\nnormalTextureTransformMatrix[1][0]/scale[0], normalTextureTransformMatrix[1][1]/scale[1], 0.0,\n0.0, 0.0, 0.0 );\nrawNormal.xy = (normalTextureRotation * vec3(rawNormal.x, rawNormal.y, 1.0)).xy;`),x.code.add(s`return tangentSpace * rawNormal;\n}`))}export{T as ComputeNormalTexture};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.31/esri/copyright.txt for details.\n*/\nimport{IDENTITY as r}from\"../../../../../../core/libs/gl-matrix-2/factories/mat3f64.js\";import{TextureCoordinateType as e}from\"../attributes/TextureCoordinateAttribute.glsl.js\";import{glsl as o}from\"../../shaderModules/interfaces.js\";import{Matrix3PassUniform as a}from\"../../shaderModules/Matrix3PassUniform.js\";function s(e,s){s.hasColorTextureTransform?(e.varyings.add(\"colorUV\",\"vec2\"),e.vertex.uniforms.add(new a(\"colorTextureTransformMatrix\",(e=>e.colorTextureTransformMatrix??r))).code.add(o`void forwardColorUV(){\ncolorUV = (colorTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\n}`)):e.vertex.code.add(o`void forwardColorUV(){}`)}function i(s,i){i.hasNormalTextureTransform&&i.textureCoordinateType!==e.None?(s.varyings.add(\"normalUV\",\"vec2\"),s.vertex.uniforms.add(new a(\"normalTextureTransformMatrix\",(e=>e.normalTextureTransformMatrix??r))).code.add(o`void forwardNormalUV(){\nnormalUV = (normalTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\n}`)):s.vertex.code.add(o`void forwardNormalUV(){}`)}function t(s,i){i.hasEmissionTextureTransform&&i.textureCoordinateType!==e.None?(s.varyings.add(\"emissiveUV\",\"vec2\"),s.vertex.uniforms.add(new a(\"emissiveTextureTransformMatrix\",(e=>e.emissiveTextureTransformMatrix??r))).code.add(o`void forwardEmissiveUV(){\nemissiveUV = (emissiveTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\n}`)):s.vertex.code.add(o`void forwardEmissiveUV(){}`)}function d(s,i){i.hasOcclusionTextureTransform&&i.textureCoordinateType!==e.None?(s.varyings.add(\"occlusionUV\",\"vec2\"),s.vertex.uniforms.add(new a(\"occlusionTextureTransformMatrix\",(e=>e.occlusionTextureTransformMatrix??r))).code.add(o`void forwardOcclusionUV(){\nocclusionUV = (occlusionTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\n}`)):s.vertex.code.add(o`void forwardOcclusionUV(){}`)}function n(s,i){i.hasMetallicRoughnessTextureTransform&&i.textureCoordinateType!==e.None?(s.varyings.add(\"metallicRoughnessUV\",\"vec2\"),s.vertex.uniforms.add(new a(\"metallicRoughnessTextureTransformMatrix\",(e=>e.metallicRoughnessTextureTransformMatrix??r))).code.add(o`void forwardMetallicRoughnessUV(){\nmetallicRoughnessUV = (metallicRoughnessTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\n}`)):s.vertex.code.add(o`void forwardMetallicRoughnessUV(){}`)}export{s as colorTextureUV,t as emissiveTextureUV,n as metallicRoughnessTextureUV,i as normalTextureUV,d as occlusionTextureUV};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.31/esri/copyright.txt for details.\n*/\nimport{ForwardLinearDepth as e}from\"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";import{Offset as r}from\"../views/3d/webgl-engine/core/shaderLibrary/Offset.glsl.js\";import{isColorOrColorEmission as o}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";import{SliceDraw as i}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{Transform as a}from\"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";import{InstancedDoublePrecision as l}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/InstancedDoublePrecision.glsl.js\";import{NormalAttribute as s,NormalType as t}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js\";import{PositionAttribute as n}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/PositionAttribute.glsl.js\";import{SymbolColor as d}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/SymbolColor.glsl.js\";import{TextureCoordinateAttribute as c}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";import{VertexColor as m}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js\";import{VertexNormal as g}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexNormal.glsl.js\";import{VerticalOffset as v}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js\";import{DefaultMaterialAuxiliaryPasses as u}from\"../views/3d/webgl-engine/core/shaderLibrary/default/DefaultMaterialAuxiliaryPasses.glsl.js\";import{ComputeNormalTexture as b}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ComputeNormalTexture.glsl.js\";import{EvaluateAmbientOcclusion as h}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";import{EvaluateSceneLighting as w,addAmbientBoostFactor as p,addLightingGlobalFactor as f}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";import{addMainLightIntensity as x}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";import{Normals as y}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/Normals.glsl.js\";import{PhysicallyBasedRendering as L}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRendering.glsl.js\";import{PhysicallyBasedRenderingParameters as C,PBRMode as j}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";import{ReadShadowMapPass as P,ReadShadowMapDraw as T}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";import{terrainDepthTest as O}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/TerrainDepthTest.glsl.js\";import{colorTextureUV as N,normalTextureUV as S,emissiveTextureUV as A,occlusionTextureUV as V,metallicRoughnessTextureUV as $}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/TextureTransformUV.glsl.js\";import{VisualVariables as D}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";import{alphaCutoff as M}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";import{DiscardOrAdjustAlphaPass as E}from\"../views/3d/webgl-engine/core/shaderLibrary/util/DiscardOrAdjustAlpha.glsl.js\";import{MixExternalColor as U}from\"../views/3d/webgl-engine/core/shaderLibrary/util/MixExternalColor.glsl.js\";import{addProjViewLocalOrigin as I,addCameraPosition as B}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float3PassUniform as F}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{Float4PassUniform as _}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as R}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as z,If as G}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as W}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as k}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{VertexAttribute as H}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";import{outputColorHighlightOID as q}from\"../views/3d/webgl-engine/shaders/OutputColorHighlightOID.glsl.js\";function J(J){const K=new W,{vertex:Q,fragment:X,varyings:Y}=K,{output:Z,normalType:ee,offsetBackfaces:re,instancedColor:oe,spherical:ie,receiveShadows:ae,snowCover:le,pbrMode:se,textureAlphaPremultiplied:te,instancedDoublePrecision:ne,hasVertexColors:de,hasVertexTangents:ce,hasColorTexture:me,hasNormalTexture:ge,hasNormalTextureTransform:ve,hasColorTextureTransform:ue}=J;if(I(Q,J),K.include(n),Y.add(\"vpos\",\"vec3\"),K.include(D,J),K.include(l,J),K.include(v,J),K.include(N,J),!o(Z))return K.include(u,J),K;K.include(S,J),K.include(A,J),K.include(V,J),K.include($,J),B(Q,J),K.include(s,J),K.include(a,J);const be=ee===t.Attribute||ee===t.Compressed;return be&&re&&K.include(r),K.include(b,J),K.include(g,J),oe&&K.attributes.add(H.INSTANCECOLOR,\"vec4\"),Y.add(\"vPositionLocal\",\"vec3\"),K.include(c,J),K.include(e,J),K.include(d,J),K.include(m,J),Q.uniforms.add(new _(\"externalColor\",(e=>e.externalColor))),Y.add(\"vcolorExt\",\"vec4\"),J.terrainDepthTest&&Y.add(\"depth\",\"float\"),Q.main.add(z`\n    forwardNormalizedVertexColor();\n    vcolorExt = externalColor;\n    ${G(oe,\"vcolorExt *= instanceColor * 0.003921568627451;\")}\n    vcolorExt *= vvColor();\n    vcolorExt *= getSymbolColor();\n    forwardColorMixMode();\n\n    if (vcolorExt.a < ${z.float(M)}) {\n      gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n    } else {\n      vpos = getVertexInLocalOriginSpace();\n      vPositionLocal = vpos - view[3].xyz;\n      vpos = subtractOrigin(vpos);\n      ${G(be,\"vNormalWorld = dpNormal(vvLocalNormal(normalModel()));\")}\n      vpos = addVerticalOffset(vpos, localOrigin);\n      ${G(ce,\"vTangent = dpTransformVertexTangent(tangent);\")}\n      gl_Position = transformPosition(proj, view, vpos);\n      ${G(be&&re,\"gl_Position = offsetBackfacingClipPosition(gl_Position, vpos, vNormalWorld, cameraPosition);\")}\n    }\n\n    ${G(J.terrainDepthTest,\"depth = (view * vec4(vpos, 1.0)).z;\")}\n    forwardLinearDepth();\n    forwardTextureCoordinates();\n    forwardColorUV();\n    forwardNormalUV();\n    forwardEmissiveUV();\n    forwardOcclusionUV();\n    forwardMetallicRoughnessUV();\n  `),K.include(w,J),K.include(h,J),K.include(E,J),K.include(ne?P:T,J),K.include(O,J),K.include(i,J),K.include(q,J),B(X,J),X.uniforms.add(Q.uniforms.get(\"localOrigin\"),new F(\"ambient\",(e=>e.ambient)),new F(\"diffuse\",(e=>e.diffuse)),new R(\"opacity\",(e=>e.opacity)),new R(\"layerOpacity\",(e=>e.layerOpacity))),me&&X.uniforms.add(new k(\"tex\",(e=>e.texture))),K.include(C,J),K.include(L,J),X.include(U),K.include(y,J),p(X),f(X),x(X),X.main.add(z`\n      discardBySlice(vpos);\n      ${G(J.terrainDepthTest,\"terrainDepthTest(depth);\")}\n      ${me?z`\n              vec4 texColor = texture(tex, ${ue?\"colorUV\":\"vuv0\"});\n              ${G(te,\"texColor.rgb /= texColor.a;\")}\n              discardOrAdjustAlpha(texColor);`:z`vec4 texColor = vec4(1.0);`}\n      shadingParams.viewDirection = normalize(vpos - cameraPosition);\n      ${ee===t.ScreenDerivative?z`vec3 normal = screenDerivativeNormal(vPositionLocal);`:z`shadingParams.normalView = vNormalWorld;\n                 vec3 normal = shadingNormal(shadingParams);`}\n      applyPBRFactors();\n      float ssao = evaluateAmbientOcclusionInverse() * getBakedOcclusion();\n\n      vec3 posWorld = vpos + localOrigin;\n\n      float additionalAmbientScale = additionalDirectedAmbientLight(posWorld);\n      float shadow = ${ae?\"max(lightingGlobalFactor * (1.0 - additionalAmbientScale), readShadowMap(vpos, linearDepth))\":G(ie,\"lightingGlobalFactor * (1.0 - additionalAmbientScale)\",\"0.0\")};\n\n      vec3 matColor = max(ambient, diffuse);\n      vec3 albedo = mixExternalColor(${G(de,\"vColor.rgb *\")} matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n      float opacity_ = layerOpacity * mixExternalOpacity(${G(de,\"vColor.a * \")} opacity, texColor.a, vcolorExt.a, int(colorMixMode));\n      ${ge?`mat3 tangentSpace = computeTangentSpace(${ce?\"normal\":\"normal, vpos, vuv0\"});\\n             vec3 shadingNormal = computeTextureNormal(tangentSpace, ${ve?\"normalUV\":\"vuv0\"});`:\"vec3 shadingNormal = normal;\"}\n      vec3 normalGround = ${ie?\"normalize(posWorld);\":\"vec3(0.0, 0.0, 1.0);\"}\n\n      ${G(le,z`\n            float snow = smoothstep(0.5, 0.55, dot(normal, normalGround));\n            albedo = mix(albedo, vec3(1), snow);\n            shadingNormal = mix(shadingNormal, normal, snow);\n            ssao = mix(ssao, 1.0, snow);`)}\n\n      vec3 additionalLight = ssao * mainLightIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;\n\n      ${se===j.Normal||se===j.Schematic?z`\n              float additionalAmbientIrradiance = additionalAmbientIrradianceFactor * mainLightIntensity[2];\n              ${G(le,z`mrr = mix(mrr, vec3(0.0, 1.0, 0.04), snow);`)}\n              vec4 emission = ${le?\"mix(getEmissions(), vec4(0.0), snow)\":\"getEmissions()\"};\n              vec3 shadedColor = evaluateSceneLightingPBR(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight, shadingParams.viewDirection, normalGround, mrr, emission, additionalAmbientIrradiance);`:z`vec3 shadedColor = evaluateSceneLighting(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight);`}\n      vec4 finalColor = vec4(shadedColor, opacity_);\n      outputColorHighlightOID(finalColor, vpos);\n  `),K}const K=Object.freeze(Object.defineProperty({__proto__:null,build:J},Symbol.toStringTag,{value:\"Module\"}));export{K as D,J as b};\n"],
  "mappings": "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",
  "names": ["e", "o", "n", "i", "a", "T", "u", "x", "i", "o", "d", "s", "e", "t", "s", "e", "o", "i", "d", "t", "n", "J", "K", "o", "l", "a", "s", "i", "t", "d", "n", "e", "m", "h", "u"]
}
