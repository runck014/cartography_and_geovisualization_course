import {
  f
} from "./chunk-EMVTPRQK.js";
import {
  t
} from "./chunk-EDGKOPSL.js";
import {
  n as n3
} from "./chunk-SEUZ3J6J.js";
import {
  h
} from "./chunk-E2RPCJOE.js";
import {
  V
} from "./chunk-RCLWOQNR.js";
import {
  S
} from "./chunk-RD2BBQYN.js";
import {
  b as b2
} from "./chunk-SEG3PRUR.js";
import {
  m as m2
} from "./chunk-B6VE32RA.js";
import {
  g,
  r as r2
} from "./chunk-2WXAPZBK.js";
import {
  c,
  l
} from "./chunk-P5H5PJSC.js";
import {
  n as n2
} from "./chunk-TVTRNT6K.js";
import {
  U
} from "./chunk-CRH37WFF.js";
import {
  I,
  pt
} from "./chunk-YFGQMO6E.js";
import {
  u2
} from "./chunk-HAF6QJ32.js";
import {
  b2 as b,
  m
} from "./chunk-H77COA2S.js";
import {
  a4 as a2
} from "./chunk-7LJCT7EA.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import {
  s
} from "./chunk-GRW2QIBT.js";
import {
  u
} from "./chunk-R2PAF6JT.js";
import {
  a,
  n2 as n,
  y
} from "./chunk-PKLD5YJF.js";

// node_modules/@arcgis/core/support/basemapDefinitions.js
async function a3(e) {
  if (!e) return;
  const a4 = e.includes("-vector") ? e.slice(0, e.indexOf("-vector")) : e.includes("-3d") ? e.slice(0, e.indexOf("-3d")) : e, s3 = await h("esri/t9n/basemaps");
  return s3[e] || s3[a4];
}
var s2 = { satellite: { id: "satellite", classic: true, get thumbnailUrl() {
  return n2("esri/images/basemap/satellite.jpg");
}, baseMapLayers: [{ id: "satellite-base-layer", url: "//services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer", layerType: "ArcGISTiledMapServiceLayer", title: "World Imagery", showLegend: false, visibility: true, opacity: 1 }] }, hybrid: { id: "hybrid", classic: true, get thumbnailUrl() {
  return n2("esri/images/basemap/hybrid.jpg");
}, baseMapLayers: [{ id: "hybrid-base-layer", url: "//services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer", layerType: "ArcGISTiledMapServiceLayer", title: "World Imagery", showLegend: false, visibility: true, opacity: 1 }, { id: "hybrid-reference-layer", styleUrl: "https://cdn.arcgis.com/sharing/rest/content/items/30d6b8271e1849cd9c3042060001f425/resources/styles/root.json", layerType: "VectorTileLayer", title: "Hybrid Reference Layer", isReference: true, showLegend: false, visibility: true, opacity: 1 }] }, terrain: { id: "terrain", classic: true, get thumbnailUrl() {
  return n2("esri/images/basemap/terrain.jpg");
}, baseMapLayers: [{ id: "terrain-base-layer", url: "//services.arcgisonline.com/ArcGIS/rest/services/World_Terrain_Base/MapServer", layerType: "ArcGISTiledMapServiceLayer", title: "World Terrain Base", showLegend: false, visibility: true, opacity: 1 }, { id: "terrain-reference-layer", url: "//services.arcgisonline.com/ArcGIS/rest/services/Reference/World_Reference_Overlay/MapServer", layerType: "ArcGISTiledMapServiceLayer", title: "World Reference Overlay", isReference: true, showLegend: false, visibility: true, opacity: 1 }] }, oceans: { id: "oceans", classic: true, get thumbnailUrl() {
  return n2("esri/images/basemap/oceans.jpg");
}, baseMapLayers: [{ id: "oceans-base-layer", url: "//services.arcgisonline.com/arcgis/rest/services/Ocean/World_Ocean_Base/MapServer", layerType: "ArcGISTiledMapServiceLayer", title: "World Ocean Base", showLegend: false, visibility: true, opacity: 1 }, { id: "oceans-reference-layer", url: "//services.arcgisonline.com/arcgis/rest/services/Ocean/World_Ocean_Reference/MapServer", layerType: "ArcGISTiledMapServiceLayer", title: "World Ocean Reference", isReference: true, showLegend: false, visibility: true, opacity: 1 }] }, osm: { id: "osm", classic: true, get thumbnailUrl() {
  return n2("esri/images/basemap/osm.jpg");
}, baseMapLayers: [{ id: "osm-base-layer", layerType: "OpenStreetMap", title: "Open Street Map", showLegend: false, visibility: true, opacity: 1 }] }, "dark-gray-vector": { id: "dark-gray-vector", classic: true, get thumbnailUrl() {
  return n2("esri/images/basemap/dark-gray-vector.jpg");
}, baseMapLayers: [{ id: "dark-gray-base-layer", styleUrl: "https://cdn.arcgis.com/sharing/rest/content/items/5e9b3685f4c24d8781073dd928ebda50/resources/styles/root.json", layerType: "VectorTileLayer", title: "Dark Gray Base", visibility: true, opacity: 1 }, { id: "dark-gray-reference-layer", styleUrl: "https://cdn.arcgis.com/sharing/rest/content/items/747cb7a5329c478cbe6981076cc879c5/resources/styles/root.json", layerType: "VectorTileLayer", title: "Dark Gray Reference", isReference: true, visibility: true, opacity: 1 }] }, get "dark-gray"() {
  return { ...this["dark-gray-vector"], id: "dark-gray" };
}, "gray-vector": { id: "gray-vector", classic: true, get thumbnailUrl() {
  return n2("esri/images/basemap/gray-vector.jpg");
}, baseMapLayers: [{ id: "gray-base-layer", styleUrl: "https://cdn.arcgis.com/sharing/rest/content/items/291da5eab3a0412593b66d384379f89f/resources/styles/root.json", layerType: "VectorTileLayer", title: "Light Gray Base", visibility: true, opacity: 1 }, { id: "gray-reference-layer", styleUrl: "https://cdn.arcgis.com/sharing/rest/content/items/1768e8369a214dfab4e2167d5c5f2454/resources/styles/root.json", layerType: "VectorTileLayer", title: "Light Gray Reference", isReference: true, visibility: true, opacity: 1 }] }, get gray() {
  return { ...this["gray-vector"], id: "gray" };
}, "streets-vector": { id: "streets-vector", classic: true, get thumbnailUrl() {
  return n2("esri/images/basemap/streets-vector.jpg");
}, baseMapLayers: [{ id: "streets-vector-base-layer", styleUrl: "//cdn.arcgis.com/sharing/rest/content/items/de26a3cf4cc9451298ea173c4b324736/resources/styles/root.json", layerType: "VectorTileLayer", title: "World Streets", visibility: true, opacity: 1 }] }, get streets() {
  return { ...this["streets-vector"], id: "streets" };
}, "topo-vector": { id: "topo-vector", classic: true, get thumbnailUrl() {
  return n2("esri/images/basemap/topo-vector.jpg");
}, baseMapLayers: [{ id: "world-hillshade-layer", url: "//services.arcgisonline.com/arcgis/rest/services/Elevation/World_Hillshade/MapServer", layerType: "ArcGISTiledMapServiceLayer", title: "World Hillshade", showLegend: false, visibility: true, opacity: 1 }, { id: "topo-vector-base-layer", styleUrl: "//cdn.arcgis.com/sharing/rest/content/items/7dc6cea0b1764a1f9af2e679f642f0f5/resources/styles/root.json", layerType: "VectorTileLayer", title: "World Topo", visibility: true, opacity: 1 }] }, get topo() {
  return { ...this["topo-vector"], id: "topo" };
}, "streets-night-vector": { id: "streets-night-vector", classic: true, get thumbnailUrl() {
  return n2("esri/images/basemap/streets-night.jpg");
}, baseMapLayers: [{ id: "streets-night-vector-base-layer", styleUrl: "//cdn.arcgis.com/sharing/rest/content/items/86f556a2d1fd468181855a35e344567f/resources/styles/root.json", layerType: "VectorTileLayer", title: "World Streets Night", visibility: true, opacity: 1 }] }, "streets-relief-vector": { id: "streets-relief-vector", classic: true, get thumbnailUrl() {
  return n2("esri/images/basemap/streets-relief.jpg");
}, baseMapLayers: [{ id: "world-hillshade-layer", url: "//services.arcgisonline.com/arcgis/rest/services/Elevation/World_Hillshade/MapServer", layerType: "ArcGISTiledMapServiceLayer", title: "World Hillshade", showLegend: false, visibility: true, opacity: 1 }, { id: "streets-relief-vector-base-layer", styleUrl: "//www.arcgis.com/sharing/rest/content/items/b266e6d17fc345b498345613930fbd76/resources/styles/root.json", title: "World Streets Relief", layerType: "VectorTileLayer", visibility: true, opacity: 1 }] }, "streets-navigation-vector": { id: "streets-navigation-vector", classic: true, get thumbnailUrl() {
  return n2("esri/images/basemap/streets-navigation.jpg");
}, baseMapLayers: [{ id: "streets-navigation-vector-base-layer", styleUrl: "//cdn.arcgis.com/sharing/rest/content/items/63c47b7177f946b49902c24129b87252/resources/styles/root.json", layerType: "VectorTileLayer", title: "World Streets Navigation", visibility: true, opacity: 1 }] }, "topo-3d": { id: "topo-3d", is3d: true, get thumbnailUrl() {
  return n2("esri/images/basemap/topo-3d.png");
}, baseMapLayers: [{ id: "topo-3d-base-layer", styleUrl: "https://www.arcgis.com/sharing/rest/content/items/1e7d1784d1ef4b79ba6764d0bd6c3150/resources/styles/root.json", layerType: "VectorTileLayer", title: "Topographic", visibility: true, opacity: 1 }, { id: "topo-3d-trees", title: "Trees", url: "https://basemaps3d.arcgis.com/arcgis/rest/services/OpenStreetMap3D_Trees_Thematic_v1/SceneServer", itemId: "f75fef56b2d944fe92ef9f7737b4f953", layerType: "ArcGISSceneServiceLayer" }, { id: "topo-3d-places-and-labels", title: "Places and Labels", url: "https://basemaps3d.arcgis.com/arcgis/rest/services/OpenStreetMap3D_DarkLabels_v1/SceneServer", itemId: "a84404ad39c64c328d0596e361ec459b", layerType: "ArcGISSceneServiceLayer" }, { id: "topo-3d-buildings", title: "Buildings", url: "https://basemaps3d.arcgis.com/arcgis/rest/services/OpenStreetMap3D_Buildings_v1/SceneServer", itemId: "ca0470dbbddb4db28bad74ed39949e25", layerType: "ArcGISSceneServiceLayer" }] }, "navigation-3d": { id: "navigation-3d", is3d: true, get thumbnailUrl() {
  return n2("esri/images/basemap/navigation-3d.jpg");
}, baseMapLayers: [{ id: "navigation-3d-base-layer", styleUrl: "https://www.arcgis.com/sharing/rest/content/items/ccc904ff872b4144b94934e55e32784b/resources/styles/root.json", layerType: "VectorTileLayer", title: "Navigation", visibility: true, opacity: 1 }, { id: "navigation-3d-places-and-labels", title: "Places and Labels", url: "https://basemaps3d.arcgis.com/arcgis/rest/services/OpenStreetMap3D_DarkLabels_v1/SceneServer", itemId: "a84404ad39c64c328d0596e361ec459b", layerType: "ArcGISSceneServiceLayer" }, { id: "navigation-3d-buildings", title: "Buildings", url: "https://basemaps3d.arcgis.com/arcgis/rest/services/OpenStreetMap3D_Buildings_v1/SceneServer", itemId: "ca0470dbbddb4db28bad74ed39949e25", layerType: "ArcGISSceneServiceLayer" }] }, "streets-3d": { id: "streets-3d", is3d: true, get thumbnailUrl() {
  return n2("esri/images/basemap/streets-3d.png");
}, baseMapLayers: [{ id: "streets-3d-base-layer", styleUrl: "https://www.arcgis.com/sharing/rest/content/items/198298c4c64c4cb19de5b46aa00c198d/resources/styles/root.json", layerType: "VectorTileLayer", title: "Streets", visibility: true, opacity: 1 }, { id: "streets-3d-places-and-labels", title: "Places and Labels", url: "https://basemaps3d.arcgis.com/arcgis/rest/services/OpenStreetMap3D_DarkLabels_v1/SceneServer", itemId: "a84404ad39c64c328d0596e361ec459b", layerType: "ArcGISSceneServiceLayer" }, { id: "streets-3d-buildings", title: "Buildings", url: "https://basemaps3d.arcgis.com/arcgis/rest/services/OpenStreetMap3D_Buildings_v1/SceneServer", itemId: "ca0470dbbddb4db28bad74ed39949e25", layerType: "ArcGISSceneServiceLayer" }] }, "osm-3d": { id: "osm-3d", is3d: true, get thumbnailUrl() {
  return n2("esri/images/basemap/osm-3d.png");
}, baseMapLayers: [{ id: "osm-3d-base-layer", styleUrl: "https://www.arcgis.com/sharing/rest/content/items/8628d259c9d14bdc848771c23c513940/resources/styles/root.json", layerType: "VectorTileLayer", title: "OpenStreetMap", visibility: true, opacity: 1 }, { id: "osm-3d-trees", title: "Trees", url: "https://basemaps3d.arcgis.com/arcgis/rest/services/OpenStreetMap3D_Trees_Thematic_v1/SceneServer", itemId: "f75fef56b2d944fe92ef9f7737b4f953", layerType: "ArcGISSceneServiceLayer" }, { id: "osm-3d-places-and-labels", title: "Places and Labels", url: "https://basemaps3d.arcgis.com/arcgis/rest/services/OpenStreetMap3D_DarkLabels_v1/SceneServer", itemId: "a84404ad39c64c328d0596e361ec459b", layerType: "ArcGISSceneServiceLayer" }, { id: "osm-3d-buildings", title: "Buildings", url: "https://basemaps3d.arcgis.com/arcgis/rest/services/OpenStreetMap3D_Buildings_v1/SceneServer", itemId: "ca0470dbbddb4db28bad74ed39949e25", layerType: "ArcGISSceneServiceLayer" }] }, "gray-3d": { id: "gray-3d", is3d: true, get thumbnailUrl() {
  return n2("esri/images/basemap/gray-3d.png");
}, baseMapLayers: [{ id: "gray-3d-base-layer", styleUrl: "https://www.arcgis.com/sharing/rest/content/items/01a14b466345455ba4176d2e6390db92/resources/styles/root.json", layerType: "VectorTileLayer", title: "Streets", visibility: true, opacity: 1 }, { id: "gray-3d-places-and-labels", title: "Places and Labels", url: "https://basemaps3d.arcgis.com/arcgis/rest/services/OpenStreetMap3D_DarkLabels_v1/SceneServer", itemId: "a84404ad39c64c328d0596e361ec459b", layerType: "ArcGISSceneServiceLayer" }, { id: "gray-3d-buildings", title: "Buildings", url: "https://basemaps3d.arcgis.com/arcgis/rest/services/OpenStreetMap3D_Buildings_v1/SceneServer", itemId: "ca0470dbbddb4db28bad74ed39949e25", layerType: "ArcGISSceneServiceLayer" }] }, "navigation-dark-3d": { id: "navigation-dark-3d", itemId: "5a1365328b4943f09a54cf5fd1205707", is3d: true, baseMapLayers: [{ id: "navigation-dark-3d-base-layer", styleUrl: "https://www.arcgis.com/sharing/rest/content/items/451a1777ab3f4bf095fae24a117439d9/resources/styles/root.json", layerType: "VectorTileLayer", title: "Navigation Dark" }, { id: "navigation-dark-3d-places-and-labels", title: "Places and Labels", url: "https://basemaps3d.arcgis.com/arcgis/rest/services/OpenStreetMap3D_LightLabels_v1/SceneServer/layers/0", itemId: "f364b70b012a4da5a4b5921e193eac4a", layerType: "ArcGISSceneServiceLayer" }, { id: "navigation-dark-3d-buildings", title: "Buildings", url: "https://basemaps3d.arcgis.com/arcgis/rest/services/OpenStreetMap3D_Buildings_v1/SceneServer", itemId: "ca0470dbbddb4db28bad74ed39949e25", layerType: "ArcGISSceneServiceLayer" }] }, "streets-dark-3d": { id: "streets-dark-3d", itemId: "8a4efa2c20484ec9b4557895e65736ff", is3d: true, baseMapLayers: [{ id: "streets-dark-3d-base-layer", styleUrl: "https://www.arcgis.com/sharing/rest/content/items/bc599b6d741a4ac084b7eea7bf8c5938/resources/styles/root.json", layerType: "VectorTileLayer", title: "OpenStreetMap Streets Night (for 3D)" }, { id: "streets-dark-3d-places-and-labels", title: "Places and Labels", url: "https://basemaps3d.arcgis.com/arcgis/rest/services/OpenStreetMap3D_LightLabels_v1/SceneServer", itemId: "f364b70b012a4da5a4b5921e193eac4a", layerType: "ArcGISSceneServiceLayer" }, { id: "streets-dark-3d-buildings", title: "Buildings", url: "https://basemaps3d.arcgis.com/arcgis/rest/services/OpenStreetMap3D_Buildings_v1/SceneServer", itemId: "ca0470dbbddb4db28bad74ed39949e25", layerType: "ArcGISSceneServiceLayer" }] }, "dark-gray-3d": { id: "dark-gray-3d", itemId: "a8b7322a5fe94002bb0f5e0eeb0c5c18", is3d: true, baseMapLayers: [{ id: "dark-gray-3d-base-layer", styleUrl: "https://www.arcgis.com/sharing/rest/content/items/4178f71acb934fb89f169e7d667c20c6/resources/styles/root.json", layerType: "VectorTileLayer", title: "OpenStreetMap Dark Gray Canvas (for 3D)" }, { id: "dark-gray-3d-places-and-labels", title: "Places and Labels", url: "https://basemaps3d.arcgis.com/arcgis/rest/services/OpenStreetMap3D_LightLabels_v1/SceneServer/layers/0", itemId: "f364b70b012a4da5a4b5921e193eac4a", layerType: "ArcGISSceneServiceLayer" }, { id: "dark-gray-3d-buildings", title: "Buildings", url: "https://basemaps3d.arcgis.com/arcgis/rest/services/OpenStreetMap3D_Buildings_v1/SceneServer", itemId: "ca0470dbbddb4db28bad74ed39949e25", layerType: "ArcGISSceneServiceLayer" }] }, "arcgis-imagery": { get thumbnailUrl() {
  return n2("esri/images/basemap/hybrid.jpg");
}, title: "Imagery Hybrid", baseMapLayers: [{ layerType: "ArcGISTiledMapServiceLayer", showLegend: false, title: "World Imagery", url: "https://ibasemaps-api.arcgis.com/arcgis/rest/services/World_Imagery/MapServer" }, { layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:Imagery:Labels", title: "Hybrid Reference Layer", isReference: true }] }, "arcgis-imagery-standard": { get thumbnailUrl() {
  return n2("esri/images/basemap/satellite.jpg");
}, title: "Imagery", baseMapLayers: [{ layerType: "ArcGISTiledMapServiceLayer", showLegend: false, title: "World Imagery", url: "https://ibasemaps-api.arcgis.com/arcgis/rest/services/World_Imagery/MapServer" }] }, "arcgis-imagery-labels": { title: "Hybrid [Reference]", baseMapLayers: [{ layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:Imagery:Labels", title: "Hybrid Reference Layer", isReference: true }] }, "arcgis-light-gray": { get thumbnailUrl() {
  return n2("esri/images/basemap/gray-vector.jpg");
}, title: "Light Gray Canvas", baseMapLayers: [{ layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:LightGray:Base", title: "Light Gray Canvas Base" }, { layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:LightGray:Labels", title: "Light Gray Canvas Labels", isReference: true }] }, "arcgis-dark-gray": { get thumbnailUrl() {
  return n2("esri/images/basemap/dark-gray.jpg");
}, title: "Dark Gray Canvas", baseMapLayers: [{ layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:DarkGray:Base", title: "Dark Gray Canvas Base" }, { layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:DarkGray:Labels", title: "Dark Gray Canvas Labels", isReference: true }] }, "arcgis-navigation": { get thumbnailUrl() {
  return n2("esri/images/basemap/streets-navigation.jpg");
}, title: "Navigation", baseMapLayers: [{ layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:Navigation", title: "World Navigation Map" }] }, "arcgis-navigation-night": { title: "Navigation (Dark Mode)", baseMapLayers: [{ layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:NavigationNight", title: "World Navigation Map (Dark Mode)" }] }, "arcgis-streets": { get thumbnailUrl() {
  return n2("esri/images/basemap/streets-vector.jpg");
}, title: "Streets", baseMapLayers: [{ layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:Streets", title: "World Street Map" }] }, "arcgis-streets-night": { get thumbnailUrl() {
  return n2("esri/images/basemap/streets-night.jpg");
}, title: "Streets (Night)", baseMapLayers: [{ layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:StreetsNight", title: "World Street Map (Night)" }] }, "arcgis-streets-relief": { get thumbnailUrl() {
  return n2("esri/images/basemap/streets-relief.jpg");
}, title: "Streets (with Relief)", baseMapLayers: [{ layerType: "ArcGISTiledMapServiceLayer", showLegend: false, title: "World Hillshade", url: "https://ibasemaps-api.arcgis.com/arcgis/rest/services/Elevation/World_Hillshade/MapServer" }, { layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:StreetsRelief:Base", title: "World Street Map (with Relief)" }] }, "arcgis-topographic": { get thumbnailUrl() {
  return n2("esri/images/basemap/topo.jpg");
}, title: "Topographic", baseMapLayers: [{ layerType: "ArcGISTiledMapServiceLayer", showLegend: false, title: "World Hillshade", url: "https://ibasemaps-api.arcgis.com/arcgis/rest/services/Elevation/World_Hillshade/MapServer" }, { layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:Topographic:Base", title: "World Topographic Map" }] }, "arcgis-oceans": { get thumbnailUrl() {
  return n2("esri/images/basemap/oceans.jpg");
}, title: "Oceans", baseMapLayers: [{ layerType: "ArcGISTiledMapServiceLayer", showLegend: false, title: "World Ocean Base", url: "https://ibasemaps-api.arcgis.com/arcgis/rest/services/Ocean/World_Ocean_Base/MapServer" }, { layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:Oceans:Labels", title: "World Ocean Reference", isReference: true }] }, "osm-standard": { title: "OpenStreetMap", baseMapLayers: [{ layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/OSM:Standard", title: "OpenStreetMap" }] }, "osm-standard-relief": { title: "OpenStreetMap (with relief)", baseMapLayers: [{ layerType: "ArcGISTiledMapServiceLayer", showLegend: false, title: "World Hillshade", url: "https://ibasemaps-api.arcgis.com/arcgis/rest/services/Elevation/World_Hillshade/MapServer" }, { styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/OSM:StandardRelief:Base", layerType: "VectorTileLayer", title: "OpenStreetMap Relief Base" }] }, "osm-streets": { title: "OpenStreetMap (Streets)", baseMapLayers: [{ layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/OSM:Streets", title: "OpenStreetMap (Streets)" }] }, "osm-streets-relief": { title: "OpenStreetMap (Streets with relief)", baseMapLayers: [{ layerType: "ArcGISTiledMapServiceLayer", showLegend: false, title: "World Hillshade", url: "https://ibasemaps-api.arcgis.com/arcgis/rest/services/Elevation/World_Hillshade/MapServer" }, { styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/OSM:StreetsRelief:Base", layerType: "VectorTileLayer", title: "OpenStreetMap Relief Base" }] }, "osm-light-gray": { title: "OpenStreetMap (Light Gray Canvas)", baseMapLayers: [{ layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/OSM:LightGray:Base", title: "OSM (Light Gray Base)" }, { layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/OSM:LightGray:Labels", title: "OSM (Light Gray Reference)", isReference: true }] }, "osm-dark-gray": { title: "OpenStreetMap (Dark Gray Canvas)", baseMapLayers: [{ layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/OSM:DarkGray:Base", title: "OSM (Dark Gray Base)" }, { layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/OSM:DarkGray:Labels", title: "OSM (Dark Gray Reference)", isReference: true }] }, "arcgis-terrain": { title: "Terrain with Labels", baseMapLayers: [{ layerType: "ArcGISTiledMapServiceLayer", showLegend: false, title: "World Hillshade", url: "https://ibasemaps-api.arcgis.com/arcgis/rest/services/Elevation/World_Hillshade/MapServer" }, { layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:Terrain:Base", title: "World Terrain Base" }, { layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:Terrain:Detail", title: "World Terrain Reference", isReference: true }] }, "arcgis-community": { title: "Community", baseMapLayers: [{ layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:Community", title: "Community" }] }, "arcgis-charted-territory": { title: "Charted Territory", baseMapLayers: [{ layerType: "ArcGISTiledMapServiceLayer", showLegend: false, title: "World Hillshade", url: "https://ibasemaps-api.arcgis.com/arcgis/rest/services/Elevation/World_Hillshade/MapServer" }, { layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:ChartedTerritory:Base", title: "Charted Territory" }] }, "arcgis-colored-pencil": { title: "Colored Pencil", baseMapLayers: [{ layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:ColoredPencil", title: "Colored Pencil" }] }, "arcgis-nova": { title: "Nova", baseMapLayers: [{ layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:Nova", title: "Nova" }] }, "arcgis-modern-antique": { title: "Modern Antique", baseMapLayers: [{ layerType: "ArcGISTiledMapServiceLayer", showLegend: false, title: "World Hillshade", url: "https://ibasemaps-api.arcgis.com/arcgis/rest/services/Elevation/World_Hillshade/MapServer" }, { layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:ModernAntique:Base", title: "Modern Antique" }] }, "arcgis-midcentury": { title: "Mid-Century", baseMapLayers: [{ layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:Midcentury", title: "Mid-Century" }] }, "arcgis-newspaper": { title: "Newspaper", baseMapLayers: [{ layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:Newspaper", title: "Newspaper" }] }, "arcgis-hillshade-light": { title: "Hillshade", baseMapLayers: [{ layerType: "ArcGISTiledMapServiceLayer", showLegend: false, title: "World Hillshade", url: "https://ibasemaps-api.arcgis.com/arcgis/rest/services/Elevation/World_Hillshade/MapServer" }] }, "arcgis-hillshade-dark": { title: "Hillshade (Dark)", baseMapLayers: [{ layerType: "ArcGISTiledMapServiceLayer", showLegend: false, title: "World Hillshade (Dark)", url: "https://ibasemaps-api.arcgis.com/arcgis/rest/services/Elevation/World_Hillshade_Dark/MapServer" }] }, "arcgis-human-geography": { title: "Human Geography", baseMapLayers: [{ layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:HumanGeography:Base", title: "Human Geography Base" }, { layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:HumanGeography:Detail", title: "Human Geography Detail", isReference: true }, { layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:HumanGeography:Label", title: "Human Geography Label", isReference: true }] }, "arcgis-human-geography-dark": { title: "Human Geography (Dark)", baseMapLayers: [{ layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:HumanGeographyDark:Base", title: "Human Geography Dark Base" }, { layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:HumanGeographyDark:Detail", title: "Human Geography Dark Detail", isReference: true }, { layerType: "VectorTileLayer", styleUrl: "https://basemaps-api.arcgis.com/arcgis/rest/services/styles/ArcGIS:HumanGeographyDark:Label", title: "Human Geography Dark Label", isReference: true }] } };

// node_modules/@arcgis/core/support/BasemapStyle.js
var p = /* @__PURE__ */ new Set(["ar", "bs", "ca", "hr", "cs", "da", "nl", "en", "et", "fi", "fr", "de", "el", "he", "hu", "id", "it", "ja", "ko", "lv", "lt", "nb", "pl", "ro", "ru", "sr", "es", "sv", "th", "tr", "uk", "vi"]);
var i = class extends b {
  constructor(r3) {
    super(r3), this.apiKey = null, this.id = null, this.language = null, this.places = null, this.serviceUrl = "https://basemapstyles-api.arcgis.com/arcgis/rest/services/styles/v2/webmaps", this.worldview = null;
  }
  getLanguageParamValue() {
    if (this.language) return this.language;
    const r3 = c().toLowerCase();
    switch (r3) {
      case "pt-br":
        return "pt-BR";
      case "pt-pt":
        return "pt-PT";
      case "zh-cn":
        return "zh-CN";
      case "zh-hk":
        return "zh-HK";
      case "zh-tw":
        return "zh-TW";
    }
    const e = l(r3);
    return "pt" === e ? "pt-BR" : e && p.has(e) ? e : "global";
  }
};
r([m()], i.prototype, "apiKey", void 0), r([m()], i.prototype, "id", void 0), r([m()], i.prototype, "language", void 0), r([m()], i.prototype, "places", void 0), r([m()], i.prototype, "serviceUrl", void 0), r([m()], i.prototype, "worldview", void 0), i = r([a2("esri.support.BasemapStyle")], i);
var c2 = i;

// node_modules/@arcgis/core/Basemap.js
var _;
var v = 0;
var x = _ = class extends u2(m2) {
  constructor(e) {
    super(e), this.id = null, this.portalItem = null, this.spatialReference = null, this.style = null, this.thumbnailUrl = null, this.title = "Basemap", this.id = Date.now().toString(16) + "-basemap-" + v++, this.baseLayers = new V(), this.referenceLayers = new V();
    const r3 = (e2) => {
      e2.parent && e2.parent !== this && "remove" in e2.parent && e2.parent.remove(e2), e2.parent = this, "elevation" === e2.type && n.getLogger(this).error(`Layer '${e2.title}, id:${e2.id}' of type '${e2.type}' is not supported as a basemap layer and will therefore be ignored.`);
    }, s3 = (e2) => {
      e2.parent = null;
    };
    this.addHandles([this.baseLayers.on("after-add", (e2) => r3(e2.item)), this.referenceLayers.on("after-add", (e2) => r3(e2.item)), this.baseLayers.on("after-remove", (e2) => s3(e2.item)), this.referenceLayers.on("after-remove", (e2) => s3(e2.item))]);
  }
  initialize() {
    this.when().catch((e) => {
      n.getLogger(this).error("#load()", `Failed to load basemap (title: '${this.title}', id: '${this.id}')`, e);
    }), this.resourceInfo && this.read(this.resourceInfo.data, this.resourceInfo.context);
  }
  destroy() {
    const e = this.baseLayers.toArray();
    for (const t2 of e) t2.destroy();
    const r3 = this.referenceLayers.toArray();
    for (const t2 of r3) t2.destroy();
    this.baseLayers.destroy(), this.referenceLayers.destroy(), this.portalItem = u(this.portalItem);
  }
  normalizeCtorArgs(e) {
    return e && "resourceInfo" in e && (this._set("resourceInfo", e.resourceInfo), delete (e = { ...e }).resourceInfo), e;
  }
  set baseLayers(e) {
    this._set("baseLayers", n3(e, this._get("baseLayers")));
  }
  _writeBaseLayers(e, r3, t2) {
    const s3 = [];
    e ? (t2 = { ...t2, layerContainerType: "basemap" }, this.baseLayers.forEach((e2) => {
      const r4 = f(e2, t2.webmap ? t2.webmap.getLayerJSONFromResourceInfo(e2) : null, t2);
      null != r4 && s3.push(r4);
    }), this.referenceLayers.forEach((e2) => {
      const r4 = f(e2, t2.webmap ? t2.webmap.getLayerJSONFromResourceInfo(e2) : null, t2);
      null != r4 && ("scene" !== e2.type && (r4.isReference = true), s3.push(r4));
    }), r3.baseMapLayers = s3) : r3.baseMapLayers = s3;
  }
  set referenceLayers(e) {
    this._set("referenceLayers", n3(e, this._get("referenceLayers")));
  }
  writeTitle(e, r3) {
    r3.title = e || "Basemap";
  }
  load(e) {
    return this.addResolvingPromise(this._loadFromSource(e)), Promise.resolve(this);
  }
  loadAll() {
    return t(this, (e) => {
      e(this.baseLayers, this.referenceLayers);
    });
  }
  clone() {
    const e = { id: this.id, title: this.title, portalItem: this.portalItem, baseLayers: this.baseLayers.map((e2) => y(e2) ? e2.clone() : e2), referenceLayers: this.referenceLayers.map((e2) => y(e2) ? e2.clone() : e2) };
    return this.loaded && (e.loadStatus = "loaded"), new _({ resourceInfo: this.resourceInfo }).set(e);
  }
  read(e, r3) {
    this.resourceInfo || this._set("resourceInfo", { data: e, context: r3 }), super.read(e, r3);
  }
  write(e, r3) {
    var _a;
    return e = e || {}, (r3 == null ? void 0 : r3.origin) || (r3 = { origin: "web-map", ...r3 }), super.write(e, r3), !this.loaded && ((_a = this.resourceInfo) == null ? void 0 : _a.data.baseMapLayers) && (e.baseMapLayers = this.resourceInfo.data.baseMapLayers.map((e2) => {
      const r4 = a(e2);
      return r4.url && pt(r4.url) && (r4.url = `https:${r4.url}`), r4.templateUrl && pt(r4.templateUrl) && (r4.templateUrl = `https:${r4.templateUrl}`), r4;
    })), e;
  }
  async _loadFromSource(e) {
    const { resourceInfo: r3, portalItem: t2, style: s3 } = this;
    s(e);
    const a4 = [];
    if (r3) {
      const t3 = r3.context ? r3.context.url : null;
      if (a4.push(this._loadLayersFromJSON(r3.data, t3, e)), r3.data.id && !r3.data.title) {
        const e2 = r3.data.id;
        a4.push(a3(e2).then((e3) => {
          e3 && this.read({ title: e3 }, r3.context);
        }));
      }
    } else t2 ? a4.push(this._loadFromItem(t2, e)) : s3 && a4.push(this._loadFromStylesService(s3, e));
    await Promise.all(a4);
  }
  async _loadLayersFromJSON(e, r3, t2) {
    var _a, _b;
    const s3 = (_a = this.resourceInfo) == null ? void 0 : _a.context, a4 = ((_b = this.portalItem) == null ? void 0 : _b.portal) || (s3 == null ? void 0 : s3.portal) || null, o = U2[(s3 == null ? void 0 : s3.origin) || ""] ?? "web-map", { populateOperationalLayers: i2 } = await import("./layersCreator-OQ2G4CDH.js"), n4 = [];
    if (s(t2), e.baseMapLayers && Array.isArray(e.baseMapLayers)) {
      const t3 = { context: { ...s3, origin: o, url: r3, portal: a4, layerContainerType: "basemap" }, defaultLayerType: "DefaultTileLayer" }, l2 = (e2) => "web-scene" === o && "ArcGISSceneServiceLayer" === e2.layerType || e2.isReference, p2 = i2(this.baseLayers, e.baseMapLayers.filter((e2) => !l2(e2)), t3);
      n4.push(p2);
      const c3 = i2(this.referenceLayers, e.baseMapLayers.filter(l2), t3);
      n4.push(c3);
    }
    await Promise.allSettled(n4);
  }
  async _loadFromItem(e, r3) {
    const t2 = await e.load(r3), s3 = await t2.fetchData("json", r3), a4 = I(e.itemUrl ?? "");
    return this._set("resourceInfo", { data: s3.baseMap ?? {}, context: { origin: M[e.type || ""] ?? "web-map", portal: e.portal || b2.getDefault(), url: a4 } }), this.read(this.resourceInfo.data, this.resourceInfo.context), this.read({ spatialReference: s3.spatialReference }, this.resourceInfo.context), this.read({ title: e.title, thumbnailUrl: e.thumbnailUrl }, { origin: "portal-item", portal: e.portal || b2.getDefault(), url: a4 }), this._loadLayersFromJSON(this.resourceInfo.data, a4, r3);
  }
  async _loadFromStylesService(e, t2) {
    const s3 = `${e.serviceUrl}/${e.id}`, a4 = (await U(s3, { query: { language: e.getLanguageParamValue(), places: e.places, worldview: e.worldview, token: e.apiKey }, signal: t2 == null ? void 0 : t2.signal })).data, o = I(s3);
    if (this._set("resourceInfo", { data: a4.baseMap ?? {}, context: { origin: "web-map", url: o } }), this.read(this.resourceInfo.data, this.resourceInfo.context), this.read({ spatialReference: a4.spatialReference }, this.resourceInfo.context), await this._loadLayersFromJSON(this.resourceInfo.data, o, t2), e.apiKey) for (const r3 of [...this.baseLayers, ...this.referenceLayers]) "apiKey" in r3 && (r3.apiKey = e.apiKey);
  }
  static fromId(e) {
    const r3 = s2[e];
    return r3 ? r3.itemId ? new _({ portalItem: { id: r3.itemId, portal: { url: "https://www.arcgis.com" } } }) : _.fromJSON(r3, { origin: r3.is3d ? "web-scene" : "web-map" }) : null;
  }
};
r([m({ json: { write: { ignoreOrigin: true, target: "baseMapLayers", writer(e, r3, t2, s3) {
  this._writeBaseLayers(e, r3, s3);
} }, origins: { "web-scene": { write: { ignoreOrigin: true, target: { baseMapLayers: { type: V } }, writer(e, r3, t2, s3) {
  this._writeBaseLayers(e, r3, s3);
} } } } } })], x.prototype, "baseLayers", null), r([m({ type: String, json: { origins: { "web-scene": { write: true } } } })], x.prototype, "id", void 0), r([m({ type: S })], x.prototype, "portalItem", void 0), r([m()], x.prototype, "referenceLayers", null), r([m({ readOnly: true })], x.prototype, "resourceInfo", void 0), r([m({ type: g })], x.prototype, "spatialReference", void 0), r([m({ type: c2 })], x.prototype, "style", void 0), r([m()], x.prototype, "thumbnailUrl", void 0), r([m({ type: String, json: { origins: { "web-scene": { write: { isRequired: true } } } } })], x.prototype, "title", void 0), r([r2("title")], x.prototype, "writeTitle", null), x = _ = r([a2("esri.Basemap")], x);
var M = { "Web Scene": "web-scene", "Web Map": "web-map", "Link Chart": "link-chart" };
var U2 = { "web-scene": "web-scene", "web-map": "web-map", "link-chart": "link-chart" };
var F = x;

export {
  s2 as s,
  F
};
//# sourceMappingURL=chunk-23TJP3F6.js.map
