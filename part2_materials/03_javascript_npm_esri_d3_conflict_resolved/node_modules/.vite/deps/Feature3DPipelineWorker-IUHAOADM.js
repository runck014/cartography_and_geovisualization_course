import "./chunk-P6J6V7QN.js";
import {
  o as o10
} from "./chunk-CKPBZSTT.js";
import {
  e as e9,
  i as i3,
  o as o9,
  s as s12
} from "./chunk-7P5DKDVJ.js";
import {
  A as A3,
  B as B2,
  B2 as B3,
  C as C4,
  N as N5,
  O as O4,
  R as R2,
  S,
  T as T3,
  a as a6,
  b as b8,
  d as d8,
  i as i5,
  i2 as i6,
  o as o15,
  o2 as o16,
  p as p7
} from "./chunk-SHP52NEA.js";
import "./chunk-AZPOFFL5.js";
import "./chunk-4LE34CVH.js";
import {
  t as t9
} from "./chunk-MNEG3JYG.js";
import {
  E as E9,
  H as H4,
  p as p8
} from "./chunk-JY53O37X.js";
import "./chunk-X5DEX4NK.js";
import "./chunk-ZDN6M7KF.js";
import {
  d as d6,
  d2 as d7,
  h2 as h5,
  n as n16,
  n2 as n17,
  o2 as o14,
  t as t11,
  u2 as u11
} from "./chunk-N6LRJJD6.js";
import {
  t as t10
} from "./chunk-5CHZW6XY.js";
import {
  B,
  g as g5,
  o as o12,
  p as p5
} from "./chunk-BOYBHWD5.js";
import {
  O as O3,
  W,
  d as d5,
  i as i4,
  m as m4,
  n as n18,
  o as o11,
  o2 as o13,
  p as p4,
  p2 as p6,
  r as r13,
  t as t8
} from "./chunk-2NNPNUGA.js";
import {
  J,
  ks
} from "./chunk-HYP7W2PT.js";
import "./chunk-K5MOSV47.js";
import "./chunk-SYHMDVRI.js";
import "./chunk-JW4HK5OB.js";
import "./chunk-4TH6XK6A.js";
import "./chunk-FATVAQSJ.js";
import {
  H as H3,
  L as L2,
  N as N4,
  Y
} from "./chunk-XNEP7E2E.js";
import "./chunk-ECH6FTFX.js";
import {
  n2 as n14
} from "./chunk-LVKQ4JXF.js";
import {
  o as o8
} from "./chunk-DLJHW32W.js";
import {
  e as e8
} from "./chunk-CQ5ECUDF.js";
import "./chunk-IWXHREP5.js";
import "./chunk-W3O5CFJ6.js";
import {
  a as a5,
  n as n15
} from "./chunk-HRP7POO2.js";
import "./chunk-X2UYZD2B.js";
import "./chunk-JQJITHTO.js";
import "./chunk-6LGJYARD.js";
import {
  E as E8,
  T as T2,
  U,
  V as V3,
  b as b7,
  ft,
  v as v2
} from "./chunk-XUTNI6FK.js";
import {
  E as E6
} from "./chunk-U6IFI7EK.js";
import "./chunk-N42IF4WX.js";
import {
  n as n13,
  r as r12
} from "./chunk-JMY2H33H.js";
import {
  t as t7
} from "./chunk-NQRBRDNC.js";
import {
  O as O2,
  e as e7
} from "./chunk-MA2KDKKH.js";
import {
  c as c8,
  f as f3,
  g as g4,
  m as m3,
  u as u10,
  x as x3
} from "./chunk-7Z4L4IHM.js";
import "./chunk-XLSAKOM6.js";
import "./chunk-L6HI4BLZ.js";
import {
  c as c6
} from "./chunk-WEHSG4M3.js";
import "./chunk-CKKQRCEC.js";
import "./chunk-2HAJDS7Q.js";
import {
  a as a4
} from "./chunk-23GTDA23.js";
import {
  C as C3
} from "./chunk-E6A2OXXU.js";
import {
  e as e6,
  o as o6
} from "./chunk-5FROWG6B.js";
import {
  e as e5
} from "./chunk-NW7VXBHZ.js";
import {
  d as d4
} from "./chunk-X3DAAXDC.js";
import "./chunk-A3GASGJZ.js";
import {
  b as b6,
  h as h4
} from "./chunk-RH3RAT7T.js";
import {
  n as n12
} from "./chunk-556C3V64.js";
import {
  V as V2
} from "./chunk-NW6OWOSJ.js";
import {
  n as n9
} from "./chunk-EVK6ZSVY.js";
import "./chunk-MSUBZ5BW.js";
import "./chunk-YEDSTDY4.js";
import {
  E as E2,
  h as h2
} from "./chunk-P4TUSPKE.js";
import "./chunk-OMMWWGIU.js";
import "./chunk-JPQIRBN6.js";
import "./chunk-CH3XVKUV.js";
import {
  s as s7
} from "./chunk-KI5F6KDS.js";
import "./chunk-HACIIBEF.js";
import {
  t as t3
} from "./chunk-7PGC4HSG.js";
import {
  H as H2,
  t as t5
} from "./chunk-OQSNMOAS.js";
import {
  s as s9
} from "./chunk-C2RS46RL.js";
import "./chunk-AHZHHHCW.js";
import {
  e as e4
} from "./chunk-L7OHH2HW.js";
import "./chunk-URK2P56F.js";
import {
  l as l4,
  t as t4
} from "./chunk-2KYWMOKS.js";
import {
  T,
  b as b5,
  c as c5,
  d as d3,
  h as h3,
  i as i2,
  l as l3,
  u as u8,
  x as x2
} from "./chunk-GENAMNI4.js";
import "./chunk-2BVPGUC2.js";
import "./chunk-BN24XFSK.js";
import "./chunk-547Z5YIS.js";
import "./chunk-4WB72ND2.js";
import "./chunk-LIUBAYCM.js";
import "./chunk-BLYF375M.js";
import {
  o as o7
} from "./chunk-CTU2XDPA.js";
import "./chunk-CVI4GL5M.js";
import "./chunk-CGSFKZP2.js";
import "./chunk-WPERPIJF.js";
import {
  Z
} from "./chunk-RXJCBLN2.js";
import "./chunk-EFVIMN4N.js";
import "./chunk-XKMN3LJN.js";
import {
  u as u5
} from "./chunk-2U5JYYSG.js";
import {
  N as N2,
  e as e3,
  n as n7,
  r as r8,
  u as u6
} from "./chunk-AFULL6KA.js";
import {
  E,
  L,
  a as a3,
  m as m2,
  x,
  z as z2
} from "./chunk-URFLFG2R.js";
import {
  s as s11
} from "./chunk-YNC2IEH2.js";
import {
  E as E7,
  _ as _2
} from "./chunk-QJXYURT2.js";
import {
  l as l5
} from "./chunk-BOSRS73G.js";
import {
  n as n11,
  s as s10,
  u as u9
} from "./chunk-D6FJTDNK.js";
import {
  C as C2,
  g as g2
} from "./chunk-T6QS4ZNU.js";
import "./chunk-D3FSVA7H.js";
import "./chunk-6B4OMNPA.js";
import "./chunk-3GQ4PJDJ.js";
import "./chunk-QEJMJI2R.js";
import {
  D,
  E as E5,
  F as F3,
  O
} from "./chunk-KV3S4QI2.js";
import {
  n as n10,
  r as r11
} from "./chunk-ECMDQ4LS.js";
import {
  E as E3,
  I,
  o as o4,
  r as r9
} from "./chunk-LP6TMAPE.js";
import {
  A as A2,
  E as E4,
  H,
  K,
  N as N3,
  P as P2,
  R,
  X as X2,
  Z as Z2,
  _,
  c as c4,
  g as g3,
  o as o5,
  p as p3,
  r as r10,
  s as s8,
  u as u7
} from "./chunk-RENLZYKC.js";
import "./chunk-6Q7GN2CW.js";
import "./chunk-MYUZZ3A3.js";
import "./chunk-2IGXKE5P.js";
import "./chunk-JFI4ESYU.js";
import {
  c as c7,
  t as t6
} from "./chunk-4X2UADDH.js";
import "./chunk-ZICJB3ML.js";
import "./chunk-AVBIV2K3.js";
import "./chunk-4NJWIUZG.js";
import {
  b as b3
} from "./chunk-F3NUC2RS.js";
import "./chunk-LE3YW4Y3.js";
import "./chunk-TA32QX7Z.js";
import "./chunk-NYLL2YZF.js";
import "./chunk-NYLBGE62.js";
import "./chunk-LPNAPHOF.js";
import "./chunk-QCBTLG25.js";
import "./chunk-ECCHNTW6.js";
import "./chunk-WWNVF22O.js";
import "./chunk-SUZN3TAH.js";
import {
  F as F2,
  a2,
  b as b4,
  l as l2,
  p as p2,
  q,
  u as u4
} from "./chunk-K5RYAJV4.js";
import "./chunk-XGYM66XX.js";
import "./chunk-JOOGZSAP.js";
import {
  n as n8
} from "./chunk-J6GHQIZ2.js";
import {
  P,
  d as d2
} from "./chunk-W6D3ECTZ.js";
import "./chunk-PJNOPBRY.js";
import "./chunk-23TJP3F6.js";
import "./chunk-EMVTPRQK.js";
import "./chunk-EDGKOPSL.js";
import "./chunk-QXDQJEIU.js";
import "./chunk-MGMVRMXQ.js";
import "./chunk-SEUZ3J6J.js";
import "./chunk-BWTCR2DR.js";
import "./chunk-SMOTPOZ7.js";
import {
  f,
  y
} from "./chunk-YVSEBNS4.js";
import "./chunk-Y2XCZQML.js";
import "./chunk-EZXLBRAS.js";
import "./chunk-7FJIOZSE.js";
import {
  A,
  C,
  X,
  c as c3,
  f as f2,
  h,
  n as n6,
  o as o3,
  r as r7,
  s as s6
} from "./chunk-GNWAZIVF.js";
import "./chunk-2PK57UYA.js";
import "./chunk-3L2AYCZY.js";
import "./chunk-TSVUPARM.js";
import "./chunk-VUJERGGB.js";
import "./chunk-NTI2OCVI.js";
import {
  c as c2,
  p,
  u as u2
} from "./chunk-ZCHZRNUG.js";
import {
  n as n3
} from "./chunk-G6REFQRQ.js";
import "./chunk-2TEGRXBS.js";
import {
  N,
  n as n5,
  r as r6,
  s as s5,
  u as u3
} from "./chunk-6Y2LNRVP.js";
import "./chunk-JVEZN6WF.js";
import "./chunk-E2RPCJOE.js";
import "./chunk-NHJGPXZH.js";
import "./chunk-JS7R723S.js";
import "./chunk-RCLWOQNR.js";
import {
  o
} from "./chunk-DOTSJZHK.js";
import {
  d
} from "./chunk-UCO66LNK.js";
import "./chunk-5YRJ4YFE.js";
import "./chunk-RD2BBQYN.js";
import "./chunk-SEG3PRUR.js";
import "./chunk-B6VE32RA.js";
import "./chunk-AIYFWM42.js";
import "./chunk-2M53HYNY.js";
import {
  M,
  n as n4,
  o as o2,
  r as r5,
  s as s4
} from "./chunk-6YWQXXBX.js";
import "./chunk-Q7TEBZSN.js";
import "./chunk-FG3XOAFD.js";
import "./chunk-GN5RE63N.js";
import {
  g
} from "./chunk-2WXAPZBK.js";
import {
  V,
  s4 as s3,
  z
} from "./chunk-E2I7HYXQ.js";
import "./chunk-P5H5PJSC.js";
import "./chunk-WTNHDCCU.js";
import "./chunk-7O7KFKCG.js";
import "./chunk-TVTRNT6K.js";
import "./chunk-CRH37WFF.js";
import "./chunk-YFGQMO6E.js";
import "./chunk-HAF6QJ32.js";
import {
  b2,
  m,
  r4
} from "./chunk-H77COA2S.js";
import {
  a4 as a,
  n as n2
} from "./chunk-7LJCT7EA.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import {
  c2 as c,
  e as e2,
  s as s2
} from "./chunk-GRW2QIBT.js";
import {
  r as r3,
  t as t2,
  u
} from "./chunk-R2PAF6JT.js";
import "./chunk-6WE7SNQY.js";
import {
  l
} from "./chunk-L6CCOEVE.js";
import {
  n2 as n,
  s2 as s
} from "./chunk-PKLD5YJF.js";
import {
  F,
  b,
  e,
  has,
  i,
  r as r2,
  t2 as t,
  v
} from "./chunk-XKQWTZMW.js";
import "./chunk-A4OFG7JM.js";

// node_modules/@arcgis/core/views/3d/layers/graphics/pipeline/Tile3DManager.js
var a7 = class extends b2 {
  constructor(e15) {
    super(e15), this._removing = 0, this._tiles = new s11();
  }
  destroy() {
    for (const e15 of this._tiles.values()) e15.remove();
    this._tiles.clear();
  }
  get updating() {
    if (this._removing > 0) return true;
    for (const e15 of this._tiles.values()) if (!e15.finished) return true;
    return false;
  }
  async onTileTreeChange(e15) {
    const { added: o28, removed: s27 } = e15, t28 = this._tiles, i16 = [];
    for (const r24 of s27) {
      const e16 = t28.get(r24);
      null != e16 && (e16.abort(), t28.delete(r24), i16.push({ tileId: r24 }));
    }
    for (const c18 of o28) t28.has(c18.id) || t28.set(c18.id, d((e16) => this._addTile(c18, e16)));
    await this._removeTiles(i16);
  }
  async _addTile(e15, o28) {
    const r24 = await this.addTile(e15, o28);
    return s2(o28), r24;
  }
  async _removeTiles(e15) {
    this._removing++, await this.removeTiles(e15), this._removing--;
  }
};
r([m()], a7.prototype, "updating", null), r([m({ constructOnly: true })], a7.prototype, "addTile", void 0), r([m({ constructOnly: true })], a7.prototype, "removeTiles", void 0), r([m()], a7.prototype, "_removing", void 0), a7 = r([a("esri.views.3d.layers.graphics.pipeline.Tile3DManager")], a7);

// node_modules/@arcgis/core/views/3d/layers/graphics/pipeline/featureSet/TiledFeatureStore.js
var n19 = class {
  constructor(e15, t28) {
    this._index = e15, this._view = t28;
  }
  getObjectId() {
    return this._view.getObjectId(this._index);
  }
  getAttribute(e15) {
    return this._view.getAttribute(this._index, e15);
  }
  getAttributeAsTimestamp(e15) {
    return this._view.getAttributeAsTimestamp(this._index, e15);
  }
  getAttributes() {
    return this._view.getAttributes(this._index);
  }
  getOptimizedGeometry() {
    return this._view.getOptimizedGeometry(this._index);
  }
  getCentroid(e15) {
    return this._view.getCentroid(this._index, e15);
  }
  getBounds() {
    return this._view.getBounds(this._index);
  }
  getBoundingBox() {
    return this._view.getBoundingBox(this._index);
  }
  cloneWithGeometry(e15) {
    return new o17(this._index, this._view, e15);
  }
};
var o17 = class extends n19 {
  constructor(e15, t28, i16) {
    super(e15, t28), this._geometryOverride = i16;
  }
  getOptimizedGeometry() {
    return this._geometryOverride;
  }
  getCentroid(e15) {
    return n9(new s7(), this._geometryOverride, e15.hasZ, e15.hasM);
  }
};
var d9 = class {
  constructor() {
    this._storedTiles = /* @__PURE__ */ new Map(), this._pageBounds = /* @__PURE__ */ new Map(), this.events = new o(), this.featureAdapter = a8.shared;
  }
  addTile(e15) {
    this._storedTiles.set(e15.descriptor.id, e15);
    for (const t28 of e15.pages) this._addPage(t28);
  }
  removeTile(e15) {
    const t28 = this._storedTiles, i16 = t28.get(e15);
    if (null != i16) {
      t28.delete(e15);
      for (const e16 of i16.pages) this._removePage(e16);
    }
  }
  _addPage(e15) {
    const { featureCount: i16 } = e15;
    if (0 === i16) return;
    const r24 = new h2(9, (t28) => e15.getBounds(t28)), s27 = new Array();
    for (let t28 = 0; t28 < i16; ++t28) s27[t28] = t28;
    r24.load(s27), this._pageBounds.set(e15, r24), this.events.emit("changed");
  }
  _removePage(e15) {
    this._pageBounds.delete(e15), this.events.emit("changed");
  }
  clear() {
    this._storedTiles.clear(), this._pageBounds.clear(), this.events.emit("changed");
  }
  forEach(e15) {
    for (const [t28, i16] of this._pageBounds) i16.all((i17) => e15(new n19(i17, t28)));
  }
  forEachInBounds(e15, t28) {
    h6.minX = e15[0], h6.minY = e15[1], h6.maxX = e15[2], h6.maxY = e15[3];
    for (const [i16, r24] of this._pageBounds) r24.search(h6, (e16) => t28(new n19(e16, i16)));
  }
  forEachBounds(e15, t28) {
    for (const i16 of e15) t28(i16.getBoundingBox());
  }
  getFullExtent(e15) {
    let t28 = 1 / 0, i16 = 1 / 0, r24 = -1 / 0, s27 = -1 / 0;
    for (const n30 of this._pageBounds.values()) {
      const { minX: e16, minY: o28, maxX: d14, maxY: a21 } = n30.toJSON();
      t28 = Math.min(t28, e16), i16 = Math.min(i16, o28), r24 = Math.min(r24, d14), s27 = Math.min(s27, a21);
    }
    return { xmin: t28, ymin: i16, xmax: r24, ymax: s27, spatialReference: e15 };
  }
};
var a8 = class {
  getObjectId(e15) {
    return e15.getObjectId();
  }
  getAttribute(e15, t28) {
    return e15.getAttribute(t28);
  }
  getAttributeAsTimestamp(e15, t28) {
    return e15.getAttributeAsTimestamp(t28);
  }
  getAttributes(e15) {
    return e15.getAttributes();
  }
  getGeometry(e15) {
    return e15.getOptimizedGeometry();
  }
  getCentroid(e15, t28) {
    return e15.getCentroid(t28);
  }
  cloneWithGeometry(e15, t28) {
    return e15.cloneWithGeometry(t28);
  }
};
a8.shared = new a8();
var h6 = new E2();

// node_modules/@arcgis/core/views/3d/layers/graphics/pipeline/Tile.js
var s13 = class {
  constructor(s27, t28) {
    this.descriptor = s27, this.pages = t28;
  }
};

// node_modules/@arcgis/core/views/3d/layers/graphics/pipeline/featureSet/PBFPointFeatureSetView.js
var u12 = class {
  constructor(e15) {
    const r24 = new n12(new Uint8Array(e15), new DataView(e15));
    this._reader = r24, this._index = g6(r24);
  }
  get featureCount() {
    return this._index.featureIndices.length;
  }
  get exceededTransferLimit() {
    return this._index.exceededTransferLimit;
  }
  getObjectId(e15) {
    return this.getAttribute(e15, this._index.objectIdFieldName);
  }
  getAttribute(e15, t28) {
    var _a;
    const { _index: { fieldsIndex: r24, attributeIndices: s27 } } = this, n30 = (_a = r24.get(t28)) == null ? void 0 : _a.index;
    if (null == n30) return;
    const o28 = s27[e15 * r24.fields.length + n30], i16 = this._reader;
    return i16.move(o28), m5(i16);
  }
  getAttributeAsTimestamp(e15, t28) {
    const r24 = this.getAttribute(e15, t28);
    return "string" == typeof r24 ? new Date(r24).getTime() : "number" == typeof r24 || null == r24 ? r24 : null;
  }
  getAttributes(e15) {
    const { _index: { fieldsIndex: t28, attributeIndices: r24 } } = this, s27 = e15 * t28.fields.length, n30 = this._reader, o28 = {};
    for (const i16 of t28.fields) {
      const e16 = r24[s27 + i16.index];
      n30.move(e16), o28[i16.name] = m5(n30);
    }
    return o28;
  }
  getCoordinates(e15, t28, r24 = 0) {
    const s27 = this._reader, { transform: n30, featureIndices: o28 } = this._index, { scale: i16, translate: a21 } = n30;
    s27.move(o28[e15]), this._readCoordinates(i16, a21, t28, r24);
  }
  getOptimizedGeometry(e15) {
    const t28 = n5();
    return this.getCoordinates(e15, t28), new s7([], t28);
  }
  getCentroid(e15, { hasZ: t28, hasM: r24 }) {
    this.getCoordinates(e15, h7);
    const [s27, n30, o28] = h7, a21 = [s27, n30];
    return t28 && (a21[3] = o28), r24 && (a21[t28 ? 4 : 3] = 0), new s7([], a21);
  }
  getBounds(e15) {
    this.getCoordinates(e15, h7);
    const [t28, r24] = h7, n30 = new E2();
    return n30.minX = t28, n30.minY = r24, n30.maxX = t28, n30.maxY = r24, n30;
  }
  getBoundingBox(e15) {
    this.getCoordinates(e15, h7);
    const [t28, r24, s27] = h7;
    return a2(t28, r24, s27, t28, r24, s27);
  }
  readAllObjectIds(e15, t28 = 0) {
    const r24 = this._reader, { _index: s27, featureCount: n30 } = this, { objectIdFieldName: o28, attributeIndices: i16, fieldsIndex: a21 } = s27, c18 = a21.get(o28).index, d14 = a21.fields.length;
    for (let u19 = 0; u19 < n30; ++u19) {
      const s28 = i16[u19 * d14 + c18];
      r24.move(s28), e15[t28++] = m5(r24);
    }
    return t28;
  }
  readAllCoordinates(e15, t28 = 0) {
    const r24 = this._reader, { transform: s27, featureIndices: n30 } = this._index, { scale: o28, translate: i16 } = s27;
    for (const a21 of n30) r24.move(a21), t28 = this._readCoordinates(o28, i16, e15, t28);
    return t28;
  }
  _readCoordinates([e15, t28, r24], [s27, n30, o28], i16, a21) {
    const c18 = 2, d14 = 3, u19 = this._reader, g9 = u19.getLength(), f10 = u19.pos() + g9;
    for (; u19.pos() < f10 && u19.next(); ) switch (u19.tag()) {
      case c18: {
        const c19 = u19.getLength(), g10 = u19.pos() + c19;
        for (; u19.pos() < g10 && u19.next(); ) if (u19.tag() === d14) u19.getUInt32(), i16[a21++] = s27 + e15 * u19.getSInt64(), i16[a21++] = n30 + t28 * u19.getSInt64(), i16[a21++] = o28 + r24 * u19.getSInt64();
        else u19.skip();
        break;
      }
      default:
        u19.skip();
    }
    return a21;
  }
};
function g6(e15) {
  const t28 = 2;
  for (; e15.next(); ) {
    if (e15.tag() === t28) return f4(e15.getMessage());
    e15.skip();
  }
  p9();
}
function f4(e15) {
  const t28 = 1;
  for (; e15.next(); ) {
    if (e15.tag() === t28) return l6(e15.getMessage());
    e15.skip();
  }
  p9();
}
function l6(e15) {
  const t28 = 9, r24 = 12, s27 = 13, n30 = 15, i16 = 7, u19 = 0, g9 = 10, f10 = 1, l12 = 1;
  let m9, h15, x9 = false, b15 = false, I4 = 0;
  const w3 = new Array(), _7 = new Array(), k4 = new Array();
  for (; e15.next(); ) switch (e15.tag()) {
    case l12:
      h15 = e15.getString();
      break;
    case i16:
      e15.getEnum() !== u19 && p9();
      break;
    case t28:
      x9 = e15.getBool() ?? false;
      break;
    case r24:
      m9 = u5(e15.processMessage(h4));
      break;
    case s27: {
      const t29 = e15.processMessage(b6);
      t29.index = I4++, w3.push(t29);
      break;
    }
    case n30: {
      _7.push(e15.pos());
      const t29 = e15.getUInt32(), r25 = e15.pos() + t29;
      for (; e15.pos() < r25 && e15.next(); ) if (e15.tag() === f10) k4.push(e15.pos()), e15.skip();
      else e15.skip();
      break;
    }
    case g9:
      b15 = e15.getBool() ?? false;
      break;
    default:
      e15.skip();
  }
  const j4 = new Z(w3);
  return null != m9 && b15 && null != h15 && j4.has(h15) || p9(), { transform: m9, exceededTransferLimit: x9, fieldsIndex: j4, objectIdFieldName: h15, featureIndices: _7, attributeIndices: k4 };
}
function p9() {
  const t28 = new s("pbf-parsing-failed", "Error while parsing PBF", new Error());
  throw console.error(t28), t28;
}
function m5(e15) {
  const t28 = 1, r24 = 2, s27 = 3, n30 = 4, o28 = 5, i16 = 6, a21 = 7, c18 = 8, d14 = 9, u19 = e15.getLength(), g9 = e15.pos() + u19;
  for (; e15.pos() < g9 && e15.next(); ) switch (e15.tag()) {
    case t28:
      return e15.getString();
    case r24:
      return e15.getFloat();
    case s27:
      return e15.getDouble();
    case n30:
      return e15.getSInt32();
    case o28:
      return e15.getUInt32();
    case i16:
      return e15.getInt64();
    case a21:
      return e15.getUInt64();
    case c18:
      return e15.getSInt64();
    case d14:
      return e15.getBool();
    default:
      return e15.skip(), null;
  }
  return null;
}
var h7 = n5();

// node_modules/@arcgis/core/views/3d/layers/graphics/pipeline/fetching/Tile3DFetcher.js
var i7 = 8e3;
var a9 = 4;
var n20 = 4;
var c9 = class {
  constructor(e15, t28, r24, o28, s27) {
    this.spatialReference = e15, this.url = r24, this.objectIdField = o28, this.capabilities = s27;
    const { supportsMaxRecordCountFactor: n30, maxRecordCount: c18 } = this.capabilities.query, u19 = n30 ? a9 : 1, p14 = (c18 ?? i7) * u19;
    this._pageSize = Math.min(i7, p14);
    const l12 = t28.clone();
    l12.cacheHint = true, l12.resultType = "tile", l12.outSpatialReference = e15, l12.returnGeometry = true, l12.returnZ = true, l12.maxRecordCountFactor = u19, l12.num = this._pageSize, l12.outFields = [o28], this._baseQuery = l12;
  }
  async fetch(r24, s27) {
    const { spatialReference: i16 } = this, a21 = c2(r24.extent, i16), c18 = this._baseQuery.clone();
    c18.geometry = a21;
    const u19 = new Array();
    let p14 = 0, l12 = false, h15 = 1;
    for (; !l12; ) {
      const t28 = [];
      for (let e15 = 0; e15 < h15; ++e15) t28.push(this._fetchPage(c18, p14++, s27));
      const r25 = await Promise.all(t28);
      s2(s27);
      for (const e15 of r25) {
        const t29 = 0 !== e15.featureCount;
        l12 || (l12 = !e15.exceededTransferLimit || !t29), t29 && u19.push(e15);
      }
      h15 = Math.min(h15 + 1, n20);
    }
    return new s13(r24, u19);
  }
  async _fetchPage(t28, o28, i16) {
    const a21 = t28.clone();
    a21.start = o28 * this._pageSize;
    const n30 = (await d4(this.url, a21, { signal: i16 })).data;
    return s2(i16), new u12(n30);
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/FontMetrics.js
var r14 = (() => {
  let t28 = "";
  for (let e15 = 32; e15 < 127; e15++) t28 += String.fromCharCode(e15);
  return t28;
})();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextRenderer.js
var h8 = [];
{
  const t28 = 16;
  for (let e15 = 0; e15 < 360; e15 += 360 / t28) h8.push([Math.cos(Math.PI * e15 / 180), Math.sin(Math.PI * e15 / 180)]);
}
var o18;
!function(t28) {
  t28[t28.Left = 0] = "Left", t28[t28.Center = 1] = "Center", t28[t28.Right = 2] = "Right";
}(o18 || (o18 = {}));

// node_modules/@arcgis/core/views/3d/layers/graphics/placementUtils.js
var i8 = Object.freeze({ left: 0, center: 0.5, right: 1 });
var s15 = Object.freeze({ "bottom-left": r11(0, 0), bottom: r11(0.5, 0), "bottom-right": r11(1, 0), left: r11(0, 0.5), center: r11(0.5, 0.5), right: r11(1, 0.5), "top-left": r11(0, 1), top: r11(0.5, 1), "top-right": r11(1, 1) });

// node_modules/@arcgis/core/views/3d/webgl-engine/effects/RenderPlugin.js
var t12 = { required: [] };
var s16 = { required: [n15.Depth] };
var n21 = class extends b2 {
  precompile(e15) {
    const r24 = this.acquireTechniques(e15);
    return c10(r24), null != r24;
  }
  consumes() {
    return t12;
  }
  get usedMemory() {
    return 0;
  }
  get isDecoration() {
    return false;
  }
  get running() {
    return false;
  }
  modify(e15) {
  }
  get numGeometries() {
    return 0;
  }
  get hasOccludees() {
    return false;
  }
  get hasEmissions() {
    return false;
  }
  forEachGeometry(e15) {
  }
  queryRenderOccludedState(e15) {
    return false;
  }
};
var u13 = class extends n21 {
};
var o19 = class extends n21 {
};
function c10(e15) {
  Array.isArray(e15) ? e15.forEach((e16) => e16 == null ? void 0 : e16.release()) : e15 == null ? void 0 : e15.release();
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/GLMaterials.js
var t13 = class {
  constructor(s27, t28) {
    this._material = s27, this._repository = t28, this._map = /* @__PURE__ */ new Map();
  }
  dispose() {
    this._map.forEach((s27, t28) => {
      null != s27 && this._repository.release(this._material, t28);
    });
  }
  load(t28, e15, r24) {
    const i16 = this._material.produces.get(e15);
    if (!(i16 == null ? void 0 : i16(r24))) return null;
    this._map.has(r24) || this._map.set(r24, this._repository.acquire(this._material, e15, r24));
    const a21 = this._map.get(r24);
    if (null != a21) {
      if (a21.ensureResources(t28) === O2.LOADED) return a21;
      this._repository.requestRender();
    }
    return null;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/DrawParameters.js
var i9 = class extends n16 {
  constructor(e15 = n5()) {
    super(), this.origin = e15;
  }
  get slicePlaneLocalOrigin() {
    return this.origin;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/ModelDirtyTypes.js
var E10;
var I2;
!function(E14) {
  E14[E14.ADD = 0] = "ADD", E14[E14.UPDATE = 1] = "UPDATE", E14[E14.REMOVE = 2] = "REMOVE";
}(E10 || (E10 = {})), function(E14) {
  E14[E14.NONE = 0] = "NONE", E14[E14.VISIBILITY = 1] = "VISIBILITY", E14[E14.GEOMETRY = 2] = "GEOMETRY", E14[E14.TRANSFORMATION = 4] = "TRANSFORMATION", E14[E14.HIGHLIGHT = 8] = "HIGHLIGHT", E14[E14.OCCLUDEE = 16] = "OCCLUDEE";
}(I2 || (I2 = {}));

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/renderers/BufferRange.js
var t14 = class {
  constructor(t28 = 0, o28 = 0) {
    this.from = t28, this.to = o28;
  }
  get numElements() {
    return this.to - this.from;
  }
};
function o20(t28) {
  const o28 = /* @__PURE__ */ new Map();
  t28.forAll((t29) => o28.set(t29.from, t29));
  let e15 = true;
  for (; e15; ) {
    e15 = false;
    for (let r24 = 0; r24 < t28.length; ++r24) {
      const n30 = t28.data[r24], s27 = o28.get(n30.to);
      if (!s27) return;
      n30.to = s27.to, o28.delete(s27.from), t28.removeUnordered(s27), e15 = true;
    }
  }
}

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/renderers/Instance.js
var i10 = class extends t14 {
  constructor(e15, i16, s27) {
    super(i16, s27), this.geometry = e15;
  }
  get isVisible() {
    return this.geometry.visible;
  }
  get hasHighlights() {
    return this.isVisible && this.geometry.hasHighlights;
  }
  foreachHighlightGroup(e15) {
    this.isVisible && this.geometry.foreachHighlightGroup(e15);
  }
  get hasOccludees() {
    return null != this.geometry.occludees;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/renderers/DrawCommand.js
var t15 = class {
  constructor() {
    this.first = 0, this.count = 0;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/renderers/PerBufferData.js
var n22 = class {
  constructor() {
    this._numElements = 0, this._instances = /* @__PURE__ */ new Map(), this.holes = new l({ allocator: (s27) => s27 || new t14(), deallocator: null }), this.hasHiddenInstances = false, this.hasOccludees = false, this.drawCommandsDirty = true, this.highlightGroups = /* @__PURE__ */ new Set(), this.drawCommandsDefault = h9(), this.drawCommandsHighlights = /* @__PURE__ */ new Map(), this.drawCommandsOccludees = h9(), this.drawCommandsShadowHighlightRest = h9();
  }
  get numElements() {
    return this._numElements;
  }
  get instances() {
    return this._instances;
  }
  get hasHighlights() {
    return this.highlightGroups.size > 0;
  }
  resetInstanceSummary() {
    this.hasHiddenInstances = false, this.hasOccludees = false, this.highlightGroups.clear();
  }
  updateIfDrawCommandsDirty(s27) {
    if (this.drawCommandsDirty) {
      this.resetInstanceSummary();
      for (const s28 of this.instances.values()) this.updateDrawState(s28);
      this.updateDrawCommands(s27);
    }
  }
  addInstance(s27, t28) {
    this.deleteInstance(s27), this._instances.set(s27, t28), this._numElements += t28.numElements;
  }
  deleteInstance(s27) {
    const t28 = this._instances.get(s27);
    t28 && (this._numElements -= t28.numElements, this._instances.delete(s27));
  }
  updateInstance(s27, t28, e15) {
    const n30 = this._instances.get(s27);
    n30 && (this._numElements -= n30.numElements, n30.from = t28, n30.to = e15, this._numElements += n30.numElements);
  }
  updateDrawState(s27) {
    s27.isVisible ? (s27.foreachHighlightGroup((s28) => this.highlightGroups.add(s28)), s27.hasOccludees && (this.hasOccludees = true)) : this.hasHiddenInstances = true;
  }
  updateDrawCommands(s27) {
    if (this.drawCommandsDefault.clear(), this.drawCommandsHighlights.clear(), this.drawCommandsOccludees.clear(), this.drawCommandsShadowHighlightRest.clear(), this.drawCommandsDirty = false, 0 === this._instances.size) return;
    if (!this.needsMultipleCommands()) {
      const t29 = this.drawCommandsDefault.pushNew(), e16 = this.holes.front();
      return null != this.vao && 1 === this.holes.length && e16.to === Math.floor(this.vao.byteSize / s27) ? (t29.first = 0, void (t29.count = e16.from)) : (t29.first = 1 / 0, t29.count = 0, this._instances.forEach((s28) => {
        t29.first = Math.min(t29.first, s28.from), t29.count = Math.max(t29.count, s28.to);
      }), void (t29.count -= t29.first));
    }
    const t28 = Array.from(this._instances.values()).sort((s28, t29) => s28.from === t29.from ? s28.to - t29.to : s28.from - t29.from), { drawCommandsHighlights: e15 } = this;
    for (const n30 of t28) n30.isVisible && (o21(n30.hasOccludees ? this.drawCommandsOccludees : this.drawCommandsDefault, n30), n30.hasHighlights ? n30.foreachHighlightGroup((s28) => {
      let t29 = e15.get(s28);
      t29 || (t29 = h9(), e15.set(s28, t29)), o21(t29, n30);
    }) : o21(this.drawCommandsShadowHighlightRest, n30));
  }
  needsMultipleCommands() {
    return this.hasOccludees || this.hasHighlights || this.hasHiddenInstances;
  }
};
function a12(s27) {
  return null != s27.vao;
}
function h9() {
  return new l({ allocator: (s27) => s27 || new t15(), deallocator: (s27) => s27 });
}
function o21(s27, t28) {
  const e15 = s27.back();
  if (null == e15) {
    const e16 = s27.pushNew();
    return e16.first = t28.from, void (e16.count = t28.numElements);
  }
  if (r15(e15, t28)) {
    const s28 = t28.from - e15.first + t28.numElements;
    e15.count = s28;
  } else {
    const e16 = s27.pushNew();
    e16.first = t28.from, e16.count = t28.numElements;
  }
}
function r15(s27, t28) {
  return s27.first + s27.count >= t28.from;
}

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/renderers/PerOriginData.js
var s17 = class {
  constructor(s27) {
    this.origin = s27, this.buffers = new Array();
  }
  dispose() {
    this.buffers.forEach((s27) => s27.vao.dispose()), this.buffers.length = 0;
  }
  findBuffer(s27) {
    return this.buffers.find((r24) => r24.instances.has(s27));
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/renderers/MergedRenderer.js
var x4 = class extends u13 {
  get _hasAnyHighlight() {
    return this._highlightGroups.size > 0;
  }
  constructor(e15) {
    super(e15), this._dataByOrigin = /* @__PURE__ */ new Map(), this._drawParameters = new i9(), this._highlightGroups = /* @__PURE__ */ new Set(), this.drapedPriority = 0, this._produces = /* @__PURE__ */ new Map(), this._hasOccludees = false;
  }
  destroy() {
    this._glMaterials = r3(this._glMaterials), this._dataByOrigin.forEach((e15) => e15.dispose()), this._dataByOrigin.clear(), this._vaoCache = null;
  }
  initialize() {
    this.material.produces.forEach((e15, t28) => {
      this._produces.set(t28, (t29) => !(0 === this._dataByOrigin.size || !(t29 !== n15.Highlight && t29 !== n15.ShadowHighlight || this._hasAnyHighlight)) && e15(t29));
    });
  }
  initializeRenderContext(e15, t28) {
    this._glMaterials = new t13(this.material, t28 ?? e15.materials), this._bufferWriter = this.material.createBufferWriter(), this._vaoCache = e15.renderContext.rctx.getVaoCache(this.material.vertexAttributeLocations, t3(this._bufferWriter.vertexBufferLayout));
  }
  uninitializeRenderContext() {
  }
  get produces() {
    return this._produces;
  }
  get hasOccludees() {
    return this._hasOccludees;
  }
  get hasEmissions() {
    return this.material.hasEmissions;
  }
  get isDecoration() {
    return this.material.parameters.isDecoration;
  }
  queryRenderOccludedState(e15) {
    return this.material.queryRenderOccludedState(e15);
  }
  get numGeometries() {
    let e15 = 0;
    return this._dataByOrigin.forEach((t28) => e15 += t28.buffers.reduce((e16, t29) => e16 + t29.instances.size, 0)), e15;
  }
  get usedMemory() {
    let e15 = 0;
    return this._dataByOrigin.forEach((t28) => e15 += t28.buffers.reduce((e16, t29) => e16 + t29.vao.usedMemory, 0)), e15;
  }
  forEachGeometry(e15) {
    this._dataByOrigin.forEach((t28) => t28.buffers.forEach((t29) => t29.instances.forEach(({ geometry: t30 }) => e15(t30))));
  }
  modify(e15) {
    this._updateGeometries(e15.updates), this._addAndRemoveGeometries(e15.adds, e15.removes), this._updateDrawCommands();
  }
  _updateGeometries(e15) {
    const t28 = this._bufferWriter;
    if (null == t28) return;
    const r24 = t28.vertexBufferLayout.stride / 4;
    for (const i16 of e15) {
      const e16 = i16.renderGeometry, s27 = this._dataByOrigin.get(e16.localOrigin.id), o28 = s27 == null ? void 0 : s27.findBuffer(e16.id);
      if (null == o28) return;
      const a21 = o28.instances.get(e16.id);
      if (i16.updateType & (I2.GEOMETRY | I2.TRANSFORMATION)) {
        const i17 = W2(t28.elementCount(a21.geometry.geometry.attributes) * r24), s28 = t28.vertexBufferLayout.createView(i17.buffer);
        this._writeGeometry(e16, s28, 0), o28.vao.vertexBuffers.get("geometry").setSubData(i17, a21.from * r24, 0, a21.numElements * r24);
      }
      i16.updateType & (I2.HIGHLIGHT | I2.OCCLUDEE | I2.VISIBILITY) && (o28.drawCommandsDirty = true);
    }
  }
  _computeDeltas(e15, t28) {
    const r24 = new t9();
    for (const i16 of e15) {
      const e16 = i16.localOrigin;
      if (null == e16) continue;
      let t29 = r24.get(e16.id, null);
      null == t29 && (t29 = new D2(e16.vec3), r24.set(e16.id, null, t29)), t29.changes.push(i16);
    }
    for (const i16 of t28) {
      const e16 = i16.localOrigin;
      if (null == e16) continue;
      const t29 = this._dataByOrigin.get(e16.id), s27 = t29 == null ? void 0 : t29.findBuffer(i16.id);
      if (null == s27) continue;
      let o28 = r24.get(e16.id, s27);
      null == o28 && (o28 = new D2(e16.vec3), r24.set(e16.id, s27, o28)), o28.changes.push(i16);
    }
    return r24;
  }
  _addAndRemoveGeometries(e15, r24) {
    if (null == this._bufferWriter || null == this._vaoCache) return;
    const { _bufferWriter: i16, _dataByOrigin: s27 } = this, o28 = i16.vertexBufferLayout.stride / 4, a21 = this._computeDeltas(e15, r24);
    a21.forEach((e16, r25) => {
      const n30 = e16.get(null), l12 = (n30 == null ? void 0 : n30.changes) ?? [];
      a21.delete(r25, null);
      let u19 = s27.get(r25);
      if (e16.forEach((e17, n31) => {
        if (a21.delete(r25, n31), null == n31) return void s9(false, "No VAO for removed geometries");
        if (n31.instances.size === e17.changes.length) return this._vaoCache.deleteVao(n31.vao), b(u19.buffers, n31), void (0 === u19.buffers.length && 0 === l12.length && s27.delete(r25));
        const h15 = n31.numElements, f10 = n31.vao.byteSize / 4, c18 = l12.reduce((e18, t28) => e18 + i16.elementCount(t28.geometry.attributes), 0), m9 = e17.changes.reduce((e18, t28) => e18 + i16.elementCount(t28.geometry.attributes), 0), d14 = Math.min((h15 + c18 - m9) * o28, z3), g9 = d14 > f10;
        d14 > H5 && d14 < f10 / 2 ? (e17.changes.forEach(({ id: e18 }) => n31.deleteInstance(e18)), n31.instances.forEach(({ geometry: e18 }) => l12.push(e18)), this._vaoCache.deleteVao(n31.vao), b(u19.buffers, n31)) : g9 ? this._applyAndRebuild(n31, l12, e17) : this._applyRemoves(n31, e17);
      }), l12.length > 0) for (null == u19 && (u19 = new s17(n30.origin), s27.set(r25, u19)), u19.buffers.forEach((e17) => this._applyAdds(e17, l12)); l12.length > 0; ) u19.buffers.push(this._applyAndRebuild(new n22(), l12, null));
    });
  }
  _updateDrawCommands() {
    this._highlightGroups.clear(), this._hasOccludees = false, this._dataByOrigin.forEach((e15) => {
      e15.buffers.forEach((e16) => {
        e16.updateIfDrawCommandsDirty(this._bufferWriter.vertexBufferLayout.stride), e16.hasHighlights && r4(this._highlightGroups, e16.highlightGroups), this._hasOccludees = this._hasOccludees || e16.hasOccludees;
      });
    });
  }
  _applyAndRebuild(e15, t28, r24) {
    if (r24) for (const m9 of r24.changes) e15.deleteInstance(m9.id);
    const i16 = this._bufferWriter, s27 = i16.vertexBufferLayout.stride, o28 = s27 / 4, a21 = Math.floor(z3 / o28);
    let n30 = e15.numElements;
    for (; t28.length > 0; ) {
      const r25 = t28.pop(), s28 = i16.elementCount(r25.geometry.attributes);
      if (n30 + s28 > a21 && n30 > 0) {
        t28.push(r25);
        break;
      }
      n30 += s28;
      const o29 = new i10(r25, 0, 0);
      s9(null == e15.instances.get(r25.id)), e15.addInstance(r25.id, o29);
    }
    const l12 = n30 * o28, u19 = W2(l12), h15 = i16.vertexBufferLayout.createView(u19.buffer);
    let f10 = 0;
    e15.resetInstanceSummary(), e15.instances.forEach((t29, r25) => {
      this._writeGeometry(t29.geometry, h15, f10);
      const s28 = f10;
      f10 += i16.elementCount(t29.geometry.geometry.attributes), e15.updateInstance(r25, s28, f10), e15.updateDrawState(t29);
    }), this._vaoCache.deleteVao(e15.vao), e15.vao = this._vaoCache.newVao(V4(l12)), e15.vao.vertexBuffers.get("geometry").setSubData(u19, 0, 0, f10 * o28), e15.holes.clear();
    const c18 = e15.holes.pushNew();
    return c18.from = f10, c18.to = Math.floor(e15.vao.byteSize / s27), e15.updateDrawCommands(s27), e15;
  }
  _applyRemoves(e15, t28) {
    if (0 === t28.changes.length || null == this._bufferWriter) return;
    for (const a21 of t28.changes) {
      const t29 = a21.id, r25 = e15.instances.get(t29);
      if (!r25) continue;
      e15.deleteInstance(t29);
      const i17 = G.back();
      if (i17) {
        if (i17.to === r25.from) {
          i17.to = r25.to;
          continue;
        }
        if (i17.from === r25.to) {
          i17.from = r25.from;
          continue;
        }
      }
      const s28 = G.pushNew();
      s28.from = r25.from, s28.to = r25.to;
    }
    o20(G);
    const r24 = this._bufferWriter.vertexBufferLayout.stride / 4, i16 = G.reduce((e16, t29) => Math.max(e16, t29.numElements), 0) * r24, s27 = W2(i16);
    s27.fill(0, 0, i16);
    const o28 = e15.vao.vertexBuffers.get("geometry");
    G.forAll((e16) => o28.setSubData(s27, e16.from * r24, 0, e16.numElements * r24)), e15.holes.pushArray(G.data, G.length), G.forAll((e16, t29) => G.data[t29] = null), G.clear(), e15.drawCommandsDirty = true;
  }
  _applyAdds(e15, t28) {
    if (0 === t28.length || null == this._bufferWriter) return;
    if (!a12(e15)) return void this._applyAndRebuild(e15, t28, null);
    const i16 = this._bufferWriter, s27 = i16.vertexBufferLayout.stride / 4, o28 = e15.numElements, a21 = t28.reduce((e16, t29) => e16 + i16.elementCount(t29.geometry.attributes), 0), n30 = Math.min((o28 + a21) * s27, z3), l12 = 4 * n30;
    if (e15.vao.byteSize < V4(z3 - H5) && l12 > e15.vao.byteSize) return void this._applyAndRebuild(e15, t28, null);
    o20(e15.holes);
    const u19 = new Array();
    for (const r24 of t28) {
      const t29 = i16.elementCount(r24.geometry.attributes), s28 = R3(e15.holes, t29);
      u19.push(s28);
    }
    const h15 = e15.vao.vertexBuffers.get("geometry");
    let f10 = 0, c18 = 0, m9 = 0;
    const d14 = W2(n30), g9 = i16.vertexBufferLayout.createView(d14.buffer);
    t28.forEach((t29, r24) => {
      const o29 = u19[r24];
      if (null == o29) return;
      if (!(m9 === o29)) {
        const e16 = m9 - c18;
        e16 > 0 && h15.setSubData(d14, c18 * s27, 0, e16 * s27), c18 = o29, f10 = 0;
      }
      const a22 = i16.elementCount(t29.geometry.attributes);
      this._writeGeometry(t29, g9, f10), f10 += a22, m9 = o29 + a22;
      const n31 = new i10(t29, o29, o29 + a22);
      s9(null == e15.instances.get(t29.id)), e15.addInstance(t29.id, n31), e15.drawCommandsDirty = true;
    });
    const p14 = m9 - c18;
    p14 > 0 && h15.setSubData(d14, c18 * s27, 0, p14 * s27), v(t28, (e16, t29) => null == u19[t29]);
  }
  _writeGeometry(e15, t28, r24) {
    null != this._bufferWriter && (n6(j, e15.transformation), j[12] -= e15.localOrigin.vec3[0], j[13] -= e15.localOrigin.vec3[1], j[14] -= e15.localOrigin.vec3[2], h(M2, j), s6(M2, M2), this._bufferWriter.write(j, M2, e15.geometry.attributes, e15.geometry.objectAndLayerIdColor, t28, r24));
  }
  updateAnimation(e15) {
    return this.material.update(e15);
  }
  acquireTechniques(e15) {
    var _a;
    if (!this.material.shouldRender(e15)) return null;
    const { output: t28, bind: r24 } = e15, i16 = this.material.produces.get(r24.slot);
    if (!(i16 == null ? void 0 : i16(t28))) return null;
    const { highlightGroupName: s27, slot: o28 } = r24, a21 = t28 === n15.ShadowHighlight, n30 = t28 === n15.Highlight, l12 = n30 || a21, u19 = (e16) => l12 && (0 === this._highlightGroups.size || n30 && !!s27 && !e16.has(s27));
    if (u19(this._highlightGroups)) return null;
    const h15 = t28 === n15.ShadowExcludeHighlight, f10 = !(l12 || h15);
    for (const { buffers: c18 } of this._dataByOrigin.values()) for (const i17 of c18) {
      if (u19(i17.highlightGroups)) continue;
      const n31 = a21 ? i17.drawCommandsHighlights.size > 0 : l12 ? s27 ? i17.drawCommandsHighlights.get(s27) : i17.drawCommandsHighlights.size > 0 : ((_a = (h15 && i17.needsMultipleCommands() ? i17.drawCommandsShadowHighlightRest : i17.drawCommandsDefault) || null) == null ? void 0 : _a.length) ?? false, c19 = f10 && i17.drawCommandsOccludees || null;
      if (n31 || (c19 == null ? void 0 : c19.length)) {
        const i18 = this._glMaterials.load(e15.rctx, o28, t28), s28 = i18 == null ? void 0 : i18.beginSlot(r24);
        if (s28) return s28;
      }
    }
    return null;
  }
  render(e15, t28) {
    const { output: r24, bind: i16 } = e15, { slot: s27, highlightGroupName: o28 } = i16, a21 = r24 === n15.Highlight;
    if (a21 && !o28) return;
    const n30 = r24 === n15.ShadowHighlight, l12 = a21 || n30, u19 = r24 === n15.ShadowExcludeHighlight, h15 = !(l12 || u19), f10 = s27 === A3.OCCLUDER_MATERIAL || s27 === A3.TRANSPARENT_OCCLUDER_MATERIAL ? s27 : null, { rctx: c18 } = e15;
    c18.runAppleAmdDriverHelper();
    const m9 = c18.bindTechnique(t28, i16, this.material.parameters);
    for (const d14 of this._dataByOrigin.values()) for (const e16 of d14.buffers) {
      if (a21 && (!e16.hasHighlights || !e16.drawCommandsHighlights.has(o28))) continue;
      if (n30 && !e16.hasHighlights) continue;
      const r25 = () => {
        const t29 = [];
        for (const r26 of e16.drawCommandsHighlights.values()) t29.push(r26);
        return t29;
      }, s28 = l12 && !n30 ? e16.drawCommandsHighlights.get(o28) ?? null : null, g9 = n30 ? r25() : l12 ? s28 ? [s28] : N6 : (u19 && e16.needsMultipleCommands() ? [e16.drawCommandsShadowHighlightRest] : [e16.drawCommandsDefault]) || N6, p14 = g9.some((e17) => e17.length > 0), y6 = h15 && e16.drawCommandsOccludees || null;
      if (p14 || (y6 == null ? void 0 : y6.length)) {
        if (this._drawParameters.origin = d14.origin, m9.bindDraw(i16, this.material.parameters, this._drawParameters), t28.ensureAttributeLocations(e16.vao), c18.bindVAO(e16.vao), p14) for (const e17 of g9) c18.setPipelineState(t28.getPipeline(false, f10)), e17.forAll((e18) => c18.drawArrays(t28.primitiveType, e18.first, e18.count));
        (y6 == null ? void 0 : y6.length) && (c18.setPipelineState(t28.getPipeline(true, f10)), y6.forAll((e17) => c18.drawArrays(t28.primitiveType, e17.first, e17.count)));
      }
    }
  }
  get test() {
  }
};
r([m({ constructOnly: true })], x4.prototype, "material", void 0), x4 = r([a("esri.views.3d.webgl-engine.materials.renderers.MergedRenderer")], x4);
var D2 = class {
  constructor(e15) {
    this.origin = e15, this.changes = new Array();
  }
};
function R3(e15, t28) {
  const r24 = e15.find((e16) => e16.numElements >= t28);
  if (null == r24) return null;
  const i16 = r24.from;
  return r24.from += t28, r24.from >= r24.to && e15.removeUnordered(r24), i16;
}
var j = e6();
var M2 = e6();
var G = new l({ allocator: (e15) => e15 || new t14(), deallocator: null });
var H5 = 65536;
var L3 = 4 * H5;
var I3 = 1024;
var T4 = 16777216;
var z3 = T4 / 4;
var P3 = new Float32Array(H5);
function W2(e15) {
  return P3.length < e15 && (P3 = new Float32Array(e15)), P3;
}
function V4(e15) {
  const t28 = 4 * e15;
  return t28 <= I3 ? I3 : t28 < L3 ? n4(t28) : Math.max(Math.min(Math.ceil(1.5 * t28 / L3) * L3, T4), t28);
}
var N6 = [];

// node_modules/@arcgis/core/views/3d/layers/graphics/pipeline/rendering/DirectRenderer.js
var m6 = class extends u13 {
  constructor(e15) {
    super(e15), this._hasHighlights = false, this._glMaterials = null, this._produces = /* @__PURE__ */ new Map(), this._renderGeometries = /* @__PURE__ */ new Map(), this._vaoCache = null, this._drawParameters = new i9(), this._bufferWriter = null;
  }
  get produces() {
    return this._produces;
  }
  initialize() {
    this._bufferWriter = this.material.createBufferWriter(), this.material.produces.forEach((e15, r24) => {
      this._produces.set(r24, (r25) => !!(r25 !== n15.Highlight && r25 !== n15.ShadowHighlight || this._hasHighlights) && e15(r25));
    });
  }
  destroy() {
    this._glMaterials.dispose();
    const e15 = this._renderGeometries.keys();
    for (const r24 of e15) this.removeRenderGeometry(r24);
  }
  acquireTechniques(e15) {
    const r24 = this.material;
    if (!r24.shouldRender(e15)) return null;
    const { output: t28, bind: i16 } = e15, o28 = r24.produces.get(i16.slot);
    if (!(o28 == null ? void 0 : o28(t28))) return null;
    if ((t28 === n15.Highlight || t28 === n15.ShadowHighlight) && !this._hasHighlights) return null;
    const a21 = this._glMaterials.load(e15.rctx, i16.slot, t28);
    return a21 == null ? void 0 : a21.beginSlot(i16);
  }
  render(e15, r24) {
    const t28 = this._renderGeometries;
    if (0 === t28.size) return;
    const { bind: i16 } = e15, s27 = i16.slot === A3.OCCLUDER_MATERIAL || i16.slot === A3.TRANSPARENT_OCCLUDER_MATERIAL ? i16.slot : null, o28 = e15.rctx;
    o28.runAppleAmdDriverHelper(), o28.bindTechnique(r24, i16, this.material.parameters);
    const a21 = r24.program;
    for (const [n30, l12] of t28) this._drawParameters.origin = l12.localOrigin, a21.bindDraw(i16, this.material.parameters, this._drawParameters), r24.ensureAttributeLocations(l12.vao), o28.bindVAO(l12.vao), o28.setPipelineState(r24.getPipeline(false, s27)), o28.drawArrays(r24.primitiveType, 0, l12.numElements);
  }
  initializeRenderContext(e15, r24) {
    this._glMaterials = new t13(this.material, e15.materials);
    const t28 = e15.renderContext.rctx.getVaoCache(this.material.vertexAttributeLocations, t3(this._bufferWriter.vertexBufferLayout));
    this._vaoCache = t28;
  }
  uninitializeRenderContext() {
  }
  addRenderGeometry(e15, r24, t28) {
    this.removeRenderGeometry(e15);
    const i16 = this._bufferWriter.vertexBufferLayout.stride, s27 = this._vaoCache.newVao(V4(r24.data.byteLength));
    s27.vertexBuffers.get("geometry").setSubData(new Uint8Array(r24.data), 0, 0, r24.elementCount * i16);
    const o28 = { localOrigin: t28, vao: s27, numElements: r24.elementCount };
    return this._renderGeometries.set(e15, o28), o28;
  }
  removeRenderGeometry(e15) {
    const r24 = this._renderGeometries.get(e15);
    null != r24 && (this._vaoCache.deleteVao(r24.vao), this._renderGeometries.delete(e15));
  }
};
r([m({ constructOnly: true })], m6.prototype, "material", void 0), m6 = r([a("esri.views.3d.layers.graphics.pipeline.rendering.DirectRenderer")], m6);

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/fov.js
function t16(t28, a21, n30) {
  return 2 * Math.atan(Math.sqrt(a21 * a21 + n30 * n30) * Math.tan(0.5 * t28) / a21);
}
function a13(t28, a21, n30) {
  return 2 * Math.atan(Math.sqrt(a21 * a21 + n30 * n30) * Math.tan(0.5 * t28) / n30);
}
function n23(t28, a21, n30) {
  return 2 * Math.atan(a21 * Math.tan(0.5 * t28) / Math.sqrt(a21 * a21 + n30 * n30));
}
function r16(t28, a21, n30) {
  return 2 * Math.atan(n30 * Math.tan(0.5 * t28) / Math.sqrt(a21 * a21 + n30 * n30));
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/rendererUtils.js
var r17;
var t18;
!function(e15) {
  e15[e15.Default = 0] = "Default", e15[e15.Screenshot = 1] = "Screenshot", e15[e15.ObjectAndLayerID = 2] = "ObjectAndLayerID";
}(r17 || (r17 = {})), function(e15) {
  e15[e15.TOP = 0] = "TOP", e15[e15.RIGHT = 1] = "RIGHT", e15[e15.BOTTOM = 2] = "BOTTOM", e15[e15.LEFT = 3] = "LEFT";
}(t18 || (t18 = {}));

// node_modules/@arcgis/core/views/3d/webgl/RenderCamera.js
var $;
var tt = $ = class extends b2 {
  constructor(t28) {
    super(t28), this._ray = b7(), this._viewport = r8(0, 0, 1, 1), this._padding = r8(0, 0, 0, 0), this._fov = 55 / 180 * Math.PI, this._nearFar = r11(1, 1e3), this._viewDirty = true, this._viewMatrix = e6(), this._viewProjectionDirty = true, this._viewProjectionMatrix = e6(), this._viewInverseTransposeMatrixDirty = true, this._viewInverseTransposeMatrix = e6(), this._frustumDirty = true, this._frustum = H3(), this._fullViewport = n7(), this._pixelRatio = 1, this.row = 0, this.column = 0, this._rows = 1, this._columns = 1, this._center = n5(), this._up = n5(), this.relativeElevation = 0;
  }
  get pixelRatio() {
    return this._pixelRatio;
  }
  set pixelRatio(t28) {
    this._pixelRatio = t28 > 0 ? t28 : 1;
  }
  get rows() {
    return this._rows;
  }
  set rows(t28) {
    this._rows = Math.max(1, t28);
  }
  get columns() {
    return this._columns;
  }
  set columns(t28) {
    this._columns = Math.max(1, t28);
  }
  get eye() {
    return this._ray.origin;
  }
  set eye(t28) {
    this._compareAndSetView(t28, this._ray.origin);
  }
  get center() {
    return this._center;
  }
  set center(t28) {
    this._compareAndSetView(t28, this._center, "_center");
  }
  get ray() {
    return c4(this._ray.direction, this.center, this.eye), this._ray;
  }
  get up() {
    return this._up;
  }
  set up(t28) {
    this._compareAndSetView(t28, this._up, "_up");
  }
  get viewMatrix() {
    return this._ensureViewClean(), this._viewMatrix;
  }
  set viewMatrix(t28) {
    n6(this._viewMatrix, t28), this.notifyChange("_viewMatrix"), this._viewDirty = false, this._viewInverseTransposeMatrixDirty = true, this._viewProjectionDirty = true, this._frustumDirty = true;
  }
  get viewForward() {
    return this._ensureViewClean(), o5(n5(), -this._viewMatrix[2], -this._viewMatrix[6], -this._viewMatrix[10]);
  }
  get viewUp() {
    return this._ensureViewClean(), o5(n5(), this._viewMatrix[1], this._viewMatrix[5], this._viewMatrix[9]);
  }
  get viewRight() {
    return this._ensureViewClean(), o5(n5(), this._viewMatrix[0], this._viewMatrix[4], this._viewMatrix[8]);
  }
  get nearFar() {
    return this._nearFar;
  }
  get near() {
    return this._nearFar[0];
  }
  set near(t28) {
    this._nearFar[0] !== t28 && (this._nearFar[0] = t28, this._viewProjectionDirty = true, this._frustumDirty = true, this.notifyChange("_nearFar"));
  }
  get far() {
    return this._nearFar[1];
  }
  set far(t28) {
    this._nearFar[1] !== t28 && (this._nearFar[1] = t28, this._viewProjectionDirty = true, this._frustumDirty = true, this.notifyChange("_nearFar"));
  }
  get viewport() {
    return this._viewport;
  }
  set viewport(t28) {
    this.x = t28[0], this.y = t28[1], this.width = t28[2], this.height = t28[3];
  }
  get screenViewport() {
    if (1 === this.pixelRatio) return this._viewport;
    const t28 = m2(n7(), this._viewport, 1 / this.pixelRatio), i16 = this._get("screenViewport");
    return i16 && L(t28, i16) ? i16 : t28;
  }
  get screenPadding() {
    if (1 === this.pixelRatio) return this._padding;
    const t28 = m2(n7(), this._padding, 1 / this.pixelRatio), i16 = this._get("screenPadding");
    return i16 && L(t28, i16) ? i16 : t28;
  }
  get x() {
    return this._viewport[0];
  }
  set x(t28) {
    t28 += this._padding[t18.LEFT], this._viewport[0] !== t28 && (this._viewport[0] = t28, this._viewProjectionDirty = true, this._frustumDirty = true, this.notifyChange("_viewport"));
  }
  get y() {
    return this._viewport[1];
  }
  set y(t28) {
    t28 += this._padding[t18.BOTTOM], this._viewport[1] !== t28 && (this._viewport[1] = t28, this._viewProjectionDirty = true, this._frustumDirty = true, this.notifyChange("_viewport"));
  }
  get width() {
    return this._viewport[2];
  }
  set width(t28) {
    this._viewport[2] !== t28 && (this._viewport[2] = t28, this._viewProjectionDirty = true, this._frustumDirty = true, this.notifyChange("_viewport"));
  }
  get height() {
    return this._viewport[3];
  }
  set height(t28) {
    this._viewport[3] !== t28 && (this._viewport[3] = t28, this._viewProjectionDirty = true, this._frustumDirty = true, this.notifyChange("_viewport"));
  }
  get fullWidth() {
    return this._viewport[2] + this._padding[t18.RIGHT] + this._padding[t18.LEFT];
  }
  set fullWidth(t28) {
    this.width = t28 - (this._padding[t18.RIGHT] + this._padding[t18.LEFT]);
  }
  get fullHeight() {
    return this._viewport[3] + this._padding[t18.TOP] + this._padding[t18.BOTTOM];
  }
  set fullHeight(t28) {
    this.height = t28 - (this._padding[t18.TOP] + this._padding[t18.BOTTOM]);
  }
  get fullViewport() {
    return this._fullViewport[0] = this._viewport[0] - this._padding[t18.LEFT], this._fullViewport[1] = this._viewport[1] - this._padding[t18.BOTTOM], this._fullViewport[2] = this.fullWidth, this._fullViewport[3] = this.fullHeight, this._fullViewport;
  }
  get _aspect() {
    return this.width / this.height;
  }
  get padding() {
    return this._padding;
  }
  set padding(t28) {
    E(this._padding, t28) || (this._viewport[0] += t28[t18.LEFT] - this._padding[t18.LEFT], this._viewport[1] += t28[t18.BOTTOM] - this._padding[t18.BOTTOM], this._viewport[2] -= t28[t18.RIGHT] + t28[t18.LEFT] - (this._padding[t18.RIGHT] + this._padding[t18.LEFT]), this._viewport[3] -= t28[t18.TOP] + t28[t18.BOTTOM] - (this._padding[t18.TOP] + this._padding[t18.BOTTOM]), a3(this._padding, t28), this._viewProjectionDirty = true, this._frustumDirty = true, this.notifyChange("_padding"), this.notifyChange("_viewport"));
  }
  get viewProjectionMatrix() {
    return this._viewProjectionDirty && (c3(this._viewProjectionMatrix, this.projectionMatrix, this.viewMatrix), this._viewProjectionDirty = false), this._viewProjectionMatrix;
  }
  get projectionMatrix() {
    return this._projectionMatrixInternal;
  }
  get inverseProjectionMatrix() {
    return h(e6(), this.projectionMatrix) || this._get("inverseProjectionMatrix") || e6();
  }
  get fov() {
    return this._fov;
  }
  set fov(t28) {
    this._fov = t28, this._viewProjectionDirty = true, this._frustumDirty = true;
  }
  get fovX() {
    return n23(this._fov, this.width, this.height);
  }
  set fovX(t28) {
    this._fov = t16(t28, this.width, this.height), this._viewProjectionDirty = true, this._frustumDirty = true;
  }
  get fovY() {
    return r16(this._fov, this.width, this.height);
  }
  set fovY(t28) {
    this._fov = a13(t28, this.width, this.height), this._viewProjectionDirty = true, this._frustumDirty = true;
  }
  get distance() {
    return p3(this.center, this.eye);
  }
  get frustum() {
    return this._recomputeFrustum(), this._frustum;
  }
  get viewInverseTransposeMatrix() {
    return (this._viewInverseTransposeMatrixDirty || this._viewDirty) && (h(this._viewInverseTransposeMatrix, this.viewMatrix), s6(this._viewInverseTransposeMatrix, this._viewInverseTransposeMatrix), this._viewInverseTransposeMatrixDirty = false), this._viewInverseTransposeMatrix;
  }
  depthNDCToWorld(t28) {
    const i16 = 2 * t28 - 1;
    return 2 * this.near * this.far / (this.far + this.near - i16 * (this.far - this.near));
  }
  get perRenderPixelRatio() {
    return Math.tan(this.fovX / 2) / (this.width / 2);
  }
  get perScreenPixelRatio() {
    return this.perRenderPixelRatio * this.pixelRatio;
  }
  get aboveGround() {
    return null != this.relativeElevation && this.relativeElevation >= 0;
  }
  get _projectionMatrixInternal() {
    const t28 = this.width, i16 = this.height, e15 = this.near * Math.tan(this.fovY / 2) * 2, r24 = e15 * this._aspect, s27 = e15 / this.rows, o28 = r24 / this.columns, n30 = -r24 / 2 + this.column * o28, h15 = n30 + o28, a21 = -e15 / 2 + this.row * s27, p14 = a21 + s27, u19 = A(e6(), n30 * (1 + 2 * this._padding[t18.LEFT] / t28), h15 * (1 + 2 * this._padding[t18.RIGHT] / t28), a21 * (1 + 2 * this._padding[t18.BOTTOM] / i16), p14 * (1 + 2 * this._padding[t18.TOP] / i16), this.near, this.far), l12 = this._get("projectionMatrix");
    return l12 && C(l12, u19) ? l12 : u19;
  }
  copyFrom(t28) {
    s8(this._ray.origin, t28.eye), this.center = t28.center, this.up = t28.up, a3(this._viewport, t28.viewport), this.notifyChange("_viewport"), a3(this._padding, t28.padding), this.notifyChange("_padding"), r9(this._nearFar, t28.nearFar), this.notifyChange("_nearFar"), this._fov = t28.fov, this.row = t28.row, this.column = t28.column, this.rows = t28.rows, this.columns = t28.columns, this.relativeElevation = t28.relativeElevation;
    const i16 = t28;
    return this._viewDirty = i16._viewDirty, this._viewDirty || (n6(this._viewMatrix, t28.viewMatrix), this.notifyChange("_viewMatrix")), this._viewProjectionDirty = true, this._frustumDirty = i16._frustumDirty, this._frustumDirty || (N4(this._frustum, t28.frustum), this._frustumDirty = false), i16._viewInverseTransposeMatrixDirty ? this._viewInverseTransposeMatrixDirty = true : (n6(this._viewInverseTransposeMatrix, t28.viewInverseTransposeMatrix), this._viewInverseTransposeMatrixDirty = false), a3(this._fullViewport, t28.fullViewport), this.pixelRatio = t28.pixelRatio, this;
  }
  copyViewFrom(t28) {
    this.eye = t28.eye, this.center = t28.center, this.up = t28.up, this.fov = t28.fov;
  }
  clone() {
    return new $().copyFrom(this);
  }
  equals(t28) {
    return H(this.eye, t28.eye) && H(this.center, t28.center) && H(this.up, t28.up) && E(this._viewport, t28.viewport) && E(this._padding, t28.padding) && E3(this.nearFar, t28.nearFar) && this._fov === t28.fov && this.pixelRatio === t28.pixelRatio && this.relativeElevation === t28.relativeElevation && this.row === t28.row && this.column === t28.column && this.rows === t28.rows && this.columns === t28.columns;
  }
  almostEquals(t28) {
    const i16 = Math.max(1, 1 / this.pixelRatio, 1 / t28.pixelRatio);
    if (Math.abs(t28.fov - this._fov) >= 1e-3 || x(t28.screenPadding, this.screenPadding) >= i16 || x(this.screenViewport, t28.screenViewport) >= i16 || this.row !== t28.row || this.column !== t28.column || this.rows !== t28.rows || this.columns !== t28.columns) return false;
    R(st, t28.eye, t28.center), R(ot, this.eye, this.center);
    const e15 = P2(st, ot), r24 = Z2(st), s27 = Z2(ot), o28 = 5e-4;
    return e15 * e15 >= (1 - 1e-10) * r24 * s27 && X2(t28.eye, this.eye) < Math.max(r24, s27) * o28 * o28;
  }
  computeRenderPixelSizeAt(t28) {
    return this.computeRenderPixelSizeAtDist(this._viewDirectionDistance(t28));
  }
  computeRenderPixelSizeAtDist(t28) {
    return t28 * this.perRenderPixelRatio;
  }
  computeScreenPixelSizeAt(t28) {
    return this.computeScreenPixelSizeAtDist(this._viewDirectionDistance(t28));
  }
  _viewDirectionDistance(t28) {
    return Math.abs(f3(this.viewForward, c4(st, t28, this.eye)));
  }
  computeScreenPixelSizeAtDist(t28) {
    return t28 * this.perScreenPixelRatio;
  }
  computeDistanceFromRadius(t28, i16) {
    return t28 / Math.tan(Math.min(this.fovX, this.fovY) / (2 * (i16 || 1)));
  }
  getScreenCenter(t28 = f()) {
    return t28[0] = (this.padding[t18.LEFT] + this.width / 2) / this.pixelRatio, t28[1] = (this.padding[t18.TOP] + this.height / 2) / this.pixelRatio, t28;
  }
  getRenderCenter(t28, i16 = 0.5, e15 = 0.5) {
    return t28[0] = this.padding[t18.LEFT] + this.width * i16, t28[1] = this.padding[t18.BOTTOM] + this.height * e15, t28[2] = 0.5, t28;
  }
  setGLViewport(t28) {
    const i16 = this.viewport, e15 = this.padding;
    t28.setViewport(i16[0] - e15[3], i16[1] - e15[2], i16[2] + e15[1] + e15[3], i16[3] + e15[0] + e15[2]);
  }
  applyProjection(t28, i16) {
    t28 !== et && s8(et, t28), et[3] = 1, z2(et, et, this.projectionMatrix);
    const e15 = Math.abs(et[3]);
    g3(et, et, 1 / e15);
    const s27 = this.fullViewport;
    i16[0] = o2(0, s27[0] + s27[2], 0.5 + 0.5 * et[0]), i16[1] = o2(0, s27[1] + s27[3], 0.5 + 0.5 * et[1]), i16[2] = 0.5 * (et[2] + 1), i16[3] = e15;
  }
  unapplyProjection(t28, i16) {
    const e15 = this.fullViewport;
    et[0] = (t28[0] / (e15[0] + e15[2]) * 2 - 1) * t28[3], et[1] = (t28[1] / (e15[1] + e15[3]) * 2 - 1) * t28[3], et[2] = (2 * t28[2] - 1) * t28[3], et[3] = t28[3], null != this.inverseProjectionMatrix && (z2(et, et, this.inverseProjectionMatrix), i16[0] = et[0], i16[1] = et[1], i16[2] = et[2]);
  }
  projectToScreen(t28, i16) {
    return this.projectToRenderScreen(t28, nt), this.renderToScreen(nt, i16), i16;
  }
  projectToRenderScreen(t28, i16) {
    if (et[0] = t28[0], et[1] = t28[1], et[2] = t28[2], et[3] = 1, z2(et, et, this.viewProjectionMatrix), 0 === et[3]) return null;
    const e15 = et;
    g3(e15, e15, 1 / Math.abs(et[3]));
    const s27 = this.fullViewport, o28 = o2(0, s27[0] + s27[2], 0.5 + 0.5 * e15[0]), n30 = o2(0, s27[1] + s27[3], 0.5 + 0.5 * e15[1]);
    return "x" in i16 ? (i16.x = o28, i16.y = n30) : (i16[0] = o28, i16[1] = n30, i16.length > 2 && (i16[2] = 0.5 * (e15[2] + 1))), i16;
  }
  unprojectFromScreen(t28, i16) {
    return this.unprojectFromRenderScreen(this.screenToRender(t28, nt), i16);
  }
  unprojectFromRenderScreen(t28, i16) {
    if (c3(rt, this.projectionMatrix, this.viewMatrix), !h(rt, rt)) return null;
    const e15 = this.fullViewport;
    return et[0] = 2 * (t28[0] - e15[0]) / e15[2] - 1, et[1] = 2 * (t28[1] - e15[1]) / e15[3] - 1, et[2] = 2 * t28[2] - 1, et[3] = 1, z2(et, et, rt), 0 === et[3] ? null : (i16[0] = et[0] / et[3], i16[1] = et[1] / et[3], i16[2] = et[2] / et[3], i16);
  }
  constrainWindowSize(t28, i16, e15, r24) {
    const s27 = t28 * this.pixelRatio, o28 = i16 * this.pixelRatio, n30 = Math.max(s27 - e15 / 2, 0), h15 = Math.max(this.fullHeight - o28 - r24 / 2, 0), a21 = -Math.min(s27 - e15 / 2, 0), p14 = -Math.min(this.fullHeight - o28 - r24 / 2, 0), u19 = e15 - a21 - -Math.min(this.fullWidth - s27 - e15 / 2, 0), l12 = r24 - p14 - -Math.min(o28 - r24 / 2, 0);
    return [Math.round(n30), Math.round(h15), Math.round(u19), Math.round(l12)];
  }
  computeUp(t28) {
    t28 === l5.Global ? this._computeUpGlobal() : this._computeUpLocal();
  }
  screenToRender(t28, i16) {
    const e15 = t28[0] * this.pixelRatio, r24 = this.fullHeight - t28[1] * this.pixelRatio;
    return i16[0] = e15, i16[1] = r24, i16;
  }
  renderToScreen(t28, i16) {
    const e15 = t28[0] / this.pixelRatio, r24 = (this.fullHeight - t28[1]) / this.pixelRatio;
    i16[0] = e15, i16[1] = r24;
  }
  _computeUpGlobal() {
    c4(st, this.center, this.eye);
    const t28 = r10(this.center);
    t28 < 1 ? (o5(this._up, 0, 0, 1), this._markViewDirty(), this.notifyChange("_up")) : Math.abs(P2(st, this.center)) > 0.9999 * r10(st) * t28 || (_(this._up, st, this.center), _(this._up, this._up, st), A2(this._up, this._up), this.notifyChange("_up"), this._markViewDirty());
  }
  _computeUpLocal() {
    K(st, this.eye, this.center), Math.abs(st[2]) <= 0.9999 && (g3(st, st, st[2]), o5(this._up, -st[0], -st[1], 1 - st[2]), A2(this._up, this._up), this.notifyChange("_up"), this._markViewDirty());
  }
  _compareAndSetView(t28, i16, r24 = "") {
    "number" == typeof t28[0] && isFinite(t28[0]) && "number" == typeof t28[1] && isFinite(t28[1]) && "number" == typeof t28[2] && isFinite(t28[2]) ? H(t28, i16) || (s8(i16, t28), this._markViewDirty(), r24.length && this.notifyChange(r24)) : n.getLogger("esri.views.3d.webgl-engine.lib.RenderCamera").warn("RenderCamera vector contains invalid number, ignoring value");
  }
  _markViewDirty() {
    this._viewDirty = true, this._frustumDirty = true, this._viewProjectionDirty = true;
  }
  _recomputeFrustum() {
    this._frustumDirty && (L2(this.viewMatrix, this.projectionMatrix, this._frustum), this._frustumDirty = false);
  }
  _ensureViewClean() {
    this._viewDirty && (X(this._viewMatrix, this.eye, this.center, this.up), this.notifyChange("_viewMatrix"), this._viewDirty = false, this._viewInverseTransposeMatrixDirty = true);
  }
};
r([m()], tt.prototype, "_viewport", void 0), r([m()], tt.prototype, "_padding", void 0), r([m()], tt.prototype, "_fov", void 0), r([m()], tt.prototype, "_nearFar", void 0), r([m()], tt.prototype, "_viewDirty", void 0), r([m()], tt.prototype, "_viewMatrix", void 0), r([m()], tt.prototype, "_pixelRatio", void 0), r([m()], tt.prototype, "pixelRatio", null), r([m()], tt.prototype, "row", void 0), r([m()], tt.prototype, "column", void 0), r([m()], tt.prototype, "_rows", void 0), r([m()], tt.prototype, "rows", null), r([m()], tt.prototype, "_columns", void 0), r([m()], tt.prototype, "columns", null), r([m()], tt.prototype, "eye", null), r([m()], tt.prototype, "center", null), r([m()], tt.prototype, "_center", void 0), r([m()], tt.prototype, "up", null), r([m()], tt.prototype, "_up", void 0), r([m()], tt.prototype, "viewMatrix", null), r([m({ readOnly: true })], tt.prototype, "viewForward", null), r([m({ readOnly: true })], tt.prototype, "viewUp", null), r([m({ readOnly: true })], tt.prototype, "viewRight", null), r([m({ readOnly: true })], tt.prototype, "nearFar", null), r([m()], tt.prototype, "near", null), r([m()], tt.prototype, "far", null), r([m()], tt.prototype, "viewport", null), r([m({ readOnly: true })], tt.prototype, "screenViewport", null), r([m({ readOnly: true })], tt.prototype, "screenPadding", null), r([m()], tt.prototype, "x", null), r([m()], tt.prototype, "y", null), r([m()], tt.prototype, "width", null), r([m()], tt.prototype, "height", null), r([m()], tt.prototype, "fullWidth", null), r([m()], tt.prototype, "fullHeight", null), r([m({ readOnly: true })], tt.prototype, "_aspect", null), r([m()], tt.prototype, "padding", null), r([m({ readOnly: true })], tt.prototype, "projectionMatrix", null), r([m({ readOnly: true })], tt.prototype, "inverseProjectionMatrix", null), r([m()], tt.prototype, "fov", null), r([m()], tt.prototype, "fovX", null), r([m()], tt.prototype, "fovY", null), r([m()], tt.prototype, "viewInverseTransposeMatrix", null), r([m({ readOnly: true })], tt.prototype, "_projectionMatrixInternal", null), r([m()], tt.prototype, "relativeElevation", void 0), tt = $ = r([a("esri.views.3d.webgl.RenderCamera")], tt);
var it = tt;
var et = n7();
var rt = e6();
var st = n5();
var ot = n5();
var nt = y();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/lodRendering/BackedBufferObject.js
var r18 = class {
  constructor(r24, i16, s27) {
    this._elementSize = i16, this._buffer = E6.createVertex(r24, F3.STATIC_DRAW), this.resize(s27);
  }
  destroy() {
    this._buffer.dispose();
  }
  get elementSize() {
    return this._elementSize;
  }
  get capacity() {
    return this._capacity;
  }
  get array() {
    return this._array;
  }
  get buffer() {
    return this._buffer;
  }
  get usedMemory() {
    return this._array.byteLength + this._buffer.usedMemory;
  }
  copyRange(e15, t28, r24, i16 = 0) {
    const s27 = new Uint8Array(this.array, e15 * this.elementSize, (t28 - e15) * this.elementSize);
    new Uint8Array(r24.array, i16 * this.elementSize).set(s27);
  }
  transferAll() {
    this._buffer.setData(this._array);
  }
  transferRange(e15, t28) {
    const r24 = e15 * this._elementSize, i16 = t28 * this._elementSize;
    this._buffer.setSubData(new Uint8Array(this._array), r24, r24, i16);
  }
  resize(e15) {
    const t28 = e15 * this._elementSize, r24 = new ArrayBuffer(t28);
    this._array && (e15 >= this._capacity ? new Uint8Array(r24).set(new Uint8Array(this._array)) : new Uint8Array(r24).set(new Uint8Array(this._array).subarray(0, e15 * this._elementSize))), this._array = r24, this._buffer.setSize(t28), this._capacity = e15;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/lodRendering/RenderInstanceData.js
var c11 = class {
  constructor(t28) {
    this.modelOriginHi = t28.getField(e4.INSTANCEMODELORIGINHI, i2), this.modelOriginLo = t28.getField(e4.INSTANCEMODELORIGINLO, i2), this.model = t28.getField(e4.INSTANCEMODEL, l3), this.modelNormal = t28.getField(e4.INSTANCEMODELNORMAL, l3), this.featureAttribute = t28.getField(e4.INSTANCEFEATUREATTRIBUTE, c5), this.color = t28.getField(e4.INSTANCECOLOR, x2), this.objectAndLayerIdColor = t28.getField(e4.INSTANCEOBJECTANDLAYERIDCOLOR, x2);
  }
};
var f5 = class {
  constructor(t28, i16) {
    this._rctx = t28, this._instanceBufferLayout = i16, this._headIndex = 0, this._tailIndex = 0, this._firstIndex = null, this._captureFirstIndex = true, this._updating = false, this._prevHeadIndex = 0, this._resized = false, this._capacity = 1;
  }
  destroy() {
    this._buffer && this._buffer.destroy();
  }
  get buffer() {
    return this._buffer.buffer;
  }
  get view() {
    return this._view;
  }
  get capacity() {
    return this._capacity;
  }
  get size() {
    const t28 = this._headIndex, i16 = this._tailIndex;
    return t28 >= i16 ? t28 - i16 : t28 + this._capacity - i16;
  }
  get isEmpty() {
    return this._headIndex === this._tailIndex;
  }
  get isFull() {
    return this._tailIndex === (this._headIndex + 1) % this._capacity;
  }
  get headIndex() {
    return this._headIndex;
  }
  get tailIndex() {
    return this._tailIndex;
  }
  get firstIndex() {
    return this._firstIndex;
  }
  get usedMemory() {
    var _a;
    return ((_a = this._buffer) == null ? void 0 : _a.usedMemory) ?? 0;
  }
  reset() {
    this._headIndex = 0, this._tailIndex = 0, this._firstIndex = null;
  }
  startUpdateCycle() {
    this._captureFirstIndex = true;
  }
  beginUpdate() {
    s9(!this._updating, "already updating"), this._updating = true, this._prevHeadIndex = this._headIndex;
  }
  endUpdate() {
    s9(this._updating, "not updating"), this.size < r2 * this.capacity && this._shrink(), this._resized ? (this._buffer.transferAll(), this._resized = false) : this._transferRange(this._prevHeadIndex, this._headIndex), this._updating = false;
  }
  allocateHead() {
    s9(this._updating, "not updating"), this.isFull && this._grow();
    const t28 = this.headIndex;
    return this._captureFirstIndex && (this._firstIndex = t28, this._captureFirstIndex = false), this._incrementHead(), s9(this._headIndex !== this._tailIndex, "invalid pointers"), t28;
  }
  freeTail() {
    s9(this._updating, "not updating"), s9(this.size > 0, "invalid size");
    const t28 = this._tailIndex === this._firstIndex;
    this._incrementTail(), t28 && (this._firstIndex = this._tailIndex);
  }
  _grow() {
    const t28 = Math.max(u14, Math.floor(this._capacity * t));
    this._resize(t28);
  }
  _shrink() {
    const t28 = Math.max(u14, Math.floor(this._capacity * e));
    this._resize(t28);
  }
  _resize(t28) {
    if (s9(this._updating, "not updating"), t28 === this._capacity) return;
    const i16 = new r18(this._rctx, this._instanceBufferLayout.stride, t28);
    if (this._buffer) {
      this._firstIndex && (this._firstIndex = (this._firstIndex + this._capacity - this._tailIndex) % this._capacity);
      const t29 = this.size, e15 = this._compactInstances(i16);
      s9(e15 === t29, "invalid compaction"), this._buffer.destroy(), this._tailIndex = 0, this._headIndex = e15, this._prevHeadIndex = 0;
    }
    this._resized = true, this._capacity = t28, this._buffer = i16, this._view = new c11(this._instanceBufferLayout.createView(this._buffer.array));
  }
  _compactInstances(t28) {
    const i16 = this._headIndex, e15 = this._tailIndex;
    return e15 < i16 ? (this._buffer.copyRange(e15, i16, t28), i16 - e15) : e15 > i16 ? (this._buffer.copyRange(e15, this._capacity, t28), i16 > 0 && this._buffer.copyRange(0, i16, t28, this._capacity - e15), i16 + (this._capacity - e15)) : 0;
  }
  _incrementHead(t28 = 1) {
    this._headIndex = (this._headIndex + t28) % this._capacity;
  }
  _incrementTail(t28 = 1) {
    this._tailIndex = (this._tailIndex + t28) % this._capacity;
  }
  _transferRange(t28, i16) {
    t28 < i16 ? this._buffer.transferRange(t28, i16) : t28 > i16 && (i16 > 0 && this._buffer.transferRange(0, i16), this._buffer.transferRange(t28, this._capacity));
  }
};
var u14 = 64;

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/lodRendering/InstanceData.js
var F4;
function C5(t28) {
  let e15 = H2().mat4f64(e4.LOCALTRANSFORM).mat4f64(e4.GLOBALTRANSFORM).vec4f64(e4.BOUNDINGSPHERE).vec3f64(e4.MODELORIGIN).mat3f(e4.INSTANCEMODEL).mat3f(e4.INSTANCEMODELNORMAL).vec2f(e4.MODELSCALEFACTORS);
  return t28.includes(e4.FEATUREATTRIBUTE) && (e15 = e15.vec4f(e4.FEATUREATTRIBUTE)), t28.includes(e4.COLOR) && (e15 = e15.vec4u8(e4.COLOR)), t28.includes(e4.OBJECTANDLAYERIDCOLOR) && (e15 = e15.vec4u8(e4.OBJECTANDLAYERIDCOLOR)), e15 = e15.u8(e4.STATE).u8(e4.LODLEVEL), e15;
}
!function(t28) {
  t28[t28.ALLOCATED = 1] = "ALLOCATED", t28[t28.DEFAULT_ACTIVE = 2] = "DEFAULT_ACTIVE", t28[t28.VISIBLE = 4] = "VISIBLE", t28[t28.HIGHLIGHT = 8] = "HIGHLIGHT", t28[t28.HIGHLIGHT_ACTIVE = 16] = "HIGHLIGHT_ACTIVE", t28[t28.REMOVE = 32] = "REMOVE", t28[t28.TRANSFORM_CHANGED = 64] = "TRANSFORM_CHANGED", t28[t28.ACTIVE = 18] = "ACTIVE";
}(F4 || (F4 = {}));
var R4 = class {
  constructor(t28) {
    this.localTransform = t28.getField(e4.LOCALTRANSFORM, b5), this.globalTransform = t28.getField(e4.GLOBALTRANSFORM, b5), this.modelOrigin = t28.getField(e4.MODELORIGIN, T), this.model = t28.getField(e4.INSTANCEMODEL, l3), this.modelNormal = t28.getField(e4.INSTANCEMODELNORMAL, l3), this.modelScaleFactors = t28.getField(e4.MODELSCALEFACTORS, u8), this.boundingSphere = t28.getField(e4.BOUNDINGSPHERE, h3), this.featureAttribute = t28.getField(e4.FEATUREATTRIBUTE, c5), this.color = t28.getField(e4.COLOR, x2), this.objectAndLayerIdColor = t28.getField(e4.OBJECTANDLAYERIDCOLOR, x2), this.state = t28.getField(e4.STATE, d3), this.lodLevel = t28.getField(e4.LODLEVEL, d3);
  }
};
var b9 = class extends b2 {
  constructor(t28, e15) {
    super(t28), this.events = new o(), this._capacity = 0, this._size = 0, this._next = 0, this._highlightGroupMap = /* @__PURE__ */ new Map(), this._highlightGroupMapPrev = /* @__PURE__ */ new Map(), this._layout = C5(e15), this._capacity = u14, this._buffer = this._layout.createBuffer(this._capacity), this._view = new R4(this._buffer);
  }
  get capacity() {
    return this._capacity;
  }
  get size() {
    return this._size;
  }
  get view() {
    return this._view;
  }
  addInstance() {
    this._size + 1 > this._capacity && this._grow();
    const t28 = this._findSlot();
    return this._view.state.set(t28, F4.ALLOCATED), this._size++, this.events.emit("instances-changed"), t28;
  }
  removeInstance(t28) {
    const e15 = this._view.state;
    s9(t28 >= 0 && t28 < this._capacity && !!(e15.get(t28) & F4.ALLOCATED), "invalid instance handle"), this._getStateFlag(t28, F4.ACTIVE) ? this._setStateFlags(t28, F4.REMOVE) : this.freeInstance(t28), this.events.emit("instances-changed");
  }
  freeInstance(t28) {
    const e15 = this._view.state;
    s9(t28 >= 0 && t28 < this._capacity && !!(e15.get(t28) & F4.ALLOCATED), "invalid instance handle"), e15.set(t28, 0), this._size--;
  }
  setLocalTransform(t28, e15, s27 = true) {
    this._view.localTransform.setMat(t28, e15), s27 && this.updateModelTransform(t28);
  }
  getLocalTransform(t28, e15) {
    this._view.localTransform.getMat(t28, e15);
  }
  setGlobalTransform(t28, e15, s27 = true) {
    this._view.globalTransform.setMat(t28, e15), s27 && this.updateModelTransform(t28);
  }
  getGlobalTransform(t28, e15) {
    this._view.globalTransform.getMat(t28, e15);
  }
  updateModelTransform(t28) {
    const e15 = this._view, s27 = G2, i16 = y2;
    e15.localTransform.getMat(t28, D3), e15.globalTransform.getMat(t28, N7);
    const a21 = c3(N7, N7, D3);
    o5(s27, a21[12], a21[13], a21[14]), e15.modelOrigin.setVec(t28, s27), n11(i16, a21), e15.model.setMat(t28, i16);
    const r24 = g4(G2, a21);
    r24.sort(), e15.modelScaleFactors.set(t28, 0, r24[1]), e15.modelScaleFactors.set(t28, 1, r24[2]), s10(i16, i16), u9(i16, i16), e15.modelNormal.setMat(t28, i16), this._setStateFlags(t28, F4.TRANSFORM_CHANGED), this.events.emit("instance-transform-changed", { index: t28 });
  }
  getModelTransform(t28, e15) {
    const s27 = this._view;
    s27.model.getMat(t28, y2), s27.modelOrigin.getVec(t28, G2), e15[0] = y2[0], e15[1] = y2[1], e15[2] = y2[2], e15[3] = 0, e15[4] = y2[3], e15[5] = y2[4], e15[6] = y2[5], e15[7] = 0, e15[8] = y2[6], e15[9] = y2[7], e15[10] = y2[8], e15[11] = 0, e15[12] = G2[0], e15[13] = G2[1], e15[14] = G2[2], e15[15] = 1;
  }
  applyShaderTransformation(t28, e15) {
    null != this.shaderTransformation && this.shaderTransformation.applyTransform(this, t28, e15);
  }
  getCombinedModelTransform(t28, e15) {
    return this.getModelTransform(t28, e15), null != this.shaderTransformation && this.shaderTransformation.applyTransform(this, t28, e15), e15;
  }
  getCombinedLocalTransform(t28, e15) {
    this._view.localTransform.getMat(t28, e15), null != this.shaderTransformation && this.shaderTransformation.applyTransform(this, t28, e15);
  }
  getCombinedMaxScaleFactor(t28) {
    let e15 = this._view.modelScaleFactors.get(t28, 1);
    return null != this.shaderTransformation && (this.shaderTransformation.scaleFactor(G2, this, t28), e15 *= Math.max(G2[0], G2[1], G2[2])), e15;
  }
  getCombinedMedianScaleFactor(t28) {
    let e15 = this._view.modelScaleFactors.get(t28, 0);
    return null != this.shaderTransformation && (this.shaderTransformation.scaleFactor(G2, this, t28), e15 *= w(G2[0], G2[1], G2[2])), e15;
  }
  getModel(t28, e15) {
    this._view.model.getMat(t28, e15);
  }
  setFeatureAttribute(t28, e15) {
    this._view.featureAttribute.setVec(t28, e15);
  }
  getFeatureAttribute(t28, e15) {
    this._view.featureAttribute.getVec(t28, e15);
  }
  setColor(t28, e15) {
    this._view.color.setVec(t28, e15);
  }
  setObjectAndLayerIdColor(t28, e15) {
    this._view.objectAndLayerIdColor.setVec(t28, e15);
  }
  setVisible(t28, e15) {
    e15 !== this.getVisible(t28) && (this._setStateFlag(t28, F4.VISIBLE, e15), this.events.emit("instance-visibility-changed", { index: t28 }));
  }
  getVisible(t28) {
    return this._getStateFlag(t28, F4.VISIBLE);
  }
  setHighlight(t28, e15, s27) {
    let i16 = this._highlightGroupMap.get(t28);
    e15 ? (i16 || (i16 = /* @__PURE__ */ new Set(), this._highlightGroupMap.set(t28, i16)), i16.add(s27) && (this._setStateFlag(t28, F4.HIGHLIGHT, true), this.events.emit("instance-highlight-changed"))) : (i16 == null ? void 0 : i16.delete(s27)) && (0 === i16.size && (this._highlightGroupMap.delete(t28), this._setStateFlag(t28, F4.HIGHLIGHT, false)), this.events.emit("instance-highlight-changed"));
  }
  getHighlight(t28) {
    return this._getStateFlag(t28, F4.HIGHLIGHT);
  }
  foreachHighlightGroupPrev(t28, e15) {
    var _a;
    (_a = this._highlightGroupMapPrev.get(t28)) == null ? void 0 : _a.forEach(e15), this._highlightGroupMapPrev.delete(t28);
  }
  foreachHighlightGroup(t28, e15) {
    const s27 = this._highlightGroupMap.get(t28);
    s27 == null ? void 0 : s27.forEach(e15), s27 ? this._highlightGroupMapPrev.set(t28, new Set(s27)) : this._highlightGroupMapPrev.delete(t28);
  }
  getState(t28) {
    return this._view.state.get(t28);
  }
  getLodLevel(t28) {
    return this._view.lodLevel.get(t28);
  }
  countFlags(t28) {
    let e15 = 0;
    for (let s27 = 0; s27 < this._capacity; ++s27) {
      this.getState(s27) & t28 && ++e15;
    }
    return e15;
  }
  _setStateFlags(t28, e15) {
    const s27 = this._view.state;
    e15 = s27.get(t28) | e15, s27.set(t28, e15);
  }
  _clearStateFlags(t28, e15) {
    const s27 = this._view.state;
    e15 = s27.get(t28) & ~e15, s27.set(t28, e15);
  }
  _setStateFlag(t28, e15, s27) {
    s27 ? this._setStateFlags(t28, e15) : this._clearStateFlags(t28, e15);
  }
  _getStateFlag(t28, e15) {
    return !!(this._view.state.get(t28) & e15);
  }
  _grow() {
    this._capacity = Math.max(u14, Math.floor(this._capacity * t)), this._buffer = this._layout.createBuffer(this._capacity).copyFrom(this._buffer), this._view = new R4(this._buffer);
  }
  _findSlot() {
    const t28 = this._view.state;
    let e15 = this._next;
    for (; t28.get(e15) & F4.ALLOCATED; ) e15 = e15 + 1 === this._capacity ? 0 : e15 + 1;
    return this._next = e15 + 1 === this._capacity ? 0 : e15 + 1, e15;
  }
};
function w(t28, e15, s27) {
  return Math.max(Math.min(t28, e15), Math.min(Math.max(t28, e15), s27));
}
r([m({ constructOnly: true })], b9.prototype, "shaderTransformation", void 0), r([m()], b9.prototype, "_size", void 0), r([m({ readOnly: true })], b9.prototype, "size", null), b9 = r([a("esri.views.3d.webgl-engine.lib.lodRendering.InstanceData")], b9);
var G2 = n5();
var y2 = e5();
var D3 = e6();
var N7 = e6();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/lodRendering/InstanceOctree.js
var n24 = class extends Y {
  constructor(e15, r24) {
    super((t28) => T2(this._instanceData.view.boundingSphere.getVec(t28, this._tmpSphere)), { maximumDepth: 25 }), this._instanceData = e15, this._boundingSphere = r24, this._tmpSphere = E8(), this._tmpMat4 = e6();
  }
  addInstance(t28) {
    const s27 = this._instanceData.view.boundingSphere, i16 = this._instanceData.getCombinedModelTransform(t28, this._tmpMat4);
    E4(U(this._tmpSphere), this._boundingSphere.center, i16), this._tmpSphere[3] = this._boundingSphere.radius * m3(i16), s27.setVec(t28, this._tmpSphere), this.add([t28]);
  }
  removeInstance(t28) {
    this.remove([t28]);
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/lodRendering/LevelSelector.js
var e11 = class {
  constructor(e15, i16) {
    this._worldSpaceRadius = e15, this._minScreenSpaceRadii = i16;
  }
  selectLevel(e15, i16, t28) {
    const c18 = t28.computeScreenPixelSizeAt(e15), r24 = this._worldSpaceRadius * i16 / c18;
    let s27 = 0;
    for (let a21 = 1; a21 < this._minScreenSpaceRadii.length; ++a21) r24 >= this._minScreenSpaceRadii[a21] && (s27 = a21);
    return s27;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/Intersector.js
var B4 = class {
  get ray() {
    return this._ray;
  }
  get distanceInRenderSpace() {
    return null != this.dist ? (g3(M3, this.ray.direction, this.dist), r10(M3)) : null;
  }
  getIntersectionPoint(t28) {
    return !!o9(this) && (g3(M3, this.ray.direction, this.dist), u7(t28, this.ray.origin, M3), true);
  }
  getTransformedNormal(t28) {
    return s8(R5, this.normal), R5[3] = 0, z2(R5, R5, this.transformation), s8(t28, R5), A2(t28, t28);
  }
  constructor(t28) {
    this.intersector = i3.OBJECT, this.normal = n5(), this.transformation = e6(), this._ray = b7(), this.init(t28);
  }
  init(t28) {
    this.dist = null, this.target = null, this.drapedLayerOrder = null, this.drapedLayerGraphicOrder = null, this.intersector = i3.OBJECT, v2(t28, this._ray);
  }
  set(r24, s27, e15, a21, n30, h15, l12) {
    this.intersector = r24, this.dist = e15, s8(this.normal, a21 ?? N), n6(this.transformation, n30 ?? o6), this.target = s27, this.drapedLayerOrder = h15, this.drapedLayerGraphicOrder = l12;
  }
  copy(r24) {
    v2(r24.ray, this._ray), this.intersector = r24.intersector, this.dist = r24.dist, this.target = r24.target, this.drapedLayerOrder = r24.drapedLayerOrder, this.drapedLayerGraphicOrder = r24.drapedLayerGraphicOrder, s8(this.normal, r24.normal), n6(this.transformation, r24.transformation);
  }
};
function G3(t28) {
  return new B4(t28);
}
var M3 = n5();
var R5 = n7();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/VertexArrayObject.js
var r20 = class extends o10 {
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/lodRendering/LodComponentData.js
function f6(t28, e15, r24, s27 = null) {
  const o28 = t28.createBufferWriter(), n30 = o28.vertexBufferLayout, i16 = o28.elementCount(e15), a21 = n30.createBuffer(i16);
  return o28.write(null, null, e15, s27, a21, 0), { material: t28, vertexBufferLayout: n30, buffer: a21.buffer, elementCount: i16, boundingInfo: r24 };
}
var d11 = class {
  constructor(o28, n30) {
    const i16 = o28.renderContext.rctx, u19 = n30.geometry;
    let d14 = null;
    d14 = u19 instanceof r13 ? f6(u19.material, u19.attributes, u19.boundingInfo) : u19;
    const c18 = d14.material;
    this._materials = o28.materials, c18.setParameters({ instancedDoublePrecision: true }), this.geometry = u19, this.material = c18, this.glMaterials = new t13(c18, this._materials), this.vertexBufferLayout = d14.vertexBufferLayout, this.vbo = E6.createVertex(i16, F3.STATIC_DRAW, d14.buffer), this.vao = new r20(i16, O3, /* @__PURE__ */ new Map([["geometry", t3(d14.vertexBufferLayout)]]), /* @__PURE__ */ new Map([["geometry", this.vbo]])), this.vertexCount = d14.elementCount;
  }
  destroy() {
    this.glMaterials.dispose(), this.vbo.dispose(), this.vao.dispose();
  }
  get boundingInfo() {
    return this.geometry.boundingInfo;
  }
  get triangleCount() {
    return this.vertexCount / 3;
  }
  intersect(t28, r24, s27, a21, m9, l12, f10, d14) {
    if (!(this.geometry instanceof r13)) return;
    const c18 = this.geometry.id;
    this.material.intersect(this.geometry, t28.transform.transform, t28, s27, a21, (e15, s28, a22, p14, y6) => {
      if (e15 >= 0) {
        if (null != r24 && !r24(t28.rayBegin, t28.rayEnd, e15)) return;
        const p15 = new s12(l12.layerUid, l12.graphicUid(m9), c18, a22, f10, d14);
        if ((null == t28.results.min.drapedLayerOrder || y6 >= t28.results.min.drapedLayerOrder) && (null == t28.results.min.dist || e15 < t28.results.min.dist) && t28.results.min.set(i3.LOD, p15, e15, s28, t28.transform.transform, y6), t28.options.store !== e9.MIN && (null == t28.results.max.drapedLayerOrder || y6 >= t28.results.max.drapedLayerOrder) && (null == t28.results.max.dist || e15 > t28.results.max.dist) && t28.results.max.set(i3.LOD, p15, e15, s28, t28.transform.transform, y6), t28.options.store === e9.ALL) {
          const r25 = G3(t28.results.min.ray);
          r25.set(i3.LOD, p15, e15, s28, t28.transform.transform, y6), t28.results.all.push(r25);
        }
      }
    });
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/lodRendering/LodLevel.js
var a14 = class _a {
  static async create(e15, r24, i16) {
    const s27 = await Promise.allSettled(r24.components.map((o28) => e15.controller.schedule(() => new d11(e15, o28), i16))), c18 = s27.map((o28) => "fulfilled" === o28.status ? o28.value : null).filter(F);
    if (c(i16) || c18.length !== s27.length) {
      c18.forEach((o28) => o28.destroy()), s2(i16);
      for (const o28 of s27) if ("rejected" === o28.status) throw o28.reason;
    }
    return new _a(r24.minScreenSpaceRadius, c18);
  }
  constructor(o28, n30) {
    this.minScreenSpaceRadius = o28, this.components = n30;
  }
  destroy() {
    this.components.forEach((o28) => o28.destroy());
  }
  intersect(o28, n30, t28, e15, r24, i16, s27) {
    this.components.forEach((c18) => c18.intersect(o28, n30, t28, e15, r24, i16, this.boundingSphere, s27));
  }
  get boundingBox() {
    if (null == this._boundingBox) {
      const o28 = q();
      this.components.forEach((n30) => {
        null != n30.boundingInfo && (l2(o28, n30.boundingInfo.bbMin), l2(o28, n30.boundingInfo.bbMax));
      }), this._boundingBox = o28;
    }
    return this._boundingBox;
  }
  get boundingSphere() {
    if (null == this._boundingSphere) {
      const o28 = this.boundingBox, n30 = n5();
      p2(o28, n30), this._boundingSphere = { center: n30, radius: 0.5 * F2(o28) };
    }
    return this._boundingSphere;
  }
  get triangleCount() {
    return this.components.reduce((o28, n30) => o28 + n30.triangleCount, 0);
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/renderers/utils.js
function l7(t28, n30, r24, l12, i16) {
  o22[0] = t28.get(n30, 0), o22[1] = t28.get(n30, 1), o22[2] = t28.get(n30, 2), t10(o22, s19, 3), r24.set(i16, 0, s19[0]), l12.set(i16, 0, s19[1]), r24.set(i16, 1, s19[2]), l12.set(i16, 1, s19[3]), r24.set(i16, 2, s19[4]), l12.set(i16, 2, s19[5]);
}
var o22 = n5();
var s19 = new Float32Array(6);

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/lodRendering/LodRenderer.js
var G4 = (e15) => {
  const t28 = e15.baseBoundingSphere.radius, r24 = e15.levels.map((e16) => e16.minScreenSpaceRadius);
  return new e11(t28, r24);
};
var q2 = class extends o19 {
  constructor(e15, t28) {
    super(e15), this.type = i3.LOD, this.isGround = false, this._levels = [], this._defaultRenderInstanceData = new Array(), this._highlightRenderInstanceDataMap = /* @__PURE__ */ new Map(), this._instanceIndex = 0, this._cycleStartIndex = 0, this._slicePlane = false, this._camera = new it(), this._updateCyclesWithStaticCamera = -1, this._needFullCycle = false, this.produces = /* @__PURE__ */ new Map([[A3.OPAQUE_MATERIAL, (e16) => this._produces(e16)], [A3.TRANSPARENT_MATERIAL, (e16) => !!this._hasTransparentLevels() && this._produces(e16)]]), this._instanceData = new b9({ shaderTransformation: e15.shaderTransformation }, e15.optionalFields), this.addHandles(t28.registerTask(g2.LOD_RENDERER, this));
  }
  initialize() {
    this._instanceBufferLayout = k(this.optionalFields), this._glInstanceBufferLayout = t3(this._instanceBufferLayout, 1), this.addHandles([this._instanceData.events.on("instances-changed", () => this._requestUpdateCycle()), this._instanceData.events.on("instance-transform-changed", ({ index: e15 }) => {
      this._requestUpdateCycle(), this.metadata.notifyGraphicGeometryChanged(e15);
    }), this._instanceData.events.on("instance-visibility-changed", ({ index: e15 }) => {
      this._requestUpdateCycle(true), this.metadata.notifyGraphicVisibilityChanged(e15);
    }), this._instanceData.events.on("instance-highlight-changed", () => this._requestUpdateCycle(true))]);
  }
  get _allRenderInstanceData() {
    const e15 = [this._defaultRenderInstanceData];
    for (const t28 of this._highlightRenderInstanceDataMap) e15.push(t28[1]);
    return e15;
  }
  get _enableLevelSelection() {
    return this.symbol.levels.length > 1;
  }
  get levels() {
    return this._levels;
  }
  get baseBoundingBox() {
    return this._levels[this._levels.length - 1].boundingBox;
  }
  get baseBoundingSphere() {
    return this._levels[this._levels.length - 1].boundingSphere;
  }
  get baseMaterial() {
    return this._levels[this._levels.length - 1].components[0].material;
  }
  get slicePlaneEnabled() {
    return this._slicePlane;
  }
  set slicePlaneEnabled(e15) {
    this._slicePlane = e15;
  }
  get layerUid() {
    return this.metadata.layerUid;
  }
  get instanceData() {
    return this._instanceData;
  }
  get hasEmissions() {
    return this.baseMaterial.hasEmissions;
  }
  get usedMemory() {
    return this._allRenderInstanceData.reduce((e15, t28) => t28.reduce((e16, t29) => e16 + t29.usedMemory, e15), 0);
  }
  get renderStats() {
    const e15 = this._instanceData.size, t28 = [];
    return this._levels.forEach((e16, r24) => {
      const n30 = this._allRenderInstanceData[0][r24].size + this._allRenderInstanceData[1][r24].size, a21 = e16.triangleCount;
      t28.push({ renderedInstances: n30, renderedTriangles: n30 * a21, trianglesPerInstance: a21 });
    }), { totalInstances: e15, renderedInstances: t28.reduce((e16, t29) => e16 + t29.renderedInstances, 0), renderedTriangles: t28.reduce((e16, t29) => e16 + t29.renderedTriangles, 0), levels: t28 };
  }
  _createRenderInstanceDataArray(e15 = []) {
    const { rctx: t28 } = this._context.renderContext;
    return this.symbol.levels.map((r24) => {
      e15.push(new f5(t28, this._instanceBufferLayout));
    }), e15;
  }
  async initializeRenderContext(e15, r24) {
    this._context = e15, this._createRenderInstanceDataArray(this._defaultRenderInstanceData);
    const n30 = await Promise.allSettled(this.symbol.levels.map((t28) => a14.create(e15, t28, r24))), a21 = n30.map((e16) => "fulfilled" === e16.status ? e16.value : null).filter(F);
    if (c(r24) || a21.length !== n30.length) {
      a21.forEach((e16) => e16.destroy()), s2(r24);
      for (const e16 of n30) if ("rejected" === e16.status) throw e16.reason;
    }
    this._levels = a21, this._levelSelector = G4(this);
  }
  uninitializeRenderContext() {
    this._invalidateOctree(), this._levels.forEach((e15) => e15.destroy()), this._defaultRenderInstanceData.forEach((e15) => e15.destroy()), this._highlightRenderInstanceDataMap.forEach((e15) => e15.forEach((e16) => e16.destroy()));
  }
  _hasTransparentLevels() {
    return this._levels.some((e15) => e15.components.some((e16) => {
      const t28 = e16.material.produces.get(A3.TRANSPARENT_MATERIAL);
      return t28 == null ? void 0 : t28(n15.Color);
    }));
  }
  hasHighlights() {
    return n2(this._highlightRenderInstanceDataMap, (e15) => e15.some((e16) => e16.size > 0));
  }
  _produces(e15) {
    return e15 !== n15.Highlight && e15 !== n15.ShadowHighlight || this.hasHighlights();
  }
  prepareRender(e15) {
    if (!t8.LOD_INSTANCE_RENDERER_DISABLE_UPDATES) {
      if (this._enableLevelSelection) {
        const t28 = e15.bind.contentCamera.equals(this._camera);
        this._camera.copyFrom(e15.bind.contentCamera), t28 || this._requestUpdateCycle();
      }
      this._needFullCycle && (this.runTask(C2), this._needFullCycle = false);
    }
  }
  acquireTechniques(e15) {
    if (!this.baseMaterial.visible || !this.baseMaterial.isVisibleForOutput(e15.output)) return null;
    const t28 = this._getInstanceDatas(e15);
    if (!t28) return null;
    const r24 = new Array(), n30 = this.levels;
    return t28.forEach((t29) => n30.forEach(({ components: n31 }, a21) => n31.forEach((n32) => r24.push(this._beginComponent(e15, t29[a21], n32))))), r24;
  }
  render(e15, t28) {
    const r24 = this._getInstanceDatas(e15);
    if (!r24 || null == t28) return;
    let n30 = 0;
    e15.rctx.bindVAO();
    const a21 = this.levels;
    r24.forEach((r25) => a21.forEach(({ components: a22 }, s27) => a22.forEach((a23) => this._renderComponent(e15, t28[n30++], r25[s27], a23, s27))));
  }
  _getInstanceDatas(e15) {
    const { output: t28, bind: r24 } = e15, n30 = t28 === n15.Highlight, a21 = !n30 && t28 !== n15.ShadowHighlight, s27 = t28 !== n15.ShadowExcludeHighlight;
    if (a21) return s27 ? this._allRenderInstanceData : [this._defaultRenderInstanceData];
    if (s27) {
      if (n30) {
        const { highlightGroupName: e17 } = r24;
        if (!e17) return null;
        const t29 = this._highlightRenderInstanceDataMap.get(e17);
        return t29 ? [t29] : null;
      }
      const e16 = [];
      for (const t29 of this._highlightRenderInstanceDataMap) e16.push(t29[1]);
      return e16;
    }
    return null;
  }
  intersect(e15, t28, r24, n30) {
    if (!this.baseMaterial.visible || null == this._octree) return;
    const a21 = n5();
    c4(a21, n30, r24);
    const s27 = (a22) => {
      this._instanceData.getCombinedModelTransform(a22, Y2), e15.transform.set(Y2), E4(J2, r24, e15.transform.inverse), E4(Q, n30, e15.transform.inverse);
      const s28 = this._instanceData.getState(a22), i16 = this._instanceData.getLodLevel(a22), o28 = this._levels.length;
      s9(!!(s28 & F4.ACTIVE), "invalid instance state"), s9(i16 >= 0 && i16 < o28, "invaid lod level"), this._levels[i16].intersect(e15, t28, J2, Q, a22, this.metadata, o28);
    };
    this.baseMaterial.parameters.verticalOffset ? this._octree.forEach(s27) : this._octree.forEachAlongRay(r24, a21, s27);
  }
  notifyShaderTransformationChanged() {
    this._invalidateOctree(), this._requestUpdateCycle();
  }
  get _octree() {
    var _a;
    if (null == this._octreeCached) {
      const e15 = this._instanceData, t28 = (_a = e15.view) == null ? void 0 : _a.state;
      if (!t28) return null;
      this._octreeCached = new n24(e15, this.baseBoundingSphere);
      for (let r24 = 0; r24 < e15.capacity; ++r24) t28.get(r24) & F4.ACTIVE && this._octreeCached.addInstance(r24);
    }
    return this._octreeCached;
  }
  _invalidateOctree() {
    this._octreeCached = u(this._octreeCached);
  }
  queryDepthRange(e15) {
    if (null == this._octree) return { near: 1 / 0, far: -1 / 0 };
    const t28 = e15.viewForward, r24 = this._octree.findClosest(t28, Y.DepthOrder.FRONT_TO_BACK, e15.frustum), n30 = this._octree.findClosest(t28, Y.DepthOrder.BACK_TO_FRONT, e15.frustum);
    if (null == r24 || null == n30) return { near: 1 / 0, far: -1 / 0 };
    const a21 = e15.eye, s27 = this._instanceData.view;
    s27.boundingSphere.getVec(r24, K2), c4(K2, K2, a21);
    const i16 = P2(K2, t28) - K2[3];
    s27.boundingSphere.getVec(n30, K2), c4(K2, K2, a21);
    const o28 = P2(K2, t28) + K2[3];
    return { near: Math.max(e15.near, i16), far: Math.min(e15.far, o28) };
  }
  _requestUpdateCycle(e15 = false) {
    this._updateCyclesWithStaticCamera = -1, this._cycleStartIndex = this._instanceIndex, e15 && (this._needFullCycle = true, this._context.requestRender());
  }
  _startUpdateCycle() {
    this._updateCyclesWithStaticCamera++, this._allRenderInstanceData.forEach((e15) => e15.forEach((e16) => e16.startUpdateCycle()));
  }
  get running() {
    return this._instanceData.size > 0 && this._updateCyclesWithStaticCamera < 1;
  }
  runTask(e15) {
    const { _enableLevelSelection: t28, _camera: n30, _levelSelector: a21 } = this;
    this._allRenderInstanceData.forEach((e16) => e16.forEach((e17) => e17.beginUpdate()));
    const s27 = this._instanceData, i16 = s27.view;
    let o28 = s27.size;
    const l12 = s27.capacity;
    let c18 = this._instanceIndex;
    const h15 = Math.ceil(l12 / 500);
    for (let d14 = 0; d14 < o28 && !e15.done; ++d14) {
      c18 === this._cycleStartIndex && this._startUpdateCycle();
      const d15 = i16.state.get(c18);
      let u19 = 0;
      if (!(d15 & F4.ALLOCATED)) {
        c18 = c18 + 1 === l12 ? 0 : c18 + 1, o28++;
        continue;
      }
      const f10 = i16.lodLevel.get(c18);
      if (d15 & F4.DEFAULT_ACTIVE && this._defaultRenderInstanceData[f10].freeTail(), d15 & F4.HIGHLIGHT_ACTIVE && s27.foreachHighlightGroupPrev(c18, (e16) => {
        const t29 = this._highlightRenderInstanceDataMap.get(e16);
        if (!t29) throw new s("Internal error in lodRenderer");
        t29[f10].freeTail();
      }), d15 & F4.REMOVE) s27.freeInstance(c18);
      else if (d15 & F4.VISIBLE) {
        let e16 = 0;
        t28 && (i16.modelOrigin.getVec(c18, W3), e16 = a21.selectLevel(W3, s27.getCombinedMedianScaleFactor(c18), n30)), u19 = d15 & ~(F4.ACTIVE | F4.TRANSFORM_CHANGED), e16 >= 0 && (d15 & F4.HIGHLIGHT ? (s27.foreachHighlightGroup(c18, (t29) => {
          let n31 = this._highlightRenderInstanceDataMap.get(t29);
          if (n31 || (n31 = this._createRenderInstanceDataArray(), n31.forEach((e17) => e17.beginUpdate()), this._highlightRenderInstanceDataMap.set(t29, n31)), e16 >= n31.length) throw new s(`LodRenderer internal error - missing lodLevel ${e16}`);
          P4(n31[e16], i16, c18);
        }), u19 |= F4.HIGHLIGHT_ACTIVE) : (P4(this._defaultRenderInstanceData[e16], i16, c18), u19 |= F4.DEFAULT_ACTIVE)), i16.state.set(c18, u19), i16.lodLevel.set(c18, e16);
      } else u19 = d15 & ~(F4.ACTIVE | F4.TRANSFORM_CHANGED), i16.state.set(c18, u19);
      if (null != this._octreeCached) {
        const e16 = !!(d15 & F4.ACTIVE), t29 = !!(u19 & F4.ACTIVE);
        !e16 && t29 ? this._octreeCached.addInstance(c18) : e16 && !t29 ? this._octreeCached.removeInstance(c18) : e16 && t29 && d15 & F4.TRANSFORM_CHANGED && (this._octreeCached.removeInstance(c18), this._octreeCached.addInstance(c18));
      }
      c18 = c18 + 1 === l12 ? 0 : c18 + 1, c18 % h15 == 0 && e15.madeProgress();
    }
    this._instanceIndex = c18, this._allRenderInstanceData.forEach((e16) => e16.forEach((e17) => e17.endUpdate())), this._context.requestRender();
  }
  _beginComponent(e15, t28, r24) {
    if (0 === t28.size) return null;
    const n30 = r24.glMaterials.load(e15.rctx, e15.bind.slot, e15.output);
    return n30 == null ? void 0 : n30.beginSlot(e15.bind);
  }
  _renderComponent(e15, t28, r24, n30, a21) {
    if (!t28) return;
    const { bind: s27, rctx: i16 } = e15;
    i16.runAppleAmdDriverHelper();
    const o28 = i16.bindTechnique(t28, s27, n30.material.parameters, $2);
    i16.bindVAO(n30.vao), t28.ensureAttributeLocations(n30.vao), t8.LOD_INSTANCE_RENDERER_COLORIZE_BY_LEVEL && e15.output === n15.Color && (o28.setUniform4fv("externalColor", Z3[Math.min(a21, Z3.length - 1)]), o28.setUniform1i("colorMixMode", o11.replace));
    const l12 = r24.capacity, c18 = r24.headIndex, h15 = r24.tailIndex, d14 = r24.firstIndex, u19 = this._glInstanceBufferLayout, f10 = (e16, a22) => {
      E7(i16, O3, r24.buffer, u19, e16), i16.drawArraysInstanced(t28.primitiveType, 0, n30.vertexCount, a22 - e16), _2(i16, O3, r24.buffer, u19);
    };
    n30.material.parameters.transparent && null != d14 ? c18 > h15 ? (s9(d14 >= h15 && d14 <= c18, "invalid firstIndex"), f10(d14, c18), f10(h15, d14)) : c18 < h15 && (d14 <= c18 ? (s9(d14 >= 0 && d14 <= c18, "invalid firstIndex"), f10(d14, c18), f10(h15, l12), f10(0, d14)) : (s9(d14 >= h15 && d14 <= l12, "invalid firstIndex"), f10(d14, l12), f10(0, c18), f10(h15, d14))) : c18 > h15 ? f10(h15, c18) : c18 < h15 && (f10(0, c18), f10(h15, l12)), i16.bindVAO(null);
  }
};
function P4(e15, t28, r24) {
  const n30 = e15.allocateHead();
  z4(t28, r24, e15.view, n30);
}
function z4(e15, t28, r24, n30) {
  l7(e15.modelOrigin, t28, r24.modelOriginHi, r24.modelOriginLo, n30), r24.model.copyFrom(n30, e15.model, t28), r24.modelNormal.copyFrom(n30, e15.modelNormal, t28), e15.color && r24.color && r24.color.copyFrom(n30, e15.color, t28), e15.objectAndLayerIdColor && r24.objectAndLayerIdColor && r24.objectAndLayerIdColor.copyFrom(n30, e15.objectAndLayerIdColor, t28), e15.featureAttribute && r24.featureAttribute && r24.featureAttribute.copyFrom(n30, e15.featureAttribute, t28);
}
function k(e15) {
  let t28 = H2().vec3f(e4.INSTANCEMODELORIGINHI).vec3f(e4.INSTANCEMODELORIGINLO).mat3f(e4.INSTANCEMODEL).mat3f(e4.INSTANCEMODELNORMAL);
  return null != e15 && e15.includes("featureAttribute") && (t28 = t28.vec4f(e4.INSTANCEFEATUREATTRIBUTE)), null != e15 && e15.includes("color") && (t28 = t28.vec4u8(e4.INSTANCECOLOR)), null != e15 && e15.includes("objectAndLayerIdColor") && (t28 = t28.vec4u8(e4.INSTANCEOBJECTANDLAYERIDCOLOR)), t28;
}
r([m({ constructOnly: true })], q2.prototype, "symbol", void 0), r([m({ constructOnly: true })], q2.prototype, "optionalFields", void 0), r([m({ constructOnly: true })], q2.prototype, "metadata", void 0), r([m({ constructOnly: true })], q2.prototype, "shaderTransformation", void 0), r([m()], q2.prototype, "_instanceData", void 0), r([m()], q2.prototype, "_cycleStartIndex", void 0), r([m({ readOnly: true })], q2.prototype, "_enableLevelSelection", null), r([m()], q2.prototype, "_updateCyclesWithStaticCamera", void 0), r([m({ readOnly: true })], q2.prototype, "running", null), q2 = r([a("esri.views.3d.webgl-engine.lib.lodRendering.LodRenderer")], q2);
var W3 = n5();
var K2 = n7();
var Y2 = e6();
var J2 = n5();
var Q = n5();
var Z3 = [r8(1, 0, 1, 1), r8(0, 0, 1, 1), r8(0, 1, 0, 1), r8(1, 1, 0, 1), r8(1, 0, 0, 1)];
var $2 = new N5();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/lodRendering/LodResources.js
var n25 = class {
  constructor(e15, t28 = null) {
    this.geometry = e15, this.textures = t28;
  }
  get material() {
    return this.geometry.material;
  }
  get numTriangles() {
    return this.geometry instanceof r13 ? this.geometry.indexCount / 3 : this.geometry.elementCount / 3;
  }
};
function s20(e15) {
  return e15 instanceof r13 ? e15.attributes.get(e4.POSITION).indices.length : e15.elementCount;
}
var o23 = class {
  constructor(t28, r24, n30) {
    this.components = t28, this.minScreenSpaceRadius = r24, this.pivotOffset = n30;
    const o28 = i(this.components.map((e15) => e15.geometry));
    this.numVertices = o28.reduce((e15, t29) => e15 + s20(t29), 0);
  }
};
var c12 = class {
  constructor(e15) {
    this.levels = e15, this.levels.sort((e16, t28) => e16.minScreenSpaceRadius === t28.minScreenSpaceRadius ? e16.numVertices - t28.numVertices : e16.minScreenSpaceRadius - t28.minScreenSpaceRadius);
  }
};
function i11(t28) {
  const r24 = [];
  return t28.levels.forEach((e15) => e15.components.forEach((e16) => r24.push(e16.geometry.material))), i(r24);
}
function u15(t28) {
  const r24 = new Array();
  return t28.levels.forEach((e15) => e15.components.forEach((e16) => {
    null != e16.textures && r24.push(...e16.textures);
  })), i(r24);
}

// node_modules/@arcgis/core/views/3d/layers/graphics/pipeline/rendering/LodRenderer.js
var c13 = class {
  constructor(e15) {
    this._optionalFields = new Array(), this._instanceIndexToFeatureId = /* @__PURE__ */ new Map(), this._featureIdToInstanceIndex = /* @__PURE__ */ new Map(), this._disposeResourceHandles = new Array(), this._lodRendererResources = null, this.layerUid = e15.layerUid, this.view = e15.view, this.sharedResources = this.view.sharedSymbolResources, this.scheduler = this.view.resourceController.scheduler;
  }
  async doLoad(e15, s27, t28) {
    has("enable-feature:objectAndLayerId-rendering") && this._optionalFields.push(e4.OBJECTANDLAYERIDCOLOR);
    const i16 = u16((e16) => s27(e16), e15), d14 = this.view._stage, l12 = i11(i16);
    d14.addMany(l12), this._addDisposeResource(() => d14.removeMany(l12));
    const c18 = u15(i16);
    d14.addMany(c18), this._addDisposeResource(() => {
      c18.forEach((e16) => e16.unload()), d14.removeMany(c18);
    }), await Promise.all(c18.map((e16) => this.view._stage.schedule(() => e16.load(d14.renderView.renderingContext), t28))), s2(t28);
    const h15 = await this._createLodRenderer(i16, t28);
    this._lodRendererResources = { lodRenderer: h15, materials: l12, textures: c18 };
  }
  addInstances(e15) {
    const r24 = this._lodRendererResources;
    if (null == r24) return;
    const { featureIds: s27, localTransforms: n30, globalTransforms: t28 } = e15, o28 = r24.lodRenderer;
    if (null == o28) return;
    const a21 = o28.instanceData, i16 = s27.length;
    for (let d14 = 0; d14 < i16; ++d14) {
      const e16 = s27[d14], r25 = a21.addInstance(), o29 = a21.view, i17 = 16 * d14;
      o29.localTransform.copyFromTypedBuffer(r25, n30, i17), o29.globalTransform.copyFromTypedBuffer(r25, t28, i17), a21.updateModelTransform(r25), a21.setVisible(r25, true), this._instanceIndexToFeatureId.set(r25, e16), this._featureIdToInstanceIndex.set(e16, r25);
    }
  }
  removeInstances(e15) {
    const r24 = this._lodRendererResources;
    if (null == r24) return;
    const s27 = r24 == null ? void 0 : r24.lodRenderer, n30 = s27.instanceData, t28 = this._instanceIndexToFeatureId, o28 = this._featureIdToInstanceIndex, a21 = e15.length;
    for (let i16 = 0; i16 < a21; ++i16) {
      const r25 = e15[i16], s28 = o28.get(r25);
      null != s28 && (n30.removeInstance(s28), t28.delete(s28), o28.delete(r25));
    }
  }
  _addDisposeResource(e15) {
    this._disposeResourceHandles.push(e15);
  }
  async _createLodRenderer(e15, r24) {
    const s27 = this.view._stage, n30 = { layerUid: this.layerUid, graphicUid: (e16) => 1, notifyGraphicGeometryChanged: (e16) => 1, notifyGraphicVisibilityChanged: (e16) => 1 }, o28 = new q2({ symbol: e15, optionalFields: this._optionalFields, metadata: n30, shaderTransformation: null }, this.scheduler);
    return o28.slicePlaneEnabled = false, this._addDisposeResource(() => {
      s27.removeRenderPlugin(o28), o28.destroy();
    }), await s27.addRenderPlugin(o28, r24), o28;
  }
};
function u16(e15, r24) {
  const s27 = r24.levels.map((r25) => {
    const s28 = r25.components.map((r26) => {
      const s29 = e15(r26.materialId);
      if (!h10(s29)) throw new Error("LodRenderer only supports DefaultMaterial");
      const n30 = s29.createBufferWriter(), t28 = { material: s29, vertexBufferLayout: n30.vertexBufferLayout, buffer: r26.renderGeometryBuffer.data, elementCount: r26.renderGeometryBuffer.elementCount, boundingInfo: r26.boundingInfo };
      return new n25(t28);
    });
    return new o23(s28, r25.minScreenSpaceRadius);
  });
  return new c12(s27);
}
function h10(e15) {
  return null != e15 && "materialType" in e15 && "default" === e15.materialType;
}
c13 = r([a("esri.views.3d.layers.graphics.pipeline.rendering.LodRenderer")], c13);

// node_modules/@arcgis/core/views/3d/support/engineContent/sdfPrimitives.js
var e12 = 128;
var o24 = 0.5;
function a15(t28) {
  return "cross" === t28 || "x" === t28;
}
function u17(t28, a21 = e12, u19 = a21 * o24, s27 = 0) {
  const i16 = c14(t28, a21, u19, s27);
  return new C4(i16, { mipmap: false, wrap: { s: D.CLAMP_TO_EDGE, t: D.CLAMP_TO_EDGE }, width: a21, height: a21, components: 4, noUnpackFlip: true, reloadable: true });
}
function c14(t28, r24 = e12, n30 = r24 * o24, a21 = 0) {
  switch (t28) {
    case "circle":
    default:
      return s21(r24, n30);
    case "square":
      return i12(r24, n30);
    case "cross":
      return h11(r24, n30, a21);
    case "x":
      return M4(r24, n30, a21);
    case "kite":
      return f7(r24, n30);
    case "triangle":
      return l8(r24, n30);
    case "arrow":
      return m7(r24, n30);
  }
}
function s21(t28, r24) {
  const n30 = t28 / 2 - 0.5;
  return x5(t28, T5(n30, n30, r24 / 2));
}
function i12(t28, r24) {
  return p10(t28, r24, false);
}
function f7(t28, r24) {
  return p10(t28, r24, true);
}
function h11(t28, r24, n30 = 0) {
  return b11(t28, r24, false, n30);
}
function M4(t28, r24, n30 = 0) {
  return b11(t28, r24, true, n30);
}
function l8(t28, r24) {
  return x5(t28, w2(t28 / 2, r24, r24 / 2));
}
function m7(t28, r24) {
  const n30 = r24, e15 = r24 / 2, o28 = t28 / 2, a21 = 0.8 * n30, u19 = T5(o28, (t28 - r24) / 2 - a21, Math.sqrt(a21 * a21 + e15 * e15)), c18 = w2(o28, n30, e15);
  return x5(t28, (t29, r25) => Math.max(c18(t29, r25), -u19(t29, r25)));
}
function p10(t28, r24, n30) {
  return n30 && (r24 /= Math.SQRT2), x5(t28, (e15, o28) => {
    let a21 = e15 - 0.5 * t28 + 0.25, u19 = 0.5 * t28 - o28 - 0.75;
    if (n30) {
      const t29 = (a21 + u19) / Math.SQRT2;
      u19 = (u19 - a21) / Math.SQRT2, a21 = t29;
    }
    return Math.max(Math.abs(a21), Math.abs(u19)) - 0.5 * r24;
  });
}
function b11(t28, r24, n30, e15 = 0) {
  r24 -= e15, n30 && (r24 *= Math.SQRT2);
  const o28 = 0.5 * r24;
  return x5(t28, (r25, a21) => {
    let u19, c18 = r25 - 0.5 * t28, s27 = 0.5 * t28 - a21 - 1;
    if (n30) {
      const t29 = (c18 + s27) / Math.SQRT2;
      s27 = (s27 - c18) / Math.SQRT2, c18 = t29;
    }
    return c18 = Math.abs(c18), s27 = Math.abs(s27), u19 = c18 > s27 ? c18 > o28 ? Math.sqrt((c18 - o28) * (c18 - o28) + s27 * s27) : s27 : s27 > o28 ? Math.sqrt(c18 * c18 + (s27 - o28) * (s27 - o28)) : c18, u19 -= e15 / 2, u19;
  });
}
function T5(t28, r24, n30) {
  return (e15, o28) => {
    const a21 = e15 - t28, u19 = o28 - r24;
    return Math.sqrt(a21 * a21 + u19 * u19) - n30;
  };
}
function w2(t28, r24, n30) {
  const e15 = Math.sqrt(r24 * r24 + n30 * n30);
  return (o28, a21) => {
    const u19 = Math.abs(o28 - t28) - n30, c18 = a21 - t28 + r24 / 2 + 0.75, s27 = (r24 * u19 + n30 * c18) / e15, i16 = -c18;
    return Math.max(s27, i16);
  };
}
function x5(r24, n30) {
  const e15 = new Uint8Array(4 * r24 * r24);
  for (let o28 = 0; o28 < r24; o28++) for (let a21 = 0; a21 < r24; a21++) {
    const u19 = a21 + r24 * o28;
    let c18 = n30(a21, o28);
    c18 = c18 / r24 + 0.5, o8(c18, e15, 4 * u19);
  }
  return e15;
}

// node_modules/@arcgis/core/core/libs/gl-matrix-2/types/mat4.js
function n26(n30) {
  return n30 instanceof Float32Array && n30.length >= 16;
}
function r21(n30) {
  return Array.isArray(n30) && n30.length >= 16;
}
function t19(t28) {
  return n26(t28) || r21(t28);
}

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/ScaleInfo.js
var t20 = class {
  constructor() {
    this.factor = new c15(), this.factorAlignment = new c15();
  }
};
var c15 = class {
  constructor() {
    this.scale = 0, this.factor = 0, this.minScaleFactor = 0;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/HUDMaterialTechnique.js
var c16 = class extends n17 {
  constructor(e15, o28, t28) {
    super(e15, o28, new t11(H4, () => import("./HUDMaterial.glsl-R73UN4TV.js")), t28), this.primitiveType = o28.occlusionPass ? E5.POINTS : E5.TRIANGLES;
  }
  initializePipeline(r24) {
    const { oitPass: o28, hasPolygonOffset: l12, draped: n30, output: c18, depthTestEnabled: f10 } = r24, T7 = o28 === o13.NONE, g9 = l12 ? h12 : null, j4 = o28 === o13.ColorAlpha, b15 = n30 || !f10 || j4 || c18 === n15.Highlight ? null : p5;
    return B({ blending: c18 === n15.Color ? T7 ? o12 : T3(o28) : null, depthTest: f10 && !n30 ? { func: O.LEQUAL } : null, depthWrite: b15, drawBuffers: i5(o28, c18), colorWrite: g5, polygonOffset: g9 });
  }
};
var h12 = { factor: 0, units: -4 };

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/HUDMaterialTechniqueConfiguration.js
var r22 = class extends a6 {
  constructor(e15) {
    super(), this.spherical = e15, this.screenCenterOffsetUnitsEnabled = false, this.occlusionTestEnabled = true, this.signedDistanceFieldEnabled = false, this.sampleSignedDistanceFieldTexelCenter = false, this.vvSize = false, this.vvColor = false, this.hasVerticalOffset = false, this.hasScreenSizePerspective = false, this.hasRotation = false, this.debugDrawLabelBorder = false, this.hasSlicePlane = false, this.hasPolygonOffset = false, this.depthTestEnabled = true, this.pixelSnappingEnabled = true, this.draped = false, this.terrainDepthTest = false, this.cullAboveTerrain = false, this.occlusionPass = false, this.occludedFragmentFade = false, this.objectAndLayerIdColorInstanced = false, this.horizonCullingEnabled = true, this.textureCoordinateType = d6.None, this.emissionSource = d7.None, this.discardInvisibleFragments = true, this.hasSliceInVertexProgram = true, this.hasVvInstancing = false;
  }
};
r([i6()], r22.prototype, "screenCenterOffsetUnitsEnabled", void 0), r([i6()], r22.prototype, "occlusionTestEnabled", void 0), r([i6()], r22.prototype, "signedDistanceFieldEnabled", void 0), r([i6()], r22.prototype, "sampleSignedDistanceFieldTexelCenter", void 0), r([i6()], r22.prototype, "vvSize", void 0), r([i6()], r22.prototype, "vvColor", void 0), r([i6()], r22.prototype, "hasVerticalOffset", void 0), r([i6()], r22.prototype, "hasScreenSizePerspective", void 0), r([i6()], r22.prototype, "hasRotation", void 0), r([i6()], r22.prototype, "debugDrawLabelBorder", void 0), r([i6()], r22.prototype, "hasSlicePlane", void 0), r([i6()], r22.prototype, "hasPolygonOffset", void 0), r([i6()], r22.prototype, "depthTestEnabled", void 0), r([i6()], r22.prototype, "pixelSnappingEnabled", void 0), r([i6()], r22.prototype, "draped", void 0), r([i6()], r22.prototype, "terrainDepthTest", void 0), r([i6()], r22.prototype, "cullAboveTerrain", void 0), r([i6()], r22.prototype, "occlusionPass", void 0), r([i6()], r22.prototype, "occludedFragmentFade", void 0), r([i6()], r22.prototype, "objectAndLayerIdColorInstanced", void 0), r([i6()], r22.prototype, "horizonCullingEnabled", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/HUDMaterial.js
var ae = class extends n18 {
  constructor(e15, t28) {
    super(e15, ye), this.produces = /* @__PURE__ */ new Map([[A3.HUD_MATERIAL, (e16) => a5(e16) && !this.parameters.drawInSecondSlot], [A3.LABEL_MATERIAL, (e16) => a5(e16) && this.parameters.drawInSecondSlot], [A3.OCCLUSION_PIXELS, () => this.parameters.occlusionTest], [A3.DRAPED_MATERIAL, (e16) => this.parameters.draped && a5(e16)]]), this._visible = true, this._configuration = new r22(t28);
  }
  getConfiguration(e15, t28) {
    return this._configuration.output = e15, this._configuration.hasSlicePlane = this.parameters.hasSlicePlane, this._configuration.hasVerticalOffset = !!this.parameters.verticalOffset, this._configuration.hasScreenSizePerspective = !!this.parameters.screenSizePerspective, this._configuration.screenCenterOffsetUnitsEnabled = "screen" === this.parameters.centerOffsetUnits, this._configuration.hasPolygonOffset = this.parameters.polygonOffset, this._configuration.draped = this.parameters.draped, this._configuration.occlusionTestEnabled = this.parameters.occlusionTest, this._configuration.pixelSnappingEnabled = this.parameters.pixelSnappingEnabled, this._configuration.signedDistanceFieldEnabled = this.parameters.textureIsSignedDistanceField, this._configuration.sampleSignedDistanceFieldTexelCenter = this.parameters.sampleSignedDistanceFieldTexelCenter, this._configuration.hasRotation = this.parameters.hasRotation, this._configuration.vvSize = !!this.parameters.vvSize, this._configuration.vvColor = !!this.parameters.vvColor, this._configuration.occlusionPass = t28.slot === A3.OCCLUSION_PIXELS, this._configuration.occludedFragmentFade = this.parameters.occludedFragmentFade, this._configuration.horizonCullingEnabled = this.parameters.horizonCullingEnabled, this._configuration.depthTestEnabled = this.parameters.depthEnabled || t28.slot === A3.OCCLUSION_PIXELS, e15 === n15.Color && (this._configuration.debugDrawLabelBorder = !!t8.LABELS_SHOW_BORDER), this._configuration.oitPass = t28.oitPass, this._configuration.terrainDepthTest = t28.terrainDepthTest, this._configuration.cullAboveTerrain = t28.cullAboveTerrain, this._configuration;
  }
  intersect(e15, t28, i16, a21, o28, n30) {
    const { options: { selectionMode: c18, hud: l12, excludeLabels: O6 }, point: T7, camera: b15 } = i16, { parameters: A6 } = this;
    if (!c18 || !l12 || O6 && A6.isLabel || !e15.visible || !T7) return;
    const { scaleX: E14, scaleY: I4 } = this._getScreenScale(e15, b15.pixelRatio);
    n11(Te, t28), e15.attributes.has(e4.FEATUREATTRIBUTE) && le(Te);
    const _7 = e15.attributes.get(e4.POSITION), R8 = e15.attributes.get(e4.SIZE), C6 = e15.attributes.get(e4.NORMAL), x9 = e15.attributes.get(e4.ROTATION), P6 = e15.attributes.get(e4.CENTEROFFSETANDDISTANCE);
    s9(_7.size >= 3);
    const y6 = E9(A6), D6 = "screen" === this.parameters.centerOffsetUnits;
    for (let s27 = 0; s27 < _7.data.length / _7.size; s27++) {
      const e16 = s27 * _7.size;
      o5(pe, _7.data[e16], _7.data[e16 + 1], _7.data[e16 + 2]), E4(pe, pe, t28), E4(pe, pe, b15.viewMatrix);
      const a22 = s27 * P6.size;
      if (o5(Ae, P6.data[a22], P6.data[a22 + 1], P6.data[a22 + 2]), !D6 && (pe[0] += Ae[0], pe[1] += Ae[1], 0 !== Ae[2])) {
        const e17 = Ae[2];
        A2(Ae, pe), c4(pe, pe, g3(Ae, Ae, e17));
      }
      const o29 = s27 * C6.size;
      if (o5(me, C6.data[o29], C6.data[o29 + 1], C6.data[o29 + 2]), ce(me, Te, b15, _e), this._applyVerticalOffsetTransformationView(pe, _e, b15, he), b15.applyProjection(pe, ue), ue[0] > -1) {
        D6 && (Ae[0] || Ae[1]) && (ue[0] += Ae[0] * b15.pixelRatio, 0 !== Ae[1] && (ue[1] += m4(Ae[1], he.factorAlignment) * b15.pixelRatio), b15.unapplyProjection(ue, pe)), ue[0] += this.parameters.screenOffset[0] * b15.pixelRatio, ue[1] += this.parameters.screenOffset[1] * b15.pixelRatio, ue[0] = Math.floor(ue[0]), ue[1] = Math.floor(ue[1]);
        const e17 = s27 * R8.size;
        xe[0] = R8.data[e17], xe[1] = R8.data[e17 + 1], p4(xe, he.factor, xe);
        const t29 = Re * b15.pixelRatio;
        let a23 = 0;
        if (A6.textureIsSignedDistanceField) {
          a23 = Math.min(A6.outlineSize, 0.5 * xe[0]) * b15.pixelRatio / 2;
        }
        xe[0] *= E14, xe[1] *= I4;
        const o30 = s27 * x9.size, c19 = A6.rotation + x9.data[o30];
        if (fe(T7, ue[0], ue[1], xe, t29, a23, c19, A6, y6)) {
          const e18 = i16.ray;
          if (E4(ge, pe, h(ve, b15.viewMatrix)), ue[0] = T7[0], ue[1] = T7[1], b15.unprojectFromRenderScreen(ue, pe)) {
            const t30 = n5();
            s8(t30, e18.direction);
            const s28 = 1 / r10(t30);
            g3(t30, t30, s28);
            n30(p3(e18.origin, pe) * s28, t30, -1, true, 1, ge);
          }
        }
      }
    }
  }
  intersectDraped(e15, t28, s27, i16, r24, a21) {
    const o28 = e15.attributes.get(e4.POSITION), n30 = e15.attributes.get(e4.SIZE), c18 = e15.attributes.get(e4.ROTATION), l12 = this.parameters, f10 = E9(l12), { scaleX: h15, scaleY: p14 } = this._getScreenScale(e15, e15.screenToWorldRatio), m9 = Ce * e15.screenToWorldRatio;
    for (let u19 = 0; u19 < o28.data.length / o28.size; u19++) {
      const t29 = u19 * o28.size, s28 = o28.data[t29], d14 = o28.data[t29 + 1], g9 = u19 * n30.size;
      xe[0] = n30.data[g9], xe[1] = n30.data[g9 + 1];
      let S4 = 0;
      if (l12.textureIsSignedDistanceField) {
        S4 = Math.min(l12.outlineSize, 0.5 * xe[0]) * e15.screenToWorldRatio / 2;
      }
      xe[0] *= h15, xe[1] *= p14;
      const O6 = u19 * c18.size, T7 = l12.rotation + c18.data[O6];
      fe(i16, s28, d14, xe, m9, S4, T7, l12, f10) && r24(a21.dist, a21.normal, -1, false);
    }
  }
  createBufferWriter() {
    return new Fe();
  }
  _updateScaleInfo(e15, t28, s27) {
    const i16 = this.parameters;
    null != i16.screenSizePerspective ? d5(s27, t28, i16.screenSizePerspective, e15.factor) : (e15.factor.scale = 1, e15.factor.factor = 0, e15.factor.minScaleFactor = 0), null != i16.screenSizePerspectiveAlignment ? d5(s27, t28, i16.screenSizePerspectiveAlignment, e15.factorAlignment) : (e15.factorAlignment.factor = e15.factor.factor, e15.factorAlignment.scale = e15.factor.scale, e15.factorAlignment.minScaleFactor = e15.factor.minScaleFactor);
  }
  applyShaderOffsetsView(e15, t28, s27, i16, r24, a21, o28) {
    const n30 = ce(t28, s27, r24, _e);
    return this._applyVerticalGroundOffsetView(e15, n30, r24, o28), this._applyVerticalOffsetTransformationView(o28, n30, r24, a21), this._applyPolygonOffsetView(o28, n30, i16[3], r24, o28), this._applyCenterOffsetView(o28, i16, o28), o28;
  }
  applyShaderOffsetsNDC(e15, t28, s27, i16, r24) {
    return this._applyCenterOffsetNDC(e15, t28, s27, i16), null != r24 && s8(r24, i16), this._applyPolygonOffsetNDC(i16, t28, s27, i16), i16;
  }
  _applyPolygonOffsetView(t28, s27, i16, r24, a21) {
    const o28 = r24.aboveGround ? 1 : -1;
    let n30 = Math.sign(i16);
    0 === n30 && (n30 = o28);
    const c18 = o28 * n30;
    if (this.parameters.shaderPolygonOffset <= 0) return s8(a21, t28);
    const l12 = r5(Math.abs(s27.cosAngle), 0.01, 1), f10 = 1 - Math.sqrt(1 - l12 * l12) / l12 / r24.viewport[2];
    return g3(a21, t28, c18 > 0 ? f10 : 1 / f10), a21;
  }
  _applyVerticalGroundOffsetView(e15, t28, s27, i16) {
    const r24 = r10(e15), a21 = s27.aboveGround ? 1 : -1, o28 = s27.computeRenderPixelSizeAtDist(r24) * p8, n30 = g3(pe, t28.normal, a21 * o28);
    return u7(i16, e15, n30), i16;
  }
  _applyVerticalOffsetTransformationView(e15, t28, s27, i16) {
    var _a;
    const r24 = this.parameters;
    if (!((_a = r24.verticalOffset) == null ? void 0 : _a.screenLength)) {
      if (r24.screenSizePerspective || r24.screenSizePerspectiveAlignment) {
        const s28 = r10(e15);
        this._updateScaleInfo(i16, s28, t28.cosAngle);
      } else i16.factor.scale = 1, i16.factorAlignment.scale = 1;
      return e15;
    }
    const a21 = r10(e15), o28 = r24.screenSizePerspectiveAlignment ?? r24.screenSizePerspective, n30 = i4(s27, a21, r24.verticalOffset, t28.cosAngle, o28);
    return this._updateScaleInfo(i16, a21, t28.cosAngle), g3(t28.normal, t28.normal, n30), u7(e15, e15, t28.normal);
  }
  _applyCenterOffsetView(e15, t28, s27) {
    const i16 = "screen" !== this.parameters.centerOffsetUnits;
    return s27 !== e15 && s8(s27, e15), i16 && (s27[0] += t28[0], s27[1] += t28[1], t28[2] && (A2(me, s27), u7(s27, s27, g3(me, me, t28[2])))), s27;
  }
  _applyCenterOffsetNDC(e15, t28, s27, i16) {
    const r24 = "screen" !== this.parameters.centerOffsetUnits;
    return i16 !== e15 && s8(i16, e15), r24 || (i16[0] += t28[0] / s27.fullWidth * 2, i16[1] += t28[1] / s27.fullHeight * 2), i16;
  }
  _applyPolygonOffsetNDC(e15, t28, s27, i16) {
    const r24 = this.parameters.shaderPolygonOffset;
    if (e15 !== i16 && s8(i16, e15), r24) {
      const e16 = s27.aboveGround ? 1 : -1, a21 = e16 * Math.sign(t28[3]);
      i16[2] -= (a21 || e16) * r24;
    }
    return i16;
  }
  set visible(e15) {
    this._visible = e15;
  }
  get visible() {
    const { color: e15, outlineSize: t28, outlineColor: s27 } = this.parameters, i16 = e15[3] >= o7 || t28 >= o7 && s27[3] >= o7;
    return this._visible && i16;
  }
  createGLMaterial(e15) {
    return new oe(e15);
  }
  calculateRelativeScreenBounds(e15, t28, s27 = u2()) {
    return ne(this.parameters, e15, t28, s27), s27[2] = s27[0] + e15[0], s27[3] = s27[1] + e15[1], s27;
  }
  _getScreenScale(e15, t28) {
    const s27 = e15.attributes.get(e4.FEATUREATTRIBUTE);
    if (null == s27) return { scaleX: t28, scaleY: t28 };
    const i16 = u6(s27.data, Ie);
    return W(Ee, this.parameters, i16), { scaleX: Ee[0] * t28, scaleY: Ee[1] * t28 };
  }
};
var oe = class extends u11 {
  constructor(e15) {
    super({ ...e15, ...e15.material.parameters });
  }
  beginSlot(e15) {
    return this.updateTexture(this._material.parameters.textureId), this._material.setParameters(this.textureBindParameters), this.acquireTechnique(c16, e15);
  }
};
function ne(e15, t28, s27, i16) {
  i16[0] = e15.anchorPosition[0] * -t28[0] + e15.screenOffset[0] * s27, i16[1] = e15.anchorPosition[1] * -t28[1] + e15.screenOffset[1] * s27;
}
function ce(e15, t28, i16, r24) {
  return t19(t28) && (t28 = n11(be, t28)), N3(r24.normal, e15, t28), E4(r24.normal, r24.normal, i16.viewInverseTransposeMatrix), r24.cosAngle = P2(de, Pe), r24;
}
function le(e15) {
  const t28 = e15[0], s27 = e15[1], i16 = e15[2], r24 = e15[3], a21 = e15[4], o28 = e15[5], n30 = e15[6], c18 = e15[7], l12 = e15[8], f10 = 1 / Math.sqrt(t28 * t28 + s27 * s27 + i16 * i16), h15 = 1 / Math.sqrt(r24 * r24 + a21 * a21 + o28 * o28), p14 = 1 / Math.sqrt(n30 * n30 + c18 * c18 + l12 * l12);
  return e15[0] = t28 * f10, e15[1] = s27 * f10, e15[2] = i16 * f10, e15[3] = r24 * h15, e15[4] = a21 * h15, e15[5] = o28 * h15, e15[6] = n30 * p14, e15[7] = c18 * p14, e15[8] = l12 * p14, e15;
}
function fe(e15, s27, i16, r24, a21, c18, l12, f10, h15) {
  let p14 = s27 - a21 - r24[0] * h15[0], m9 = p14 + r24[0] + 2 * a21, u19 = i16 - a21 - r24[1] * h15[1], d14 = u19 + r24[1] + 2 * a21;
  const g9 = f10.distanceFieldBoundingBox;
  return f10.textureIsSignedDistanceField && null != g9 && (p14 += r24[0] * g9[0], u19 += r24[1] * g9[1], m9 -= r24[0] * (1 - g9[2]), d14 -= r24[1] * (1 - g9[3]), p14 -= c18, m9 += c18, u19 -= c18, d14 += c18), o4(Oe, s27, i16), I(Se, e15, Oe, s4(l12)), Se[0] > p14 && Se[0] < m9 && Se[1] > u19 && Se[1] < d14;
}
var he = new t20();
var pe = n5();
var me = n5();
var ue = n7();
var de = n5();
var ge = n5();
var Se = n10();
var Oe = n10();
var Te = e5();
var be = e5();
var ve = e6();
var Ae = n5();
var Ee = n5();
var Ie = n7();
var _e = { normal: de, cosAngle: 0 };
var Re = 1;
var Ce = 2;
var xe = [0, 0];
var Pe = r6(0, 0, 1);
var ye = class extends h5 {
  constructor() {
    super(...arguments), this.renderOccluded = p6.Occlude, this.isDecoration = false, this.color = e3(1, 1, 1, 1), this.polygonOffset = false, this.anchorPosition = r11(0.5, 0.5), this.screenOffset = [0, 0], this.shaderPolygonOffset = 1e-5, this.textureIsSignedDistanceField = false, this.sampleSignedDistanceFieldTexelCenter = false, this.outlineColor = e3(1, 1, 1, 1), this.outlineSize = 0, this.rotation = 0, this.hasRotation = false, this.vvSizeEnabled = false, this.vvSize = null, this.vvColor = null, this.vvOpacity = null, this.vvSymbolAnchor = null, this.vvSymbolRotationMatrix = null, this.hasSlicePlane = false, this.pixelSnappingEnabled = true, this.occlusionTest = true, this.occludedFragmentFade = false, this.horizonCullingEnabled = false, this.centerOffsetUnits = "world", this.drawInSecondSlot = false, this.depthEnabled = true, this.draped = false, this.isLabel = false;
  }
};
var De = H2().vec3f(e4.POSITION).vec3f(e4.NORMAL).vec2f(e4.UV0).vec4u8(e4.COLOR).vec2f(e4.SIZE).f32(e4.ROTATION).vec4f(e4.CENTEROFFSETANDDISTANCE).vec4f(e4.FEATUREATTRIBUTE);
var je = De.clone().vec4u8(e4.OBJECTANDLAYERIDCOLOR);
var Fe = class {
  constructor() {
    this.vertexBufferLayout = e8() ? je : De;
  }
  elementCount(e15) {
    return 6 * e15.get(e4.POSITION).indices.length;
  }
  write(e15, t28, s27, i16, r24, a21) {
    var _a, _b;
    b8(s27.get(e4.POSITION), e15, r24.position, a21, 6), O4(s27.get(e4.NORMAL), t28, r24.normal, a21, 6);
    const o28 = (_a = s27.get(e4.UV0)) == null ? void 0 : _a.data;
    let n30 = 0, c18 = 0, l12 = 1, f10 = 1;
    o28 && o28.length >= 4 && (n30 = o28[0], c18 = o28[1], l12 = o28[2], f10 = o28[3]), l12 = Math.min(1.99999, l12 + 1), f10 = Math.min(1.99999, f10 + 1);
    let h15 = s27.get(e4.POSITION).indices.length, p14 = a21;
    const m9 = r24.uv0;
    for (let S4 = 0; S4 < h15; ++S4) m9.set(p14, 0, n30), m9.set(p14, 1, c18), p14++, m9.set(p14, 0, l12), m9.set(p14, 1, c18), p14++, m9.set(p14, 0, l12), m9.set(p14, 1, f10), p14++, m9.set(p14, 0, l12), m9.set(p14, 1, f10), p14++, m9.set(p14, 0, n30), m9.set(p14, 1, f10), p14++, m9.set(p14, 0, n30), m9.set(p14, 1, c18), p14++;
    S(s27.get(e4.COLOR), 4, r24.color, a21, 6);
    const { data: u19, indices: d14 } = s27.get(e4.SIZE);
    h15 = d14.length;
    const g9 = r24.size;
    p14 = a21;
    for (let S4 = 0; S4 < h15; ++S4) {
      const e16 = u19[2 * d14[S4]], t29 = u19[2 * d14[S4] + 1];
      for (let s28 = 0; s28 < 6; ++s28) g9.set(p14, 0, e16), g9.set(p14, 1, t29), p14++;
    }
    if (d8(s27.get(e4.ROTATION), r24.rotation, a21, 6), s27.get(e4.CENTEROFFSETANDDISTANCE) ? p7(s27.get(e4.CENTEROFFSETANDDISTANCE), r24.centerOffsetAndDistance, a21, 6) : B2(r24.centerOffsetAndDistance, a21, 6 * h15), s27.get(e4.FEATUREATTRIBUTE) ? p7(s27.get(e4.FEATUREATTRIBUTE), r24.featureAttribute, a21, 6) : B2(r24.featureAttribute, a21, 6 * h15), null != i16) {
      const e16 = (_b = s27.get(e4.POSITION)) == null ? void 0 : _b.indices;
      if (e16) {
        const t29 = e16.length, s28 = r24.getField(e4.OBJECTANDLAYERIDCOLOR, x2);
        R2(i16, s28, t29, a21, 6);
      }
    }
  }
};

// node_modules/@arcgis/core/views/3d/layers/graphics/pipeline/rendering/FeaturePipelineRenderManager.js
var y3 = class extends b2 {
  constructor(e15) {
    super(), this.view = null, this.layerUid = null, this._renderGeometries = /* @__PURE__ */ new Map(), this._materials = /* @__PURE__ */ new Map(), this._directRenderers = /* @__PURE__ */ new Map(), this._lodRenderers = /* @__PURE__ */ new Map(), this.view = e15.view, this.layerUid = e15.layerUid;
  }
  initialize() {
  }
  destroy() {
  }
  async executeRenderCommands(e15) {
    for (const r24 of e15) switch (r24.id) {
      case "create-material":
        await this._createMaterial(r24);
        break;
      case "create-direct-renderer":
        await this._createDirectRenderer(r24);
        break;
      case "add-direct-renderer-geometry":
        await this._addDirectRendererGeometry(r24);
        break;
      case "remove-direct-renderer-geometry":
        await this._removeDirectRendererGeometry(r24);
        break;
      case "create-lod-renderer":
        await this._createLodRenderer(r24);
        break;
      case "add-lod-instances":
        await this._addLodInstances(r24);
        break;
      case "remove-lod-instances":
        await this._removeLodInstances(r24);
    }
  }
  async _createMaterial(e15) {
    const { view: r24 } = this, { sharedSymbolResources: s27 } = r24;
    if (null == s27) throw new Error("No shared symbol resources found!");
    const { textures: n30 } = s27, a21 = r24.state.viewingMode === l5.Global;
    let d14 = null;
    switch (e15.type) {
      case "default":
        d14 = _3(s27, { physicalBasedRenderingEnabled: true, slicePlaneEnabled: false, castShadows: true, isPrimitive: true, screenSizePerspectiveEnabled: true, doublePrecisionRequiresObfuscation: r24._stage.renderView.renderingContext.driverTest.doublePrecisionRequiresObfuscation.result }, a21);
        break;
      case "hud":
        {
          const [e16, r25] = b12(n30, a21);
          this.addHandles([e2(() => t2(r25))]), d14 = e16;
        }
        break;
      default:
        throw new Error(`unable to create unknown material type ${e15.type}`);
    }
    this._materials.set(e15.materialId, d14);
  }
  _getMaterial(e15) {
    return this._materials.get(e15);
  }
  async _createDirectRenderer(e15) {
    const r24 = e15.materialId, t28 = this._getMaterial(r24);
    if (null == t28) throw new Error(`material not found ${r24}`);
    const { view: i16 } = this, s27 = new m6({ material: t28 });
    this._directRenderers.set(r24, s27), i16._stage.addRenderPlugin(s27), i16._stage.renderView.renderer.updateHasFlags();
  }
  async _addDirectRendererGeometry(e15) {
    const r24 = e15.renderGeometryId, t28 = e15.materialId;
    null != this._renderGeometries.get(r24) && await this._removeDirectRendererGeometry({ renderGeometryId: r24 });
    const i16 = this._directRenderers.get(t28);
    if (null == i16) return void console.error("no renderer assigned to provided material");
    const s27 = i16.addRenderGeometry(r24, e15.renderGeometryBuffer, e15.localOrigin);
    this._renderGeometries.set(r24, { renderGeometry: s27, materialId: t28 }), this.view._stage.renderView.requestRender();
  }
  async _removeDirectRendererGeometry(e15) {
    const r24 = e15.renderGeometryId, t28 = this._renderGeometries.get(r24);
    if (null == t28) return;
    const i16 = t28.materialId, s27 = this._directRenderers.get(i16);
    null != s27 ? s27.removeRenderGeometry(e15.renderGeometryId) : console.error("no renderer assigned to provided material");
  }
  async _createLodRenderer(e15) {
    const r24 = new c13({ view: this.view, layerUid: this.layerUid }), t28 = new AbortController(), i16 = (e16) => this._getMaterial(e16);
    await r24.doLoad(e15.lodRenderGeometry, i16, t28.signal), this._lodRenderers.set(e15.lodRendererId, r24);
  }
  async _addLodInstances(e15) {
    const r24 = this._lodRenderers.get(e15.lodRendererId);
    if (null == r24) throw new Error("no lod renderer assigned to provided lod renderer Id");
    r24.addInstances(e15.data);
  }
  async _removeLodInstances(e15) {
    const r24 = this._lodRenderers.get(e15.lodRendererId);
    if (null == r24) throw new Error("no lod renderer assigned to provided lod renderer Id");
    r24.removeInstances(e15.featureIds);
  }
};
function b12(e15, r24) {
  const t28 = { anchorPosition: s15.center, occlusionTest: true, hasSlicePlane: false }, i16 = t28, s27 = 1;
  i16.color = [1, 0, 0, 1], i16.outlineColor = [0, 0, 0, 1], i16.outlineSize = s27;
  const n30 = null;
  if (null != e15) {
    const r25 = e15.fromData("circle-icon", () => u17("circle"));
    i16.textureId = r25.texture.id, i16.textureIsSignedDistanceField = true, i16.sampleSignedDistanceFieldTexelCenter = a15("circle");
  }
  return i16.distanceFieldBoundingBox = v3, [new ae(t28, r24), n30];
}
function _3(e15, r24, t28) {
  const i16 = { usePBR: r24.physicalBasedRenderingEnabled, isSchematic: true, mrrFactors: o14, ambient: s5, diffuse: s5, hasSlicePlane: r24.slicePlaneEnabled, hasSliceHighlight: false, castShadows: r24.castShadows, offsetTransparentBackfaces: !r24.isPrimitive };
  return R6(i16), r24.screenSizePerspectiveEnabled && (i16.screenSizePerspective = e15.screenSizePerspectiveSettings), i16.externalColor = N2, i16.isInstanced = true, new B3(i16, { spherical: t28, doublePrecisionRequiresObfuscation: true });
}
function R6(e15) {
  const r24 = e15.opacity ?? 1, t28 = r24 < 1;
  return e15.transparent = t28, e15.opacity = r24, e15.cullFace = t28 ? e7.None : e7.Back, e15;
}
y3 = r([a("esri.views.3d.layers.graphics.pipeline.rendering.FeaturePipelineRenderManager")], y3);
var v3 = [o24 / 2, o24 / 2, 1 - o24 / 2, 1 - o24 / 2];

// node_modules/@arcgis/core/views/3d/layers/graphics/pipeline/rendering/RenderGeometryBufferWriter.js
var n27 = class {
  constructor(r24) {
    this._bufferWriter = null, this._bufferWriter = r24.createBufferWriter();
  }
  createBuffer(o28, n30) {
    const s27 = this._bufferWriter;
    let l12 = null;
    if (o28.transformation && n30) n6(f8, o28.transformation), f8[12] -= n30[0], f8[13] -= n30[1], f8[14] -= n30[2], l12 = f8;
    else {
      if (n30) throw new Error("not implemented");
      o28.transformation && (l12 = o28.transformation);
    }
    let u19 = null;
    l12 && (h(a16, f8), s6(a16, a16), u19 = a16);
    const m9 = o28.attributes, c18 = s27.elementCount(m9), b15 = s27.vertexBufferLayout.stride / 4;
    c18 > Math.floor(i13 / b15) && console.warn("geometry with very large number of elements encountered");
    const h15 = s27.vertexBufferLayout.createBuffer(c18), d14 = 0;
    return s27.write(l12, u19, m9, o28.objectAndLayerIdColor, h15, d14), { data: h15.buffer, elementCount: c18 };
  }
};
var f8 = e6();
var a16 = e6();
var i13 = 16777216 / 4;

// node_modules/@arcgis/core/views/3d/layers/graphics/pipeline/rendering/RenderCommandEncoder.js
var d12 = class {
  constructor(e15) {
    this._context = e15, this._commands = [], this._transferables = /* @__PURE__ */ new Set();
  }
  createMaterial(e15) {
    const n30 = this._context, a21 = n30.generateId("material");
    switch (e15) {
      case "default":
        {
          const e16 = new B3({}, { spherical: this._context.globalViewingMode, doublePrecisionRequiresObfuscation: true }), r24 = new n27(e16);
          n30.registerRenderGeometryBufferWriter(a21, r24);
        }
        break;
      case "hud": {
        const e16 = b12(null, this._context.globalViewingMode)[0], s27 = new n27(e16);
        n30.registerRenderGeometryBufferWriter(a21, s27);
      }
    }
    return this._commands.push({ id: "create-material", type: e15, materialId: a21 }), a21;
  }
  createDirectRenderer(e15) {
    const r24 = this._context.generateId("material-renderer");
    return this._commands.push({ id: "create-direct-renderer", materialRendererId: r24, materialId: e15 }), r24;
  }
  addDirectRendererGeometry(e15, r24, t28) {
    const n30 = r24.materialId, a21 = this._context.getRenderGeometryBufferWriter(n30);
    if (null == a21) throw new Error(`no bufferwriter found for material ${n30}`);
    const s27 = a21.createBuffer(r24, t28);
    this._transferables.add(s27.data), this._commands.push({ id: "add-direct-renderer-geometry", renderGeometryId: e15, materialId: n30, renderGeometryBuffer: s27, localOrigin: t28 });
  }
  removeDirectRendererGeometry(e15) {
    this._commands.push({ id: "remove-direct-renderer-geometry", renderGeometryId: e15 });
  }
  createLodRenderer(r24) {
    const t28 = this._context.generateId("lod-renderer"), s27 = { levels: r24.levels.map((r25) => ({ components: r25.components.map((r26) => {
      const t29 = r26.attributes.get(e4.POSITION);
      if (!t29 || 0 === t29.indices.length) throw new Error("positions attribute expected");
      const s28 = 3, d14 = l4(t29.indices.length / s28), i16 = new o15(d14, s28, t29), o28 = this._context.getRenderGeometryBufferWriter(r26.materialId);
      if (null == o28) throw new Error("writer not found");
      const m9 = o28.createBuffer(r26, null);
      this._transferables.add(m9.data);
      return { materialId: r26.materialId, renderGeometryBuffer: m9, boundingInfo: { bbMax: i16.bbMax, bbMin: i16.bbMin } };
    }), minScreenSpaceRadius: r25.minScreenSpaceRadius })) };
    return this._commands.push({ id: "create-lod-renderer", lodRendererId: t28, lodRenderGeometry: s27 }), t28;
  }
  addLodInstances(e15, r24) {
    this._commands.push({ id: "add-lod-instances", lodRendererId: e15, data: r24 }), this._transferables.add(r24.featureIds.buffer), this._transferables.add(r24.globalTransforms.buffer), this._transferables.add(r24.localTransforms.buffer);
  }
  removeLodInstances(e15, r24) {
    this._commands.push({ id: "remove-lod-instances", lodRendererId: e15, featureIds: r24 }), this._transferables.add(r24.buffer);
  }
  async dispatch() {
    const e15 = this._commands, r24 = Array.from(this._transferables);
    this._clearCommandBuffer(), this._context.dispatchRenderCommands(e15, r24);
  }
  _clearCommandBuffer() {
    this._commands = [], this._transferables.clear();
  }
};

// node_modules/@arcgis/core/views/3d/layers/graphics/pipeline/rendering/RenderCommandContext.js
var t21 = class {
  constructor(r24) {
    this._idCounter = 0, this._bufferWriters = /* @__PURE__ */ new Map(), this._dispatchRenderCommandsCallback = async () => {
    }, this.globalViewingMode = false, this.globalViewingMode = r24.viewingMode === l5.Global, this._dispatchRenderCommandsCallback = r24.dispatchRenderCommandsCallback;
  }
  generateId(e15 = "") {
    return `${e15}${this._idCounter++}`;
  }
  createEncoder() {
    return new d12(this);
  }
  async dispatchRenderCommands(e15, r24) {
    this._dispatchRenderCommandsCallback(e15, r24);
  }
  registerRenderGeometryBufferWriter(e15, r24) {
    this._bufferWriters.set(e15, r24);
  }
  getRenderGeometryBufferWriter(e15) {
    return this._bufferWriters.get(e15);
  }
};

// node_modules/@arcgis/core/views/3d/layers/graphics/pipeline/featureData/interfaces.js
var E11;
!function(E14) {
  E14[E14.OBJECT_ID = 0] = "OBJECT_ID", E14[E14.PARTITION_ID = 1] = "PARTITION_ID", E14[E14.GEOMETRY_MAP_COORDINATES = 2] = "GEOMETRY_MAP_COORDINATES", E14[E14.GEOMETRY_RENDER_COORDINATES = 3] = "GEOMETRY_RENDER_COORDINATES", E14[E14.TILE_CENTER_RENDER_COORDINATES = 4] = "TILE_CENTER_RENDER_COORDINATES";
}(E11 || (E11 = {}));

// node_modules/@arcgis/core/views/3d/layers/graphics/pipeline/featureData/processingUtils.js
async function a17(e15, t28) {
  const { numFeatures: r24, tile: o28, partitionInfo: n30 } = e15, { pages: a21 } = o28;
  if (0 === a21.length || 0 === r24) return new Uint32Array();
  const i16 = new Uint32Array(r24);
  if (n30) {
    const e16 = a21.reduce((e17, { featureCount: t30 }) => e17 + t30, 0), t29 = new Uint32Array(e16);
    let o29 = 0;
    for (const r25 of a21) o29 = r25.readAllObjectIds(t29, o29);
    const c18 = n30.tileIndices;
    for (let n31 = 0; n31 < r24; ++n31) {
      const e17 = t29[c18[n31]];
      i16[n31] = e17;
    }
  } else {
    let e16 = 0;
    for (const t29 of a21) e16 = t29.readAllObjectIds(i16, e16);
  }
  return i16;
}
async function i14(e15, t28) {
  const { numFeatures: r24, tile: o28, partitionInfo: n30 } = e15, { pages: a21 } = o28;
  if (0 === a21.length || 0 === r24) return new Float64Array();
  const i16 = new Float64Array(3 * r24);
  if (n30) {
    const e16 = a21.reduce((e17, { featureCount: t30 }) => e17 + t30, 0), t29 = new Float64Array(3 * e16);
    let o29 = 0;
    for (const r25 of a21) o29 = r25.readAllCoordinates(t29, o29);
    const c18 = n30.tileIndices;
    for (let n31 = 0; n31 < r24; ++n31) {
      const e17 = c18[n31], r25 = t29[3 * e17 + 0], o30 = t29[3 * e17 + 1], a22 = t29[3 * e17 + 2];
      i16[3 * n31 + 0] = r25, i16[3 * n31 + 1] = o30, i16[3 * n31 + 2] = a22;
    }
  } else {
    let e16 = 0;
    for (const t29 of a21) e16 = t29.readAllCoordinates(i16, e16);
  }
  return i16;
}
async function c17(e15, r24) {
  await e15.provision([E11.GEOMETRY_MAP_COORDINATES], r24);
  const { numFeatures: o28, tile: a21, mapCoordinates: i16 } = e15, { pages: c18 } = a21;
  if (0 === c18.length || 0 === o28) return new Float64Array();
  const s27 = r24.viewSpatialReference, f10 = r24.renderSpatialReference, l12 = new Float64Array(3 * o28);
  if (!n8(i16, s27, 0, l12, f10, 0, o28)) throw new Error("Failed to project coordinates");
  return l12;
}
async function s22(t28, n30) {
  const a21 = n30.viewSpatialReference, i16 = n30.renderSpatialReference, c18 = t28.tile.descriptor.extent, s27 = p(c18), f10 = n5();
  return n14([s27[0], s27[1], 0], a21, f10, i16), f10;
}

// node_modules/@arcgis/core/views/3d/layers/graphics/pipeline/featureData/FeatureData.js
var s23 = class {
  constructor(t28, e15, r24 = null) {
    this._tile = t28, this._numFeatures = e15, this._partitionInfo = r24;
  }
  get partitionInfo() {
    return this._partitionInfo;
  }
  get tile() {
    return this._tile;
  }
  get numFeatures() {
    return this._numFeatures;
  }
  get tileId() {
    return this._tile.descriptor.id;
  }
  get objectIds() {
    if (null == this._objectIds) throw new Error("objectIds haven't been provisioned yet");
    return this._objectIds;
  }
  get partitionIds() {
    if (null == this._partitionIds) throw new Error("partitionIds haven't been provisioned yet");
    return this._partitionIds;
  }
  get mapCoordinates() {
    if (null == this._mapCoordinates) throw new Error("mapCoordinates haven't been provisioned yet");
    return this._mapCoordinates;
  }
  get renderCoordinates() {
    if (null == this._renderCoordinates) throw new Error("renderCoordinates haven't been provisioned yet");
    return this._renderCoordinates;
  }
  get tileCenterRenderCoordinates() {
    if (null == this._tileCenterRenderCoordinates) throw new Error("tileCenterRenderCoordinates hasn't been provisioned yet");
    return this._tileCenterRenderCoordinates;
  }
  async provision(s27, o28) {
    for (const a21 of s27) switch (a21) {
      case E11.OBJECT_ID:
        if (this._objectIds) return;
        this._objectIds = await a17(this);
        break;
      case E11.PARTITION_ID:
        if (this._partitionIds) return;
        this._partitionIds = new Uint32Array(this._numFeatures);
        break;
      case E11.GEOMETRY_MAP_COORDINATES:
        if (this._mapCoordinates) return;
        this._mapCoordinates = await i14(this);
        break;
      case E11.GEOMETRY_RENDER_COORDINATES:
        if (this._renderCoordinates) return;
        this._renderCoordinates = await c17(this, o28);
        break;
      case E11.TILE_CENTER_RENDER_COORDINATES:
        if (this._tileCenterRenderCoordinates) return;
        this._tileCenterRenderCoordinates = await s22(this, o28);
        break;
      default:
        throw new Error("not implemented");
    }
  }
  dispose() {
    if (this.partitions) {
      for (const t28 of this.partitions) t28.dispose();
      this.partitions = void 0;
    }
  }
};

// node_modules/@arcgis/core/views/3d/layers/graphics/graphicUtils.js
function D4(t28 = s5, e15, r24, n30 = 1) {
  const i16 = new Array(3);
  if (null == e15 || null == r24) i16[0] = 1, i16[1] = 1, i16[2] = 1;
  else {
    let n31, o28 = 0;
    for (let s27 = 2; s27 >= 0; s27--) {
      const l12 = t28[s27];
      let u19;
      const a21 = null != l12, c18 = 0 === s27 && !n31 && !a21, m9 = r24[s27];
      "symbol-value" === l12 || c18 ? u19 = 0 !== m9 ? e15[s27] / m9 : 1 : a21 && "proportional" !== l12 && isFinite(l12) && (u19 = 0 !== m9 ? l12 / m9 : 1), null != u19 && (i16[s27] = u19, n31 = u19, o28 = Math.max(o28, Math.abs(u19)));
    }
    for (let t29 = 2; t29 >= 0; t29--) null == i16[t29] ? i16[t29] = n31 : 0 === i16[t29] && (i16[t29] = 1e-3 * o28);
  }
  for (let o28 = 2; o28 >= 0; o28--) i16[o28] /= n30;
  return u3(i16);
}

// node_modules/@arcgis/core/views/3d/layers/graphics/pipeline/symbolization/symbolizationUtils.js
function n28(n30) {
  const t28 = /* @__PURE__ */ new Map();
  for (const [r24, s27] of n30) t28.set(r24, { ...s27, indices: t4(s27.indices) });
  return t28;
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/BufferVectorMath.js
var n29;
!function(n30) {
  function t28(n31, t29) {
    const c19 = n31[t29], o29 = n31[t29 + 1], r25 = n31[t29 + 2];
    return Math.sqrt(c19 * c19 + o29 * o29 + r25 * r25);
  }
  function c18(n31, t29) {
    const c19 = n31[t29], o29 = n31[t29 + 1], r25 = n31[t29 + 2], u20 = 1 / Math.sqrt(c19 * c19 + o29 * o29 + r25 * r25);
    n31[t29] *= u20, n31[t29 + 1] *= u20, n31[t29 + 2] *= u20;
  }
  function o28(n31, t29, c19) {
    n31[t29] *= c19, n31[t29 + 1] *= c19, n31[t29 + 2] *= c19;
  }
  function r24(n31, t29, c19, o29, r25, u20 = t29) {
    (r25 = r25 || n31)[u20] = n31[t29] + c19[o29], r25[u20 + 1] = n31[t29 + 1] + c19[o29 + 1], r25[u20 + 2] = n31[t29 + 2] + c19[o29 + 2];
  }
  function u19(n31, t29, c19, o29, r25, u20 = t29) {
    (r25 = r25 || n31)[u20] = n31[t29] - c19[o29], r25[u20 + 1] = n31[t29 + 1] - c19[o29 + 1], r25[u20 + 2] = n31[t29 + 2] - c19[o29 + 2];
  }
  n30.length = t28, n30.normalize = c18, n30.scale = o28, n30.add = r24, n30.subtract = u19;
}(n29 || (n29 = {}));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/GeometryUtil.js
var F5 = new Array(36);
for (let Nt = 0; Nt < 6; Nt++) for (let t28 = 0; t28 < 6; t28++) F5[6 * Nt + t28] = Nt;
var v4 = new Array(36);
for (let Nt = 0; Nt < 6; Nt++) v4[6 * Nt] = 0, v4[6 * Nt + 1] = 1, v4[6 * Nt + 2] = 2, v4[6 * Nt + 3] = 2, v4[6 * Nt + 4] = 3, v4[6 * Nt + 5] = 0;
var z5 = r12(-0.5, 0, -0.5);
var Z4 = r12(0.5, 0, -0.5);
var H6 = r12(0, 0, 0.5);
var J3 = r12(0, 0.5, 0);
var K3 = n13();
var Q2 = n13();
var W4 = n13();
var X3 = n13();
var Y3 = n13();
c4(K3, z5, J3), c4(Q2, z5, Z4), _(W4, K3, Q2), A2(W4, W4), c4(K3, Z4, J3), c4(Q2, Z4, H6), _(X3, K3, Q2), A2(X3, X3), c4(K3, H6, J3), c4(Q2, H6, z5), _(Y3, K3, Q2), A2(Y3, Y3);
var _4 = [0, -1, 0, W4[0], W4[1], W4[2], X3[0], X3[1], X3[2], Y3[0], Y3[1], Y3[2]];
function ct(t28, n30, e15, o28, s27 = true, r24 = true) {
  let l12 = 0;
  const h15 = n30, u19 = t28;
  let a21 = r12(0, l12, 0), f10 = r12(0, l12 + u19, 0), p14 = r12(0, -1, 0), i16 = r12(0, 1, 0);
  o28 && (l12 = u19, f10 = r12(0, 0, 0), a21 = r12(0, l12, 0), p14 = r12(0, 1, 0), i16 = r12(0, -1, 0));
  const w3 = [f10, a21], g9 = [p14, i16], m9 = e15 + 2, M6 = Math.sqrt(u19 * u19 + h15 * h15);
  if (o28) for (let O6 = e15 - 1; O6 >= 0; O6--) {
    const t29 = O6 * (2 * Math.PI / e15), n31 = r12(Math.cos(t29) * h15, l12, Math.sin(t29) * h15);
    w3.push(n31);
    const o29 = r12(u19 * Math.cos(t29) / M6, -h15 / M6, u19 * Math.sin(t29) / M6);
    g9.push(o29);
  }
  else for (let O6 = 0; O6 < e15; O6++) {
    const t29 = O6 * (2 * Math.PI / e15), n31 = r12(Math.cos(t29) * h15, l12, Math.sin(t29) * h15);
    w3.push(n31);
    const o29 = r12(u19 * Math.cos(t29) / M6, h15 / M6, u19 * Math.sin(t29) / M6);
    g9.push(o29);
  }
  const A6 = new Array(), I4 = new Array();
  if (s27) {
    for (let t29 = 3; t29 < w3.length; t29++) A6.push(1), A6.push(t29 - 1), A6.push(t29), I4.push(0), I4.push(0), I4.push(0);
    A6.push(w3.length - 1), A6.push(2), A6.push(1), I4.push(0), I4.push(0), I4.push(0);
  }
  if (r24) {
    for (let t29 = 3; t29 < w3.length; t29++) A6.push(t29), A6.push(t29 - 1), A6.push(0), I4.push(t29), I4.push(t29 - 1), I4.push(1);
    A6.push(0), A6.push(2), A6.push(w3.length - 1), I4.push(1), I4.push(2), I4.push(g9.length - 1);
  }
  const y6 = t5(3 * m9);
  for (let c18 = 0; c18 < m9; c18++) y6[3 * c18] = w3[c18][0], y6[3 * c18 + 1] = w3[c18][1], y6[3 * c18 + 2] = w3[c18][2];
  const N9 = t5(3 * m9);
  for (let c18 = 0; c18 < m9; c18++) N9[3 * c18] = g9[c18][0], N9[3 * c18 + 1] = g9[c18][1], N9[3 * c18 + 2] = g9[c18][2];
  return [[e4.POSITION, new t7(y6, A6, 3, true)], [e4.NORMAL, new t7(N9, I4, 3, true)]];
}
var yt = n5();

// node_modules/@arcgis/core/views/3d/layers/graphics/pipeline/symbolization/primitiveObjectUtils.js
function r23(t28, i16) {
  const r24 = (t29, n30, r25 = false) => ({ levels: t29.map((t30) => {
    const o28 = n28(n30(t30.tesselation));
    r25 && a19(o28);
    return { components: [{ attributes: o28, objectAndLayerIdColor: void 0, transformation: null, materialId: i16 }], minScreenSpaceRadius: t30.minScreenSpaceRadius };
  }) });
  switch (t28) {
    case "cone":
      return r24(s25, (e15) => ct(1, 0.5, e15, false), true);
    case "sphere":
    case "cube":
    case "inverted-cone":
    case "cylinder":
    case "tetrahedron":
    case "diamond":
      throw new Error("not implemented");
    default:
      return;
  }
}
function a19(e15) {
  const t28 = e15, n30 = t28.get(e4.POSITION).data, r24 = t28.get(e4.NORMAL).data;
  if (r24) {
    const t29 = o27(e15, e4.NORMAL).data;
    for (let e16 = 0; e16 < r24.length; e16 += 3) {
      const n31 = r24[e16 + 1];
      t29[e16 + 1] = -r24[e16 + 2], t29[e16 + 2] = n31;
    }
  }
  if (n30) {
    const t29 = o27(e15, e4.POSITION).data;
    for (let e16 = 0; e16 < n30.length; e16 += 3) {
      const i16 = n30[e16 + 1];
      t29[e16 + 1] = -n30[e16 + 2], t29[e16 + 2] = i16;
    }
  }
}
function o27(e15, n30) {
  let i16 = e15.get(n30);
  return i16 && !i16.exclusive && (i16 = { ...i16, exclusive: true, data: o16(i16.data) }, e15.set(n30, i16)), i16;
}
var s25 = [{ tesselation: 6, minScreenSpaceRadius: 0 }, { tesselation: 18, minScreenSpaceRadius: 7 }, { tesselation: 64, minScreenSpaceRadius: 65 }];

// node_modules/@arcgis/core/views/3d/layers/graphics/pipeline/symbolization/TestObjectSymbol.js
var j2 = class extends b2 {
  constructor(e15) {
    super(), this._context = e15, this.lodRendererId = null, this._loaded = false;
  }
  get loaded() {
    return this._loaded;
  }
  async load(e15) {
    const r24 = e15.createMaterial("default"), t28 = r23("cone", r24);
    this.lodRendererId = e15.createLodRenderer(t28), this._loaded = true;
  }
  async add(e15, r24) {
    if (null == this.lodRendererId) throw new Error("expected lod renderer id to not be null");
    await this._provisionFeatureData(e15);
    const t28 = e15.numFeatures, o28 = true, s27 = u4(c7("cone")), i16 = u3(b4(s27)), n30 = u3(t6(i16, { isPrimitive: o28, width: 100, depth: null, height: null })), c18 = new Float64Array(16 * t28), f10 = new Float64Array(16 * t28), u19 = e15.mapCoordinates;
    for (let a21 = 0; a21 < t28; ++a21) {
      const e16 = a21, r25 = u19[3 * a21 + 0], t29 = u19[3 * a21 + 1], o29 = u19[3 * a21 + 2], s28 = this._computeGlobalTransform(r25, t29, o29, this._context.viewSpatialReference, b13), l12 = this._computeLocalTransform(n30, i16, y5);
      this._writeMatrixToTypedBuffer(c18, e16, l12), this._writeMatrixToTypedBuffer(f10, e16, s28);
    }
    const h15 = { featureIds: new Uint32Array(e15.objectIds), localTransforms: c18, globalTransforms: f10 };
    r24.addLodInstances(this.lodRendererId, h15);
  }
  async remove(e15, r24) {
    if (null == this.lodRendererId) return;
    const t28 = new Uint32Array(e15.objectIds);
    r24.removeLodInstances(this.lodRendererId, t28);
  }
  async _provisionFeatureData(e15) {
    await e15.provision([E11.GEOMETRY_MAP_COORDINATES, E11.OBJECT_ID], this._context);
  }
  _writeMatrixToTypedBuffer(e15, r24, t28) {
    let o28 = 16 * r24;
    for (let s27 = 0; s27 < 16; s27++) e15[o28++] = t28[s27];
  }
  _computeGlobalTransform(e15, r24, t28, o28, s27) {
    return _5[0] = e15, _5[1] = r24, _5[2] = t28, C3(o28, _5, s27, this._context.renderSpatialReference), s27;
  }
  _computeLocalTransform(e15, r24, t28) {
    return o3(t28), this._applyObjectScale(e15, r24, t28), t28;
  }
  _applyObjectScale(e15, r24, t28) {
    const o28 = D4(e15, e15, r24, this._context.renderCoordsHelper.unitInMeters);
    1 === o28[0] && 1 === o28[1] && 1 === o28[2] || f2(t28, t28, o28);
  }
};
j2 = r([a("esri.views.3d.layers.graphics.pipeline.symbolization.TestObjectSymbol")], j2);
var _5 = n5();
var y5 = e6();
var b13 = e6();

// node_modules/@arcgis/core/views/3d/layers/graphics/pipeline/symbolization/TestSymbol.js
var l11 = class extends b2 {
  constructor(e15) {
    super(), this._context = e15, this.materialId = null, this._loaded = false;
  }
  get loaded() {
    return this._loaded;
  }
  async load(e15) {
    this.materialId = e15.createMaterial("hud"), e15.createDirectRenderer(this.materialId), this._loaded = true;
  }
  async add(e15, r24) {
    if (null == this.materialId) throw new Error("expected material not to be null");
    await this._provisionFeatureData(e15);
    const { numFeatures: t28, tileId: a21, renderCoordinates: l12, tileCenterRenderCoordinates: m9 } = e15, d14 = new Float64Array([0, 0, 1]), c18 = new Float64Array([255, 255, 255, 255]), p14 = new Float64Array([24, 24]), w3 = new Float64Array([0, 0, 0, 1]), y6 = new Float64Array([0, 0]), u19 = new Float64Array([0]), A6 = new Uint32Array(t28);
    for (let o28 = 0; o28 < t28; ++o28) A6[o28] = o28;
    const E14 = new Uint32Array(t28);
    for (let o28 = 0; o28 < t28; ++o28) E14[o28] = 0;
    const I4 = new t7(l12, A6, 3, true), R8 = new t7(d14, E14, 3, true), f10 = new t7(y6, E14, 2, true), h15 = new t7(c18, E14, 4, true), b15 = new t7(u19, E14, 1, true), j4 = new t7(p14, E14, 2, true), O6 = new t7(w3, E14, 4, true), _7 = [[e4.POSITION, I4], [e4.NORMAL, R8], [e4.UV0, f10], [e4.COLOR, h15], [e4.ROTATION, b15], [e4.SIZE, j4], [e4.CENTEROFFSETANDDISTANCE, O6]], D6 = { attributes: n28(_7), objectAndLayerIdColor: void 0, transformation: e6(), materialId: this.materialId };
    r24.addDirectRendererGeometry(a21, D6, m9);
  }
  async remove(e15, r24) {
    r24.removeDirectRendererGeometry(e15.tileId);
  }
  async _provisionFeatureData(e15) {
    await e15.provision([E11.GEOMETRY_RENDER_COORDINATES, E11.TILE_CENTER_RENDER_COORDINATES], this._context);
  }
};
l11 = r([a("esri.views.3d.layers.graphics.pipeline.symbolization.TestSymbol")], l11);

// node_modules/@arcgis/core/views/3d/layers/graphics/pipeline/symbolization/UniqueValueFeatureRenderer.js
var s26 = class {
  constructor(t28) {
    this._symbols = /* @__PURE__ */ new Map(), this._context = t28;
  }
  async load() {
    this._symbols.set(0, new l11(this._context)), this._symbols.set(1, new j2(this._context));
  }
  async add(t28, i16) {
    await this._provisionFeatureData(t28, this._context);
    const o28 = this._partition(t28);
    await Promise.all(o28.map(async (t29) => {
      var _a;
      const o29 = await this._provisionSymbol((_a = t29.partitionInfo) == null ? void 0 : _a.index, i16);
      o29 && await o29.add(t29, i16);
    }));
  }
  async remove(t28, i16) {
    const o28 = t28.partitions;
    if (!o28) throw new Error("partitioned featureset expected");
    await Promise.all(o28.map(async (t29) => {
      var _a;
      const o29 = await this._provisionSymbol((_a = t29.partitionInfo) == null ? void 0 : _a.index, i16);
      o29 && await o29.remove(t29, i16);
    }));
  }
  async _provisionFeatureData(t28, o28) {
    await t28.provision([E11.PARTITION_ID, E11.OBJECT_ID], o28);
  }
  async _provisionSymbol(t28, i16) {
    if (null == t28) return null;
    const o28 = this._symbols.get(t28);
    return o28 ? (o28.loaded || await o28.load(i16), o28) : null;
  }
  _partition(i16) {
    const { numFeatures: o28, objectIds: a21, partitionIds: s27 } = i16, e15 = [[], []];
    for (let t28 = 0; t28 < o28; ++t28) {
      const i17 = a21[t28] % 2;
      e15[i17].push(t28), s27[t28] = i17;
    }
    return i16.partitions = e15.filter((t28) => t28.length > 0).map((o29, a22) => {
      const s28 = o29.length, e16 = { index: a22, tileIndices: new Uint32Array(o29) };
      return new s23(i16.tile, s28, e16);
    }), i16.partitions;
  }
};

// node_modules/@arcgis/core/geometry/projection/projectVectorToPoint.js
function t26(r24, e15, t28) {
  return !!n14(r24, e15, i15, t28.spatialReference) && (t28.x = i15[0], t28.y = i15[1], t28.z = i15[2], true);
}
var i15 = n5();

// node_modules/@arcgis/core/geometry/support/coordinateSystem.js
function h14(t28) {
  const { value: e15, operations: n30 } = t28;
  return { operations: n30, value: n30.create(e15) };
}
function j3(t28, e15, n30) {
  return t28.operations.setExtent(t28.value, e15, n30.value), n30;
}
function d13(t28, e15) {
  return t28.operations.getExtent(t28.value, e15), e15;
}
function x8(t28) {
  return { operations: t28, value: t28.create() };
}
function A5(t28, e15, n30 = x8(t28)) {
  return n30.operations = t28, t28.copy(e15, n30.value), n30;
}
function b14(t28) {
  return A5(ft, V3(0, 0, 0, s3(t28).radius));
}
var g8 = 2 ** 50;
function P5() {
  return A5(ks, J([0, 0, 0], [g8, 0, 0], [0, g8, 0]));
}
function R7(t28, e15, n30) {
  return t28.operations.axisAt(t28.value, e15, n3.Z, n30);
}
function S3(t28, e15, n30, o28) {
  return t28.operations.axisAt(t28.value, e15, n30, o28);
}
function k3(t28, e15, n30) {
  return t28.operations.intersectRay(t28.value, e15, n30);
}
function E13(t28, e15, n30) {
  return t28.operations.intersectRayClosestSilhouette(t28.value, e15, n30);
}
function G5(t28, e15) {
  return t28.operations.altitudeAt(t28.value, e15);
}
function O5(t28, e15, n30, o28) {
  return t28.operations.setAltitudeAt(t28.value, e15, n30, o28);
}
function T6(n30, o28, r24, i16) {
  return o28 !== i16 && n6(i16, o28), o5(q3, i16[12], i16[13], i16[14]), O5(n30, q3, r24, q3), i16[12] = q3[0], i16[13] = q3[1], i16[14] = q3[2], i16;
}
function Z5(t28, e15, n30) {
  return t28.operations.elevate(t28.value, e15, n30.value);
}
var q3 = n5();
var D5 = n5();

// node_modules/@arcgis/core/layers/graphics/dehydratedFeatureUtils.js
function t27(t28) {
  return "point" === t28.type;
}

// node_modules/@arcgis/core/views/3d/support/RenderCoordsHelper.js
var B5 = class _B {
  constructor(t28, e15, o28, r24) {
    this.viewingMode = t28, this.spatialReference = e15, this.unitInMeters = o28, this._coordinateSystem = r24, this._tmpCoordinateSystem = h14(r24), this.referenceEllipsoid = s3(e15), this.sphericalPCPF = a4(e15);
  }
  set extent(t28) {
    t28 && j3(this._coordinateSystem, t28, this._coordinateSystem);
  }
  get extent() {
    return d13(this._coordinateSystem, u2());
  }
  getAltitude(t28) {
    return G5(this._coordinateSystem, t28);
  }
  setAltitude(t28, e15, o28 = t28) {
    return O5(this._coordinateSystem, o28, e15, t28);
  }
  setAltitudeOfTransformation(t28, e15) {
    T6(this._coordinateSystem, e15, t28, e15);
  }
  worldUpAtPosition(t28, e15) {
    return R7(this._coordinateSystem, t28, e15);
  }
  worldBasisAtPosition(t28, e15, o28) {
    return S3(this._coordinateSystem, t28, e15, o28);
  }
  basisMatrixAtPosition(t28, e15) {
    const o28 = this.worldBasisAtPosition(t28, n3.X, c8.get()), i16 = this.worldBasisAtPosition(t28, n3.Y, c8.get()), s27 = this.worldBasisAtPosition(t28, n3.Z, c8.get());
    return r7(e15, o28[0], o28[1], o28[2], 0, i16[0], i16[1], i16[2], 0, s27[0], s27[1], s27[2], 0, 0, 0, 0, 1), e15;
  }
  headingAtPosition(e15, o28) {
    const r24 = this.worldUpAtPosition(e15, c8.get()), i16 = this.worldBasisAtPosition(e15, n3.Y, c8.get()), s27 = u10(o28, i16, r24);
    return M(s27);
  }
  intersectManifoldClosestSilhouette(t28, e15, o28) {
    return Z5(this._coordinateSystem, e15, this._tmpCoordinateSystem), E13(this._tmpCoordinateSystem, t28, o28), o28;
  }
  intersectManifold(t28, e15, o28) {
    Z5(this._coordinateSystem, e15, this._tmpCoordinateSystem);
    const r24 = c8.get();
    return k3(this._tmpCoordinateSystem, t28, r24) ? s8(o28, r24) : null;
  }
  intersectInfiniteManifold(t28, e15, o28) {
    if (this.viewingMode === l5.Global) return this.intersectManifold(t28, e15, o28);
    Z5(this._coordinateSystem, e15, this._tmpCoordinateSystem);
    const r24 = this._tmpCoordinateSystem.value, s27 = c8.get();
    return x3(r24.plane, t28, s27) ? s8(o28, s27) : null;
  }
  toRenderCoords(t28, e15, o28) {
    return t27(t28) ? c6(t28, e15, this.spatialReference) : n14(t28, e15, o28, this.spatialReference);
  }
  fromRenderCoords(t28, e15, o28 = null) {
    return t27(e15) ? (null != o28 && (e15.spatialReference = o28), t26(t28, this.spatialReference, e15) ? e15 : null) : n14(t28, this.spatialReference, e15, o28) ? e15 : null;
  }
  static create(t28, o28) {
    switch (t28) {
      case l5.Local:
        return new _B(l5.Local, o28, z(o28), P5());
      case l5.Global:
        return new _B(l5.Global, o28, 1, b14(o28));
    }
  }
  static renderUnitScaleFactor(t28, e15) {
    return V(t28) / V(e15);
  }
};

// node_modules/@arcgis/core/views/3d/layers/graphics/pipeline/symbolization/Symbolizer.js
var a20 = class {
  constructor(e15) {
    this._tileFeatureData = /* @__PURE__ */ new Map(), this._context = { viewSpatialReference: e15.viewSpatialReference, renderSpatialReference: e15.renderSpatialReference, renderCoordsHelper: B5.create(e15.viewingMode, e15.renderSpatialReference) };
  }
  async add(e15, r24) {
    this._featureRenderer || (this._featureRenderer = new s26(this._context), await this._featureRenderer.load());
    const a21 = this._addTileFeatureData(e15);
    await this._featureRenderer.add(a21, r24);
  }
  async remove(e15, t28) {
    const r24 = this._getFeatureSetFromTileId(e15);
    r24 && (this._featureRenderer && this._featureRenderer.remove(r24, t28), this._removeTileFeatureData(e15));
  }
  _getFeatureSetFromTileId(e15) {
    return this._tileFeatureData.get(e15);
  }
  _addTileFeatureData(t28) {
    const r24 = t28.descriptor.id, a21 = t28.pages.reduce((e15, { featureCount: t29 }) => e15 + t29, 0), i16 = new s23(t28, a21);
    return this._tileFeatureData.set(r24, i16), i16;
  }
  _removeTileFeatureData(e15) {
    const t28 = this._tileFeatureData.get(e15);
    t28 && (t28.dispose(), this._tileFeatureData.delete(e15));
  }
};

// node_modules/@arcgis/core/views/3d/layers/graphics/pipeline/Feature3DPipelineWorker.js
var p13 = class extends o.EventedAccessor {
  constructor() {
    super(...arguments), this.remoteClient = null, this._featureStore = new d9(), this._tileManager = new a7({ addTile: (e15, t28) => this._addTile(e15, t28), removeTiles: (e15) => this._removeTiles(e15) }), this._renderCommandContext = null, this._fetcher = null, this._symbolizer = null, this._queryEngine = null, this._defaultQueryJSON = null;
  }
  get updating() {
    return this._tileManager.updating;
  }
  destroy() {
    this._featureStore.clear(), this._tileManager.destroy();
  }
  async setup({ viewSpatialReference: e15, renderSpatialReference: t28, viewingMode: r24, baseQuery: n30, url: o28, objectIdField: c18, capabilities: d14, fieldsIndex: p14, timeInfo: f10 }) {
    this._renderCommandContext = new t21({ viewingMode: r24, dispatchRenderCommandsCallback: (e16, t29) => this.remoteClient.invoke("dispatchRenderCommands", e16, { transferList: t29 }) });
    const g9 = g.fromJSON(e15), S4 = g.fromJSON(t28);
    return this._fetcher = new c9(g9, b3.fromJSON(n30), o28, c18, d14), this._symbolizer = new a20({ viewSpatialReference: g9, renderSpatialReference: S4, viewingMode: r24 }), this._queryEngine = new V2({ hasZ: true, hasM: false, geometryType: "esriGeometryPoint", objectIdField: c18, fieldsIndex: p14, availableFields: [c18], spatialReference: e15, featureStore: this._featureStore, timeInfo: f10 }), this._defaultQueryJSON = new b3({ outSpatialReference: g9 }).toJSON(), this.addHandles(d2(() => this.updating, async (e16) => {
      this.emit("notify-updating", { updating: e16 });
    }), P), _6;
  }
  async executeQuery(e15, t28) {
    return { result: await this._queryEngine.executeQuery(this._ensureQuery(e15), t28) };
  }
  async executeQueryForIds(e15, t28) {
    const r24 = await this._queryEngine.executeQueryForIdSet(this._ensureQuery(e15), t28);
    return { result: Array.from(r24) };
  }
  async executeQueryForCount(e15, t28) {
    return { result: await this._queryEngine.executeQueryForCount(this._ensureQuery(e15), t28) };
  }
  async executeQueryForExtent(e15, t28) {
    return { result: await this._queryEngine.executeQueryForExtent(this._ensureQuery(e15), t28) };
  }
  async executeQueryForLatestObservations(e15, t28) {
    return { result: await this._queryEngine.executeQueryForLatestObservations(this._ensureQuery(e15), t28) };
  }
  async onTileTreeChange(e15) {
    return await this._tileManager.onTileTreeChange(e15), _6;
  }
  async _addTile(e15, t28) {
    const i16 = await this._fetcher.fetch(e15, t28);
    s2(t28), this._featureStore.addTile(i16);
    const s27 = this._renderCommandContext.createEncoder();
    return await this._symbolizer.add(i16, s27), await s27.dispatch(), i16;
  }
  async _removeTiles(e15) {
    const t28 = this._renderCommandContext.createEncoder(), r24 = this._featureStore, i16 = this._symbolizer;
    for (const s27 of e15) r24.removeTile(s27.tileId), await i16.remove(s27.tileId, t28);
    await t28.dispatch();
  }
  _ensureQuery(e15) {
    return e15 ?? this._defaultQueryJSON;
  }
};
r([m()], p13.prototype, "updating", null), p13 = r([a("esri.views.3d.layers.graphics.pipeline.Feature3DPipelineWorker")], p13);
var f9 = p13;
var _6 = { result: void 0 };
export {
  f9 as default
};
//# sourceMappingURL=Feature3DPipelineWorker-IUHAOADM.js.map
