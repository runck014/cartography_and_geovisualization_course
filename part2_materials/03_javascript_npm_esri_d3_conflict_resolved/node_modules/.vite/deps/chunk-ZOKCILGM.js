import {
  I as I2,
  Z,
  d as d2,
  k,
  v as v3
} from "./chunk-KXKYI37N.js";
import {
  l
} from "./chunk-ILNUTCMB.js";
import {
  t as t2
} from "./chunk-JKRG5WGH.js";
import {
  t as t3
} from "./chunk-QV2O4XK2.js";
import {
  D
} from "./chunk-CTOH6SLG.js";
import {
  N as N2,
  f as f2
} from "./chunk-2HV3NVV7.js";
import {
  Ae,
  Be,
  E as E2,
  Ee,
  G,
  He,
  I,
  J,
  K,
  Ke,
  L as L2,
  M,
  Oe,
  P,
  Q,
  Qe,
  Se,
  Te,
  U,
  Ue,
  V,
  W,
  X,
  Y,
  a as a2,
  be,
  de,
  ee,
  h as h2,
  he,
  i2 as i,
  ie,
  le,
  me,
  ne,
  oe,
  q,
  qe,
  r,
  te,
  v as v2,
  we,
  ye,
  z
} from "./chunk-6ZMDPECL.js";
import {
  E
} from "./chunk-KSR45ZRP.js";
import {
  t
} from "./chunk-Q4J5AN2X.js";
import {
  p
} from "./chunk-OJRG2YGM.js";
import {
  h,
  m,
  n as n4,
  n2 as n5
} from "./chunk-BN24XFSK.js";
import {
  n as n2
} from "./chunk-VEUN2EF3.js";
import {
  f
} from "./chunk-3L2AYCZY.js";
import {
  d,
  u,
  v2 as v
} from "./chunk-VUJERGGB.js";
import {
  a
} from "./chunk-NTI2OCVI.js";
import {
  b as b2
} from "./chunk-SEG3PRUR.js";
import {
  L
} from "./chunk-6YWQXXBX.js";
import {
  DateTime
} from "./chunk-Q7TEBZSN.js";
import {
  j2 as j,
  n as n3,
  w
} from "./chunk-FG3XOAFD.js";
import {
  g
} from "./chunk-2WXAPZBK.js";
import {
  c
} from "./chunk-P5H5PJSC.js";
import {
  N
} from "./chunk-YFGQMO6E.js";
import {
  b2 as b
} from "./chunk-H77COA2S.js";
import {
  S
} from "./chunk-GRW2QIBT.js";
import {
  n
} from "./chunk-R2PAF6JT.js";

// node_modules/@arcgis/core/arcade/arcadeEnvironment.js
function e(e3) {
  return e3.name.toLowerCase();
}

// node_modules/@arcgis/core/arcade/ArcadeModuleLoader.js
var s = class {
  constructor(s4, t6) {
    this._moduleSingletons = s4, this._syntaxModules = t6;
  }
  loadLibrary(s4) {
    if (null == this._syntaxModules) return null;
    const t6 = this._syntaxModules[s4];
    return t6 ? { syntax: t6.script, uri: t6.uri } : null;
  }
};

// node_modules/@arcgis/core/arcade/containerUtils.js
var d3 = 0;
function p2(s4, c3, i4, l4, o2 = 1) {
  let u3;
  switch (c3 = c3.toLowerCase()) {
    case "hasz": {
      const e3 = s4.hasZ;
      return void 0 !== e3 && e3;
    }
    case "hasm": {
      const e3 = s4.hasM;
      return void 0 !== e3 && e3;
    }
    case "spatialreference": {
      let a5 = s4.spatialReference._arcadeCacheId;
      if (void 0 === a5) {
        let e3 = true;
        b.isFrozen(s4.spatialReference) && (e3 = false), e3 && (d3++, s4.spatialReference._arcadeCacheId = d3, a5 = d3);
      }
      const r4 = new N2({ wkt: s4.spatialReference.wkt, wkid: s4.spatialReference.wkid });
      return void 0 !== a5 && (r4._arcadeCacheId = "SPREF" + a5.toString()), r4;
    }
  }
  switch (s4.type) {
    case "extent":
      switch (c3) {
        case "xmin":
        case "xmax":
        case "ymin":
        case "ymax":
        case "zmin":
        case "zmax":
        case "mmin":
        case "mmax": {
          const e3 = s4[c3];
          return void 0 !== e3 ? e3 : null;
        }
        case "type":
          return "Extent";
      }
      break;
    case "polygon":
      switch (c3) {
        case "rings":
          u3 = s4.cache._arcadeCacheId, void 0 === u3 && (d3++, u3 = d3, s4.cache._arcadeCacheId = u3);
          return new h2(s4.rings, s4.spatialReference, true === s4.hasZ, true === s4.hasM, u3);
        case "type":
          return "Polygon";
      }
      break;
    case "point":
      switch (c3) {
        case "x":
        case "y":
        case "z":
        case "m":
          return s4[c3] ?? null;
        case "type":
          return "Point";
      }
      break;
    case "polyline":
      switch (c3) {
        case "paths":
          u3 = s4.cache._arcadeCacheId, void 0 === u3 && (d3++, u3 = d3, s4.cache._arcadeCacheId = u3);
          return new h2(s4.paths, s4.spatialReference, true === s4.hasZ, true === s4.hasM, u3);
        case "type":
          return "Polyline";
      }
      break;
    case "multipoint":
      switch (c3) {
        case "points":
          u3 = s4.cache._arcadeCacheId, void 0 === u3 && (d3++, u3 = d3, s4.cache._arcadeCacheId = u3);
          return new i(s4.points, s4.spatialReference, true === s4.hasZ, true === s4.hasM, u3, 1);
        case "type":
          return "Multipoint";
      }
  }
  if (1 === o2) throw new a2(i4, r.InvalidIdentifier, l4);
  return 2 === o2 ? { keystate: "notfound" } : null;
}
function m2(e3, a5) {
  let r4, t6 = e3;
  if (null == t6) return null;
  if (E2(a5)) r4 = a5;
  else if (X(a5)) r4 = a5.toArray();
  else {
    if (null == a5) return null;
    r4 = [a5];
  }
  for (const n8 of r4) {
    if (U(t6)) {
      if (false === P(n8)) return null;
      if (!t6.hasField(n8)) return null;
      t6 = t6.field(n8);
    } else if (Q(t6)) {
      if (false === P(n8)) return null;
      if (!t6.hasField(n8)) return null;
      t6 = t6.field(n8);
    } else if (q(t6)) {
      if (false === P(n8)) return null;
      t6 = p2(t6, n8, null, null, 0);
    } else if (E2(t6)) {
      if (false === z(n8)) return null;
      t6 = n8 >= 0 ? t6[n8] : t6[t6.length + n8];
    } else {
      if (!X(t6)) return null;
      if (false === z(n8)) return null;
      t6 = n8 >= 0 ? t6.get(n8) : t6.get(t6.length() + n8);
    }
    if (null == t6) return null;
  }
  return t6;
}

// node_modules/@arcgis/core/arcade/treeAnalysis.js
var n6 = { all: { min: 2, max: 2 }, time: { min: 0, max: 4 }, dateonly: { min: 0, max: 3 }, getenvironment: { min: 0, max: 0 }, none: { min: 2, max: 2 }, any: { min: 2, max: 2 }, reduce: { min: 2, max: 3 }, map: { min: 2, max: 2 }, filter: { min: 2, max: 2 }, fromcodepoint: { min: 1, max: -1 }, fromcharcode: { min: 1, max: -1 }, tocodepoint: { min: 1, max: 2 }, tocharcode: { min: 1, max: 2 }, concatenate: { min: 0, max: -1 }, expects: { min: 1, max: -1 }, getfeatureset: { min: 1, max: 2 }, week: { min: 1, max: 2 }, fromjson: { min: 1, max: 1 }, length3d: { min: 1, max: 2 }, tohex: { min: 1, max: 1 }, hash: { min: 1, max: 1 }, timezone: { min: 1, max: 1 }, timezoneoffset: { min: 1, max: 1 }, changetimezone: { min: 2, max: 2 }, isoweek: { min: 1, max: 1 }, isoweekday: { min: 1, max: 1 }, hasvalue: { min: 2, max: 2 }, isomonth: { min: 1, max: 1 }, isoyear: { min: 1, max: 1 }, resize: { min: 2, max: 3 }, slice: { min: 0, max: -1 }, splice: { min: 0, max: -1 }, push: { min: 2, max: 2 }, pop: { min: 1, max: 1 }, includes: { min: 2, max: 2 }, array: { min: 0, max: 2 }, front: { min: 1, max: 1 }, back: { min: 1, max: 1 }, insert: { min: 3, max: 3 }, erase: { min: 2, max: 2 }, split: { min: 2, max: 4 }, guid: { min: 0, max: 1 }, standardizeguid: { min: 2, max: 2 }, today: { min: 0, max: 0 }, angle: { min: 2, max: 3 }, bearing: { min: 2, max: 3 }, urlencode: { min: 1, max: 1 }, now: { min: 0, max: 0 }, timestamp: { min: 0, max: 0 }, day: { min: 1, max: 1 }, month: { min: 1, max: 1 }, year: { min: 1, max: 1 }, hour: { min: 1, max: 1 }, second: { min: 1, max: 1 }, millisecond: { min: 1, max: 1 }, minute: { min: 1, max: 1 }, weekday: { min: 1, max: 1 }, toutc: { min: 1, max: 1 }, tolocal: { min: 1, max: 1 }, date: { min: 0, max: 8 }, datediff: { min: 2, max: 4 }, dateadd: { min: 2, max: 3 }, trim: { min: 1, max: 1 }, text: { min: 1, max: 2 }, left: { min: 2, max: 2 }, right: { min: 2, max: 2 }, mid: { min: 2, max: 3 }, upper: { min: 1, max: 1 }, proper: { min: 1, max: 2 }, lower: { min: 1, max: 1 }, find: { min: 2, max: 3 }, iif: { min: 3, max: 3 }, decode: { min: 2, max: -1 }, when: { min: 2, max: -1 }, defaultvalue: { min: 2, max: 3 }, isempty: { min: 1, max: 1 }, domaincode: { min: 2, max: 4 }, domainname: { min: 2, max: 4 }, polygon: { min: 1, max: 1 }, point: { min: 1, max: 1 }, polyline: { min: 1, max: 1 }, extent: { min: 1, max: 1 }, multipoint: { min: 1, max: 1 }, ringisclockwise: { min: 1, max: 1 }, geometry: { min: 1, max: 1 }, count: { min: 0, max: -1 }, number: { min: 1, max: 2 }, acos: { min: 1, max: 1 }, asin: { min: 1, max: 1 }, atan: { min: 1, max: 1 }, atan2: { min: 2, max: 2 }, ceil: { min: 1, max: 2 }, floor: { min: 1, max: 2 }, round: { min: 1, max: 2 }, cos: { min: 1, max: 1 }, exp: { min: 1, max: 1 }, log: { min: 1, max: 1 }, min: { min: 0, max: -1 }, constrain: { min: 3, max: 3 }, console: { min: 0, max: -1 }, max: { min: 0, max: -1 }, pow: { min: 2, max: 2 }, random: { min: 0, max: 0 }, sqrt: { min: 1, max: 1 }, sin: { min: 1, max: 1 }, tan: { min: 1, max: 1 }, abs: { min: 1, max: 1 }, isnan: { min: 1, max: 1 }, stdev: { min: 0, max: -1 }, average: { min: 0, max: -1 }, mean: { min: 0, max: -1 }, sum: { min: 0, max: -1 }, variance: { min: 0, max: -1 }, distinct: { min: 0, max: -1 }, first: { min: 1, max: 1 }, top: { min: 2, max: 2 }, boolean: { min: 1, max: 1 }, dictionary: { min: 0, max: -1 }, typeof: { min: 1, max: 1 }, reverse: { min: 1, max: 1 }, replace: { min: 3, max: 4 }, sort: { min: 1, max: 2 }, feature: { min: 1, max: -1 }, haskey: { min: 2, max: 2 }, indexof: { min: 2, max: 2 }, disjoint: { min: 2, max: 2 }, intersects: { min: 2, max: 2 }, touches: { min: 2, max: 2 }, crosses: { min: 2, max: 2 }, within: { min: 2, max: 2 }, contains: { min: 2, max: 2 }, overlaps: { min: 2, max: 2 }, equals: { min: 2, max: 2 }, relate: { min: 3, max: 3 }, intersection: { min: 2, max: 2 }, union: { min: 1, max: 2 }, difference: { min: 2, max: 2 }, symmetricdifference: { min: 2, max: 2 }, clip: { min: 2, max: 2 }, cut: { min: 2, max: 2 }, area: { min: 1, max: 2 }, areageodetic: { min: 1, max: 2 }, length: { min: 1, max: 2 }, lengthgeodetic: { min: 1, max: 2 }, distancegeodetic: { min: 2, max: 3 }, distance: { min: 2, max: 3 }, densify: { min: 2, max: 3 }, densifygeodetic: { min: 2, max: 3 }, generalize: { min: 2, max: 4 }, buffer: { min: 2, max: 3 }, buffergeodetic: { min: 2, max: 3 }, offset: { min: 2, max: 6 }, rotate: { min: 2, max: 3 }, issimple: { min: 1, max: 1 }, simplify: { min: 1, max: 1 }, convexhull: { min: 1, max: 1 }, centroid: { min: 1, max: 1 }, nearestcoordinate: { min: 2, max: 2 }, nearestvertex: { min: 2, max: 2 }, isselfintersecting: { min: 1, max: 1 }, multiparttosinglepart: { min: 1, max: 1 }, setgeometry: { min: 2, max: 2 }, portal: { min: 1, max: 1 }, getuser: { min: 0, max: 2 }, subtypes: { min: 1, max: 1 }, subtypecode: { min: 1, max: 1 }, subtypename: { min: 1, max: 1 }, domain: { min: 2, max: 3 }, convertdirection: { min: 3, max: 3 }, sqltimestamp: { min: 1, max: 3 }, schema: { min: 1, max: 1 }, measuretocoordinate: { min: 2, max: 2 }, distancetocoordinate: { min: 2, max: 2 }, pointtocoordinate: { min: 2, max: 2 } };
var a3 = { functionDefinitions: /* @__PURE__ */ new Map(), constantDefinitions: /* @__PURE__ */ new Map() };
var t4 = { functionDefinitions: /* @__PURE__ */ new Map(), constantDefinitions: /* @__PURE__ */ new Map() };
for (const h4 of ["pi", "infinity"]) t4.constantDefinitions.set(h4, { type: "constant" }), a3.constantDefinitions.set(h4, { type: "constant" });
t4.constantDefinitions.set("textformatting", { type: "namespace", key: "textformatting", members: [{ key: "backwardslash", type: "constant" }, { key: "doublequote", type: "constant" }, { key: "forwardslash", type: "constant" }, { key: "tab", type: "constant" }, { key: "singlequote", type: "constant" }, { key: "newline", type: "constant" }] }), a3.constantDefinitions.set("textformatting", { type: "namespace", key: "textformatting", members: [{ key: "backwardslash", type: "constant" }, { key: "tab", type: "constant" }, { key: "singlequote", type: "constant" }, { key: "doublequote", type: "constant" }, { key: "forwardslash", type: "constant" }, { key: "newline", type: "constant" }] });
for (const h4 in n6) {
  const e3 = n6[h4];
  t4.functionDefinitions.set(h4, { overloads: [{ type: "function", parametersInfo: { min: e3.min, max: e3.max } }] }), a3.functionDefinitions.set(h4, { overloads: [{ type: "function", parametersInfo: { min: e3.min, max: e3.max } }] });
}
var i2 = /* @__PURE__ */ new Set(["featureset", "featuresetbyid", "featuresetbyname", "featuresetbyassociation", "featuresetbyrelationshipname", "featuresetbyurl", "getfeatureset", "getuser", "attachments", "featuresetbyportalitem", "getfeaturesetinfo", "filterbysubtypecode", "knowledgegraphbyportalitem", "querygraph"]);
var m3 = /* @__PURE__ */ new Set(["disjoint", "intersects", "touches", "crosses", "within", "contains", "overlaps", "equals", "relate", "intersection", "nearestvertex", "nearestcoordinate", "union", "difference", "symmetricdifference", "clip", "cut", "area", "areageodetic", "length", "length3d", "lengthgeodetic", "distance", "distancegeodetic", "densify", "densifygeodetic", "generalize", "buffer", "buffergeodetic", "offset", "rotate", "issimple", "convexhull", "simplify", "multiparttosinglepart", "pointtocoordinate", "distancetocoordinate", "measuretocoordinate"]);
function o(e3) {
  return "string" == typeof e3 || e3 instanceof String;
}
function s2(e3, n8) {
  var _a;
  const i4 = "sync" === n8 ? a3 : t4;
  i4.functionDefinitions.has(e3.name.toLowerCase()) ? (_a = i4.functionDefinitions.get(e3.name.toLowerCase())) == null ? void 0 : _a.overloads.push({ type: "function", parametersInfo: { min: e3.min, max: e3.max } }) : i4.functionDefinitions.set(e3.name.toLowerCase(), { overloads: [{ type: "function", parametersInfo: { min: e3.min, max: e3.max } }] });
}
function r2(e3, n8) {
  if (e3) for (const a5 of e3) c2(a5, n8);
}
function c2(e3, n8) {
  if (e3 && false !== n8(e3)) switch (e3.type) {
    case "ImportDeclaration":
      r2(e3.specifiers, n8), c2(e3.source, n8);
      break;
    case "ExportNamedDeclaration":
      c2(e3.declaration, n8);
      break;
    case "ArrayExpression":
      r2(e3.elements, n8);
      break;
    case "AssignmentExpression":
    case "BinaryExpression":
    case "LogicalExpression":
      c2(e3.left, n8), c2(e3.right, n8);
      break;
    case "BlockStatement":
    case "Program":
      r2(e3.body, n8);
      break;
    case "BreakStatement":
    case "ContinueStatement":
    case "EmptyStatement":
    case "Identifier":
    case "Literal":
      break;
    case "CallExpression":
      c2(e3.callee, n8), r2(e3.arguments, n8);
      break;
    case "ExpressionStatement":
      c2(e3.expression, n8);
      break;
    case "ForInStatement":
      c2(e3.left, n8), c2(e3.right, n8), c2(e3.body, n8);
      break;
    case "ForStatement":
      c2(e3.init, n8), c2(e3.test, n8), c2(e3.update, n8), c2(e3.body, n8);
      break;
    case "WhileStatement":
      c2(e3.test, n8), c2(e3.body, n8);
      break;
    case "FunctionDeclaration":
      c2(e3.id, n8), r2(e3.params, n8), c2(e3.body, n8);
      break;
    case "IfStatement":
      c2(e3.test, n8), c2(e3.consequent, n8), c2(e3.alternate, n8);
      break;
    case "MemberExpression":
      c2(e3.object, n8), c2(e3.property, n8);
      break;
    case "ObjectExpression":
      r2(e3.properties, n8);
      break;
    case "Property":
      c2(e3.key, n8), c2(e3.value, n8);
      break;
    case "ReturnStatement":
    case "UnaryExpression":
    case "UpdateExpression":
      c2(e3.argument, n8);
      break;
    case "VariableDeclaration":
      r2(e3.declarations, n8);
      break;
    case "VariableDeclarator":
      c2(e3.id, n8), c2(e3.init, n8);
      break;
    case "TemplateLiteral":
      r2(e3.expressions, n8), r2(e3.quasis, n8);
  }
}
function x(e3, n8) {
  let a5 = false;
  const t6 = n8.toLowerCase();
  return c2(e3, (e4) => !a5 && ("Identifier" === e4.type && e4.name && e4.name.toLowerCase() === t6 && (a5 = true), true)), a5;
}
function p3(n8) {
  const a5 = [];
  return c2(n8, (n9) => ("ImportDeclaration" === n9.type && n9.source && n9.source.value && a5.push({ libname: e(n9.specifiers[0].local), source: n9.source.value }), true)), a5;
}
function l2(e3, n8) {
  let a5 = false;
  const t6 = n8.toLowerCase();
  return c2(e3, (e4) => !a5 && ("CallExpression" !== e4.type || "Identifier" !== e4.callee.type || !e4.callee.name || e4.callee.name.toLowerCase() !== t6 || (a5 = true, false))), a5;
}
function u2(e3) {
  const n8 = [];
  return c2(e3, (e4) => {
    var _a;
    return "MemberExpression" !== e4.type || "Identifier" !== e4.object.type || (false === e4.computed && e4.object && e4.object.name && e4.property && "Identifier" === e4.property.type && e4.property.name ? n8.push(e4.object.name.toLowerCase() + "." + e4.property.name.toLowerCase()) : e4.object && e4.object.name && e4.property && "Literal" === e4.property.type && "string" == typeof e4.property.value && n8.push(e4.object.name.toLowerCase() + "." + ((_a = e4.property.value) == null ? void 0 : _a.toString().toLowerCase())), false);
  }), n8;
}
function f3(e3) {
  const n8 = [];
  return c2(e3, (e4) => {
    var _a;
    if ("CallExpression" === e4.type) {
      if ("Identifier" === e4.callee.type && "expects" === e4.callee.name.toLowerCase()) {
        let a5 = "";
        for (let t6 = 0; t6 < (e4.arguments || []).length; t6++) 0 === t6 ? "Identifier" === e4.arguments[t6].type && (a5 = e4.arguments[t6].name.toLowerCase()) : a5 && "Literal" === e4.arguments[t6].type && o(e4.arguments[t6].value) && n8.push(a5 + "." + e4.arguments[t6].value.toLowerCase());
        return false;
      }
      if ("Identifier" === e4.callee.type && ["domainname", "domaincode", "domain", "haskey"].includes(e4.callee.name.toLowerCase()) && e4.arguments.length >= 2) {
        let a5 = "";
        return "Identifier" === e4.arguments[0].type && (a5 = e4.arguments[0].name.toLowerCase()), a5 && "Literal" === e4.arguments[1].type && o(e4.arguments[1].value) && n8.push(a5 + "." + e4.arguments[1].value.toLowerCase()), false;
      }
    }
    return "MemberExpression" !== e4.type || "Identifier" !== e4.object.type || (false === e4.computed && e4.object && e4.object.name && e4.property && "Identifier" === e4.property.type && e4.property.name ? n8.push(e4.object.name.toLowerCase() + "." + e4.property.name.toLowerCase()) : e4.object && e4.object.name && e4.property && "Literal" === e4.property.type && "string" == typeof e4.property.value && n8.push(e4.object.name.toLowerCase() + "." + ((_a = e4.property.value) == null ? void 0 : _a.toString().toLowerCase())), false);
  }), n8;
}
function d4(e3) {
  const n8 = [];
  return c2(e3, (e4) => ("CallExpression" === e4.type && "Identifier" === e4.callee.type && n8.push(e4.callee.name.toLowerCase()), true)), n8;
}
function g2(e3, n8 = []) {
  let a5 = null;
  if (void 0 === e3.usesFeatureSet) {
    null === a5 && (a5 = d4(e3)), e3.usesFeatureSet = false;
    for (let n9 = 0; n9 < a5.length; n9++) i2.has(a5[n9]) && (e3.usesFeatureSet = true, e3.isAsync = true);
    if (false === e3.usesFeatureSet && n8 && n8.length > 0) {
      for (const a6 of n8) if (x(e3, a6)) {
        e3.usesFeatureSet = true, e3.isAsync = true;
        break;
      }
    }
  }
  if (void 0 === e3.usesModules) {
    e3.usesModules = false;
    p3(e3).length > 0 && (e3.usesModules = true);
  }
  if (void 0 === e3.usesGeometry) {
    e3.usesGeometry = false, null === a5 && (a5 = d4(e3));
    for (let n9 = 0; n9 < a5.length; n9++) m3.has(a5[n9]) && (e3.usesGeometry = true);
  }
}

// node_modules/@arcgis/core/chunks/array.js
function F(F3) {
  function p7(n8, o2, u3) {
    if (n8 instanceof t) return n8.toArray();
    if (E2(n8)) return n8;
    throw new a2(o2, r.InvalidParameter, u3);
  }
  function y2(n8, t6) {
    const r4 = n8.length, e3 = Math.floor(r4 / 2);
    return 0 === r4 ? [] : 1 === r4 ? [n8[0]] : v5(y2(n8.slice(0, e3), t6), y2(n8.slice(e3, r4), t6), t6);
  }
  function v5(n8, t6, r4) {
    const e3 = [];
    for (; n8.length > 0 || t6.length > 0; ) if (n8.length > 0 && t6.length > 0) {
      let o2 = r4(n8[0], t6[0]);
      isNaN(o2) && (o2 = 0), o2 <= 0 ? (e3.push(n8[0]), n8 = n8.slice(1)) : (e3.push(t6[0]), t6 = t6.slice(1));
    } else n8.length > 0 ? (e3.push(n8[0]), n8 = n8.slice(1)) : t6.length > 0 && (e3.push(t6[0]), t6 = t6.slice(1));
    return e3;
  }
  async function P4(n8, t6) {
    const r4 = n8.length, e3 = Math.floor(r4 / 2);
    if (0 === r4) return [];
    if (1 === r4) return [n8[0]];
    const o2 = [await P4(n8.slice(0, e3), t6), await P4(n8.slice(e3, r4), t6)];
    return I4(o2[0], o2[1], t6, []);
  }
  async function I4(n8, t6, r4, e3) {
    const o2 = e3;
    if (n8.length > 0 || t6.length > 0) {
      if (n8.length > 0 && t6.length > 0) {
        let i4 = await r4(n8[0], t6[0]);
        return isNaN(i4) && (i4 = 1), i4 <= 0 ? (o2.push(n8[0]), n8 = n8.slice(1)) : (o2.push(t6[0]), t6 = t6.slice(1)), I4(n8, t6, r4, e3);
      }
      return n8.length > 0 ? (o2.push(n8[0]), I4(n8 = n8.slice(1), t6, r4, e3)) : (o2.push(t6[0]), I4(n8, t6 = t6.slice(1), r4, e3));
    }
    return e3;
  }
  function O2(n8, e3, u3, a5) {
    ie(u3, 1, 2, n8, e3);
    let s4 = u3[0];
    if (X(s4) && (s4 = s4.toArray()), false === E2(s4)) throw new a2(n8, r.InvalidParameter, e3);
    if (u3.length > 1) {
      if (false === v2(u3[1])) throw new a2(n8, r.InvalidParameter, e3);
      let o2 = s4;
      const i4 = u3[1].createFunction(n8);
      return a5 ? P4(o2, i4) : (o2 = y2(o2, (n9, t6) => i4(n9, t6)), o2);
    }
    let l4 = s4;
    if (0 === l4.length) return [];
    const d6 = {};
    for (let t6 = 0; t6 < l4.length; t6++) {
      const n9 = G(l4[t6]);
      "" !== n9 && (d6[n9] = true);
    }
    if (true === d6.Array || true === d6.Dictionary || true === d6.Feature || true === d6.Point || true === d6.Polygon || true === d6.Polyline || true === d6.Multipoint || true === d6.Extent || true === d6.Function) return l4.slice();
    let m5 = 0, F4 = "";
    for (const t6 in d6) m5++, F4 = t6;
    return l4 = m5 > 1 || "String" === F4 ? y2(l4, (n9, t6) => {
      if (null == n9 || n9 === M) return null == t6 || t6 === M ? 0 : 1;
      if (null == t6 || t6 === M) return -1;
      const r4 = de(n9), e4 = de(t6);
      return r4 < e4 ? -1 : r4 === e4 ? 0 : 1;
    }) : "Number" === F4 ? y2(l4, (n9, t6) => n9 - t6) : "Boolean" === F4 ? y2(l4, (n9, t6) => n9 === t6 ? 0 : t6 ? -1 : 1) : "Date" === F4 ? y2(l4, (n9, t6) => t6 - n9) : l4.slice(), l4;
  }
  F3.functions.array = function(e3, f5) {
    return F3.standardFunction(e3, f5, (d6, h4, w3) => {
      if (ie(w3, 0, 2, e3, f5), 0 === w3.length) return [];
      if (1 === w3.length && null === w3[0]) return [];
      if (E2(w3[0])) {
        if (2 === w3.length && false === L2(w3[1])) throw new a2(e3, r.InvalidParameter, f5);
        return true === Y(w3[1], false) ? f2(w3[0]) : w3[0].slice();
      }
      if (X(w3[0])) {
        if (2 === w3.length && false === L2(w3[1])) throw new a2(e3, r.InvalidParameter, f5);
        return true === Y(w3[1], false) ? f2(w3[0]) : w3[0].toArray().slice();
      }
      const g4 = he(w3[0]);
      if (isNaN(g4) || false === V(g4)) throw new a2(e3, r.InvalidParameter, f5);
      const m5 = Y(w3[1], null), F4 = new Array(g4);
      return F4.fill(m5), F4;
    });
  }, F3.functions.front = function(n8, e3) {
    return F3.standardFunction(n8, e3, (u3, a5, s4) => {
      if (ie(s4, 1, 1, n8, e3), X(s4[0])) {
        if (s4[0].length() <= 0) throw new a2(n8, r.OutOfBounds, e3);
        return s4[0].get(0);
      }
      if (E2(s4[0])) {
        if (s4[0].length <= 0) throw new a2(n8, r.OutOfBounds, e3);
        return s4[0][0];
      }
      throw new a2(n8, r.InvalidParameter, e3);
    });
  }, F3.functions.back = function(n8, e3) {
    return F3.standardFunction(n8, e3, (u3, a5, s4) => {
      if (ie(s4, 1, 1, n8, e3), X(s4[0])) {
        if (s4[0].length() <= 0) throw new a2(n8, r.OutOfBounds, e3);
        return s4[0].get(s4[0].length() - 1);
      }
      if (E2(s4[0])) {
        if (s4[0].length <= 0) throw new a2(n8, r.OutOfBounds, e3);
        return s4[0][s4[0].length - 1];
      }
      throw new a2(n8, r.InvalidParameter, e3);
    });
  }, F3.functions.push = function(n8, e3) {
    return F3.standardFunction(n8, e3, (u3, a5, c3) => {
      if (ie(c3, 1, 2, n8, e3), E2(c3[0])) return c3[0][c3[0].length] = c3[1], c3[0].length;
      throw new a2(n8, r.InvalidParameter, e3);
    });
  }, F3.functions.pop = function(n8, e3) {
    return F3.standardFunction(n8, e3, (u3, a5, c3) => {
      if (ie(c3, 1, 1, n8, e3), E2(c3[0])) {
        if (c3[0].length <= 0) throw new a2(n8, r.OutOfBounds, e3);
        const o2 = c3[0][c3[0].length - 1];
        return c3[0].length = c3[0].length - 1, o2;
      }
      throw new a2(n8, r.InvalidParameter, e3);
    });
  }, F3.functions.erase = function(n8, e3) {
    return F3.standardFunction(n8, e3, (u3, a5, c3) => {
      if (ie(c3, 2, 2, n8, e3), E2(c3[0])) {
        let o2 = he(c3[1]);
        if (isNaN(o2) || false === V(o2)) throw new a2(n8, r.InvalidParameter, e3);
        const i4 = c3[0];
        if (i4.length <= 0) throw new a2(n8, r.OutOfBounds, e3);
        if (o2 < 0 && (o2 = i4.length + o2), o2 < 0) throw new a2(n8, r.OutOfBounds, e3);
        if (o2 >= i4.length) throw new a2(n8, r.OutOfBounds, e3);
        return i4.splice(o2, 1), M;
      }
      throw new a2(n8, r.InvalidParameter, e3);
    });
  }, F3.functions.insert = function(n8, e3) {
    return F3.standardFunction(n8, e3, (u3, a5, c3) => {
      if (ie(c3, 3, 3, n8, e3), E2(c3[0])) {
        const o2 = he(c3[1]);
        if (isNaN(o2) || false === V(o2)) throw new a2(n8, r.InvalidParameter, e3);
        const i4 = c3[2], u4 = c3[0];
        if (o2 > u4.length) throw new a2(n8, r.OutOfBounds, e3);
        if (o2 < 0 && o2 < -1 * u4.length) throw new a2(n8, r.OutOfBounds, e3);
        return o2 === u4.length ? (u4[o2] = i4, M) : (u4.splice(o2, 0, i4), M);
      }
      throw new a2(n8, r.InvalidParameter, e3);
    });
  }, F3.functions.resize = function(n8, e3) {
    return F3.standardFunction(n8, e3, (u3, c3, d6) => {
      if (ie(d6, 2, 3, n8, e3), E2(d6[0])) {
        const o2 = he(d6[1]);
        if (isNaN(o2) || false === V(o2)) throw new a2(n8, r.InvalidParameter, e3);
        if (o2 < 0) throw new a2(n8, r.InvalidParameter, e3);
        const i4 = Y(d6[2], null), u4 = d6[0];
        if (u4.length >= o2) return u4.length = o2, M;
        const c4 = u4.length;
        u4.length = o2;
        for (let n9 = c4; n9 < u4.length; n9++) u4[n9] = i4;
        return M;
      }
      throw new a2(n8, r.InvalidParameter, e3);
    });
  }, F3.functions.includes = function(n8, e3) {
    return F3.standardFunction(n8, e3, (u3, a5, s4) => {
      if (ie(s4, 2, 2, n8, e3), E2(s4[0])) {
        const n9 = s4[1];
        return !!s4[0].some((t6) => me(t6, n9));
      }
      if (X(s4[0])) {
        const n9 = s4[1];
        return !!s4[0].toArray().some((t6) => me(t6, n9));
      }
      throw new a2(n8, r.InvalidParameter, e3);
    });
  }, F3.functions.slice = function(n8, e3) {
    return F3.standardFunction(n8, e3, (u3, f5, d6) => {
      if (ie(d6, 1, 3, n8, e3), E2(d6[0])) {
        const o2 = he(Y(d6[1], 0)), i4 = he(Y(d6[2], d6[0].length));
        if (isNaN(o2) || false === V(o2)) throw new a2(n8, r.InvalidParameter, e3);
        if (isNaN(i4) || false === V(i4)) throw new a2(n8, r.InvalidParameter, e3);
        return d6[0].slice(o2, i4);
      }
      if (X(d6[0])) {
        const o2 = d6[0], i4 = he(Y(d6[1], 0)), u4 = he(Y(d6[2], o2.length()));
        if (isNaN(i4) || false === V(i4)) throw new a2(n8, r.InvalidParameter, e3);
        if (isNaN(u4) || false === V(u4)) throw new a2(n8, r.InvalidParameter, e3);
        return o2.toArray().slice(i4, u4);
      }
      throw new a2(n8, r.InvalidParameter, e3);
    });
  }, F3.functions.splice = function(n8, t6) {
    return F3.standardFunction(n8, t6, (n9, t7, r4) => {
      const e3 = [];
      for (let o2 = 0; o2 < r4.length; o2++) E2(r4[o2]) ? e3.push(...r4[o2]) : X(r4[o2]) ? e3.push(...r4[o2].toArray()) : e3.push(r4[o2]);
      return e3;
    });
  }, F3.functions.top = function(n8, e3) {
    return F3.standardFunction(n8, e3, (u3, a5, l4) => {
      if (ie(l4, 2, 2, n8, e3), E2(l4[0])) return he(l4[1]) >= l4[0].length ? l4[0].slice() : l4[0].slice(0, he(l4[1]));
      if (X(l4[0])) return he(l4[1]) >= l4[0].length() ? l4[0].slice() : l4[0].slice(0, he(l4[1]));
      throw new a2(n8, r.InvalidParameter, e3);
    });
  }, F3.functions.first = function(n8, t6) {
    return F3.standardFunction(n8, t6, (r4, e3, u3) => (ie(u3, 1, 1, n8, t6), E2(u3[0]) ? 0 === u3[0].length ? null : u3[0][0] : X(u3[0]) ? 0 === u3[0].length() ? null : u3[0].get(0) : null));
  }, "sync" === F3.mode && (F3.functions.sort = function(n8, t6) {
    return F3.standardFunction(n8, t6, (t7, r4, e3) => O2(n8, r4, e3, false));
  }, F3.functions.any = function(n8, t6) {
    return F3.standardFunction(n8, t6, (t7, r4, e3) => {
      ie(e3, 2, 2, n8, r4);
      const i4 = e3[1].createFunction(n8), a5 = p7(e3[0], n8, r4);
      for (const n9 of a5) {
        const t8 = i4(n9);
        if (L2(t8) && true === t8) return true;
      }
      return false;
    });
  }, F3.functions.all = function(n8, t6) {
    return F3.standardFunction(n8, t6, (t7, r4, e3) => {
      ie(e3, 2, 2, n8, r4);
      const i4 = e3[1].createFunction(n8), u3 = p7(e3[0], n8, r4);
      for (const n9 of u3) {
        if (true !== i4(n9)) return false;
      }
      return true;
    });
  }, F3.functions.none = function(n8, t6) {
    return F3.standardFunction(n8, t6, (t7, r4, e3) => {
      ie(e3, 2, 2, n8, r4);
      const i4 = e3[1].createFunction(n8), u3 = p7(e3[0], n8, r4);
      for (const n9 of u3) {
        if (true === i4(n9)) return false;
      }
      return true;
    });
  }, F3.functions.reduce = function(n8, t6) {
    return F3.standardFunction(n8, t6, (t7, r4, e3) => {
      ie(e3, 2, 3, n8, r4);
      const i4 = e3[1].createFunction(n8), u3 = p7(e3[0], n8, r4);
      return 2 === e3.length ? 0 === u3.length ? null : u3.reduce((n9, t8) => {
        const r5 = i4(n9, t8);
        return n9 = void 0 !== r5 && r5 !== M ? r5 : null;
      }) : u3.reduce((n9, t8) => {
        const r5 = i4(n9, t8);
        return n9 = void 0 !== r5 && r5 !== M ? r5 : null;
      }, e3[2]);
    });
  }, F3.functions.map = function(n8, t6) {
    return F3.standardFunction(n8, t6, (t7, r4, e3) => {
      ie(e3, 2, 2, n8, r4);
      const i4 = e3[1].createFunction(n8), u3 = p7(e3[0], n8, r4), a5 = [];
      for (const n9 of u3) {
        const t8 = i4(n9);
        void 0 !== t8 && t8 !== M ? a5.push(t8) : a5.push(null);
      }
      return a5;
    });
  }, F3.functions.filter = function(n8, t6) {
    return F3.standardFunction(n8, t6, (t7, r4, e3) => {
      ie(e3, 2, 2, n8, r4);
      const i4 = e3[1].createFunction(n8), u3 = p7(e3[0], n8, r4), a5 = [];
      for (const n9 of u3) {
        true === i4(n9) && a5.push(n9);
      }
      return a5;
    });
  }), "async" === F3.mode && (F3.functions.sort = function(n8, t6) {
    return F3.standardFunctionAsync(n8, t6, async (t7, r4, e3) => O2(n8, r4, e3, true));
  }, F3.functions.any = function(n8, t6) {
    return F3.standardFunctionAsync(n8, t6, async (t7, r4, e3) => {
      ie(e3, 2, 2, n8, r4);
      const i4 = e3[1].createFunction(n8), a5 = p7(e3[0], n8, r4);
      for (const n9 of a5) {
        const t8 = await i4(n9);
        let r5 = null;
        if (r5 = S(r5) ? await t8 : t8, L2(r5) && true === r5) return true;
      }
      return false;
    });
  }, F3.functions.all = function(n8, t6) {
    return F3.standardFunctionAsync(n8, t6, async (t7, r4, e3) => {
      ie(e3, 2, 2, n8, r4);
      const i4 = e3[1].createFunction(n8), u3 = p7(e3[0], n8, r4);
      for (const n9 of u3) {
        const t8 = await i4(n9);
        let r5 = null;
        if (r5 = S(r5) ? await t8 : t8, true !== r5) return false;
      }
      return true;
    });
  }, F3.functions.none = function(n8, t6) {
    return F3.standardFunctionAsync(n8, t6, async (t7, r4, e3) => {
      ie(e3, 2, 2, n8, r4);
      const i4 = e3[1].createFunction(n8), u3 = p7(e3[0], n8, r4);
      for (const n9 of u3) {
        const t8 = await i4(n9);
        let r5 = null;
        if (r5 = S(r5) ? await t8 : t8, true === r5) return false;
      }
      return true;
    });
  }, F3.functions.filter = function(n8, t6) {
    return F3.standardFunctionAsync(n8, t6, async (t7, r4, e3) => {
      ie(e3, 2, 2, n8, r4);
      const i4 = e3[1].createFunction(n8), u3 = p7(e3[0], n8, r4), a5 = [];
      for (const n9 of u3) {
        const t8 = await i4(n9);
        let r5 = null;
        r5 = S(r5) ? await t8 : t8, true === r5 && a5.push(n9);
      }
      return a5;
    });
  }, F3.functions.reduce = function(n8, t6) {
    return F3.standardFunctionAsync(n8, t6, async (t7, r4, e3) => {
      ie(e3, 2, 3, n8, r4);
      const i4 = e3[1].createFunction(n8), u3 = p7(e3[0], n8, r4);
      let c3;
      if (e3.length > 2) {
        const n9 = Y(e3[2], null);
        c3 = u3.reduce(async (n10, t8) => {
          let r5 = await n10;
          return void 0 !== r5 && r5 !== M || (r5 = null), i4(r5, t8);
        }, Promise.resolve(n9));
      } else {
        if (0 === u3.length) return null;
        c3 = u3.reduce(async (n9, t8, r5) => {
          if (r5 <= 1) return i4(n9, t8);
          let e4 = await n9;
          return void 0 !== e4 && e4 !== M || (e4 = null), i4(e4, t8);
        });
      }
      return c3.then((n9) => void 0 !== n9 && n9 !== M ? n9 : null);
    });
  }, F3.functions.map = function(n8, t6) {
    return F3.standardFunctionAsync(n8, t6, async (t7, r4, e3) => {
      ie(e3, 2, 2, n8, r4);
      const i4 = e3[1].createFunction(n8), u3 = p7(e3[0], n8, r4), a5 = [];
      for (const n9 of u3) {
        const t8 = await i4(n9);
        let r5 = null;
        r5 = S(r5) ? await t8 : t8, void 0 !== r5 && r5 !== M ? a5.push(r5) : a5.push(null);
      }
      return a5;
    });
  });
}
var p4 = Object.freeze(Object.defineProperty({ __proto__: null, registerFunctions: F }, Symbol.toStringTag, { value: "Module" }));

// node_modules/@arcgis/core/arcade/functions/date.js
function k2(n8, e3, r4) {
  return n8 + (T(r4) ? S2 : D2)[e3];
}
function T(n8) {
  return n8 % 4 == 0 && (n8 % 100 != 0 || n8 % 400 == 0);
}
var D2 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
var S2 = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];
function P2(n8) {
  return null === n8 ? n8 : false === n8.isValid ? null : n8;
}
function Z2(n8, e3) {
  return "" === n8 || "default" === n8.toLowerCase().trim() ? Be(e3) : "z" === n8 || "Z" === n8 ? "UTC" : n8;
}
function p5(n8, e3) {
  return te(n8) ? n8.toArcadeDate() : be(n8, Be(e3));
}
function C(T3, D4) {
  T3.today = function(e3, r4) {
    return D4(e3, r4, (t6, a5, s4) => {
      ie(s4, 0, 0, e3, r4);
      const i4 = /* @__PURE__ */ new Date();
      return i4.setHours(0, 0, 0, 0), m.dateJSAndZoneToArcadeDate(i4, Be(e3));
    });
  }, T3.time = function(e3, f5) {
    return D4(e3, f5, (m5, d6, h4) => {
      switch (ie(h4, 0, 4, e3, f5), h4.length) {
        case 0: {
          const r4 = m.nowToArcadeDate(Be(e3));
          return new n5(r4.hour, r4.minute, r4.second, r4.millisecond);
        }
        case 1: {
          if (ne(h4[0])) return h4[0].clone();
          if (ee(h4[0])) return new n5(h4[0].hour, h4[0].minute, h4[0].second, h4[0].millisecond);
          if (te(h4[0])) return new n5(0, 0, 0, 0);
          if (P(h4[0])) return n5.fromString(h4[0]);
          const n8 = he(h4[0]);
          return false === isNaN(n8) ? n5.fromMilliseconds(n8) : null;
        }
        case 2:
          return P(h4[0]) && P(h4[1]) ? n5.fromString(h4[0], h4[1]) : n5.fromParts(he(h4[0]), he(h4[1]), 0, 0);
        case 3:
          return n5.fromParts(he(h4[0]), he(h4[1]), he(h4[2]), 0);
        case 4:
          return n5.fromParts(he(h4[0]), he(h4[1]), he(h4[2]), he(h4[3]));
      }
      throw new a2(e3, r.InvalidParameter, f5);
    });
  }, T3.dateonly = function(e3, r4) {
    return D4(e3, r4, (t6, i4, m5) => {
      if (ie(m5, 0, 3, e3, r4), 3 === m5.length) return n4.fromParts(he(m5[0]), he(m5[1]) + 1, he(m5[2]));
      if (2 === m5.length) {
        const n8 = de(m5[1]);
        return "" === n8 ? null : "X" === n8 ? n4.fromSeconds(he(m5[0])) : "x" === n8 ? n4.fromMilliseconds(he(m5[0])) : n4.fromString(de(m5[0]), n8);
      }
      if (1 === m5.length) {
        if (P(m5[0])) {
          if ("" === m5[0].replaceAll(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "")) return null;
          if (true === /^[0-9][0-9][0-9][0-9]$/.test(m5[0])) return n4.fromString(m5[0] + "-01-01");
        }
        if (te(m5[0])) return m5[0].clone();
        if (ee(m5[0])) return n4.fromParts(m5[0].year, m5[0].monthJS + 1, m5[0].day);
        const n8 = he(m5[0]);
        return false === isNaN(n8) ? n4.fromMilliseconds(n8) : P(m5[0]) ? n4.fromString(m5[0]) : null;
      }
      if (0 === m5.length) {
        const r5 = m.nowToArcadeDate(Be(e3));
        return false === r5.isValid ? null : n4.fromParts(r5.year, r5.monthJS + 1, r5.day);
      }
      return null;
    });
  }, T3.changetimezone = function(a5, s4) {
    return D4(a5, s4, (i4, l4, d6) => {
      if (ie(d6, 2, 2, a5, s4), null === d6[0]) return null;
      if (te(d6[0])) throw new a2(a5, r.CannotChangeTimeZoneDateOnly, s4);
      if (te(d6[0])) throw new a2(a5, r.CannotChangeTimeZoneTime, s4);
      const h4 = be(d6[0], Be(a5));
      if (null === h4) throw new a2(a5, r.InvalidParameter, s4);
      const y2 = h(Z2(de(d6[1]), a5), false);
      if (null === y2) return null;
      const N4 = m.arcadeDateAndZoneToArcadeDate(h4, y2);
      return false === N4.isValid ? null : N4;
    });
  }, T3.timezone = function(e3, r4) {
    return D4(e3, r4, (t6, a5, s4) => {
      if (ie(s4, 1, 2, e3, r4), ne(s4[0])) return "Unknown";
      if (te(s4[0])) return "Unknown";
      const l4 = be(s4[0], Be(e3));
      if (null === l4) return null;
      const f5 = l4.timeZone;
      return "system" === f5 ? m.systemTimeZoneCanonicalName : "utc" === f5.toLowerCase() ? "UTC" : "unknown" === f5.toLowerCase() ? "Unknown" : f5;
    });
  }, T3.timezoneoffset = function(n8, e3) {
    return D4(n8, e3, (r4, t6, a5) => {
      ie(a5, 1, 1, n8, e3);
      const s4 = be(a5[0], Be(n8));
      return null === s4 ? null : 60 * s4.timeZoneOffset * 1e3;
    });
  }, T3.now = function(e3, r4) {
    return D4(e3, r4, (t6, a5, s4) => {
      ie(s4, 0, 0, e3, r4);
      const i4 = m.nowToArcadeDate(Be(e3));
      return false === i4.isValid ? null : i4;
    });
  }, T3.timestamp = function(e3, r4) {
    return D4(e3, r4, (t6, u3, a5) => {
      ie(a5, 0, 0, e3, r4);
      const s4 = m.nowUTCToArcadeDate();
      return false === s4.isValid ? null : s4;
    });
  }, T3.toutc = function(n8, e3) {
    return D4(n8, e3, (r4, t6, a5) => {
      ie(a5, 1, 1, n8, e3);
      const s4 = be(a5[0], Be(n8));
      return null === s4 ? null : s4.toUTC();
    });
  }, T3.tolocal = function(n8, e3) {
    return D4(n8, e3, (r4, t6, a5) => {
      ie(a5, 1, 1, n8, e3);
      const s4 = be(a5[0], Be(n8));
      return null === s4 ? null : s4.toLocal();
    });
  }, T3.day = function(n8, e3) {
    return D4(n8, e3, (r4, t6, a5) => {
      ie(a5, 1, 1, n8, e3);
      const s4 = p5(a5[0], Be(n8));
      return null === s4 ? NaN : s4.day;
    });
  }, T3.month = function(n8, e3) {
    return D4(n8, e3, (r4, t6, a5) => {
      ie(a5, 1, 1, n8, e3);
      const s4 = p5(a5[0], Be(n8));
      return null === s4 ? NaN : s4.monthJS;
    });
  }, T3.year = function(n8, e3) {
    return D4(n8, e3, (r4, t6, a5) => {
      ie(a5, 1, 1, n8, e3);
      const s4 = p5(a5[0], Be(n8));
      return null === s4 ? NaN : s4.year;
    });
  }, T3.hour = function(n8, e3) {
    return D4(n8, e3, (r4, t6, a5) => {
      if (ie(a5, 1, 1, n8, e3), ne(a5[0])) return a5[0].hour;
      const s4 = be(a5[0], Be(n8));
      return null === s4 ? NaN : s4.hour;
    });
  }, T3.second = function(n8, e3) {
    return D4(n8, e3, (r4, t6, a5) => {
      if (ie(a5, 1, 1, n8, e3), ne(a5[0])) return a5[0].second;
      const s4 = be(a5[0], Be(n8));
      return null === s4 ? NaN : s4.second;
    });
  }, T3.millisecond = function(n8, e3) {
    return D4(n8, e3, (r4, t6, a5) => {
      if (ie(a5, 1, 1, n8, e3), ne(a5[0])) return a5[0].millisecond;
      const s4 = be(a5[0], Be(n8));
      return null === s4 ? NaN : s4.millisecond;
    });
  }, T3.minute = function(n8, e3) {
    return D4(n8, e3, (r4, t6, a5) => {
      if (ie(a5, 1, 1, n8, e3), ne(a5[0])) return a5[0].minute;
      const s4 = be(a5[0], Be(n8));
      return null === s4 ? NaN : s4.minute;
    });
  }, T3.week = function(n8, e3) {
    return D4(n8, e3, (s4, i4, l4) => {
      ie(l4, 1, 2, n8, e3);
      const c3 = p5(l4[0], Be(n8));
      if (null === c3) return NaN;
      const f5 = he(Y(l4[1], 0));
      if (f5 < 0 || f5 > 6) throw new a2(n8, r.InvalidParameter, e3);
      const m5 = c3.day, h4 = c3.monthJS, y2 = c3.year, N4 = c3.dayOfWeekJS, w3 = k2(m5, h4, y2) - 1, g4 = Math.floor(w3 / 7);
      return N4 - f5 + (N4 - f5 < 0 ? 7 : 0) < w3 - 7 * g4 ? g4 + 1 : g4;
    });
  }, T3.weekday = function(n8, e3) {
    return D4(n8, e3, (r4, t6, a5) => {
      ie(a5, 1, 1, n8, e3);
      const s4 = p5(a5[0], Be(n8));
      return null === s4 ? NaN : s4.dayOfWeekJS;
    });
  }, T3.isoweekday = function(n8, e3) {
    return D4(n8, e3, (r4, t6, a5) => {
      ie(a5, 1, 1, n8, e3);
      const s4 = p5(a5[0], Be(n8));
      return null === s4 ? NaN : s4.dayOfWeekISO;
    });
  }, T3.isomonth = function(n8, e3) {
    return D4(n8, e3, (r4, t6, a5) => {
      ie(a5, 1, 1, n8, e3);
      const s4 = p5(a5[0], Be(n8));
      return null === s4 ? NaN : s4.monthISO;
    });
  }, T3.isoweek = function(n8, e3) {
    return D4(n8, e3, (r4, t6, a5) => {
      ie(a5, 1, 1, n8, e3);
      const s4 = p5(a5[0], Be(n8));
      return null === s4 ? NaN : s4.weekISO;
    });
  }, T3.isoyear = function(n8, e3) {
    return D4(n8, e3, (r4, t6, a5) => {
      ie(a5, 1, 1, n8, e3);
      const s4 = p5(a5[0], Be(n8));
      return null === s4 ? NaN : s4.yearISO;
    });
  }, T3.date = function(r4, t6) {
    return D4(r4, t6, (l4, d6, y2) => {
      if (ie(y2, 0, 8, r4, t6), 3 === y2.length) {
        if (te(y2[0]) && ne(y2[1]) && P(y2[2])) {
          const t7 = h(Z2(de(y2[2]) ?? "unknown", r4), false);
          return null === t7 ? null : P2(m.fromParts(y2[0].year, y2[0].month, y2[0].day, y2[1].hour, y2[1].minute, y2[1].second, y2[1].millisecond, t7));
        }
        return P2(m.fromParts(he(y2[0]), he(y2[1]) + 1, he(y2[2]), 0, 0, 0, 0, Be(r4)));
      }
      if (4 === y2.length) return P2(m.fromParts(he(y2[0]), he(y2[1]) + 1, he(y2[2]), he(y2[3]), 0, 0, 0, Be(r4)));
      if (5 === y2.length) return P2(m.fromParts(he(y2[0]), he(y2[1]) + 1, he(y2[2]), he(y2[3]), he(y2[4]), 0, 0, Be(r4)));
      if (6 === y2.length) return P2(m.fromParts(he(y2[0]), he(y2[1]) + 1, he(y2[2]), he(y2[3]), he(y2[4]), he(y2[5]), 0, Be(r4)));
      if (7 === y2.length) return P2(m.fromParts(he(y2[0]), he(y2[1]) + 1, he(y2[2]), he(y2[3]), he(y2[4]), he(y2[5]), he(y2[6]), Be(r4)));
      if (8 === y2.length) {
        const t7 = h(Z2(de(y2[7]) ?? "unknown", r4), false);
        return null === t7 ? null : P2(m.fromParts(he(y2[0]), he(y2[1]) + 1, he(y2[2]), he(y2[3]), he(y2[4]), he(y2[5]), he(y2[6]), t7));
      }
      if (2 === y2.length) {
        if (te(y2[0]) && P(y2[1])) {
          const t8 = h(Z2(de(y2[1]) ?? "unknown", r4), false);
          return null === t8 ? null : P2(m.fromParts(y2[0].year, y2[0].month, y2[0].day, 0, 0, 0, 0, t8));
        }
        if (te(y2[0]) && ne(y2[1])) return P2(m.fromParts(y2[0].year, y2[0].month, y2[0].day, y2[1].hour, y2[1].minute, y2[1].second, y2[1].millisecond, "unknown"));
        let t7, o2 = de(y2[1]);
        return "" === o2 ? null : (o2 = le(o2, true), t7 = "X" === o2 ? DateTime.fromSeconds(he(y2[0])) : "x" === o2 ? DateTime.fromMillis(he(y2[0])) : DateTime.fromFormat(de(y2[0]), o2, { locale: c(), numberingSystem: "latn" }), t7.isValid ? m.dateTimeToArcadeDate(t7) : null);
      }
      if (1 === y2.length) {
        if (te(y2[0])) return P2(m.fromParts(y2[0].year, y2[0].month, y2[0].day, 0, 0, 0, 0, "unknown"));
        if (P(y2[0])) {
          if ("" === y2[0].replaceAll(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "")) return null;
          if (true === /^[0-9][0-9][0-9][0-9]$/.test(y2[0])) return be(y2[0] + "-01-01", Be(r4));
        }
        const e3 = he(y2[0]);
        if (false === isNaN(e3)) {
          const t7 = DateTime.fromMillis(e3);
          return t7.isValid ? m.dateTimeAndZoneToArcadeDate(t7, Be(r4)) : null;
        }
        return be(y2[0], Be(r4));
      }
      return 0 === y2.length ? m.nowToArcadeDate(Be(r4)) : null;
    });
  }, T3.datediff = function(e3, r4) {
    return D4(e3, r4, (t6, a5, s4) => {
      if (ie(s4, 2, 4, e3, r4), ne(s4[0])) return ne(s4[1]) ? s4[0].difference(s4[1], de(s4[2])) : NaN;
      if (ne(s4[1])) return NaN;
      if (te(s4[0])) return te(s4[1]) ? s4[0].difference(s4[1], de(s4[2])) : NaN;
      if (te(s4[1])) return NaN;
      let l4 = be(s4[0], Be(e3)), h4 = be(s4[1], Be(e3));
      if (null === l4 || null === h4) return NaN;
      let y2 = Y(s4[3], "");
      switch ("" !== y2 && null !== y2 ? (y2 = Z2(de(y2), e3), l4 = m.arcadeDateAndZoneToArcadeDate(l4, y2), h4 = m.arcadeDateAndZoneToArcadeDate(h4, y2)) : l4.timeZone !== h4.timeZone && (l4.isUnknownTimeZone ? l4 = m.arcadeDateAndZoneToArcadeDate(l4, h4.timeZone) : h4 = (h4.isUnknownTimeZone, m.arcadeDateAndZoneToArcadeDate(h4, l4.timeZone))), de(s4[2]).toLowerCase()) {
        case "days":
        case "day":
        case "d":
          return l4.diff(h4, "days");
        case "months":
        case "month":
          return l4.diff(h4, "months");
        case "minutes":
        case "minute":
        case "m":
          return "M" === s4[2] ? l4.diff(h4, "months") : l4.diff(h4, "minutes");
        case "seconds":
        case "second":
        case "s":
          return l4.diff(h4, "seconds");
        case "milliseconds":
        case "millisecond":
        case "ms":
        default:
          return l4.diff(h4);
        case "hours":
        case "hour":
        case "h":
          return l4.diff(h4, "hours");
        case "years":
        case "year":
        case "y":
          return l4.diff(h4, "years");
      }
    });
  }, T3.dateadd = function(n8, e3) {
    return D4(n8, e3, (r4, t6, s4) => {
      ie(s4, 2, 3, n8, e3);
      let l4 = he(s4[1]);
      if (isNaN(l4) || l4 === 1 / 0 || l4 === -1 / 0) return ne(s4[0]) || te(s4[0]) ? s4[0].clone() : be(s4[0], Be(n8));
      let d6 = "milliseconds";
      switch (de(s4[2]).toLowerCase()) {
        case "days":
        case "day":
        case "d":
          d6 = "days", l4 = te(s4[0]) ? l4 : oe(l4);
          break;
        case "months":
        case "month":
          d6 = "months", l4 = te(s4[0]) ? l4 : oe(l4);
          break;
        case "minutes":
        case "minute":
        case "m":
          d6 = "M" === s4[2] ? "months" : "minutes";
          break;
        case "seconds":
        case "second":
        case "s":
          d6 = "seconds";
          break;
        case "milliseconds":
        case "millisecond":
        case "ms":
          d6 = "milliseconds";
          break;
        case "hours":
        case "hour":
        case "h":
          d6 = "hours";
          break;
        case "years":
        case "year":
        case "y":
          d6 = "years";
      }
      if (ne(s4[0])) return s4[0].plus(d6, l4);
      if (te(s4[0])) return s4[0].plus(d6, l4);
      const h4 = be(s4[0], Be(n8));
      return null === h4 ? null : h4.plus({ [d6]: l4 });
    });
  };
}

// node_modules/@arcgis/core/arcade/functions/geometry.js
function L3(L5, U3) {
  L5.ringisclockwise = function(e3, t6) {
    return U3(e3, t6, (n8, i4, c3) => {
      ie(c3, 1, 1, e3, t6);
      let m5 = [];
      if (null === c3[0]) return false;
      if (E2(c3[0])) for (const o2 of c3[0]) {
        if (!(o2 instanceof j)) throw new a2(e3, r.InvalidParameter, t6);
        m5.push(o2.hasZ ? o2.hasM ? [o2.x, o2.y, o2.z, o2.m] : [o2.x, o2.y, o2.z] : [o2.x, o2.y]);
      }
      else if (c3[0] instanceof i) m5 = c3[0]._elements;
      else {
        if (!X(c3[0])) throw new a2(e3, r.InvalidParameter, t6);
        for (const n9 of c3[0].toArray()) {
          if (!(n9 instanceof j)) throw new a2(e3, r.InvalidParameter, t6);
          m5.push(n9.hasZ ? n9.hasM ? [n9.x, n9.y, n9.z, n9.m] : [n9.x, n9.y, n9.z] : [n9.x, n9.y]);
        }
      }
      return !(m5.length < 3) && a(m5);
    });
  }, L5.polygon = function(e3, t6) {
    return U3(e3, t6, (o2, s4, f5) => {
      let u3;
      if (ie(f5, 1, 1, e3, t6), f5[0] instanceof N2) {
        const n8 = Ae(D.parseGeometryFromDictionary(f5[0], e3.spatialReference), e3.spatialReference);
        if (n8 instanceof v == false) throw new a2(e3, r.InvalidParameter, t6);
        u3 = n8;
      } else if (f5[0] instanceof v) u3 = f(f5[0].toJSON());
      else {
        const t7 = JSON.parse(f5[0]);
        t7 && !t7.spatialReference && (t7.spatialReference = e3.spatialReference), u3 = Ae(new v(t7), e3.spatialReference);
      }
      if (null !== u3 && false === u3.spatialReference.equals(e3.spatialReference)) throw new a2(e3, r.WrongSpatialReference, t6);
      return Te(u3);
    });
  }, L5.polyline = function(e3, t6) {
    return U3(e3, t6, (o2, s4, f5) => {
      let u3;
      if (ie(f5, 1, 1, e3, t6), f5[0] instanceof N2) {
        const n8 = Ae(D.parseGeometryFromDictionary(f5[0], e3.spatialReference), e3.spatialReference);
        if (n8 instanceof d == false) throw new a2(e3, r.InvalidParameter, t6);
        u3 = n8;
      } else if (f5[0] instanceof d) u3 = f(f5[0].toJSON());
      else {
        const t7 = JSON.parse(f5[0]);
        t7 && !t7.spatialReference && (t7.spatialReference = e3.spatialReference), u3 = Ae(new d(t7), e3.spatialReference);
      }
      if (null !== u3 && false === u3.spatialReference.equals(e3.spatialReference)) throw new a2(e3, r.WrongSpatialReference, t6);
      return Te(u3);
    });
  }, L5.point = function(e3, t6) {
    return U3(e3, t6, (o2, s4, f5) => {
      let u3;
      if (ie(f5, 1, 1, e3, t6), f5[0] instanceof N2) {
        const n8 = Ae(D.parseGeometryFromDictionary(f5[0], e3.spatialReference), e3.spatialReference);
        if (n8 instanceof j == false) throw new a2(e3, r.InvalidParameter, t6);
        u3 = n8;
      } else if (f5[0] instanceof j) u3 = f(f5[0].toJSON());
      else {
        const t7 = JSON.parse(f5[0]);
        t7 && !t7.spatialReference && (t7.spatialReference = e3.spatialReference), u3 = Ae(new j(t7), e3.spatialReference);
      }
      if (null !== u3 && false === u3.spatialReference.equals(e3.spatialReference)) throw new a2(e3, r.WrongSpatialReference, t6);
      return Te(u3);
    });
  }, L5.multipoint = function(e3, t6) {
    return U3(e3, t6, (o2, s4, f5) => {
      let u3;
      if (ie(f5, 1, 1, e3, t6), f5[0] instanceof N2) {
        const n8 = Ae(D.parseGeometryFromDictionary(f5[0], e3.spatialReference), e3.spatialReference);
        if (n8 instanceof u == false) throw new a2(e3, r.InvalidParameter, t6);
        u3 = n8;
      } else if (f5[0] instanceof u) u3 = f(f5[0].toJSON());
      else {
        const t7 = JSON.parse(f5[0]);
        t7 && !t7.spatialReference && (t7.spatialReference = e3.spatialReference), u3 = Ae(new u(t7), e3.spatialReference);
      }
      if (null !== u3 && false === u3.spatialReference.equals(e3.spatialReference)) throw new a2(e3, r.WrongSpatialReference, t6);
      return Te(u3);
    });
  }, L5.extent = function(e3, t6) {
    return U3(e3, t6, (o2, s4, f5) => {
      var _a, _b, _c;
      f5 = we(f5), ie(f5, 1, 1, e3, t6);
      let p7 = null;
      if (f5[0] instanceof N2) p7 = Ae(D.parseGeometryFromDictionary(f5[0], e3.spatialReference), e3.spatialReference);
      else if (f5[0] instanceof j) {
        const e4 = { xmin: f5[0].x, ymin: f5[0].y, xmax: f5[0].x, ymax: f5[0].y, spatialReference: f5[0].spatialReference.toJSON() }, t7 = f5[0];
        t7.hasZ ? (e4.zmin = t7.z, e4.zmax = t7.z) : t7.hasM && (e4.mmin = t7.m, e4.mmax = t7.m), p7 = f(e4);
      } else if (f5[0] instanceof v) p7 = f((_a = f5[0].extent) == null ? void 0 : _a.toJSON());
      else if (f5[0] instanceof d) p7 = f((_b = f5[0].extent) == null ? void 0 : _b.toJSON());
      else if (f5[0] instanceof u) p7 = f((_c = f5[0].extent) == null ? void 0 : _c.toJSON());
      else if (f5[0] instanceof w) p7 = f(f5[0].toJSON());
      else {
        const t7 = JSON.parse(f5[0]);
        t7 && !t7.spatialReference && (t7.spatialReference = e3.spatialReference), p7 = Ae(new w(t7), e3.spatialReference);
      }
      if (null !== p7 && false === p7.spatialReference.equals(e3.spatialReference)) throw new a2(e3, r.WrongSpatialReference, t6);
      return Te(p7);
    });
  }, L5.geometry = function(e3, t6) {
    return U3(e3, t6, (o2, s4, f5) => {
      ie(f5, 1, 1, e3, t6);
      let u3 = null;
      if (null === f5[0]) return null;
      if (U(f5[0])) u3 = Ae(f5[0].geometry(), e3.spatialReference);
      else if (f5[0] instanceof N2) u3 = Ae(D.parseGeometryFromDictionary(f5[0], e3.spatialReference), e3.spatialReference);
      else {
        const t7 = JSON.parse(f5[0]);
        t7 && !t7.spatialReference && (t7.spatialReference = e3.spatialReference), u3 = Ae(f(t7), e3.spatialReference);
      }
      if (null !== u3 && false === u3.spatialReference.equals(e3.spatialReference)) throw new a2(e3, r.WrongSpatialReference, t6);
      return Te(u3);
    });
  }, L5.setgeometry = function(e3, t6) {
    return U3(e3, t6, (n8, i4, o2) => {
      if (ie(o2, 2, 2, e3, t6), !U(o2[0])) throw new a2(e3, r.InvalidParameter, t6);
      if (true === o2[0].immutable) throw new a2(e3, r.Immutable, t6);
      if (!(o2[1] instanceof n3 || null === o2[1])) throw new a2(e3, r.InvalidParameter, t6);
      return o2[0]._geometry = o2[1], M;
    });
  }, L5.feature = function(e3, t6) {
    return U3(e3, t6, (o2, l4, s4) => {
      if (0 === s4.length) throw new a2(e3, r.WrongNumberOfParameters, t6);
      let f5;
      if (1 === s4.length) if (P(s4[0])) f5 = D.fromJson(JSON.parse(s4[0]), e3.timeZone);
      else if (U(s4[0])) f5 = D.createFromArcadeFeature(s4[0]);
      else if (s4[0] instanceof n3) f5 = D.createFromGraphicLikeObject(s4[0], null, null, e3.timeZone);
      else {
        if (!(s4[0] instanceof N2)) throw new a2(e3, r.InvalidParameter, t6);
        {
          let t7 = s4[0].hasField("geometry") ? s4[0].field("geometry") : null, r4 = s4[0].hasField("attributes") ? s4[0].field("attributes") : null;
          null !== t7 && t7 instanceof N2 && (t7 = D.parseGeometryFromDictionary(t7, e3.spatialReference)), null !== r4 && (r4 = D.parseAttributesFromDictionary(r4)), f5 = D.createFromGraphicLikeObject(t7, r4, null, e3.timeZone);
        }
      }
      else if (2 === s4.length) {
        let o3 = null, l5 = null;
        if (null !== s4[0]) if (s4[0] instanceof n3) o3 = s4[0];
        else {
          if (!(o3 instanceof N2)) throw new a2(e3, r.InvalidParameter, t6);
          o3 = D.parseGeometryFromDictionary(s4[0], e3.spatialReference);
        }
        if (null !== s4[1]) {
          if (!(s4[1] instanceof N2)) throw new a2(e3, r.InvalidParameter, t6);
          l5 = D.parseAttributesFromDictionary(s4[1]);
        }
        f5 = D.createFromGraphicLikeObject(o3, l5, null, e3.timeZone);
      } else {
        let o3 = null;
        const l5 = {};
        if (null !== s4[0]) if (s4[0] instanceof n3) o3 = s4[0];
        else {
          if (!(o3 instanceof N2)) throw new a2(e3, r.InvalidParameter, t6);
          o3 = D.parseGeometryFromDictionary(s4[0], e3.spatialReference);
        }
        for (let n8 = 1; n8 < s4.length; n8 += 2) {
          const i4 = de(s4[n8]), o4 = s4[n8 + 1];
          if (!(null == o4 || P(o4) || isNaN(o4) || ee(o4) || z(o4) || ne(o4) || te(o4) || L2(o4))) throw new a2(e3, r.InvalidParameter, t6);
          if (v2(o4) || false === I(o4)) throw new a2(e3, r.InvalidParameter, t6);
          l5[i4] = o4 === M ? null : o4;
        }
        f5 = D.createFromGraphicLikeObject(o3, l5, null, e3.timeZone);
      }
      return f5._geometry = Ae(f5.geometry(), e3.spatialReference), f5.immutable = false, f5;
    });
  }, L5.dictionary = function(e3, t6) {
    return U3(e3, t6, (i4, o2, l4) => {
      if (0 === l4.length || 1 === l4.length && null === l4[0]) {
        const e4 = new N2();
        return e4.immutable = false, e4;
      }
      if (1 === l4.length && P(l4[0])) try {
        const t7 = JSON.parse(l4[0]), r4 = N2.convertObjectToArcadeDictionary(t7, Be(e3), false);
        return r4.immutable = false, r4;
      } catch (u3) {
        throw new a2(e3, r.InvalidParameter, t6);
      }
      if (1 === l4.length && l4[0] instanceof n3) try {
        const t7 = l4[0].toJSON();
        t7.hasZ = true === l4[0].hasZ, t7.hasM = true === l4[0].hasM;
        const r4 = N2.convertObjectToArcadeDictionary(t7, Be(e3), false);
        return r4.immutable = false, r4;
      } catch (u3) {
        throw new a2(e3, r.InvalidParameter, t6);
      }
      if (1 === l4.length && U(l4[0])) try {
        const e4 = new N2();
        e4.immutable = false, e4.setField("geometry", l4[0].geometry());
        const t7 = new N2();
        t7.immutable = false, e4.setField("attributes", t7);
        for (const n8 of l4[0].keys()) t7.setField(n8, l4[0].field(n8));
        return e4;
      } catch (u3) {
        throw new a2(e3, r.InvalidParameter, t6);
      }
      if (1 === l4.length && l4[0] instanceof N2) try {
        const e4 = new N2();
        e4.immutable = false;
        for (const t7 of l4[0].keys()) e4.setField(t7, l4[0].field(t7));
        return e4;
      } catch (u3) {
        throw new a2(e3, r.InvalidParameter, t6);
      }
      if (2 === l4.length && l4[0] instanceof N2 && L2(l4[1])) try {
        if (!(true === l4[1])) {
          const e4 = new N2();
          e4.immutable = false;
          for (const t7 of l4[0].keys()) e4.setField(t7, l4[0].field(t7));
          return e4;
        }
        return l4[0].deepClone();
      } catch (u3) {
        throw new a2(e3, r.InvalidParameter, t6);
      }
      if (l4.length % 2 != 0) throw new a2(e3, r.WrongNumberOfParameters, t6);
      const c3 = {};
      for (let n8 = 0; n8 < l4.length; n8 += 2) {
        const i5 = de(l4[n8]), o3 = l4[n8 + 1];
        if (!(null == o3 || P(o3) || isNaN(o3) || ee(o3) || z(o3) || L2(o3) || te(o3) || ne(o3) || E2(o3) || X(o3))) throw new a2(e3, r.InvalidParameter, t6);
        if (v2(o3)) throw new a2(e3, r.InvalidParameter, t6);
        c3[i5] = o3 === M ? null : o3;
      }
      const m5 = new N2(c3);
      return m5.immutable = false, m5;
    });
  }, L5.haskey = function(t6, i4) {
    return U3(t6, i4, (o2, s4, f5) => {
      ie(f5, 2, 2, t6, i4);
      const c3 = de(f5[1]);
      if (U(f5[0])) return f5[0].hasField(c3);
      if (f5[0] instanceof N2) return f5[0].hasField(c3);
      if (f5[0] instanceof n3) {
        const t7 = p2(f5[0], c3, null, null, 2);
        return !t7 || "notfound" !== t7.keystate;
      }
      throw new a2(t6, r.InvalidParameter, i4);
    });
  }, L5.hasvalue = function(e3, n8) {
    return U3(e3, n8, (r4, a5, i4) => (ie(i4, 2, 2, e3, n8), null != m2(i4[0], i4[1])));
  }, L5.indexof = function(e3, t6) {
    return U3(e3, t6, (n8, i4, o2) => {
      ie(o2, 2, 2, e3, t6);
      const c3 = o2[1];
      if (E2(o2[0])) {
        for (let e4 = 0; e4 < o2[0].length; e4++) if (me(c3, o2[0][e4])) return e4;
        return -1;
      }
      if (X(o2[0])) {
        const e4 = o2[0].length();
        for (let t7 = 0; t7 < e4; t7++) if (me(c3, o2[0].get(t7))) return t7;
        return -1;
      }
      throw new a2(e3, r.InvalidParameter, t6);
    });
  }, L5.angle = function(e3, t6) {
    return U3(e3, t6, (n8, i4, o2) => {
      if (o2 = we(o2), ie(o2, 2, 3, e3, t6), !(o2[0] instanceof j)) throw new a2(e3, r.InvalidParameter, t6);
      if (!(o2[1] instanceof j)) throw new a2(e3, r.InvalidParameter, t6);
      if (o2.length > 2 && !(o2[2] instanceof j)) throw new a2(e3, r.InvalidParameter, t6);
      return 2 === o2.length ? d2(o2[0], o2[1]) : Z(o2[0], o2[1], o2[2]);
    });
  }, L5.bearing = function(e3, t6) {
    return U3(e3, t6, (n8, i4, o2) => {
      if (o2 = we(o2), ie(o2, 2, 3, e3, t6), !(o2[0] instanceof j)) throw new a2(e3, r.InvalidParameter, t6);
      if (!(o2[1] instanceof j)) throw new a2(e3, r.InvalidParameter, t6);
      if (o2.length > 2 && !(o2[2] instanceof j)) throw new a2(e3, r.InvalidParameter, t6);
      return 2 === o2.length ? v3(o2[0], o2[1]) : I2(o2[0], o2[1], o2[2]);
    });
  }, L5.isselfintersecting = function(e3, t6) {
    return U3(e3, t6, (n8, r4, a5) => {
      a5 = we(a5), ie(a5, 1, 1, e3, t6);
      let i4 = a5[0];
      if (i4 instanceof v) return i4.isSelfIntersecting;
      if (i4 instanceof d) return k(i4.paths);
      if (i4 instanceof u) {
        const e4 = i4.points;
        for (let t7 = 0; t7 < e4.length; t7++) for (let n9 = 0; n9 < e4.length; n9++) if (n9 !== t7) {
          let r5 = true;
          for (let a6 = 0; a6 < e4[t7].length; a6++) if (e4[t7][a6] !== e4[n9][a6]) {
            r5 = false;
            break;
          }
          if (true === r5) return true;
        }
      }
      if (E2(i4) || X(i4)) {
        const t7 = Oe(i4, e3.spatialReference);
        return null !== t7 && (i4 = t7.paths), k(i4);
      }
      return false;
    });
  };
}

// node_modules/@arcgis/core/arcade/functions/maths.js
function M2(M4, b4) {
  function p7(n8, t6, r4) {
    const u3 = he(n8);
    return isNaN(u3) ? u3 : isNaN(t6) || isNaN(r4) || t6 > r4 ? NaN : u3 < t6 ? t6 : u3 > r4 ? r4 : u3;
  }
  M4.number = function(f5, c3) {
    return b4(f5, c3, (l4, h4, N4) => {
      ie(N4, 1, 2, f5, c3);
      const M5 = N4[0];
      if (z(M5)) return M5;
      if (null === M5) return 0;
      if (ee(M5) || ne(M5) || te(M5)) return M5.toNumber();
      if (L2(M5)) return Number(M5);
      if (E2(M5)) return NaN;
      if ("" === M5) return Number(M5);
      if (void 0 === M5) return Number(M5);
      if (P(M5)) {
        if (void 0 !== N4[1]) {
          let n8 = J(N4[1], "‰", "");
          return n8 = J(n8, "¤", ""), p(M5, { pattern: n8 });
        }
        return Number(M5.trim());
      }
      return Number(M5);
    });
  }, M4.abs = function(t6, r4) {
    return b4(t6, r4, (u3, e3, o2) => (ie(o2, 1, 1, t6, r4), Math.abs(he(o2[0]))));
  }, M4.acos = function(t6, r4) {
    return b4(t6, r4, (u3, e3, o2) => (ie(o2, 1, 1, t6, r4), Math.acos(he(o2[0]))));
  }, M4.asin = function(t6, r4) {
    return b4(t6, r4, (u3, e3, o2) => (ie(o2, 1, 1, t6, r4), Math.asin(he(o2[0]))));
  }, M4.atan = function(t6, r4) {
    return b4(t6, r4, (u3, e3, o2) => (ie(o2, 1, 1, t6, r4), Math.atan(he(o2[0]))));
  }, M4.atan2 = function(t6, r4) {
    return b4(t6, r4, (u3, e3, o2) => (ie(o2, 2, 2, t6, r4), Math.atan2(he(o2[0]), he(o2[1]))));
  }, M4.ceil = function(t6, r4) {
    return b4(t6, r4, (u3, e3, o2) => {
      if (ie(o2, 1, 2, t6, r4), 2 === o2.length) {
        let n8 = he(o2[1]);
        return isNaN(n8) && (n8 = 0), L("ceil", he(o2[0]), -1 * n8);
      }
      return Math.ceil(he(o2[0]));
    });
  }, M4.round = function(t6, r4) {
    return b4(t6, r4, (u3, e3, o2) => {
      if (ie(o2, 1, 2, t6, r4), 2 === o2.length) {
        let n8 = he(o2[1]);
        return isNaN(n8) && (n8 = 0), L("round", he(o2[0]), -1 * n8);
      }
      return Math.round(he(o2[0]));
    });
  }, M4.floor = function(t6, r4) {
    return b4(t6, r4, (u3, e3, o2) => {
      if (ie(o2, 1, 2, t6, r4), 2 === o2.length) {
        let n8 = he(o2[1]);
        return isNaN(n8) && (n8 = 0), L("floor", he(o2[0]), -1 * n8);
      }
      return Math.floor(he(o2[0]));
    });
  }, M4.cos = function(t6, r4) {
    return b4(t6, r4, (u3, e3, o2) => (ie(o2, 1, 1, t6, r4), Math.cos(he(o2[0]))));
  }, M4.isnan = function(t6, r4) {
    return b4(t6, r4, (u3, e3, o2) => (ie(o2, 1, 1, t6, r4), "number" == typeof o2[0] && isNaN(o2[0])));
  }, M4.exp = function(t6, r4) {
    return b4(t6, r4, (u3, e3, o2) => (ie(o2, 1, 1, t6, r4), Math.exp(he(o2[0]))));
  }, M4.log = function(t6, r4) {
    return b4(t6, r4, (u3, e3, o2) => (ie(o2, 1, 1, t6, r4), Math.log(he(o2[0]))));
  }, M4.pow = function(t6, r4) {
    return b4(t6, r4, (u3, e3, o2) => (ie(o2, 2, 2, t6, r4), he(o2[0]) ** he(o2[1])));
  }, M4.random = function(t6, r4) {
    return b4(t6, r4, (u3, e3, o2) => (ie(o2, 0, 0, t6, r4), Math.random()));
  }, M4.sin = function(t6, r4) {
    return b4(t6, r4, (u3, e3, o2) => (ie(o2, 1, 1, t6, r4), Math.sin(he(o2[0]))));
  }, M4.sqrt = function(t6, r4) {
    return b4(t6, r4, (u3, e3, o2) => (ie(o2, 1, 1, t6, r4), Math.sqrt(he(o2[0]))));
  }, M4.tan = function(t6, r4) {
    return b4(t6, r4, (u3, e3, o2) => (ie(o2, 1, 1, t6, r4), Math.tan(he(o2[0]))));
  }, M4.isempty = function(t6, r4) {
    return b4(t6, r4, (u3, e3, o2) => (ie(o2, 1, 1, t6, r4), null === o2[0] || ("" === o2[0] || (void 0 === o2[0] || o2[0] === M))));
  }, M4.boolean = function(t6, r4) {
    return b4(t6, r4, (u3, e3, o2) => {
      ie(o2, 1, 1, t6, r4);
      const a5 = o2[0];
      return Se(a5);
    });
  }, M4.constrain = function(t6, r4) {
    return b4(t6, r4, (u3, e3, o2) => {
      ie(o2, 3, 3, t6, r4);
      const i4 = he(o2[1]), s4 = he(o2[2]);
      if (E2(o2[0])) {
        const n8 = [];
        for (const t7 of o2[0]) n8.push(p7(t7, i4, s4));
        return n8;
      }
      if (X(o2[0])) {
        const n8 = [];
        for (let t7 = 0; t7 < o2[0].length(); t7++) n8.push(p7(o2[0].get(t7), i4, s4));
        return n8;
      }
      return p7(o2[0], i4, s4);
    });
  };
}

// node_modules/@arcgis/core/arcade/functions/stats.js
function a4(n8, r4) {
  if (1 === r4.length) {
    if (E2(r4[0])) return l(n8, r4[0], -1);
    if (X(r4[0])) return l(n8, r4[0].toArray(), -1);
  }
  return l(n8, r4, -1);
}
function f4(o2, f5) {
  o2.stdev = function(n8, r4) {
    return f5(n8, r4, (n9, r5, t6) => a4("stdev", t6));
  }, o2.variance = function(n8, r4) {
    return f5(n8, r4, (n9, r5, t6) => a4("variance", t6));
  }, o2.average = function(n8, r4) {
    return f5(n8, r4, (n9, r5, t6) => a4("mean", t6));
  }, o2.mean = function(n8, r4) {
    return f5(n8, r4, (n9, r5, t6) => a4("mean", t6));
  }, o2.sum = function(n8, r4) {
    return f5(n8, r4, (n9, r5, t6) => a4("sum", t6));
  }, o2.min = function(n8, r4) {
    return f5(n8, r4, (n9, r5, t6) => a4("min", t6));
  }, o2.max = function(n8, r4) {
    return f5(n8, r4, (n9, r5, t6) => a4("max", t6));
  }, o2.distinct = function(n8, r4) {
    return f5(n8, r4, (n9, r5, t6) => a4("distinct", t6));
  }, o2.count = function(o3, a5) {
    return f5(o3, a5, (f6, c3, m5) => {
      if (ie(m5, 1, 1, o3, a5), E2(m5[0]) || P(m5[0])) return m5[0].length;
      if (X(m5[0])) return m5[0].length();
      throw new a2(o3, r.InvalidParameter, a5);
    });
  };
}

// node_modules/@arcgis/core/arcade/functions/convertdirection.js
var l3 = (e3) => (n8, t6, r4 = 14) => +e3(n8, t6).toFixed(r4);
var d5 = (e3, n8) => e3 + n8;
var m4 = (e3, n8) => e3 * n8;
var g3 = (e3, n8) => e3 / n8;
var _ = (e3, n8, t6) => l3(d5)(e3, n8, t6);
var w2 = (e3, n8, t6) => l3(m4)(e3, n8, t6);
var A = (e3, n8, t6) => l3(g3)(e3, n8, t6);
var D3 = 360;
var p6 = 400;
var E3 = 2 * Math.PI;
var T2 = 3600;
var S3 = 3240;
var R = 60;
var M3 = 60;
var F2 = 180 * T2 / Math.PI;
var v4 = D3 * R * M3;
var L4 = 90 * T2;
var U2 = 180 * T2;
var N3 = 270 * T2;
var x2 = String.fromCharCode(7501);
var z2 = "°";
function O(e3) {
  if (false === P(e3)) throw new a2(null, r.InvalidParameter, null);
  return e3;
}
function G2(e3, n8) {
  const t6 = 10 ** n8;
  return Math.round(e3 * t6) / t6;
}
function I3(e3, n8) {
  return e3 % n8;
}
function b3(e3) {
  const n8 = parseFloat(e3.toString().replace(Math.trunc(e3).toString(), "0")) * Math.sign(e3);
  if (e3 < 0) {
    return { fraction: n8, integer: Math.ceil(e3) };
  }
  return { fraction: n8, integer: Math.floor(e3) };
}
var H;
var y;
var q2;
var k3;
function C2(e3, n8) {
  switch (e3) {
    case H.north:
      return "SHORT" === n8 ? "N" : "North";
    case H.east:
      return "SHORT" === n8 ? "E" : "East";
    case H.south:
      return "SHORT" === n8 ? "S" : "South";
    case H.west:
      return "SHORT" === n8 ? "W" : "West";
  }
}
function P3(e3, n8) {
  return e3 - Math.floor(e3 / n8) * n8;
}
function Q2(e3) {
  switch (e3) {
    case y.truncated_degrees:
    case y.decimal_degrees:
      return D3;
    case y.radians:
      return E3;
    case y.gradians:
      return p6;
    case y.seconds:
      return v4;
    case y.fractional_degree_minutes:
      return R;
    case y.fractional_minute_seconds:
      return M3;
    default:
      throw new a2(null, r.LogicError, null, { reason: "unsupported evaluations" });
  }
}
function j2(e3) {
  switch (e3.toUpperCase().trim()) {
    case "NORTH":
    case "NORTHAZIMUTH":
    case "NORTH AZIMUTH":
      return q2.north_azimuth;
    case "POLAR":
      return q2.polar;
    case "QUADRANT":
      return q2.quadrant;
    case "SOUTH":
    case "SOUTHAZIMUTH":
    case "SOUTH AZIMUTH":
      return q2.south_azimuth;
  }
  throw new a2(null, r.LogicError, null, { reason: "unsupported directionType" });
}
function W2(e3) {
  switch (e3.toUpperCase().trim()) {
    case "D":
    case "DD":
    case "DECIMALDEGREE":
    case "DECIMAL DEGREE":
    case "DEGREE":
    case "DECIMALDEGREES":
    case "DECIMAL DEGREES":
    case "DEGREES":
      return y.decimal_degrees;
    case "DMS":
    case "DEGREESMINUTESSECONDS":
    case "DEGREES MINUTES SECONDS":
      return y.degrees_minutes_seconds;
    case "R":
    case "RAD":
    case "RADS":
    case "RADIAN":
    case "RADIANS":
      return y.radians;
    case "G":
    case "GON":
    case "GONS":
    case "GRAD":
    case "GRADS":
    case "GRADIAN":
    case "GRADIANS":
      return y.gradians;
  }
  throw new a2(null, r.LogicError, null, { reason: "unsupported units" });
}
!function(e3) {
  e3[e3.north = 0] = "north", e3[e3.east = 1] = "east", e3[e3.south = 2] = "south", e3[e3.west = 3] = "west";
}(H || (H = {})), function(e3) {
  e3[e3.decimal_degrees = 1] = "decimal_degrees", e3[e3.seconds = 2] = "seconds", e3[e3.degrees_minutes_seconds = 3] = "degrees_minutes_seconds", e3[e3.radians = 4] = "radians", e3[e3.gradians = 5] = "gradians", e3[e3.truncated_degrees = 6] = "truncated_degrees", e3[e3.fractional_degree_minutes = 7] = "fractional_degree_minutes", e3[e3.fractional_minute_seconds = 8] = "fractional_minute_seconds";
}(y || (y = {})), function(e3) {
  e3[e3.north_azimuth = 1] = "north_azimuth", e3[e3.polar = 2] = "polar", e3[e3.quadrant = 3] = "quadrant", e3[e3.south_azimuth = 4] = "south_azimuth";
}(q2 || (q2 = {})), function(e3) {
  e3[e3.meridian = 0] = "meridian", e3[e3.direction = 1] = "direction";
}(k3 || (k3 = {}));
var Z3 = class _Z {
  constructor(e3, n8, t6) {
    this.m_degrees = e3, this.m_minutes = n8, this.m_seconds = t6;
  }
  getField(e3) {
    switch (e3) {
      case y.decimal_degrees:
      case y.truncated_degrees:
        return this.m_degrees;
      case y.fractional_degree_minutes:
        return this.m_minutes;
      case y.seconds:
      case y.fractional_minute_seconds:
        return this.m_seconds;
      default:
        throw new a2(null, r.LogicError, null, { reason: "unexpected evaluation" });
    }
  }
  static secondsToDMS(e3) {
    const n8 = b3(e3).fraction;
    let t6 = b3(e3).integer;
    const r4 = Math.floor(t6 / T2);
    t6 -= r4 * T2;
    const s4 = Math.floor(t6 / M3);
    return t6 -= s4 * M3, new _Z(r4, s4, t6 + n8);
  }
  static numberToDms(e3) {
    const n8 = b3(e3).fraction, t6 = b3(e3).integer, r4 = w2(b3(100 * n8).fraction, 100), s4 = b3(100 * n8).integer;
    return new _Z(t6, s4, r4);
  }
  format(e3, n8) {
    let t6 = G2(this.m_seconds, n8), r4 = this.m_minutes, s4 = this.m_degrees;
    if (e3 === y.seconds || e3 === y.fractional_minute_seconds) M3 <= t6 && (t6 -= M3, ++r4), R <= r4 && (r4 = 0, ++s4), D3 <= s4 && (s4 = 0);
    else if (e3 === y.fractional_degree_minutes) t6 = 0, r4 = 30 <= this.m_seconds ? this.m_minutes + 1 : this.m_minutes, s4 = this.m_degrees, R <= r4 && (r4 = 0, ++s4), D3 <= s4 && (s4 = 0);
    else if (e3 === y.decimal_degrees || e3 === y.truncated_degrees) {
      const e4 = A(this.m_seconds, T2), n9 = A(this.m_minutes, R);
      s4 = Math.round(this.m_degrees + n9 + e4), r4 = 0, t6 = 0;
    }
    return new _Z(s4, r4, t6);
  }
  static dmsToSeconds(e3, n8, t6) {
    return e3 * T2 + n8 * M3 + t6;
  }
};
var B = class {
  constructor(e3, n8, t6) {
    this.meridian = e3, this.angle = n8, this.direction = t6;
  }
  fetchAzimuth(e3) {
    return e3 === k3.meridian ? this.meridian : this.direction;
  }
};
var V2 = class _V {
  constructor(e3) {
    this._angle = e3;
  }
  static createFromAngleAndDirection(e3, n8) {
    return new _V(new J2(_V._convertDirectionFormat(e3.extractAngularUnits(y.seconds), n8, q2.north_azimuth)));
  }
  getAngle(e3) {
    const n8 = this._angle.extractAngularUnits(y.seconds);
    switch (e3) {
      case q2.north_azimuth:
      case q2.south_azimuth:
      case q2.polar:
        return new J2(_V._convertDirectionFormat(n8, q2.north_azimuth, e3));
      case q2.quadrant: {
        const e4 = _V.secondsNorthAzimuthToQuadrant(n8);
        return new J2(e4.angle);
      }
    }
  }
  getMeridian(e3) {
    const n8 = this._angle.extractAngularUnits(y.seconds);
    switch (e3) {
      case q2.north_azimuth:
        return H.north;
      case q2.south_azimuth:
        return H.south;
      case q2.polar:
        return H.east;
      case q2.quadrant:
        return _V.secondsNorthAzimuthToQuadrant(n8).meridian;
    }
  }
  getDirection(e3) {
    const n8 = this._angle.extractAngularUnits(y.seconds);
    switch (e3) {
      case q2.north_azimuth:
        return H.east;
      case q2.south_azimuth:
        return H.west;
      case q2.polar:
        return H.north;
      case q2.quadrant:
        return _V.secondsNorthAzimuthToQuadrant(n8).direction;
    }
  }
  static secondsNorthAzimuthToQuadrant(e3) {
    const n8 = e3 <= L4 || e3 >= N3 ? H.north : H.south, t6 = n8 === H.north ? Math.min(v4 - e3, e3) : Math.abs(e3 - U2), r4 = e3 > U2 ? H.west : H.east;
    return new B(n8, t6, r4);
  }
  static createFromAngleMeridianAndDirection(e3, n8, t6) {
    return new _V(new J2(_V.secondsQuadrantToNorthAzimuth(e3.extractAngularUnits(y.seconds), n8, t6)));
  }
  static secondsQuadrantToNorthAzimuth(e3, n8, t6) {
    return n8 === H.north ? t6 === H.east ? e3 : v4 - e3 : t6 === H.east ? U2 - e3 : U2 + e3;
  }
  static _convertDirectionFormat(e3, r4, s4) {
    let a5 = 0;
    switch (r4) {
      case q2.north_azimuth:
        a5 = e3;
        break;
      case q2.polar:
        a5 = L4 - e3;
        break;
      case q2.quadrant:
        throw new a2(null, r.LogicError, null, { reason: "unexpected evaluation" });
      case q2.south_azimuth:
        a5 = e3 + U2;
    }
    let i4 = 0;
    switch (s4) {
      case q2.north_azimuth:
        i4 = a5;
        break;
      case q2.polar:
        i4 = L4 - a5;
        break;
      case q2.quadrant:
        throw new a2(null, r.LogicError, null, { reason: "unexpected evaluation" });
      case q2.south_azimuth:
        i4 = a5 - U2;
    }
    return i4 = I3(i4, v4), i4 < 0 ? v4 + i4 : i4;
  }
};
function X2(e3, r4, s4) {
  let a5 = null;
  switch (r4) {
    case y.decimal_degrees:
      a5 = w2(e3, T2);
      break;
    case y.seconds:
      a5 = e3;
      break;
    case y.gradians:
      a5 = w2(e3, S3);
      break;
    case y.radians:
      a5 = w2(e3, F2);
      break;
    default:
      throw new a2(null, r.LogicError, null, { reason: "unexpected evaluation" });
  }
  switch (s4) {
    case y.decimal_degrees:
      return A(a5, T2);
    case y.seconds:
      return a5;
    case y.gradians:
      return A(a5, S3);
    case y.radians:
      return a5 / F2;
    default:
      throw new a2(null, r.LogicError, null, { reason: "unexpected evaluation" });
  }
}
var J2 = class _J {
  constructor(e3) {
    this._seconds = e3;
  }
  static createFromAngleAndUnits(e3, n8) {
    return new _J(X2(e3, n8, y.seconds));
  }
  extractAngularUnits(e3) {
    return X2(this._seconds, y.seconds, K2(e3));
  }
  static createFromDegreesMinutesSeconds(e3, n8, t6) {
    return new _J(_(_(w2(e3, T2), w2(n8, M3)), t6));
  }
};
function K2(e3) {
  switch (n(e3), e3) {
    case y.decimal_degrees:
    case y.truncated_degrees:
    case y.degrees_minutes_seconds:
      return y.decimal_degrees;
    case y.gradians:
      return y.gradians;
    case y.fractional_degree_minutes:
      return y.fractional_degree_minutes;
    case y.radians:
      return y.radians;
    case y.seconds:
    case y.fractional_minute_seconds:
      return y.seconds;
  }
}
var Y2 = class _Y {
  constructor(e3, n8, t6, r4) {
    this.view = e3, this.angle = n8, this.merdian = t6, this.direction = r4, this._dms = null, this._formattedDms = null;
  }
  static createFromStringAndBearing(e3, n8, t6) {
    return new _Y(e3, n8.getAngle(t6), n8.getMeridian(t6), n8.getDirection(t6));
  }
  fetchAngle() {
    return this.angle;
  }
  fetchMeridian() {
    return this.merdian;
  }
  fetchDirection() {
    return this.direction;
  }
  fetchView() {
    return this.view;
  }
  fetchDms() {
    return null === this._dms && this._calculateDms(), this._dms;
  }
  fetchFormattedDms() {
    return null === this._formattedDms && this._calculateDms(), this._formattedDms;
  }
  _calculateDms() {
    let e3 = null, n8 = y.truncated_degrees, t6 = 0;
    for (let r4 = 0; r4 < this.view.length; r4++) {
      const s4 = this.view[r4];
      switch (s4) {
        case "m":
          e3 = le2(this.view, r4, s4), n8 = n8 === y.truncated_degrees ? y.fractional_degree_minutes : n8, r4 = e3.newpos;
          continue;
        case "s":
          e3 = le2(this.view, r4, s4), n8 = y.fractional_minute_seconds, t6 = t6 < e3.rounding ? e3.rounding : t6, r4 = e3.newpos;
          continue;
        default:
          continue;
      }
    }
    this._dms = Z3.secondsToDMS(this.angle.extractAngularUnits(y.seconds)), this._formattedDms = Z3.secondsToDMS(this.angle.extractAngularUnits(y.seconds)).format(n8, t6);
  }
};
function $(e3, r4, s4, a5, i4) {
  let o2 = null;
  switch (r4) {
    case y.decimal_degrees:
    case y.radians:
    case y.gradians:
      return o2 = P3(G2(e3.extractAngularUnits(r4), a5), Q2(r4)), o2.toFixed(a5).padStart(s4 + a5 + (a5 > 0 ? 1 : 0), "0");
    case y.truncated_degrees:
    case y.fractional_degree_minutes:
      return o2 = P3(i4.fetchFormattedDms().getField(r4), Q2(r4)), o2.toFixed(a5).padStart(s4 + a5 + (a5 > 0 ? 1 : 0), "0");
    case y.fractional_minute_seconds:
      return o2 = P3(G2(i4.fetchDms().getField(r4), a5), Q2(r4)), o2.toFixed(a5).padStart(s4 + a5 + (a5 > 0 ? 1 : 0), "0");
    default:
      throw new a2(null, r.LogicError, null, { reason: "unexpected evaluation" });
  }
}
function ee2(e3, r4, s4) {
  if (s4 === q2.quadrant) throw new a2(null, r.LogicError, null, { reason: "conversion error" });
  if (r4 === y.degrees_minutes_seconds) {
    const n8 = Z3.numberToDms(e3);
    return V2.createFromAngleAndDirection(J2.createFromDegreesMinutesSeconds(n8.m_degrees, n8.m_minutes, n8.m_seconds), s4);
  }
  return V2.createFromAngleAndDirection(J2.createFromAngleAndUnits(e3, K2(r4)), s4);
}
function ne2(e3) {
  switch (he(e3)) {
    case 1:
      return { first: H.north, second: H.east };
    case 2:
      return { first: H.south, second: H.east };
    case 3:
      return { first: H.south, second: H.west };
    case 4:
      return { first: H.north, second: H.west };
  }
  return null;
}
function te2(e3) {
  switch (e3.toUpperCase().trim()) {
    case "N":
    case "NORTH":
      return H.north;
    case "E":
    case "EAST":
      return H.east;
    case "S":
    case "SOUTH":
      return H.south;
    case "W":
    case "WEST":
      return H.west;
  }
  return null;
}
function re(e3) {
  const r4 = parseFloat(e3);
  if (z(r4)) {
    if (isNaN(r4)) throw new a2(null, r.LogicError, null, { reason: "invalid conversion" });
    return r4;
  }
  throw new a2(null, r.LogicError, null, { reason: "invalid conversion" });
}
function se(e3, s4, a5) {
  const i4 = a5 === q2.quadrant;
  let o2 = null, c3 = null, u3 = 0, l4 = 0, d6 = 0;
  if (i4) {
    if (e3.length < 2) throw new a2(null, r.LogicError, null, { reason: "conversion error" });
    d6 = 1;
    const s5 = ne2(de(e3[e3.length - 1]));
    if (s5 ? (o2 = s5.first, c3 = s5.second) : (u3 = 1, o2 = te2(de(e3[0])), c3 = te2(de(e3[e3.length - 1]))), null === o2 || null === c3) throw new a2(null, r.LogicError, null, { reason: "invalid conversion" });
  }
  switch (s4) {
    case y.decimal_degrees:
    case y.radians:
    case y.gradians:
      if (0 === e3.length) throw new a2(null, r.LogicError, null, { reason: "invalid conversion" });
      return i4 ? V2.createFromAngleMeridianAndDirection(J2.createFromAngleAndUnits(re(e3[u3]), K2(s4)), o2, c3) : V2.createFromAngleAndDirection(J2.createFromAngleAndUnits(re(e3[u3]), K2(s4)), a5);
    case y.degrees_minutes_seconds:
      if (l4 = e3.length - d6 - u3, 3 === l4) {
        const n8 = J2.createFromDegreesMinutesSeconds(re(e3[u3]), re(e3[u3 + 1]), re(e3[u3 + 2]));
        return i4 ? V2.createFromAngleMeridianAndDirection(n8, o2, c3) : V2.createFromAngleAndDirection(n8, a5);
      }
      if (1 === l4) {
        const n8 = re(e3[u3]), t6 = Z3.numberToDms(n8), r4 = J2.createFromDegreesMinutesSeconds(t6.m_degrees, t6.m_minutes, t6.m_seconds);
        return i4 ? V2.createFromAngleMeridianAndDirection(r4, o2, c3) : V2.createFromAngleAndDirection(r4, a5);
      }
  }
  throw new a2(null, r.LogicError, null, { reason: "invalid conversion" });
}
function ae(e3) {
  const n8 = /* @__PURE__ */ new Set([" ", "-", "/", "'", '"', "\\", "^", z2, x2, "	", "\r", "\n", "*"]);
  let t6 = "";
  for (let r4 = 0; r4 < e3.length; r4++) {
    const s4 = e3.charAt(r4);
    n8.has(s4) ? t6 += "RRSPLITRRSPLITRR" : t6 += s4;
  }
  return t6.split("RRSPLITRRSPLITRR").filter((e4) => "" !== e4);
}
function ie2(e3, r4, u3) {
  if (z(e3)) return ee2(he(e3), r4, u3);
  if (P(e3)) return se(ae(e3), r4, u3);
  if (E2(e3)) return se(e3, r4, u3);
  if (X(e3)) return se(e3.toArray(), r4, u3);
  throw new a2(null, r.LogicError, null, { reason: "conversion error" });
}
function oe2(e3, r4, s4) {
  const a5 = K2(s4);
  if (a5 && s4 !== y.degrees_minutes_seconds) {
    return e3.getAngle(r4).extractAngularUnits(a5);
  }
  throw new a2(null, r.LogicError, null, { reason: "conversion error" });
}
function ce(e3, n8, t6) {
  const r4 = e3.getAngle(n8);
  if (n8 === q2.quadrant && t6 === y.degrees_minutes_seconds) {
    const t7 = Z3.secondsToDMS(r4.extractAngularUnits(y.seconds));
    return [C2(e3.getMeridian(n8), "SHORT"), t7.m_degrees, t7.m_minutes, t7.m_seconds, C2(e3.getDirection(n8), "SHORT")];
  }
  if (t6 === y.degrees_minutes_seconds) {
    const e4 = Z3.secondsToDMS(r4.extractAngularUnits(y.seconds));
    return [e4.m_degrees, e4.m_minutes, e4.m_seconds];
  }
  return n8 === q2.quadrant ? [C2(e3.getMeridian(n8), "SHORT"), r4.extractAngularUnits(t6), C2(e3.getDirection(n8), "SHORT")] : [r4.extractAngularUnits(t6)];
}
function ue(e3, r4) {
  let s4 = "";
  switch (e3) {
    case y.decimal_degrees:
      s4 = r4 === q2.quadrant ? "DD.DD" + z2 : "DDD.DD" + z2;
      break;
    case y.degrees_minutes_seconds:
      s4 = r4 === q2.quadrant ? "dd" + z2 + ` mm' ss"` : "ddd" + z2 + ` mm' ss.ss"`;
      break;
    case y.radians:
      s4 = "R.RR";
      break;
    case y.gradians:
      s4 = "GGG.GG" + x2;
      break;
    default:
      throw new a2(null, r.LogicError, null, { reason: "conversion error" });
  }
  return r4 === q2.quadrant && (s4 = "p " + s4 + " b"), s4;
}
function le2(e3, n8, t6) {
  const r4 = { padding: 0, rounding: 0, newpos: n8 };
  let s4 = false;
  for (; n8 < e3.length; ) {
    const a5 = e3[n8];
    if (a5 === t6) s4 ? r4.rounding++ : r4.padding++, n8++;
    else {
      if ("." !== a5) break;
      s4 = true, n8++;
    }
  }
  return r4.newpos = n8 - 1, r4;
}
function de2(e3, n8, t6) {
  const r4 = { escaped: "", newpos: n8 };
  for (n8++; n8 < e3.length; ) {
    const t7 = e3[n8];
    if (n8++, "]" === t7) break;
    r4.escaped += t7;
  }
  return r4.newpos = n8 - 1, r4;
}
function he2(e3, n8, t6) {
  let r4 = "", s4 = null, a5 = null;
  const i4 = Y2.createFromStringAndBearing(n8, e3, t6), o2 = { D: y.decimal_degrees, d: y.truncated_degrees, m: y.fractional_degree_minutes, s: y.fractional_minute_seconds, R: y.radians, G: y.gradians };
  for (let c3 = 0; c3 < n8.length; c3++) {
    const u3 = n8[c3];
    switch (u3) {
      case "[":
        s4 = de2(n8, c3), r4 += s4.escaped, c3 = s4.newpos;
        continue;
      case "D":
      case "d":
      case "m":
      case "s":
      case "R":
      case "G":
        s4 = le2(n8, c3, u3), a5 = e3.getAngle(t6), r4 += $(a5, o2[u3], s4.padding, s4.rounding, i4), c3 = s4.newpos;
        continue;
      case "P":
      case "p":
        r4 += C2(i4.fetchMeridian(), "p" === u3 ? "SHORT" : "LONG");
        continue;
      case "B":
      case "b":
        r4 += C2(i4.fetchDirection(), "b" === u3 ? "SHORT" : "LONG");
        continue;
      default:
        r4 += u3;
    }
  }
  return r4;
}
function me2(s4, a5, i4) {
  if (!(a5 instanceof N2)) throw new a2(null, r.InvalidParameter, null);
  if (false === a5.hasField("directionType")) throw new a2(null, r.LogicError, null, { reason: "missing directionType" });
  if (false === a5.hasField("angleType")) throw new a2(null, r.LogicError, null, { reason: "missing angleType" });
  const o2 = j2(O(a5.field("directiontype"))), c3 = ie2(s4, W2(O(a5.field("angletype"))), o2);
  if (!(i4 instanceof N2)) throw new a2(null, r.InvalidParameter, null);
  if (false === i4.hasField("directionType")) throw new a2(null, r.LogicError, null, { reason: "missing directionType" });
  if (false === i4.hasField("outputType")) throw new a2(null, r.LogicError, null, { reason: "missing angleType" });
  const u3 = j2(O(i4.field("directiontype"))), l4 = i4.hasField("angleType") ? W2(O(i4.field("angletype"))) : null, d6 = O(i4.field("outputType")).toUpperCase().trim();
  if (!u3 || !d6) throw new a2(null, r.LogicError, null, { reason: "conversion error" });
  if (!(l4 || "TEXT" === d6 && i4.hasField("format"))) throw new a2(null, r.LogicError, null, { reason: "invalid unit" });
  switch (d6) {
    case "VALUE":
      return u3 === q2.quadrant || l4 === y.degrees_minutes_seconds ? ce(c3, u3, l4) : oe2(c3, u3, l4);
    case "TEXT": {
      let e3 = "";
      return i4.hasField("format") && (e3 = de(i4.field("format"))), null !== e3 && "" !== e3 || (e3 = ue(l4, u3)), he2(c3, e3, u3);
    }
    default:
      throw new a2(null, r.InvalidParameter, null);
  }
}

// node_modules/@arcgis/core/arcade/functions/hash.js
var t5 = 2654435761;
var s3 = 2246822519;
var n7 = 3266489917;
var e2 = 668265263;
var r3 = 374761393;
function h3(t6) {
  const s4 = [];
  for (let n8 = 0, e3 = t6.length; n8 < e3; n8++) {
    let e4 = t6.charCodeAt(n8);
    e4 < 128 ? s4.push(e4) : e4 < 2048 ? s4.push(192 | e4 >> 6, 128 | 63 & e4) : e4 < 55296 || e4 >= 57344 ? s4.push(224 | e4 >> 12, 128 | e4 >> 6 & 63, 128 | 63 & e4) : (n8++, e4 = 65536 + ((1023 & e4) << 10 | 1023 & t6.charCodeAt(n8)), s4.push(240 | e4 >> 18, 128 | e4 >> 12 & 63, 128 | e4 >> 6 & 63, 128 | 63 & e4));
  }
  return new Uint8Array(s4);
}
var i3 = class {
  constructor(t6) {
    this._seed = t6, this._totallen = 0, this._bufs = [], this.init();
  }
  init() {
    return this._bufs = [], this._totallen = 0, this;
  }
  updateFloatArray(t6) {
    const s4 = [];
    for (const n8 of t6) isNaN(n8) ? s4.push("NaN") : n8 === 1 / 0 ? s4.push("Infinity") : n8 === -1 / 0 ? s4.push("-Infinity") : 0 === n8 ? s4.push("0") : s4.push(n8.toString(16));
    this.update(h3(s4.join("")));
  }
  updateIntArray(t6) {
    const s4 = Int32Array.from(t6);
    this.update(new Uint8Array(s4.buffer));
  }
  updateUint8Array(t6) {
    this.update(Uint8Array.from(t6));
  }
  updateWithString(t6) {
    return this.update(h3(t6));
  }
  update(t6) {
    return this._bufs.push(t6), this._totallen += t6.length, this;
  }
  digest() {
    const t6 = new Uint8Array(this._totallen);
    let s4 = 0;
    for (const n8 of this._bufs) t6.set(n8, s4), s4 += n8.length;
    return this.init(), this._xxHash32(t6, this._seed);
  }
  _xxHash32(h4, i4 = 0) {
    const o2 = h4;
    let u3 = i4 + r3 & 4294967295, a5 = 0;
    if (o2.length >= 16) {
      const n8 = [i4 + t5 + s3 & 4294967295, i4 + s3 & 4294967295, i4 + 0 & 4294967295, i4 - t5 & 4294967295], e3 = h4, r4 = e3.length - 16;
      let o3 = 0;
      for (a5 = 0; (4294967280 & a5) <= r4; a5 += 4) {
        const r5 = a5, h5 = e3[r5] + (e3[r5 + 1] << 8), i5 = e3[r5 + 2] + (e3[r5 + 3] << 8), u4 = h5 * s3 + (i5 * s3 << 16);
        let l5 = n8[o3] + u4 & 4294967295;
        l5 = l5 << 13 | l5 >>> 19;
        const f5 = 65535 & l5, p7 = l5 >>> 16;
        n8[o3] = f5 * t5 + (p7 * t5 << 16) & 4294967295, o3 = o3 + 1 & 3;
      }
      u3 = (n8[0] << 1 | n8[0] >>> 31) + (n8[1] << 7 | n8[1] >>> 25) + (n8[2] << 12 | n8[2] >>> 20) + (n8[3] << 18 | n8[3] >>> 14) & 4294967295;
    }
    u3 = u3 + h4.length & 4294967295;
    const l4 = h4.length - 4;
    for (; a5 <= l4; a5 += 4) {
      const t6 = a5, s4 = o2[t6] + (o2[t6 + 1] << 8), r4 = o2[t6 + 2] + (o2[t6 + 3] << 8);
      u3 = u3 + (s4 * n7 + (r4 * n7 << 16)) & 4294967295, u3 = u3 << 17 | u3 >>> 15, u3 = (65535 & u3) * e2 + ((u3 >>> 16) * e2 << 16) & 4294967295;
    }
    for (; a5 < o2.length; ++a5) {
      u3 += o2[a5] * r3, u3 = u3 << 11 | u3 >>> 21, u3 = (65535 & u3) * t5 + ((u3 >>> 16) * t5 << 16) & 4294967295;
    }
    return u3 ^= u3 >>> 15, u3 = ((65535 & u3) * s3 & 4294967295) + ((u3 >>> 16) * s3 << 16), u3 ^= u3 >>> 13, u3 = ((65535 & u3) * n7 & 4294967295) + ((u3 >>> 16) * n7 << 16), u3 ^= u3 >>> 16, u3 < 0 ? u3 + 4294967296 : u3;
  }
};

// node_modules/@arcgis/core/arcade/functions/string.js
function E4(t6) {
  var _a;
  if ("loaded" === t6.loadStatus && ((_a = t6.user) == null ? void 0 : _a.sourceJSON)) {
    return t6.user.sourceJSON;
  }
  return null;
}
function q3(t6, e3) {
  return !!t6 && N(t6, (e3 == null ? void 0 : e3.restUrl) || "");
}
function G3(t6, e3) {
  if (!t6 || !e3) return t6 === e3;
  if (t6.x === e3.x && t6.y === e3.y) {
    if (t6.hasZ) {
      if (t6.z !== e3.z) return false;
    } else if (e3.hasZ) return false;
    if (t6.hasM) {
      if (t6.m !== e3.m) return false;
    } else if (e3.hasM) return false;
    return true;
  }
  return false;
}
function K3(o2, i4, u3) {
  if (null !== o2) if (E2(o2)) {
    if (i4.updateUint8Array([61]), u3.map.has(o2)) {
      const t6 = u3.map.get(o2);
      i4.updateIntArray([61237541 ^ t6]);
    } else {
      u3.map.set(o2, u3.currentLength++);
      for (const t6 of o2) K3(t6, i4, u3);
      u3.map.delete(o2), u3.currentLength--;
    }
    i4.updateUint8Array([199]);
  } else if (X(o2)) {
    if (i4.updateUint8Array([61]), u3.map.has(o2)) {
      const t6 = u3.map.get(o2);
      i4.updateIntArray([61237541 ^ t6]);
    } else {
      u3.map.set(o2, u3.currentLength++);
      for (const t6 of o2.toArray()) K3(t6, i4, u3);
      u3.map.delete(o2), u3.currentLength--;
    }
    i4.updateUint8Array([199]);
  } else {
    if (ee(o2)) return i4.updateIntArray([o2.toNumber()]), void i4.updateUint8Array([241]);
    if (te(o2)) return i4.updateIntArray([o2.toNumber()]), void i4.updateIntArray([257]);
    if (ne(o2)) return i4.updateIntArray([o2.toNumber()]), void i4.updateIntArray([263]);
    if (P(o2)) return i4.updateIntArray([o2.length]), i4.updateWithString(o2), void i4.updateUint8Array([41]);
    if (L2(o2)) i4.updateUint8Array([true === o2 ? 1 : 0, 113]);
    else {
      if (z(o2)) return i4.updateFloatArray([o2]), void i4.updateUint8Array([173]);
      if (o2 instanceof t3) throw new a2(u3.context, r.UnsupportedHashType, u3.node);
      if (o2 instanceof t2) throw new a2(u3.context, r.UnsupportedHashType, u3.node);
      if (!(o2 instanceof N2)) {
        if (U(o2)) throw new a2(u3.context, r.UnsupportedHashType, u3.node);
        if (o2 instanceof j) return i4.updateIntArray([3833836621]), i4.updateIntArray([0]), i4.updateFloatArray([o2.x]), i4.updateIntArray([1]), i4.updateFloatArray([o2.y]), o2.hasZ && (i4.updateIntArray([2]), i4.updateFloatArray([o2.z])), o2.hasM && (i4.updateIntArray([3]), i4.updateFloatArray([o2.m])), i4.updateIntArray([3765347959]), void K3(o2.spatialReference.wkid, i4, u3);
        if (o2 instanceof v) {
          i4.updateIntArray([1266616829]);
          for (let t6 = 0; t6 < o2.rings.length; t6++) {
            const e3 = o2.rings[t6], r4 = [];
            let n8 = null, a5 = null;
            for (let i5 = 0; i5 < e3.length; i5++) {
              const u4 = o2.getPoint(t6, i5);
              if (0 === i5) n8 = u4;
              else if (G3(a5, u4)) continue;
              a5 = u4, i5 === e3.length - 1 && G3(n8, u4) || r4.push(u4);
            }
            i4.updateIntArray([1397116793, r4.length]);
            for (let t7 = 0; t7 < r4.length; t7++) {
              const e4 = r4[t7];
              i4.updateIntArray([3962308117, t7]), K3(e4, i4, u3), i4.updateIntArray([2716288009]);
            }
            i4.updateIntArray([2278822459]);
          }
          return i4.updateIntArray([3878477243]), void K3(o2.spatialReference.wkid, i4, u3);
        }
        if (o2 instanceof d) {
          i4.updateIntArray([4106883559]);
          for (let t6 = 0; t6 < o2.paths.length; t6++) {
            const e3 = o2.paths[t6];
            i4.updateIntArray([1397116793, e3.length]);
            for (let r4 = 0; r4 < e3.length; r4++) i4.updateIntArray([3962308117, r4]), K3(o2.getPoint(t6, r4), i4, u3), i4.updateIntArray([2716288009]);
            i4.updateIntArray([2278822459]);
          }
          return i4.updateIntArray([2568784753]), void K3(o2.spatialReference.wkid, i4, u3);
        }
        if (o2 instanceof u) {
          i4.updateIntArray([588535921, o2.points.length]);
          for (let t6 = 0; t6 < o2.points.length; t6++) {
            const e3 = o2.getPoint(t6);
            i4.updateIntArray([t6]), K3(e3, i4, u3);
          }
          return i4.updateIntArray([1700171621]), void K3(o2.spatialReference.wkid, i4, u3);
        }
        if (o2 instanceof w) return i4.updateIntArray([3483648373]), i4.updateIntArray([0]), i4.updateFloatArray([o2.xmax]), i4.updateIntArray([1]), i4.updateFloatArray([o2.xmin]), i4.updateIntArray([2]), i4.updateFloatArray([o2.ymax]), i4.updateIntArray([3]), i4.updateFloatArray([o2.ymin]), o2.hasZ && (i4.updateIntArray([4]), i4.updateFloatArray([o2.zmax]), i4.updateIntArray([5]), i4.updateFloatArray([o2.zmin])), o2.hasM && (i4.updateIntArray([6]), i4.updateFloatArray([o2.mmax]), i4.updateIntArray([7]), i4.updateFloatArray([o2.mmin])), i4.updateIntArray([3622027469]), void K3(o2.spatialReference.wkid, i4, u3);
        if (o2 instanceof g) return i4.updateIntArray([14]), void 0 !== o2.wkid && null !== o2.wkid && i4.updateIntArray([o2.wkid]), o2.wkt && i4.updateWithString(o2.wkt), void (o2.wkt2 && i4.updateWithString(o2.wkt2));
        if (v2(o2)) throw new a2(u3.context, r.UnsupportedHashType, u3.node);
        if (K(o2)) throw new a2(u3.context, r.UnsupportedHashType, u3.node);
        if (W(o2)) throw new a2(u3.context, r.UnsupportedHashType, u3.node);
        if (o2 === M) throw new a2(u3.context, r.UnsupportedHashType, u3.node);
        throw new a2(u3.context, r.UnsupportedHashType, u3.node);
      }
      if (i4.updateUint8Array([223]), u3.map.has(o2)) {
        const t6 = u3.map.get(o2);
        i4.updateIntArray([61237541 ^ t6]);
      } else {
        u3.map.set(o2, u3.currentLength++);
        for (const t6 of o2.keys()) {
          i4.updateIntArray([t6.length]), i4.updateWithString(t6), i4.updateUint8Array([251]);
          K3(o2.field(t6), i4, u3), i4.updateUint8Array([239]);
        }
        u3.map.delete(o2), u3.currentLength--;
      }
      i4.updateUint8Array([73]);
    }
  }
  else i4.updateUint8Array([0, 139]);
}
function X3(e3, b4) {
  e3.portal = function(e4, r4) {
    return b4(e4, r4, (n8, a5, u3) => (ie(u3, 1, 1, e4, r4), new t2(de(u3[0]))));
  }, e3.typeof = function(t6, e4) {
    return b4(t6, e4, (r4, i4, s4) => {
      ie(s4, 1, 1, t6, e4);
      const l4 = G(s4[0]);
      if ("Unrecognized Type" === l4) throw new a2(t6, r.UnrecognizedType, e4);
      return l4;
    });
  }, e3.trim = function(t6, e4) {
    return b4(t6, e4, (r4, n8, a5) => (ie(a5, 1, 1, t6, e4), de(a5[0]).trim()));
  }, e3.tohex = function(t6, e4) {
    return b4(t6, e4, (r4, n8, a5) => {
      ie(a5, 1, 1, t6, e4);
      const i4 = he(a5[0]);
      return isNaN(i4) ? i4 : i4.toString(16);
    });
  }, e3.upper = function(t6, e4) {
    return b4(t6, e4, (r4, n8, a5) => (ie(a5, 1, 1, t6, e4), de(a5[0]).toUpperCase()));
  }, e3.proper = function(t6, e4) {
    return b4(t6, e4, (r4, n8, a5) => {
      ie(a5, 1, 2, t6, e4);
      let u3 = 1;
      2 === a5.length && "firstword" === de(a5[1]).toLowerCase() && (u3 = 2);
      const s4 = /\s/, l4 = de(a5[0]);
      let c3 = "", d6 = true;
      for (let t7 = 0; t7 < l4.length; t7++) {
        let e5 = l4[t7];
        if (s4.test(e5)) 1 === u3 && (d6 = true);
        else {
          e5.toUpperCase() !== e5.toLowerCase() && (d6 ? (e5 = e5.toUpperCase(), d6 = false) : e5 = e5.toLowerCase());
        }
        c3 += e5;
      }
      return c3;
    });
  }, e3.lower = function(t6, e4) {
    return b4(t6, e4, (r4, n8, a5) => (ie(a5, 1, 1, t6, e4), de(a5[0]).toLowerCase()));
  }, e3.guid = function(t6, e4) {
    return b4(t6, e4, (r4, n8, a5) => {
      if (ie(a5, 0, 1, t6, e4), a5.length > 0) switch (de(a5[0]).toLowerCase()) {
        case "digits":
          return n2().replace("-", "").replace("-", "").replace("-", "").replace("-", "");
        case "digits-hyphen":
          return n2();
        case "digits-hyphen-braces":
          return "{" + n2() + "}";
        case "digits-hyphen-parentheses":
          return "(" + n2() + ")";
      }
      return "{" + n2() + "}";
    });
  }, e3.standardizeguid = function(t6, e4) {
    return b4(t6, e4, (r4, n8, a5) => {
      ie(a5, 2, 2, t6, e4);
      let u3 = de(a5[0]);
      if ("" === u3 || null === u3) return "";
      const s4 = /^(\{|\()?(?<partA>[0-9a-z]{8})(-?)(?<partB>[0-9a-z]{4})(-?)(?<partC>[0-9a-z]{4})(-?)(?<partD>[0-9a-z]{4})(-?)(?<partE>[0-9a-z]{12})(\}|\))?$/gim.exec(u3);
      if (!s4) return "";
      const l4 = s4.groups;
      switch (u3 = l4.partA + "-" + l4.partB + "-" + l4.partC + "-" + l4.partD + "-" + l4.partE, de(a5[1]).toLowerCase()) {
        case "digits":
          return u3.replace("-", "").replace("-", "").replace("-", "").replace("-", "");
        case "digits-hyphen":
          return u3;
        case "digits-hyphen-braces":
          return "{" + u3 + "}";
        case "digits-hyphen-parentheses":
          return "(" + u3 + ")";
      }
      return "{" + u3 + "}";
    });
  }, e3.console = function(t6, e4) {
    return b4(t6, e4, (e5, r4, n8) => (0 === n8.length || (1 === n8.length ? t6.console(de(n8[0])) : t6.console(de(n8))), M));
  }, e3.mid = function(t6, e4) {
    return b4(t6, e4, (r4, n8, a5) => {
      ie(a5, 2, 3, t6, e4);
      let u3 = he(a5[1]);
      if (isNaN(u3)) return "";
      if (u3 = Math.max(0, u3), 2 === a5.length) return de(a5[0]).slice(u3);
      let l4 = he(a5[2]);
      return isNaN(l4) ? "" : (l4 < 0 && (l4 = 0), de(a5[0]).slice(u3, u3 + l4));
    });
  }, e3.find = function(t6, e4) {
    return b4(t6, e4, (r4, n8, a5) => {
      ie(a5, 2, 3, t6, e4);
      let u3 = 0;
      if (a5.length > 2) {
        if (u3 = he(Y(a5[2], 0)), isNaN(u3)) return -1;
        u3 < 0 && (u3 = 0);
      }
      return de(a5[1]).indexOf(de(a5[0]), u3);
    });
  }, e3.left = function(t6, e4) {
    return b4(t6, e4, (r4, n8, a5) => {
      ie(a5, 2, 2, t6, e4);
      let u3 = he(a5[1]);
      return isNaN(u3) ? "" : (u3 < 0 && (u3 = 0), de(a5[0]).slice(0, u3));
    });
  }, e3.right = function(t6, e4) {
    return b4(t6, e4, (r4, n8, a5) => {
      ie(a5, 2, 2, t6, e4);
      const u3 = he(a5[1]);
      if (isNaN(u3) || u3 <= 0) return "";
      return de(a5[0]).slice(-u3);
    });
  }, e3.split = function(t6, e4) {
    return b4(t6, e4, (r4, n8, a5) => {
      let u3;
      ie(a5, 2, 4, t6, e4);
      let l4 = he(Y(a5[2], -1));
      const p7 = Se(Y(a5[3], false));
      if (-1 === l4 || null === l4 || true === p7 ? u3 = de(a5[0]).split(de(a5[1])) : (isNaN(l4) && (l4 = -1), l4 < -1 && (l4 = -1), u3 = de(a5[0]).split(de(a5[1]), l4)), false === p7) return u3;
      const f5 = [];
      for (let t7 = 0; t7 < u3.length && !(-1 !== l4 && f5.length >= l4); t7++) "" !== u3[t7] && void 0 !== u3[t7] && f5.push(u3[t7]);
      return f5;
    });
  }, e3.text = function(t6, e4) {
    return b4(t6, e4, (r4, n8, a5) => (ie(a5, 1, 2, t6, e4), ye(a5[0], a5[1])));
  }, e3.concatenate = function(t6, e4) {
    return b4(t6, e4, (t7, e5, r4) => {
      const n8 = [];
      if (r4.length < 1) return "";
      if (E2(r4[0])) {
        const t8 = Y(r4[2], "");
        for (let e6 = 0; e6 < r4[0].length; e6++) n8[e6] = ye(r4[0][e6], t8);
        return r4.length > 1 ? n8.join(r4[1]) : n8.join("");
      }
      if (X(r4[0])) {
        const t8 = Y(r4[2], "");
        for (let e6 = 0; e6 < r4[0].length(); e6++) n8[e6] = ye(r4[0].get(e6), t8);
        return r4.length > 1 ? n8.join(r4[1]) : n8.join("");
      }
      for (let a5 = 0; a5 < r4.length; a5++) n8[a5] = ye(r4[a5]);
      return n8.join("");
    });
  }, e3.reverse = function(t6, e4) {
    return b4(t6, e4, (r4, i4, u3) => {
      if (ie(u3, 1, 1, t6, e4), E2(u3[0])) {
        const t7 = u3[0].slice();
        return t7.reverse(), t7;
      }
      if (X(u3[0])) {
        const t7 = u3[0].toArray().slice();
        return t7.reverse(), t7;
      }
      throw new a2(t6, r.InvalidParameter, e4);
    });
  }, e3.replace = function(t6, e4) {
    return b4(t6, e4, (r4, n8, a5) => {
      ie(a5, 3, 4, t6, e4);
      const u3 = de(a5[0]), s4 = de(a5[1]), l4 = de(a5[2]);
      return 4 !== a5.length || Se(a5[3]) ? J(u3, s4, l4) : u3.replace(s4, l4);
    });
  }, e3.schema = function(t6, e4) {
    return b4(t6, e4, (o2, i4, u3) => {
      if (U(u3[0])) {
        const e5 = Ke(u3[0]);
        return e5 ? N2.convertObjectToArcadeDictionary(e5, Be(t6)) : null;
      }
      throw new a2(t6, r.InvalidParameter, e4);
    });
  }, e3.subtypes = function(t6, e4) {
    return b4(t6, e4, (i4, u3, s4) => {
      if (ie(s4, 1, 1, t6, e4), U(s4[0])) {
        const e5 = Ee(s4[0]);
        return e5 ? N2.convertObjectToArcadeDictionary(e5, Be(t6)) : null;
      }
      throw new a2(t6, r.InvalidParameter, e4);
    });
  }, e3.subtypecode = function(t6, e4) {
    return b4(t6, e4, (r4, i4, u3) => {
      if (ie(u3, 1, 1, t6, e4), U(u3[0])) {
        const t7 = Ee(u3[0]);
        if (!t7) return null;
        if (t7.subtypeField && u3[0].hasField(t7.subtypeField)) {
          const e5 = u3[0].field(t7.subtypeField);
          for (const r5 of t7.subtypes) if (r5.code === e5) return r5.code;
          return null;
        }
        return null;
      }
      throw new a2(t6, r.InvalidParameter, e4);
    });
  }, e3.subtypename = function(t6, e4) {
    return b4(t6, e4, (r4, i4, u3) => {
      if (ie(u3, 1, 1, t6, e4), U(u3[0])) {
        const t7 = Ee(u3[0]);
        if (!t7) return "";
        if (t7.subtypeField && u3[0].hasField(t7.subtypeField)) {
          const e5 = u3[0].field(t7.subtypeField);
          for (const r5 of t7.subtypes) if (r5.code === e5) return r5.name;
          return "";
        }
        return "";
      }
      throw new a2(t6, r.InvalidParameter, e4);
    });
  }, e3.gdbversion = function(t6, e4) {
    return b4(t6, e4, (r4, i4, u3) => {
      if (ie(u3, 1, 1, t6, e4), U(u3[0])) return u3[0].gdbVersion();
      throw new a2(t6, r.InvalidParameter, e4);
    });
  }, e3.domain = function(t6, e4) {
    return b4(t6, e4, (u3, s4, l4) => {
      if (ie(l4, 2, 3, t6, e4), U(l4[0])) {
        const e5 = qe(l4[0], de(l4[1]), void 0 === l4[2] ? void 0 : l4[2]);
        return e5 && e5.domain ? "coded-value" === e5.domain.type || "codedValue" === e5.domain.type ? N2.convertObjectToArcadeDictionary({ type: "codedValue", name: e5.domain.name, dataType: E[e5.field.type], codedValues: e5.domain.codedValues.map((t7) => ({ name: t7.name, code: t7.code })) }, Be(t6)) : N2.convertObjectToArcadeDictionary({ type: "range", name: e5.domain.name, dataType: E[e5.field.type], min: e5.domain.minValue, max: e5.domain.maxValue }, Be(t6)) : null;
      }
      throw new a2(t6, r.InvalidParameter, e4);
    });
  }, e3.domainname = function(t6, e4) {
    return b4(t6, e4, (r4, u3, s4) => {
      if (ie(s4, 2, 4, t6, e4), U(s4[0])) return Ue(s4[0], de(s4[1]), s4[2], void 0 === s4[3] ? void 0 : s4[3]);
      throw new a2(t6, r.InvalidParameter, e4);
    });
  }, e3.domaincode = function(t6, e4) {
    return b4(t6, e4, (r4, u3, s4) => {
      if (ie(s4, 2, 4, t6, e4), U(s4[0])) return He(s4[0], de(s4[1]), s4[2], void 0 === s4[3] ? void 0 : s4[3]);
      throw new a2(t6, r.InvalidParameter, e4);
    });
  }, e3.urlencode = function(t6, e4) {
    return b4(t6, e4, (n8, a5, u3) => {
      if (ie(u3, 1, 1, t6, e4), null === u3[0]) return "";
      if (u3[0] instanceof N2) {
        let t7 = "";
        for (const e5 of u3[0].keys()) {
          const r4 = u3[0].field(e5);
          "" !== t7 && (t7 += "&"), t7 += null === r4 ? encodeURIComponent(e5) + "=" : encodeURIComponent(e5) + "=" + encodeURIComponent(r4);
        }
        return t7;
      }
      return encodeURIComponent(de(u3[0]));
    });
  }, e3.hash = function(t6, e4) {
    return b4(t6, e4, (r4, n8, a5) => {
      ie(a5, 1, 1, t6, e4);
      const i4 = new i3(0);
      return K3(a5[0], i4, { context: t6, node: e4, map: /* @__PURE__ */ new Map(), currentLength: 0 }), i4.digest();
    });
  }, e3.convertdirection = function(t6, e4) {
    return b4(t6, e4, (r4, n8, a5) => (ie(a5, 3, 3, t6, e4), me2(a5[0], a5[1], a5[2])));
  }, e3.fromjson = function(t6, e4) {
    return b4(t6, e4, (u3, s4, l4) => {
      if (ie(l4, 1, 1, t6, e4), false === P(l4[0])) throw new a2(t6, r.InvalidParameter, e4);
      return N2.convertJsonToArcade(JSON.parse(de(l4[0])), Be(t6));
    });
  }, e3.expects = function(t6, e4) {
    return b4(t6, e4, (r4, o2, i4) => {
      if (i4.length < 1) throw new a2(t6, r.WrongNumberOfParameters, e4);
      return M;
    });
  }, e3.tocharcode = function(t6, e4) {
    return b4(t6, e4, (r4, u3, l4) => {
      ie(l4, 1, 2, t6, e4);
      const d6 = he(Y(l4[1], 0)), p7 = de(l4[0]);
      if (0 === p7.length && 1 === l4.length) return null;
      if (p7.length <= d6 || d6 < 0) throw new a2(t6, r.OutOfBounds, e4);
      return p7.charCodeAt(d6);
    });
  }, e3.tocodepoint = function(t6, e4) {
    return b4(t6, e4, (r4, u3, l4) => {
      ie(l4, 1, 2, t6, e4);
      const d6 = he(Y(l4[1], 0)), p7 = de(l4[0]);
      if (0 === p7.length && 1 === l4.length) return null;
      if (p7.length <= d6 || d6 < 0) throw new a2(t6, r.OutOfBounds, e4);
      return p7.codePointAt(d6);
    });
  }, e3.fromcharcode = function(t6, e4) {
    return b4(t6, e4, (r4, o2, i4) => {
      if (i4.length < 1) throw new a2(t6, r.WrongNumberOfParameters, e4);
      const u3 = i4.map((t7) => Math.trunc(he(t7))).filter((t7) => t7 >= 0 && t7 <= 65535);
      return 0 === u3.length ? null : String.fromCharCode.apply(null, u3);
    });
  }, e3.fromcodepoint = function(t6, e4) {
    return b4(t6, e4, (r4, o2, i4) => {
      if (i4.length < 1) throw new a2(t6, r.WrongNumberOfParameters, e4);
      let u3;
      try {
        u3 = i4.map((t7) => Math.trunc(he(t7))).filter((t7) => t7 <= 1114111 && t7 >>> 0 === t7);
      } catch (l4) {
        return null;
      }
      return 0 === u3.length ? null : String.fromCodePoint.apply(null, u3);
    });
  }, e3.getuser = function(e4, u3) {
    return b4(e4, u3, (s4, l4, d6) => {
      var _a;
      ie(d6, 0, 2, e4, u3);
      let p7 = Y(d6[1], "");
      if (p7 = true === p7 || false === p7 ? "" : de(p7), null !== p7 && "" !== p7) return null;
      if (0 === d6.length || d6[0] instanceof t2) {
        let t6 = null;
        if (t6 = ((_a = e4.services) == null ? void 0 : _a.portal) ? e4.services.portal : b2.getDefault(), d6.length > 0) {
          if (!q3(d6[0].field("url"), t6)) return null;
        }
        if (!t6) return null;
        if ("" === p7) {
          const n8 = E4(t6);
          if (n8) {
            const t7 = JSON.parse(JSON.stringify(n8));
            for (const e5 of ["lastLogin", "created", "modified"]) void 0 !== t7[e5] && null !== t7[e5] && (t7[e5] = new Date(t7[e5]));
            return N2.convertObjectToArcadeDictionary(t7, Be(e4));
          }
        }
        return null;
      }
      throw new a2(e4, r.InvalidParameter, u3);
    });
  }, e3.getenvironment = function(t6, e4) {
    return b4(t6, e4, (n8, a5, i4) => (ie(i4, 0, 0, t6, e4), N2.convertObjectToArcadeDictionary(Qe(Be(t6), t6.spatialReference), Be(t6), true)));
  };
}

export {
  e,
  s,
  p2 as p,
  m2 as m,
  s2,
  x,
  p3 as p2,
  l2 as l,
  u2 as u,
  f3 as f,
  d4 as d,
  g2 as g,
  p4 as p3,
  C,
  L3 as L,
  M2 as M,
  f4 as f2,
  X3 as X
};
//# sourceMappingURL=chunk-ZOKCILGM.js.map
