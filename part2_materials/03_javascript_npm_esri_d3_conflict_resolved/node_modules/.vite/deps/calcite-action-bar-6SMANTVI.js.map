{
  "version": 3,
  "sources": ["../../@esri/calcite-components/dist/components/src/components/action-bar/utils.ts", "../../@esri/calcite-components/dist/components/src/components/functional/ExpandToggle.tsx", "../../@esri/calcite-components/dist/components/src/components/action-bar/resources.ts", "../../@esri/calcite-components/dist/components/src/components/action-bar/action-bar.scss?tag=calcite-action-bar&encapsulation=shadow", "../../@esri/calcite-components/dist/components/src/components/action-bar/action-bar.tsx"],
  "sourcesContent": ["import { forceUpdate } from \"@stencil/core\";\nimport { SLOTS as ACTION_GROUP_SLOTS } from \"../action-group/resources\";\nimport { SLOTS as ACTION_MENU_SLOTS } from \"../action-menu/resources\";\nimport { Layout } from \"../interfaces\";\n\nconst groupBufferPx = 2;\n\nconst getAverage = (arr: number[]) => arr.reduce((p, c) => p + c, 0) / arr.length;\n\nexport const geActionDimensions = (\n  actions: HTMLCalciteActionElement[],\n): { actionWidth: number; actionHeight: number } => {\n  const actionsNotSlotted = actions.filter((action) => action.slot !== ACTION_GROUP_SLOTS.menuActions);\n  const actionLen = actionsNotSlotted?.length;\n  return {\n    actionWidth: actionLen ? getAverage(actionsNotSlotted.map((action) => action.clientWidth || 0)) : 0,\n    actionHeight: actionLen ? getAverage(actionsNotSlotted.map((action) => action.clientHeight || 0)) : 0,\n  };\n};\n\nconst getMaxActionCount = ({\n  width,\n  actionWidth,\n  layout,\n  height,\n  actionHeight,\n  groupCount,\n}: {\n  layout: Extract<\"horizontal\" | \"vertical\", Layout>;\n  height: number;\n  actionWidth: number;\n  width: number;\n  actionHeight: number;\n  groupCount: number;\n}): number => {\n  const maxContainerPx = layout === \"horizontal\" ? width : height;\n  const avgItemPx = layout === \"horizontal\" ? actionWidth : actionHeight;\n  return Math.floor((maxContainerPx - groupCount * groupBufferPx) / avgItemPx);\n};\n\nexport const getOverflowCount = ({\n  layout,\n  actionCount,\n  actionWidth,\n  width,\n  actionHeight,\n  height,\n  groupCount,\n}: {\n  layout: Extract<\"horizontal\" | \"vertical\", Layout>;\n  actionCount: number;\n  actionWidth: number;\n  width: number;\n  actionHeight: number;\n  height: number;\n  groupCount: number;\n}): number => {\n  return Math.max(actionCount - getMaxActionCount({ width, actionWidth, layout, height, actionHeight, groupCount }), 0);\n};\n\nexport const queryActions = (el: HTMLElement): HTMLCalciteActionElement[] => {\n  return Array.from(el.querySelectorAll(\"calcite-action\")).filter((action) =>\n    action.closest(\"calcite-action-menu\") ? action.slot === ACTION_MENU_SLOTS.trigger : true,\n  );\n};\n\nexport const overflowActions = ({\n  actionGroups,\n  expanded,\n  overflowCount,\n}: {\n  actionGroups: HTMLCalciteActionGroupElement[];\n  expanded: boolean;\n  overflowCount: number;\n}): void => {\n  let needToSlotCount = overflowCount;\n  actionGroups.reverse().forEach((group) => {\n    let slottedWithinGroupCount = 0;\n\n    const groupActions = queryActions(group).reverse();\n\n    groupActions.forEach((groupAction) => {\n      if (groupAction.slot === ACTION_GROUP_SLOTS.menuActions) {\n        groupAction.removeAttribute(\"slot\");\n        groupAction.textEnabled = expanded;\n      }\n    });\n\n    if (needToSlotCount > 0) {\n      groupActions.some((groupAction) => {\n        const unslottedActions = groupActions.filter((action) => !action.slot);\n\n        if (unslottedActions.length > 1 && groupActions.length > 2 && !groupAction.closest(\"calcite-action-menu\")) {\n          groupAction.textEnabled = true;\n          groupAction.setAttribute(\"slot\", ACTION_GROUP_SLOTS.menuActions);\n          slottedWithinGroupCount++;\n\n          if (slottedWithinGroupCount > 1) {\n            needToSlotCount--;\n          }\n        }\n\n        return needToSlotCount < 1;\n      });\n    }\n\n    forceUpdate(group);\n  });\n};\n", "import { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { getElementDir } from \"../../utils/dom\";\nimport { queryActions } from \"../action-bar/utils\";\nimport { SLOTS as ACTION_GROUP_SLOTS } from \"../action-group/resources\";\nimport { Position, Scale } from \"../interfaces\";\n\ninterface ExpandToggleProps {\n  expanded: boolean;\n  expandText: string;\n  collapseText: string;\n  expandLabel: string;\n  collapseLabel: string;\n  el: HTMLElement;\n  position: Position;\n  tooltip?: HTMLCalciteTooltipElement;\n  toggle: () => void;\n  ref?: (el: HTMLElement) => void;\n  scale?: Scale;\n}\n\nconst ICONS = {\n  chevronsLeft: \"chevrons-left\",\n  chevronsRight: \"chevrons-right\",\n} as const;\n\nfunction getCalcitePosition(position: Position, el: HTMLElement): Position {\n  return position || el.closest(\"calcite-shell-panel\")?.position || \"start\";\n}\n\nexport function toggleChildActionText({\n  el,\n  expanded,\n}: {\n  el: HTMLElement;\n  expanded: boolean;\n}): void {\n  queryActions(el)\n    .filter((el) => el.slot !== ACTION_GROUP_SLOTS.menuActions)\n    .forEach((action) => (action.textEnabled = expanded));\n  el.querySelectorAll(\"calcite-action-group, calcite-action-menu\").forEach(\n    (el: HTMLCalciteActionMenuElement | HTMLCalciteActionGroupElement) => (el.expanded = expanded),\n  );\n}\n\nconst setTooltipReference = ({\n  tooltip,\n  referenceElement,\n  expanded,\n  ref,\n}: {\n  tooltip: HTMLCalciteTooltipElement;\n  referenceElement: HTMLCalciteActionElement;\n  expanded: boolean;\n  ref?: (el: HTMLElement) => void;\n}): HTMLCalciteActionElement => {\n  if (tooltip) {\n    tooltip.referenceElement = !expanded && referenceElement ? referenceElement : null;\n  }\n\n  if (ref) {\n    ref(referenceElement);\n  }\n\n  return referenceElement;\n};\n\nexport const ExpandToggle: FunctionalComponent<ExpandToggleProps> = ({\n  expanded,\n  expandText,\n  collapseText,\n  expandLabel,\n  collapseLabel,\n  toggle,\n  el,\n  position,\n  tooltip,\n  ref,\n  scale,\n}): VNode => {\n  const rtl = getElementDir(el) === \"rtl\";\n\n  const text = expanded ? collapseText : expandText;\n  const label = expanded ? collapseLabel : expandLabel;\n  const icons = [ICONS.chevronsLeft, ICONS.chevronsRight];\n\n  if (rtl) {\n    icons.reverse();\n  }\n\n  const end = getCalcitePosition(position, el) === \"end\";\n  const expandIcon = end ? icons[1] : icons[0];\n  const collapseIcon = end ? icons[0] : icons[1];\n\n  const actionNode = (\n    <calcite-action\n      icon={expanded ? expandIcon : collapseIcon}\n      id=\"expand-toggle\"\n      label={label}\n      onClick={toggle}\n      ref={(referenceElement): HTMLCalciteActionElement =>\n        setTooltipReference({ tooltip, referenceElement, expanded, ref })\n      }\n      scale={scale}\n      text={text}\n      textEnabled={expanded}\n      title={!expanded && !tooltip ? text : null}\n    />\n  );\n\n  return actionNode;\n};\n", "export const CSS = {\n  actionGroupEnd: \"action-group--end\",\n};\n\nexport const SLOTS = {\n  actionsEnd: \"actions-end\",\n  bottomActions: \"bottom-actions\",\n  expandTooltip: \"expand-tooltip\",\n};\n", "/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-action-bar-expanded-max-width: When `layout` is `\"vertical\"`, specifies the component's maximum width.\n * @prop --calcite-action-bar-items-space: Specifies the space between slotted components in the component.\n */\n\n:host {\n  @extend %component-host;\n  @apply pointer-events-auto\n    inline-flex\n    self-stretch;\n\n  gap: var(--calcite-action-bar-items-space, 0);\n}\n\n:host([layout=\"vertical\"]) {\n  @apply flex-col;\n\n  &:host([overflow-actions-disabled]) {\n    overflow-y: auto;\n  }\n\n  &:host([expanded]) {\n    max-inline-size: var(--calcite-action-bar-expanded-max-width, auto);\n  }\n\n  .action-group--end {\n    margin-block-start: auto;\n  }\n\n  ::slotted(calcite-action-group:not(:last-of-type)) {\n    border-block-end-width: var(--calcite-border-width-sm);\n  }\n}\n\n:host([layout=\"horizontal\"]) {\n  @apply flex-row;\n\n  &:host([overflow-actions-disabled]) {\n    overflow-x: auto;\n  }\n\n  .action-group--end {\n    @apply ms-auto;\n  }\n\n  ::slotted(calcite-action-group:not(:last-of-type)) {\n    border-inline-end-width: var(--calcite-border-width-sm);\n  }\n}\n\n.action-group--end {\n  @apply justify-end;\n}\n\n@include base-component();\n", "import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { debounce } from \"lodash-es\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  focusFirstTabbable,\n  slotChangeGetAssignedElements,\n  slotChangeHasAssignedElement,\n} from \"../../utils/dom\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { ExpandToggle, toggleChildActionText } from \"../functional/ExpandToggle\";\nimport { Layout, Position, Scale } from \"../interfaces\";\nimport { OverlayPositioning } from \"../../utils/floating-ui\";\nimport { DEBOUNCE } from \"../../utils/resources\";\nimport { ActionBarMessages } from \"./assets/action-bar/t9n\";\nimport { CSS, SLOTS } from \"./resources\";\nimport { geActionDimensions, getOverflowCount, overflowActions, queryActions } from \"./utils\";\n\n/**\n * @slot - A slot for adding `calcite-action`s that will appear at the top of the component.\n * @slot bottom-actions - [Deprecated] Use the `\"actions-end\"` slot instead. A slot for adding `calcite-action`s that will appear at the bottom of the component, above the collapse/expand button.\n * @slot actions-end - A slot for adding `calcite-action`s that will appear at the end of the component, prior to the collapse/expand button.\n * @slot expand-tooltip - A slot to set the `calcite-tooltip` for the expand toggle.\n */\n@Component({\n  tag: \"calcite-action-bar\",\n  styleUrl: \"action-bar.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class ActionBar\n  implements ConditionalSlotComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Specifies the accessible label for the last `calcite-action-group`.\n   */\n  @Prop() actionsEndGroupLabel: string;\n\n  /**\n   * When `true`, the expand-toggling behavior is disabled.\n   */\n  @Prop({ reflect: true }) expandDisabled = false;\n\n  @Watch(\"expandDisabled\")\n  expandHandler(): void {\n    this.overflowActions();\n  }\n\n  /**\n   * When `true`, the component is expanded.\n   */\n  @Prop({ reflect: true, mutable: true }) expanded = false;\n\n  @Watch(\"expanded\")\n  expandedHandler(): void {\n    const { el, expanded } = this;\n    toggleChildActionText({ el, expanded });\n    this.overflowActions();\n  }\n\n  /**\n   *  Specifies the layout direction of the actions.\n   */\n  @Prop({ reflect: true }) layout: Extract<\"horizontal\" | \"vertical\", Layout> = \"vertical\";\n\n  @Watch(\"layout\")\n  layoutHandler(): void {\n    this.updateGroups();\n  }\n\n  /**\n   * Disables automatically overflowing `calcite-action`s that won't fit into menus.\n   */\n  @Prop({ reflect: true }) overflowActionsDisabled = false;\n\n  @Watch(\"overflowActionsDisabled\")\n  overflowDisabledHandler(overflowActionsDisabled: boolean): void {\n    if (overflowActionsDisabled) {\n      this.resizeObserver?.disconnect();\n      return;\n    }\n\n    this.resizeObserver?.observe(this.el);\n    this.overflowActions();\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  /**\n   * Arranges the component depending on the element's `dir` property.\n   */\n  @Prop({ reflect: true }) position: Extract<\"start\" | \"end\", Position>;\n\n  /**\n   * Specifies the size of the expand `calcite-action`.\n   */\n  @Prop({ reflect: true }) scale: Scale;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ActionBarMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ActionBarMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the `expanded` property is toggled.\n   */\n  @Event({ cancelable: false }) calciteActionBarToggle: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteActionBarElement;\n\n  mutationObserver = createObserver(\"mutation\", () => {\n    const { el, expanded } = this;\n    toggleChildActionText({ el, expanded });\n    this.overflowActions();\n  });\n\n  resizeObserver = createObserver(\"resize\", (entries) => this.resizeHandlerEntries(entries));\n\n  @State() effectiveLocale: string;\n\n  @State() hasActionsEnd = false;\n\n  @State() hasBottomActions = false;\n\n  @State() expandTooltip: HTMLCalciteTooltipElement;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ActionBarMessages;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  componentDidLoad(): void {\n    const { el, expanded } = this;\n\n    setComponentLoaded(this);\n    toggleChildActionText({ el, expanded });\n    this.overflowActions();\n  }\n\n  connectedCallback(): void {\n    const { el, expanded } = this;\n\n    connectLocalized(this);\n    connectMessages(this);\n    toggleChildActionText({ el, expanded });\n\n    this.mutationObserver?.observe(el, { childList: true, subtree: true });\n\n    if (!this.overflowActionsDisabled) {\n      this.resizeObserver?.observe(el);\n    }\n\n    this.overflowActions();\n    connectConditionalSlotComponent(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n    this.resizeObserver?.disconnect();\n    disconnectConditionalSlotComponent(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Overflows actions that won't fit into menus.\n   *\n   * @internal\n   */\n  @Method()\n  async overflowActions(): Promise<void> {\n    this.resize({ width: this.el.clientWidth, height: this.el.clientHeight });\n  }\n\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    focusFirstTabbable(this.el);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  actionMenuOpenHandler = (event: CustomEvent<void>): void => {\n    if ((event.target as HTMLCalciteActionGroupElement).menuOpen) {\n      const composedPath = event.composedPath();\n      Array.from(this.el.querySelectorAll(\"calcite-action-group\")).forEach((group) => {\n        if (!composedPath.includes(group)) {\n          group.menuOpen = false;\n        }\n      });\n    }\n  };\n\n  resizeHandlerEntries = (entries: ResizeObserverEntry[]): void => {\n    entries.forEach(this.resizeHandler);\n  };\n\n  resizeHandler = (entry: ResizeObserverEntry): void => {\n    const { width, height } = entry.contentRect;\n    this.resize({ width, height });\n  };\n\n  private resize = debounce(({ width, height }: { width: number; height: number }): void => {\n    const { el, expanded, expandDisabled, layout, overflowActionsDisabled } = this;\n\n    if (\n      overflowActionsDisabled ||\n      (layout === \"vertical\" && !height) ||\n      (layout === \"horizontal\" && !width)\n    ) {\n      return;\n    }\n\n    const actions = queryActions(el);\n    const actionCount = expandDisabled ? actions.length : actions.length + 1;\n    const actionGroups = Array.from(el.querySelectorAll(\"calcite-action-group\"));\n\n    this.setGroupLayout(actionGroups);\n\n    const groupCount =\n      this.hasActionsEnd || this.hasBottomActions || !expandDisabled\n        ? actionGroups.length + 1\n        : actionGroups.length;\n\n    const { actionHeight, actionWidth } = geActionDimensions(actions);\n\n    const overflowCount = getOverflowCount({\n      layout,\n      actionCount,\n      actionHeight,\n      actionWidth,\n      height,\n      width,\n      groupCount,\n    });\n\n    overflowActions({\n      actionGroups,\n      expanded,\n      overflowCount,\n    });\n  }, DEBOUNCE.resize);\n\n  toggleExpand = (): void => {\n    this.expanded = !this.expanded;\n    this.calciteActionBarToggle.emit();\n  };\n\n  updateGroups(): void {\n    this.setGroupLayout(Array.from(this.el.querySelectorAll(\"calcite-action-group\")));\n  }\n\n  setGroupLayout(groups: HTMLCalciteActionGroupElement[]): void {\n    groups.forEach((group) => (group.layout = this.layout));\n  }\n\n  handleDefaultSlotChange = (event: Event): void => {\n    const groups = slotChangeGetAssignedElements(event).filter(\n      (el): el is HTMLCalciteActionGroupElement => el.matches(\"calcite-action-group\"),\n    );\n\n    this.setGroupLayout(groups);\n  };\n\n  handleActionsEndSlotChange = (event: Event): void => {\n    this.hasActionsEnd = slotChangeHasAssignedElement(event);\n  };\n\n  handleBottomActionsSlotChange = (event: Event): void => {\n    this.hasBottomActions = slotChangeHasAssignedElement(event);\n  };\n\n  handleTooltipSlotChange = (event: Event): void => {\n    const tooltips = slotChangeGetAssignedElements(event).filter(\n      (el): el is HTMLCalciteTooltipElement => el?.matches(\"calcite-tooltip\"),\n    );\n\n    this.expandTooltip = tooltips[0];\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderBottomActionGroup(): VNode {\n    const {\n      expanded,\n      expandDisabled,\n      el,\n      position,\n      toggleExpand,\n      scale,\n      layout,\n      messages,\n      actionsEndGroupLabel,\n      overlayPositioning,\n    } = this;\n\n    const expandToggleNode = !expandDisabled ? (\n      <ExpandToggle\n        collapseLabel={messages.collapseLabel}\n        collapseText={messages.collapse}\n        el={el}\n        expandLabel={messages.expandLabel}\n        expandText={messages.expand}\n        expanded={expanded}\n        position={position}\n        scale={scale}\n        toggle={toggleExpand}\n        tooltip={this.expandTooltip}\n      />\n    ) : null;\n\n    return (\n      <calcite-action-group\n        class={CSS.actionGroupEnd}\n        hidden={this.expandDisabled && !(this.hasActionsEnd || this.hasBottomActions)}\n        label={actionsEndGroupLabel}\n        layout={layout}\n        overlayPositioning={overlayPositioning}\n        scale={scale}\n      >\n        <slot name={SLOTS.actionsEnd} onSlotchange={this.handleActionsEndSlotChange} />\n        <slot name={SLOTS.bottomActions} onSlotchange={this.handleBottomActionsSlotChange} />\n        <slot name={SLOTS.expandTooltip} onSlotchange={this.handleTooltipSlotChange} />\n        {expandToggleNode}\n      </calcite-action-group>\n    );\n  }\n\n  render(): VNode {\n    return (\n      <Host onCalciteActionMenuOpen={this.actionMenuOpenHandler}>\n        <slot onSlotchange={this.handleDefaultSlotChange} />\n        {this.renderBottomActionGroup()}\n      </Host>\n    );\n  }\n}\n"],
  "mappings": "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",
  "names": ["ACTION_GROUP_SLOTS", "ACTION_MENU_SLOTS", "el", "SLOTS", "ActionBar"]
}
