import {
  d
} from "./chunk-BN2GQIOE.js";
import "./chunk-LNP4UEHL.js";
import "./chunk-A33GYYOL.js";
import "./chunk-VGUQMPM6.js";
import {
  f as f2,
  i,
  s
} from "./chunk-WWNVF22O.js";
import "./chunk-GN5RE63N.js";
import "./chunk-7O7KFKCG.js";
import {
  U
} from "./chunk-CRH37WFF.js";
import "./chunk-YFGQMO6E.js";
import {
  f
} from "./chunk-HAF6QJ32.js";
import {
  m
} from "./chunk-H77COA2S.js";
import {
  a4 as a
} from "./chunk-7LJCT7EA.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import "./chunk-GRW2QIBT.js";
import "./chunk-R2PAF6JT.js";
import "./chunk-6WE7SNQY.js";
import "./chunk-L6CCOEVE.js";
import "./chunk-PKLD5YJF.js";
import "./chunk-XKQWTZMW.js";
import "./chunk-A4OFG7JM.js";

// node_modules/@arcgis/core/rest/networks/support/QueryNamedTraceConfigurationsResult.js
var a2 = class extends f {
  constructor(r2) {
    super(r2), this.namedTraceConfigurations = [];
  }
};
r([m({ type: [d], json: { read: { source: "traceConfigurations" }, write: { target: "traceConfigurations" } } })], a2.prototype, "namedTraceConfigurations", void 0), a2 = r([a("esri.rest.networks.support.QueryNamedTraceConfigurationsResult")], a2);
var c = a2;

// node_modules/@arcgis/core/rest/networks/queryNamedTraceConfigurations.js
async function e(e2, n, g) {
  const i2 = f2(e2), l = n.toJSON();
  n.globalIds && n.globalIds.length > 0 && (l.globalIds = JSON.stringify(n.globalIds)), n.creators && n.creators.length > 0 && (l.creators = JSON.stringify(n.creators)), n.tags && n.tags.length > 0 && (l.tags = JSON.stringify(n.tags)), n.names && n.names.length > 0 && (l.names = JSON.stringify(n.names));
  const m2 = { ...l, f: "json" }, f3 = s({ ...i2.query, ...m2 }), u = i(f3, { ...g, method: "post" }), c2 = `${i2.path}/traceConfigurations/query`, { data: p } = await U(c2, u);
  return c.fromJSON(p);
}
export {
  e as queryNamedTraceConfigurations
};
//# sourceMappingURL=queryNamedTraceConfigurations-MEP7QDQB.js.map
