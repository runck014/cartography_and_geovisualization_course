import {
  s as s3
} from "./chunk-DFTXT7PS.js";
import "./chunk-QFT2AD36.js";
import "./chunk-5PEZCNND.js";
import "./chunk-PBHXMZZN.js";
import {
  W,
  e as e2,
  e2 as e4,
  e3 as e5,
  i as i4,
  n as n4,
  re,
  t
} from "./chunk-6K2T25C2.js";
import "./chunk-KG6AZHOW.js";
import "./chunk-FZ6E6NIW.js";
import "./chunk-ILGZWL6T.js";
import "./chunk-FUV5SXAH.js";
import "./chunk-G7VPHLH2.js";
import {
  D,
  N as N2,
  R as R2,
  g2 as g
} from "./chunk-5OJUBUJF.js";
import "./chunk-OZQVNYO5.js";
import "./chunk-KSR45ZRP.js";
import {
  n as n3
} from "./chunk-HB2JTNV2.js";
import "./chunk-LTKYSPF4.js";
import "./chunk-RBGSXCH7.js";
import "./chunk-7PNHGV6W.js";
import "./chunk-XTI4SH5M.js";
import "./chunk-VVL7KRSE.js";
import "./chunk-X3DAAXDC.js";
import "./chunk-A3GASGJZ.js";
import "./chunk-RH3RAT7T.js";
import "./chunk-556C3V64.js";
import "./chunk-JPQIRBN6.js";
import "./chunk-CH3XVKUV.js";
import "./chunk-KI5F6KDS.js";
import "./chunk-BN24XFSK.js";
import "./chunk-4WB72ND2.js";
import "./chunk-F5EWBV6B.js";
import "./chunk-A33GYYOL.js";
import "./chunk-NWZXTYBZ.js";
import "./chunk-UK4PA5E2.js";
import "./chunk-D4XQN7BI.js";
import "./chunk-C5QEEP7V.js";
import "./chunk-XECP56E2.js";
import "./chunk-ZTENQQ25.js";
import "./chunk-TGFVKJXH.js";
import "./chunk-ZZTUJWOP.js";
import "./chunk-SVRTKGNR.js";
import "./chunk-JED7FM2Q.js";
import "./chunk-FFUKJAFO.js";
import "./chunk-H4E2VVPD.js";
import "./chunk-CQFC4JO6.js";
import "./chunk-VS5MKM3H.js";
import "./chunk-CQTV4C3X.js";
import "./chunk-764E6KTP.js";
import "./chunk-GEPD6W23.js";
import "./chunk-QSIT7EPR.js";
import "./chunk-TP6LRQ42.js";
import "./chunk-ZE6OS33V.js";
import "./chunk-MWZJIOOL.js";
import "./chunk-ULSRCITK.js";
import "./chunk-FLUE3DMC.js";
import "./chunk-5GQ62KHN.js";
import "./chunk-YAGJS3MX.js";
import "./chunk-43KBLSS3.js";
import "./chunk-WH2FR6UE.js";
import "./chunk-RG7AMCT5.js";
import "./chunk-PV3ZZQOV.js";
import "./chunk-SM2VXWMT.js";
import "./chunk-WYO25WZZ.js";
import "./chunk-OC7D2HR4.js";
import "./chunk-IGMG7ERK.js";
import "./chunk-V47ZBW5W.js";
import "./chunk-HKYICNT2.js";
import "./chunk-VGUQMPM6.js";
import "./chunk-CTU2XDPA.js";
import "./chunk-KKH7HGO3.js";
import "./chunk-SUBGY5CE.js";
import "./chunk-Z3NV3VCK.js";
import "./chunk-7VNQKVOW.js";
import "./chunk-PNVXSHN2.js";
import "./chunk-3DVL3O3F.js";
import "./chunk-RN66FJAW.js";
import "./chunk-QYSQ6XPQ.js";
import "./chunk-2RIHQI4N.js";
import "./chunk-VLKWWBLY.js";
import "./chunk-NXGNMEHZ.js";
import "./chunk-TWYDW6LU.js";
import "./chunk-PVHAAI32.js";
import "./chunk-MLATPUII.js";
import "./chunk-NVFQGMP6.js";
import "./chunk-P2IB5HBH.js";
import "./chunk-XX37BOHH.js";
import "./chunk-5CRXWQ3Y.js";
import "./chunk-4RFCLPAF.js";
import "./chunk-U3JQIAF6.js";
import "./chunk-BHQS42D6.js";
import "./chunk-4ISVH4NS.js";
import "./chunk-NIWINVGG.js";
import "./chunk-DOENTAA7.js";
import "./chunk-CVI4GL5M.js";
import "./chunk-CGSFKZP2.js";
import "./chunk-EPAKCM4A.js";
import "./chunk-WPERPIJF.js";
import "./chunk-RXJCBLN2.js";
import "./chunk-EFVIMN4N.js";
import "./chunk-XKMN3LJN.js";
import "./chunk-2U5JYYSG.js";
import "./chunk-AFULL6KA.js";
import "./chunk-URFLFG2R.js";
import {
  t as t2
} from "./chunk-TZIYE4OW.js";
import {
  e as e3
} from "./chunk-2EUWU26M.js";
import "./chunk-XK5EJSYF.js";
import "./chunk-73FHIZIF.js";
import "./chunk-ICIPRMPO.js";
import "./chunk-YNC2IEH2.js";
import "./chunk-6B4OMNPA.js";
import "./chunk-3GQ4PJDJ.js";
import {
  B,
  e,
  r as r2
} from "./chunk-M7BSX2JD.js";
import {
  i2,
  n2
} from "./chunk-N7UV77NP.js";
import "./chunk-J7T52XOR.js";
import {
  u,
  w as w2
} from "./chunk-KZYGXJYH.js";
import "./chunk-B3SR7LF7.js";
import "./chunk-BVHISPUT.js";
import {
  f as f2
} from "./chunk-QMGMKWTA.js";
import "./chunk-2EGO74J5.js";
import "./chunk-4SUK447J.js";
import "./chunk-2X7T37AY.js";
import "./chunk-XQH2QDB2.js";
import {
  d as d3
} from "./chunk-6Q7GN2CW.js";
import {
  a as a2,
  c3 as c,
  p2
} from "./chunk-MYUZZ3A3.js";
import "./chunk-2IGXKE5P.js";
import "./chunk-JFI4ESYU.js";
import "./chunk-4X2UADDH.js";
import "./chunk-ZICJB3ML.js";
import {
  S
} from "./chunk-AVBIV2K3.js";
import "./chunk-4NJWIUZG.js";
import "./chunk-F3NUC2RS.js";
import "./chunk-LE3YW4Y3.js";
import "./chunk-TA32QX7Z.js";
import "./chunk-NYLL2YZF.js";
import "./chunk-P3GRQ2CH.js";
import "./chunk-NYLBGE62.js";
import "./chunk-LPNAPHOF.js";
import "./chunk-QCBTLG25.js";
import "./chunk-ECCHNTW6.js";
import "./chunk-WWNVF22O.js";
import "./chunk-SUZN3TAH.js";
import "./chunk-K5RYAJV4.js";
import {
  K,
  N,
  V as V2
} from "./chunk-XGYM66XX.js";
import "./chunk-JOOGZSAP.js";
import "./chunk-J6GHQIZ2.js";
import "./chunk-VEUN2EF3.js";
import {
  C,
  P as P2,
  d as d2,
  p,
  v,
  w
} from "./chunk-W6D3ECTZ.js";
import "./chunk-PJNOPBRY.js";
import "./chunk-23TJP3F6.js";
import "./chunk-EMVTPRQK.js";
import "./chunk-EDGKOPSL.js";
import "./chunk-QXDQJEIU.js";
import "./chunk-MGMVRMXQ.js";
import "./chunk-SEUZ3J6J.js";
import {
  i as i3
} from "./chunk-BWTCR2DR.js";
import "./chunk-SMOTPOZ7.js";
import "./chunk-YVSEBNS4.js";
import "./chunk-Y2XCZQML.js";
import "./chunk-EZXLBRAS.js";
import "./chunk-7FJIOZSE.js";
import "./chunk-GNWAZIVF.js";
import "./chunk-2PK57UYA.js";
import "./chunk-3L2AYCZY.js";
import "./chunk-TSVUPARM.js";
import "./chunk-VUJERGGB.js";
import "./chunk-NTI2OCVI.js";
import "./chunk-ZCHZRNUG.js";
import "./chunk-G6REFQRQ.js";
import "./chunk-2TEGRXBS.js";
import "./chunk-6Y2LNRVP.js";
import {
  l,
  s as s2
} from "./chunk-JVEZN6WF.js";
import "./chunk-E2RPCJOE.js";
import "./chunk-NHJGPXZH.js";
import {
  o as o2
} from "./chunk-JS7R723S.js";
import {
  V
} from "./chunk-RCLWOQNR.js";
import {
  o
} from "./chunk-DOTSJZHK.js";
import "./chunk-UCO66LNK.js";
import "./chunk-5YRJ4YFE.js";
import "./chunk-RD2BBQYN.js";
import "./chunk-SEG3PRUR.js";
import "./chunk-B6VE32RA.js";
import "./chunk-AIYFWM42.js";
import "./chunk-2M53HYNY.js";
import "./chunk-6YWQXXBX.js";
import "./chunk-Q7TEBZSN.js";
import {
  R,
  j2 as j
} from "./chunk-FG3XOAFD.js";
import "./chunk-GN5RE63N.js";
import "./chunk-2WXAPZBK.js";
import "./chunk-E2I7HYXQ.js";
import "./chunk-P5H5PJSC.js";
import "./chunk-WTNHDCCU.js";
import "./chunk-7O7KFKCG.js";
import "./chunk-TVTRNT6K.js";
import "./chunk-CRH37WFF.js";
import "./chunk-YFGQMO6E.js";
import "./chunk-HAF6QJ32.js";
import {
  P,
  b2,
  i,
  m
} from "./chunk-H77COA2S.js";
import {
  a4 as a
} from "./chunk-7LJCT7EA.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import {
  A,
  b,
  d,
  f,
  k
} from "./chunk-GRW2QIBT.js";
import "./chunk-R2PAF6JT.js";
import "./chunk-6WE7SNQY.js";
import "./chunk-L6CCOEVE.js";
import {
  n2 as n,
  s2 as s
} from "./chunk-PKLD5YJF.js";
import {
  F
} from "./chunk-XKQWTZMW.js";
import "./chunk-R4AWRGAT.js";
import "./chunk-5674S6ZB.js";
import "./chunk-V2NNZQEU.js";
import "./chunk-V6OQZUXX.js";
import "./chunk-A4OFG7JM.js";

// node_modules/@arcgis/core/geometry/support/geometryUtils.js
function n5(e10) {
  var _a;
  switch (e10 == null ? void 0 : e10.type) {
    case "point":
      return e10;
    case "extent":
      return e10.center;
    case "polygon":
      return e10.centroid;
    case "multipoint":
    case "polyline":
      return (_a = e10.extent) == null ? void 0 : _a.center;
    default:
      return null;
  }
}

// node_modules/@arcgis/core/support/actions/actionUtils.js
function n6(i7) {
  return i7 ? { backgroundImage: `url(${i7})` } : {};
}
function e6({ action: t7, feature: n9 }) {
  const e10 = n9 == null ? void 0 : n9.attributes, o5 = "image" in t7 ? t7.image : void 0;
  return o5 && e10 ? s2(o5, e10) : o5 ?? "";
}

// node_modules/@arcgis/core/widgets/support/AnchorElementViewModel.js
var c2 = class extends o.EventedAccessor {
  constructor(e10) {
    super(e10), this.location = null, this.screenLocationEnabled = false, this.view = null, this.addHandles([p(() => {
      const e11 = this.screenLocationEnabled ? this.view : null;
      return e11 ? [e11.size, "3d" === e11.type ? e11.camera : e11.viewpoint] : null;
    }, () => this.notifyChange("screenLocation")), d2(() => this.screenLocation, (e11, o5) => {
      null != e11 && null != o5 && this.emit("view-change");
    })]);
  }
  destroy() {
    this.view = null;
  }
  get screenLocation() {
    const { location: e10, view: o5, screenLocationEnabled: t7 } = this, r4 = o5 == null ? void 0 : o5.spatialReference, s6 = r4 ? V2(e10, r4).geometry : null;
    return t7 && s6 && (o5 == null ? void 0 : o5.ready) ? o5.toScreen(s6) : null;
  }
};
r([m()], c2.prototype, "location", void 0), r([m()], c2.prototype, "screenLocation", null), r([m()], c2.prototype, "screenLocationEnabled", void 0), r([m()], c2.prototype, "view", void 0), c2 = r([a("esri.widgets.support.AnchorElementViewModel")], c2);
var l2 = c2;

// node_modules/@arcgis/core/widgets/Spinner/SpinnerViewModel.js
var t3 = class extends l2 {
  constructor(o5) {
    super(o5), this.visible = false;
  }
};
r([m()], t3.prototype, "visible", void 0), t3 = r([a("esri.widgets.Spinner.SpinnerViewModel")], t3);
var p3 = t3;

// node_modules/@arcgis/core/widgets/Spinner.js
var a3 = "esri-spinner";
var c3 = { base: a3, spinnerStart: `${a3}--start`, spinnerFinish: `${a3}--finish` };
var p4 = class extends B {
  constructor(i7, e10) {
    super(i7, e10), this._animationDelay = 500, this._animationPromise = null, this.viewModel = new p3();
  }
  initialize() {
    this.addHandles(d2(() => this.visible, (i7) => this._visibleChange(i7)));
  }
  destroy() {
    this._animationPromise = null;
  }
  get location() {
    return this.viewModel.location;
  }
  set location(i7) {
    this.viewModel.location = i7;
  }
  get view() {
    return this.viewModel.view;
  }
  set view(i7) {
    this.viewModel.view = i7;
  }
  get visible() {
    return this.viewModel.visible;
  }
  set visible(i7) {
    this.viewModel.visible = i7;
  }
  show(i7) {
    const { location: e10, promise: t7 } = i7 ?? {};
    e10 && (this.viewModel.location = e10), this.visible = true;
    const s6 = () => this.hide();
    t7 && t7.catch(() => {
    }).then(s6);
  }
  hide() {
    this.visible = false;
  }
  render() {
    const { visible: i7 } = this, { screenLocation: e10 } = this.viewModel, t7 = !!e10, s6 = i7 && t7, o5 = !i7 && t7, r4 = { [c3.spinnerStart]: s6, [c3.spinnerFinish]: o5 }, n9 = this._getPositionStyles();
    return n2("div", { class: this.classes(c3.base, r4), styles: n9 });
  }
  _visibleChange(i7) {
    if (i7) return void (this.viewModel.screenLocationEnabled = true);
    const t7 = A(this._animationDelay);
    this._animationPromise = t7, t7.catch(() => {
    }).then(() => {
      this._animationPromise === t7 && (this.viewModel.screenLocationEnabled = false, this._animationPromise = null);
    });
  }
  _getPositionStyles() {
    const { screenLocation: i7, view: e10 } = this.viewModel;
    if (null == e10 || null == i7) return {};
    const { padding: t7 } = e10;
    return { left: i7.x - t7.left + "px", top: i7.y - t7.top + "px" };
  }
};
r([m()], p4.prototype, "location", null), r([m()], p4.prototype, "view", null), r([m({ type: p3 })], p4.prototype, "viewModel", void 0), r([m()], p4.prototype, "visible", null), p4 = r([a("esri.widgets.Spinner")], p4);
var h = p4;

// node_modules/@arcgis/core/widgets/Features/css.js
var e7 = "esri-features";
var n7 = { icon: `${e7}__icon`, actionImage: `${e7}__action-image`, base: e7, container: `${e7}__container`, contentContainer: `${e7}__content-container`, contentFeature: `${e7}__content-feature`, flowItemCollapsed: `${e7}__flow-item--collapsed`, header: `${e7}__header`, footer: `${e7}__footer`, featureMenuObserver: `${e7}__feature-menu-observer`, actionExit: `${e7}__action--exit`, loader: `${e7}__loader`, featuresHeading: `${e7}__heading`, paginationActionBar: `${e7}__pagination-action-bar`, paginationPrevious: `${e7}__pagination-previous`, paginationNext: `${e7}__pagination-next` };

// node_modules/@arcgis/core/widgets/Popup/actions.js
var i5 = V.ofType({ key: "type", defaultKeyValue: "button", base: p2, typeMap: { button: c, toggle: a2 } });
var n8 = new c({ icon: "magnifying-glass-plus", id: "zoom-to-feature", title: "{messages.zoom}", className: i4.zoomInMagnifyingGlass });
var r3 = new c({ icon: "trash", id: "remove-selected-feature", title: "{messages.remove}", className: i4.trash });
var l3 = new c({ icon: "magnifying-glass-plus", id: "zoom-to-clustered-features", title: "{messages.zoom}", className: i4.zoomInMagnifyingGlass });
var m2 = new a2({ icon: "table", id: "browse-clustered-features", title: "{messages.browseClusteredFeatures}", className: i4.table, value: false });

// node_modules/@arcgis/core/widgets/Features/FeaturesDrillIn.js
var d4 = n8.clone();
var u2 = class extends B {
  constructor(e10, t7) {
    super(e10, t7), this.messages = null, this.closed = false, this.closable = true, this._handleOpenFeature = (e11) => {
      this.emit("open-feature", { feature: e11 });
    }, this._handleZoomToFeature = (e11) => {
      this.emit("zoom-to-feature", { featureWidget: e11 });
    };
  }
  loadDependencies() {
    return r2({ action: () => import("./calcite-action-OHJOS7FE.js"), "action-bar": () => import("./calcite-action-bar-6SMANTVI.js"), "action-group": () => import("./calcite-action-group-CBAGS7H5.js"), "flow-item": () => import("./calcite-flow-item-D7762FXE.js") });
  }
  render() {
    const { flowItems: e10 } = this, t7 = e10 == null ? void 0 : e10.toArray();
    return n2(i2, null, t7 == null ? void 0 : t7.map((e11) => this._renderFlowItem(e11)));
  }
  _handleCloseClick() {
    this.emit("close");
  }
  _handleExitClick() {
    this.emit("exit");
  }
  _handleDrillInBackClick() {
    var _a;
    const e10 = (_a = this.flowItems) == null ? void 0 : _a.pop();
    e10 && ("showAllEnabled" in e10.viewModel && (e10.viewModel.showAllEnabled = false), e10 && (e10.viewModel = null, e10.destroy()));
  }
  _getExitMessage(e10) {
    switch (e10.flowType) {
      case "feature":
      case "feature-association":
        return "";
      case "feature-relationship":
        return this.messages.exitRelatedRecords;
      case "feature-utility-network-associations":
      case "feature-utility-network-association-type":
        return this.messages.exitAssociations;
    }
  }
  _renderFlowItem(e10) {
    const { messages: t7, closable: i7, closed: o5 } = this, a5 = "graphic" in e10 && !e10.isTable, r4 = "feature-association" === e10.flowType, c6 = this._getExitMessage(e10), l8 = t7.selectFeature;
    return n2("calcite-flow-item", { bind: this, closable: i7, closed: o5, description: this._getDrillInFlowItemDescription(e10), heading: e10.title ?? "", key: `flow-item-${e10.viewModel.uid}`, onCalciteFlowItemBack: (e11) => {
      e11.preventDefault(), this._handleDrillInBackClick();
    }, onCalciteFlowItemClose: this._handleCloseClick }, n2("calcite-action", { appearance: "transparent", bind: this, class: n7.actionExit, icon: "move-up", key: "exit-action", onclick: this._handleExitClick, slot: "header-actions-start", text: c6, title: c6 }), a5 ? n2("calcite-action", { appearance: "transparent", bind: this, icon: "zoom-to-object", key: "open-feature-action", onclick: () => this._handleOpenFeature(e10), slot: "header-actions-end", text: l8, title: l8 }) : null, r4 ? n2("calcite-action-bar", { expandDisabled: true, expanded: true, key: "header-action-bar", scale: "s", slot: "action-bar" }, n2("calcite-action-group", { overlayPositioning: "fixed", scale: "s" }, this._renderDefaultActions(e10))) : null, n2("div", { class: n7.container }, e10.render()));
  }
  _renderDefaultActions(e10) {
    const t7 = this._getActionTitle(d4);
    return n2("calcite-action", { active: d4.active, appearance: "solid", bind: this, "data-action-uid": d4.uid, disabled: d4.disabled, icon: d4.icon ?? "question", indicator: d4.indicator, key: `action-${d4.uid}`, loading: d4.active, onclick: () => this._handleZoomToFeature(e10), scale: "s", text: t7, textEnabled: true, title: t7 });
  }
  _getActionTitle(e10) {
    const { messages: t7 } = this, { id: i7 } = e10, o5 = e10.title ?? "";
    return "zoom-to-feature" === i7 ? s2(o5, { messages: t7 }) : o5;
  }
  _getDrillInFlowItemDescription(e10) {
    switch (e10.flowType) {
      case "feature":
      case "feature-association":
      case "feature-utility-network-associations":
        return e10.viewModel.description ?? "";
      case "feature-relationship":
        return e10.featureCountDescription;
      case "feature-utility-network-association-type":
        return e10.description ?? "";
    }
  }
};
r([m()], u2.prototype, "flowItems", void 0), r([m(), e("esri/widgets/Features/t9n/Features")], u2.prototype, "messages", void 0), r([m()], u2.prototype, "closed", void 0), r([m()], u2.prototype, "closable", void 0), u2 = r([a("esri.widgets.Features.FeaturesDrillIn")], u2);
var m3 = u2;

// node_modules/@arcgis/core/layers/LayerConstants.js
var o3 = "OBJECTID";

// node_modules/@arcgis/core/widgets/Legend/styles/support/relationshipUtils.js
var b3 = "esri-relationship-ramp";
var u3 = `${b3}--diamond`;
var c4 = `${b3}--square`;
var p5 = { diamondContainer: `${u3}__container`, diamondLeftCol: `${u3}__left-column`, diamondRightCol: `${u3}__right-column`, diamondMidCol: `${u3}__middle-column`, diamondMidColLabel: `${u3}__middle-column--label`, diamondMidColRamp: `${u3}__middle-column--ramp`, squareTable: `${c4}__table`, squareTableRow: `${c4}__table-row`, squareTableCell: `${c4}__table-cell`, squareTableLabel: `${c4}__table-label`, squareTableLabelLeftBottom: `${c4}__table-label--left-bottom`, squareTableLabelRightBottom: `${c4}__table-label--right-bottom`, squareTableLabelLeftTop: `${c4}__table-label--left-top`, squareTableLabelRightTop: `${c4}__table-label--right-top` };

// node_modules/@arcgis/core/symbols/support/symbolUtils.js
function k3(e10) {
  return e10 && "opacity" in e10 ? e10.opacity * k3(e10.parent) : 1;
}
async function L2(t7, l8) {
  var _a;
  if (!t7) return;
  const a5 = t7.sourceLayer, i7 = (null != l8 && l8.useSourceLayer ? a5 : t7.layer) ?? a5, s6 = k3(i7);
  if (null != t7.symbol && (null == l8 || true !== l8.ignoreGraphicSymbol)) {
    const e10 = "web-style" === t7.symbol.type ? await N2(t7.symbol, { ...l8, cache: null != l8 ? l8.webStyleCache : null }) : t7.symbol.clone();
    return g(e10, null, s6), e10;
  }
  const u6 = (l8 == null ? void 0 : l8.renderer) ?? C2(i7);
  let f5 = u6 && "getSymbolAsync" in u6 ? await u6.getSymbolAsync(t7, l8) : null;
  if (!f5) return;
  if (f5 = "web-style" === f5.type ? await f5.fetchSymbol({ ...l8, cache: null != l8 ? l8.webStyleCache : null }) : f5.clone(), !u6 || !("visualVariables" in u6) || !((_a = u6.visualVariables) == null ? void 0 : _a.length)) return g(f5, null, s6), f5;
  if ("arcadeRequiredForVisualVariables" in u6 && u6.arcadeRequiredForVisualVariables && null == (l8 == null ? void 0 : l8.arcade)) {
    const t8 = { ...l8 };
    t8.arcade = await i3(), l8 = t8;
  }
  const { getColor: p8, getOpacity: h5, getAllSizes: y4, getRotationAngle: d6 } = await import("./visualVariableUtils-BBI5S5CS.js"), m5 = [], b4 = [], g3 = [], w6 = [];
  for (const e10 of u6.visualVariables) switch (e10.type) {
    case "color":
      m5.push(e10);
      break;
    case "opacity":
      b4.push(e10);
      break;
    case "rotation":
      w6.push(e10);
      break;
    case "size":
      e10.target || g3.push(e10);
  }
  const v4 = !!m5.length && m5[m5.length - 1], S4 = v4 ? p8(v4, t7, l8) : null, V3 = !!b4.length && b4[b4.length - 1];
  let L4 = V3 ? h5(V3, t7, l8) : null;
  if (null != s6 && (L4 = null != L4 ? L4 * s6 : s6), g(f5, S4, L4), g3.length) {
    const e10 = y4(g3, t7, l8);
    await R2(f5, e10);
  }
  for (const e10 of w6) D(f5, d6(e10, t7, l8), e10.axis);
  return f5;
}
function C2(e10) {
  if (e10) return "renderer" in e10 ? e10.renderer : void 0;
}

// node_modules/@arcgis/core/widgets/Popup/actionUtils.js
var c5 = "esri.widgets.Popup.PopupViewModel";
var u5 = () => n.getLogger(c5);
var l6 = (t7) => {
  const { event: o5, view: c6, viewModel: u6 } = t7, { action: l8 } = o5;
  if (!l8) return Promise.reject(new s("trigger-action:missing-arguments", "Event has no action"));
  const { disabled: d6, id: g3 } = l8;
  if (!g3) return Promise.reject(new s("trigger-action:invalid-action", "action.id is missing"));
  if (d6) return Promise.reject(new s("trigger-action:invalid-action", "Action is disabled"));
  if (g3 === n8.id) return f4(u6).catch(f);
  if (g3 === l3.id) return m4(u6);
  if (g3 === m2.id) return u6.browseClusterEnabled = !u6.browseClusterEnabled, u6.featureMenuOpen = u6.browseClusterEnabled, Promise.resolve();
  if (g3 === r3.id) {
    u6.visible = false;
    const { selectedFeature: t8 } = u6;
    if (!t8) return Promise.reject(new s(`trigger-action:${r3.id}`, "selectedFeature is required", { selectedFeature: t8 }));
    const { sourceLayer: r4 } = t8;
    return r4 ? r4.remove(t8) : c6 == null ? void 0 : c6.graphics.remove(t8), Promise.resolve();
  }
  return Promise.resolve();
};
function d5(e10) {
  const { selectedFeature: t7, location: r4, view: o5 } = e10;
  return o5 ? t7 ?? r4 ?? null : null;
}
function g2(e10) {
  var _a, _b;
  return !!e10 && e10.isAggregate && "cluster" === ((_b = (_a = e10.sourceLayer) == null ? void 0 : _a.featureReduction) == null ? void 0 : _b.type);
}
async function w5(e10, t7) {
  if ("3d" !== (t7 == null ? void 0 : t7.type) || !e10 || "esri.Graphic" !== e10.declaredClass) return true;
  const r4 = t7.getViewForGraphic(e10);
  if (r4 && "whenGraphicBounds" in r4) {
    let t8 = null;
    try {
      t8 = await r4.whenGraphicBounds(e10, { useViewElevation: true });
    } catch (o5) {
    }
    return !t8 || !t8.boundingBox || t8.boundingBox[0] === t8.boundingBox[3] && t8.boundingBox[1] === t8.boundingBox[4] && t8.boundingBox[2] === t8.boundingBox[5];
  }
  return true;
}
async function f4(t7, r4) {
  var _a, _b;
  const { location: n9, selectedFeature: a5, view: s6, zoomFactor: c6 } = t7;
  await ((_a = r4 == null ? void 0 : r4.viewModel) == null ? void 0 : _a.updateGeometry());
  const l8 = r4 == null ? void 0 : r4.graphic, g3 = (l8 == null ? void 0 : l8.geometry) ? l8 : d5(t7);
  if (!s6 || !g3) {
    const t8 = new s("zoom-to:invalid-target-or-view", "Cannot zoom to location without a target and view.", { target: g3, view: s6 });
    throw u5().error(t8), t8;
  }
  const f5 = s6.scale / c6, m5 = (l8 == null ? void 0 : l8.geometry) ?? ((_b = t7.selectedFeature) == null ? void 0 : _b.geometry) ?? n9, v4 = null != m5 && "point" === m5.type && await w5(l8 ?? a5, s6);
  n8.active = true, n8.disabled = true;
  try {
    await t7.zoomTo({ target: { target: g3, scale: v4 ? f5 : void 0 } });
  } catch (p8) {
    if (b(p8)) return;
    const t8 = new s("zoom-to:invalid-graphic", "Could not zoom to the location of the graphic.", { graphic: l8 ?? a5 });
    u5().error(t8);
  } finally {
    n8.active = false, n8.disabled = false, t7.zoomToLocation = null, v4 && (t7.location = m5);
  }
}
async function m4(t7) {
  const { selectedFeature: r4, view: o5 } = t7;
  if ("2d" !== (o5 == null ? void 0 : o5.type)) {
    const t8 = new s("zoomToCluster:invalid-view", "View must be 2d MapView.", { view: o5 });
    throw u5().error(t8), t8;
  }
  if (!r4 || !g2(r4)) {
    const t8 = new s("zoomToCluster:invalid-selectedFeature", "Selected feature must represent an aggregate/cluster graphic.", { selectedFeature: r4 });
    throw u5().error(t8), t8;
  }
  const [i7, a5] = await y2(o5, r4);
  l3.active = true, l3.disabled = true;
  const { extent: s6 } = await i7.queryExtent(a5);
  s6 && await t7.zoomTo({ target: s6 }), l3.active = false, l3.disabled = false;
}
async function v3(e10) {
  const { view: t7, selectedFeature: r4 } = e10;
  if (!t7 || !r4) return;
  const [o5, i7] = await y2(t7, r4), { extent: n9 } = await o5.queryExtent(i7);
  e10.selectedClusterBoundaryFeature.geometry = n9, t7.graphics.add(e10.selectedClusterBoundaryFeature);
}
async function p6(e10) {
  const { selectedFeature: t7, view: r4 } = e10;
  if (!r4 || !t7) return;
  const [o5, i7] = await y2(r4, t7);
  m2.active = true, m2.disabled = true;
  const { features: n9 } = await o5.queryFeatures(i7);
  m2.active = false, m2.disabled = false, m2.value = true, e10 == null ? void 0 : e10.open({ features: [t7].concat(n9), featureMenuOpen: true });
}
async function y2(e10, t7) {
  const r4 = await e10.whenLayerView(t7.sourceLayer), o5 = r4.createQuery(), i7 = t7.getObjectId();
  return o5.aggregateIds = null != i7 ? [i7] : [], [r4, o5];
}
function h4(e10) {
  m2.value = false;
  const t7 = e10.features.filter((e11) => g2(e11));
  t7.length && (e10.features = t7);
}

// node_modules/@arcgis/core/widgets/Features/FeaturesViewModel.js
var H = "location-scale-handle";
var B2 = () => [n8.clone()];
var U = () => [l3.clone(), m2.clone()];
var G = null;
function Z2(e10, t7) {
  return "building-scene" === e10 || "2d" === t7 && ("map-image" === e10 || "tile" === e10 || "imagery" === e10 || "imagery-tile" === e10);
}
var z = class extends t2(l2) {
  constructor(e10) {
    super(e10), this._pendingPromises = new s3(), this._fetchFeaturesController = null, this._highlightSelectedFeaturePromise = null, this._highlightActiveFeaturePromise = null, this._selectedClusterFeature = null, this.actions = new i5(), this.activeFeature = null, this.autoCloseEnabled = false, this.browseClusterEnabled = false, this.content = null, this.defaultPopupTemplateEnabled = false, this.featurePage = null, this.featuresPerPage = 20, this.featureMenuOpen = false, this.featureViewModelAbilities = null, this.featureViewModels = [], this.highlightEnabled = true, this.includeDefaultActions = true, this.selectedClusterBoundaryFeature = new d3({ symbol: new S({ outline: { width: 1.5, color: "cyan" }, style: "none" }) }), this.title = null, this.updateLocationEnabled = false, this.view = null, this.visible = false, this.zoomFactor = 4, this.zoomToLocation = null, this._debouncedLocationUpdate = k(async (e11) => {
      var _a, _b, _c, _d;
      const { spatialReference: t7 } = this, i7 = (_b = (_a = this.selectedFeature) == null ? void 0 : _a.geometry) == null ? void 0 : _b.type, s6 = this.location ?? e11;
      if (i7 && "mesh" !== i7 && t7 && s6 && this.selectedFeature) if ("point" !== i7) try {
        const e12 = this.selectedFeature;
        let i8 = e12.geometry;
        const r4 = this._getHighlightLayer(e12), o5 = e12.getObjectId();
        if (!r4 || !this.view) return;
        if (o5) {
          const e13 = (_c = this.view) == null ? void 0 : _c.allLayerViews.find((e14) => e14.layer.uid === r4.uid);
          if (!e13 || !("queryFeatures" in e13)) return;
          const s7 = e13.createQuery();
          s7.outSpatialReference = t7, s7.objectIds = [o5], s7.returnGeometry = true;
          const { features: a5 } = await e13.queryFeatures(s7);
          i8 = (_d = a5[0]) == null ? void 0 : _d.geometry;
        }
        if (!i8 || "mesh" === i8.type) return;
        if (i8 = K(i8, t7), G || (G = await import("./geometryEngineAsync-VAMRWGCS.js")), !await G.intersects(i8, s6)) {
          const t8 = (await G.nearestCoordinate(i8, s6)).coordinate ?? s6;
          this.selectedFeature === e12 && (this.location = t8);
        }
      } catch (o5) {
        b(o5) || n.getLogger(this).error(o5);
      }
      else this.location = n5(this.selectedFeature.geometry) ?? s6;
    });
  }
  initialize() {
    this.addHandles([this.on("view-change", () => this._autoClose()), d2(() => [this.highlightEnabled, this.selectedFeature, this.visible, this.view], () => this._highlightSelectedFeature()), d2(() => [this.highlightEnabled, this.activeFeature, this.visible, this.view], () => this._highlightActiveFeature()), d2(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.animation) == null ? void 0 : _b.state;
    }, (e10) => this._animationStateChange(e10)), d2(() => this.location, (e10) => this._locationChange(e10)), d2(() => this.selectedFeature, (e10) => this._selectedFeatureChange(e10)), d2(() => [this.selectedFeatureIndex, this.featureCount, this.featuresPerPage], () => this._selectedFeatureIndexChange()), d2(() => [this.featurePage, this.selectedFeatureIndex, this.featureCount, this.featuresPerPage, this.featureViewModels], () => this._setGraphicOnFeatureViewModels()), d2(() => this.featureViewModels, () => this._featureViewModelsChange()), this.on("trigger-action", (e10) => l6({ event: e10, viewModel: this, view: this.view })), p(() => !this.waitingForResult, () => this._waitingForResultChange(), C), d2(() => [this.features, this.map, this.spatialReference, this.timeZone], () => this._updateFeatureVMs()), d2(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.scale;
    }, () => this._viewScaleChange()), p(() => !this.visible, () => this.browseClusterEnabled = false), d2(() => this.browseClusterEnabled, (e10) => e10 ? this.enableClusterBrowsing() : this.disableClusterBrowsing())]);
  }
  destroy() {
    this._cancelFetchingFeatures(), this._pendingPromises.clear(), this.browseClusterEnabled = false, this.view = null, this.map = null, this.spatialReference = null, this.timeZone = null;
  }
  get active() {
    return !(!this.visible || this.waitingForResult);
  }
  get allActions() {
    const e10 = this._get("allActions") || new i5();
    e10.removeAll();
    const { actions: t7, defaultActions: i7, defaultPopupTemplateEnabled: s6, includeDefaultActions: r4, selectedFeature: o5 } = this, a5 = r4 ? i7.concat(t7) : t7, n9 = o5 && ("function" == typeof o5.getEffectivePopupTemplate && o5.getEffectivePopupTemplate(s6) || o5.popupTemplate), l8 = n9 == null ? void 0 : n9.actions, u6 = (n9 == null ? void 0 : n9.overwriteActions) ? l8 : (l8 == null ? void 0 : l8.concat(a5)) ?? a5;
    return u6 == null ? void 0 : u6.filter(Boolean).forEach((t8) => e10.add(t8)), e10;
  }
  get defaultActions() {
    const e10 = this._get("defaultActions") || new i5();
    return e10.removeAll(), e10.addMany(g2(this.selectedFeature) ? U() : B2()), e10;
  }
  get featureCount() {
    return this.features.length;
  }
  set features(e10) {
    const t7 = e10 || [];
    this._set("features", t7);
    const { pendingPromisesCount: i7, promiseCount: s6, selectedFeatureIndex: r4 } = this, o5 = s6 && t7.length;
    o5 && i7 && -1 === r4 ? this.selectedFeatureIndex = 0 : o5 && -1 !== r4 || (this.selectedFeatureIndex = t7.length ? 0 : -1);
  }
  set location(e10) {
    var _a, _b;
    let t7 = e10;
    const i7 = (_a = this.spatialReference) == null ? void 0 : _a.isWebMercator, s6 = (_b = e10 == null ? void 0 : e10.spatialReference) == null ? void 0 : _b.isWGS84;
    s6 && i7 && (t7 = R(e10)), this._set("location", t7);
  }
  get map() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.map) ?? null;
  }
  set map(e10) {
    this._override("map", e10);
  }
  get pendingPromisesCount() {
    return this._pendingPromises.size;
  }
  get promiseCount() {
    return this.promises.length;
  }
  get promises() {
    return this._get("promises") || [];
  }
  set promises(e10) {
    this._pendingPromises.clear(), this.features = [], Array.isArray(e10) && e10.length ? (this._set("promises", e10), (e10 = e10.slice()).forEach((e11) => this._pendingPromises.add(e11)), e10.reduce((e11, t7) => e11.finally(() => t7.then((e12) => {
      this._pendingPromises.has(t7) && this._updateFeatures(e12);
    }).finally(() => this._pendingPromises.delete(t7)).catch(() => {
    })), Promise.resolve())) : this._set("promises", []);
  }
  get selectedFeature() {
    const { features: e10, selectedFeatureIndex: t7 } = this;
    if (-1 === t7) return null;
    return e10[t7] || null;
  }
  get selectedFeatureIndex() {
    const e10 = this._get("selectedFeatureIndex");
    return "number" == typeof e10 ? e10 : -1;
  }
  set selectedFeatureIndex(e10) {
    const { featureCount: t7 } = this;
    e10 = isNaN(e10) || e10 < -1 || !t7 ? -1 : (e10 + t7) % t7, this.activeFeature = null, this._set("selectedFeatureIndex", e10);
  }
  get selectedFeatureViewModel() {
    return this.featureViewModels[this.selectedFeatureIndex] || null;
  }
  get spatialReference() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.spatialReference) ?? null;
  }
  set spatialReference(e10) {
    this._override("spatialReference", e10);
  }
  get state() {
    const { view: e10, map: t7 } = this;
    return e10 ? e10.ready ? "ready" : "disabled" : t7 ? "ready" : "disabled";
  }
  get timeZone() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.timeZone) ?? o2;
  }
  set timeZone(e10) {
    this._overrideIfSome("timeZone", e10);
  }
  get waitingForContents() {
    return this.featureViewModels.some((e10) => e10.waitingForContent);
  }
  get waitingForResult() {
    return !(!(!!this._fetchFeaturesController || this.pendingPromisesCount > 0) || 0 !== this.featureCount);
  }
  centerAtLocation() {
    const { view: e10 } = this, t7 = d5(this);
    return t7 && e10 ? this.callGoTo({ target: { target: t7, scale: e10.scale } }) : Promise.reject(new s("center-at-location:invalid-target-or-view", "Cannot center at a location without a target and view.", { target: t7, view: e10 }));
  }
  zoomTo(e10) {
    return this.callGoTo(e10);
  }
  clear() {
    this.set({ promises: [], features: [], content: null, title: null, location: null, activeFeature: null });
  }
  fetchFeatures(e10, t7) {
    var _a;
    const { view: i7 } = this;
    if (!i7 || !e10) throw new s("fetch-features:invalid-screenpoint-or-view", "Cannot fetch features without a screenPoint and view.", { screenPoint: e10, view: i7 });
    return i7.fetchPopupFeatures(e10, { pointerType: (_a = t7 == null ? void 0 : t7.event) == null ? void 0 : _a.pointerType, defaultPopupTemplateEnabled: this.defaultPopupTemplateEnabled, signal: t7 == null ? void 0 : t7.signal });
  }
  open(e10) {
    const t7 = { updateLocationEnabled: false, promises: [], fetchFeatures: false, ...e10, visible: true }, { fetchFeatures: i7 } = t7;
    delete t7.fetchFeatures, i7 && this._setFetchFeaturesPromises(t7.location);
    const s6 = ["actionsMenuOpen", "collapsed"];
    for (const r4 of s6) delete t7[r4];
    this.set(t7);
  }
  triggerAction(e10) {
    const t7 = this.allActions.at(e10);
    t7 && !t7.disabled && this.emit("trigger-action", { action: t7 });
  }
  next() {
    return this.selectedFeatureIndex++, this;
  }
  previous() {
    return this.selectedFeatureIndex--, this;
  }
  disableClusterBrowsing() {
    h4(this), this._clearBrowsedClusterGraphics();
  }
  async enableClusterBrowsing() {
    const { view: e10, selectedFeature: t7 } = this;
    "2d" === (e10 == null ? void 0 : e10.type) ? g2(t7) ? (await v3(this), await p6(this)) : n.getLogger(this).warn("enableClusterBrowsing:invalid-selectedFeature: Selected feature must represent an aggregate/cluster graphic.", t7) : n.getLogger(this).warn("enableClusterBrowsing:invalid-view: View must be 2d MapView.", t7);
  }
  handleViewClick(e10) {
    this._fetchFeaturesAndOpen(e10);
  }
  _animationStateChange(e10) {
    this.zoomToLocation || (n8.disabled = "waiting-for-target" === e10);
  }
  _clearBrowsedClusterGraphics() {
    var _a, _b;
    const e10 = [this.selectedClusterBoundaryFeature, this._selectedClusterFeature].filter(F);
    (_b = (_a = this.view) == null ? void 0 : _a.graphics) == null ? void 0 : _b.removeMany(e10), this._selectedClusterFeature = null, this.selectedClusterBoundaryFeature.geometry = null;
  }
  _viewScaleChange() {
    if (g2(this.selectedFeature)) return this.browseClusterEnabled = false, this.visible = false, void this.clear();
    this.browseClusterEnabled && (this.features = this.selectedFeature ? [this.selectedFeature] : []);
  }
  _locationChange(e10) {
    const { selectedFeature: t7, updateLocationEnabled: i7, view: s6 } = this;
    s6 && i7 && e10 && (!t7 || t7.geometry) && this.centerAtLocation();
  }
  _selectedFeatureIndexChange() {
    this.featurePage = this.featureCount > 1 ? Math.floor(this.selectedFeatureIndex / this.featuresPerPage) + 1 : null;
  }
  _featureViewModelsChange() {
    this.featurePage = this.featureCount > 1 ? 1 : null;
  }
  _setGraphicOnFeatureViewModels() {
    const { features: e10, featureCount: t7, featurePage: i7, featuresPerPage: s6, featureViewModels: r4 } = this;
    if (null === i7) return;
    const o5 = ((i7 - 1) * s6 + t7) % t7, a5 = o5 + s6;
    r4.slice(o5, a5).forEach((t8, i8) => {
      t8 && (t8.graphic ?? (t8.graphic = e10[o5 + i8]));
    });
  }
  async _selectedFeatureChange(e10) {
    var _a, _b;
    const { location: t7, updateLocationEnabled: i7, view: s6 } = this;
    if (!e10 || !s6) return;
    if (this.browseClusterEnabled) {
      if (this._selectedClusterFeature && (s6.graphics.remove(this._selectedClusterFeature), this._selectedClusterFeature = null), g2(e10)) return;
      return e10.symbol = await L2(e10), this._selectedClusterFeature = e10, void s6.graphics.add(this._selectedClusterFeature);
    }
    const r4 = (_a = e10.sourceLayer) == null ? void 0 : _a.type;
    if ("map-image" !== r4 && "imagery" !== r4 && "imagery-tile" !== r4 || (e10.symbol = await L2(e10)), !i7 && t7 || !e10.geometry) {
      if (i7 && !e10.geometry) {
        await this.centerAtLocation();
        const e11 = (_b = s6.center) == null ? void 0 : _b.clone();
        e11 && (this.location = e11);
      }
    } else this.location = n5(e10.geometry);
  }
  _waitingForResultChange() {
    !this.featureCount && this.promises && (this.visible = false);
  }
  async _setFetchFeaturesPromises(e10) {
    const { pendingFeatures: t7 } = await this._fetchFeaturesWithController({ mapPoint: e10 });
    this.promises = t7;
  }
  _destroyFeatureVMs() {
    this.featureViewModels.forEach((e10) => e10 && !e10.destroyed && e10.destroy()), this._set("featureViewModels", []);
  }
  _updateFeatureVMs() {
    const { selectedFeature: e10, features: t7, featureViewModels: i7, view: s6, spatialReference: r4, map: o5, timeZone: a5, location: n9 } = this;
    if (g2(e10) || (this.browseClusterEnabled = false), this._destroyFeatureVMs(), !(t7 == null ? void 0 : t7.length)) return;
    const l8 = i7.slice(), u6 = [];
    t7.forEach((t8, i8) => {
      if (!t8) return;
      let h5 = null;
      if (l8.some((e11, i9) => (e11 && e11.graphic === t8 && (h5 = e11, l8.splice(i9, 1)), !!h5)), h5) u6[i8] = h5;
      else {
        const l9 = new re({ abilities: this.featureViewModelAbilities, defaultPopupTemplateEnabled: this.defaultPopupTemplateEnabled, spatialReference: r4, graphic: t8 === e10 ? t8 : null, location: n9, map: o5, view: s6, timeZone: a5 });
        u6[i8] = l9;
      }
    }), l8.forEach((e11) => e11 && !e11.destroyed && e11.destroy()), this._set("featureViewModels", u6);
  }
  async _getScreenPoint(e10, t7) {
    const { spatialReference: i7, view: s6 } = this;
    if (!s6) return null;
    await (s6 == null ? void 0 : s6.when());
    const r4 = e10 == null ? void 0 : e10.spatialReference;
    return r4 && i7 ? (await N(r4, i7, null, t7), s6.toScreen(e10)) : null;
  }
  _cancelFetchingFeatures() {
    const e10 = this._fetchFeaturesController;
    e10 && e10.abort(), this._fetchFeaturesController = null;
  }
  async _projectScreenPointAndFetchFeatures({ mapPoint: e10, screenPoint: t7, event: i7, signal: s6 }) {
    return this.fetchFeatures(t7 ?? await this._getScreenPoint(e10 ?? this.location, { signal: s6 }), { signal: s6, event: i7 });
  }
  _fetchFeaturesWithController({ mapPoint: e10, screenPoint: t7, event: i7 }) {
    this._cancelFetchingFeatures();
    const s6 = new AbortController(), { signal: r4 } = s6;
    this._fetchFeaturesController = s6;
    const o5 = this._projectScreenPointAndFetchFeatures({ mapPoint: e10, screenPoint: t7, signal: r4, event: i7 });
    return o5.catch(() => {
    }).then(() => {
      this._fetchFeaturesController = null;
    }), o5;
  }
  async _fetchFeaturesAndOpen(e10) {
    const { mapPoint: t7, screenPoint: i7 } = e10, { view: s6 } = this;
    this.removeHandles(H), this.addHandles([d2(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.scale;
    }, () => this._debouncedLocationUpdate(t7).catch((e11) => {
      b(e11) || n.getLogger(this).error(e11);
    })), p(() => !this.visible, () => {
      this.removeHandles(H);
    }, { once: true })], H);
    const { pendingFeatures: o5 } = await this._fetchFeaturesWithController({ mapPoint: t7, screenPoint: i7, event: e10 });
    (s6 == null ? void 0 : s6.popup) && "open" in s6.popup && s6.popup.open({ location: t7 ?? void 0, promises: o5 });
  }
  _autoClose() {
    this.autoCloseEnabled && (this.visible = false);
  }
  async _getLayerView(e10, t7) {
    return await e10.when(), e10.whenLayerView(t7);
  }
  _getHighlightLayer(e10) {
    const { layer: t7, sourceLayer: i7 } = e10;
    return i7 && "layer" in i7 && i7.layer ? i7.layer : "map-notes" === (i7 == null ? void 0 : i7.type) || "subtype-group" === (i7 == null ? void 0 : i7.type) ? i7 : t7;
  }
  _getHighlightTarget(e10, t7, i7) {
    if (Z2(t7.type, i7)) return e10;
    const s6 = e10.getObjectId();
    if (null != s6) return s6;
    const r4 = "imagery" === t7.type ? void 0 : "objectIdField" in t7 ? t7.objectIdField || o3 : null, o5 = e10.attributes;
    return o5 && r4 && o5[r4] || e10;
  }
  _mapIncludesLayer(e10) {
    var _a, _b;
    return !!((_b = (_a = this.map) == null ? void 0 : _a.allLayers) == null ? void 0 : _b.includes(e10));
  }
  async _highlightActiveFeature() {
    const e10 = "highlight-active-feature";
    this.removeHandles(e10);
    const { highlightEnabled: t7, view: i7, activeFeature: s6, visible: r4 } = this;
    if (!(s6 && i7 && t7 && r4)) return;
    const o5 = this._getHighlightLayer(s6);
    if (!(o5 && o5 instanceof f2 && this._mapIncludesLayer(o5))) return;
    const a5 = this._getLayerView(i7, o5);
    this._highlightActiveFeaturePromise = a5;
    const n9 = await a5;
    if (!(n9 && n3(n9) && this._highlightActiveFeaturePromise === a5 && this.activeFeature && this.highlightEnabled)) return;
    const l8 = n9.highlight(this._getHighlightTarget(s6, o5, i7.type));
    this.addHandles(l8, e10);
  }
  async _highlightSelectedFeature() {
    const e10 = "highlight-selected-feature";
    this.removeHandles(e10);
    const { selectedFeature: t7, highlightEnabled: i7, view: s6, visible: r4 } = this;
    if (!(t7 && s6 && i7 && r4)) return;
    const o5 = this._getHighlightLayer(t7);
    if (!(o5 && o5 instanceof f2 && this._mapIncludesLayer(o5))) return;
    const a5 = this._getLayerView(s6, o5);
    this._highlightSelectedFeaturePromise = a5;
    const n9 = await a5;
    if (!(n9 && n3(n9) && this._highlightSelectedFeaturePromise === a5 && this.selectedFeature && this.highlightEnabled && this.visible)) return;
    const l8 = n9.highlight(this._getHighlightTarget(t7, o5, s6.type));
    this.addHandles(l8, e10);
  }
  _updateFeatures(e10) {
    const { features: t7 } = this, i7 = e10.filter((e11) => !t7.includes(e11));
    (i7 == null ? void 0 : i7.length) && (this.features = t7.concat(i7));
  }
};
r([m()], z.prototype, "_fetchFeaturesController", void 0), r([m({ type: i5 })], z.prototype, "actions", void 0), r([m({ readOnly: true })], z.prototype, "active", null), r([m()], z.prototype, "activeFeature", void 0), r([m({ readOnly: true })], z.prototype, "allActions", null), r([m()], z.prototype, "autoCloseEnabled", void 0), r([m()], z.prototype, "browseClusterEnabled", void 0), r([m()], z.prototype, "content", void 0), r([m({ type: i5, readOnly: true })], z.prototype, "defaultActions", null), r([m({ type: Boolean })], z.prototype, "defaultPopupTemplateEnabled", void 0), r([m({ readOnly: true })], z.prototype, "featureCount", null), r([m()], z.prototype, "featurePage", void 0), r([m({ value: [] })], z.prototype, "features", null), r([m()], z.prototype, "featuresPerPage", void 0), r([m()], z.prototype, "featureMenuOpen", void 0), r([m()], z.prototype, "featureViewModelAbilities", void 0), r([m({ readOnly: true })], z.prototype, "featureViewModels", void 0), r([m()], z.prototype, "highlightEnabled", void 0), r([m()], z.prototype, "includeDefaultActions", void 0), r([m({ type: j })], z.prototype, "location", null), r([m()], z.prototype, "map", null), r([m({ readOnly: true })], z.prototype, "pendingPromisesCount", null), r([m({ readOnly: true })], z.prototype, "promiseCount", null), r([m()], z.prototype, "promises", null), r([m({ readOnly: true })], z.prototype, "selectedClusterBoundaryFeature", void 0), r([m({ value: null, readOnly: true })], z.prototype, "selectedFeature", null), r([m({ value: -1 })], z.prototype, "selectedFeatureIndex", null), r([m({ readOnly: true })], z.prototype, "selectedFeatureViewModel", null), r([m({ readOnly: true })], z.prototype, "state", null), r([m()], z.prototype, "timeZone", null), r([m()], z.prototype, "title", void 0), r([m()], z.prototype, "updateLocationEnabled", void 0), r([m()], z.prototype, "view", void 0), r([m()], z.prototype, "visible", void 0), r([m({ readOnly: true })], z.prototype, "waitingForContents", null), r([m({ readOnly: true })], z.prototype, "waitingForResult", null), r([m()], z.prototype, "zoomFactor", void 0), r([m()], z.prototype, "zoomToLocation", void 0), r([m()], z.prototype, "centerAtLocation", null), z = r([a("esri.widgets.Features.FeaturesViewModel")], z);
var W2 = z;

// node_modules/@arcgis/core/widgets/Features/FeaturesVisibleElements.js
var s4 = class extends b2 {
  constructor() {
    super(...arguments), this.actionBar = true, this.closeButton = true, this.collapseButton = false, this.featureNavigation = true, this.featureListLayerTitle = true, this.flow = true, this.heading = true, this.spinner = true;
  }
};
r([m({ type: Boolean, nonNullable: true })], s4.prototype, "actionBar", void 0), r([m({ type: Boolean, nonNullable: true })], s4.prototype, "closeButton", void 0), r([m({ type: Boolean, nonNullable: true })], s4.prototype, "collapseButton", void 0), r([m({ type: Boolean, nonNullable: true })], s4.prototype, "featureNavigation", void 0), r([m({ type: Boolean, nonNullable: true })], s4.prototype, "featureListLayerTitle", void 0), r([m({ type: Boolean, nonNullable: true })], s4.prototype, "flow", void 0), r([m({ type: Boolean, nonNullable: true })], s4.prototype, "heading", void 0), r([m({ type: Boolean, nonNullable: true })], s4.prototype, "spinner", void 0), s4 = r([a("esri.widgets.Features.FeaturesVisibleElements")], s4);
var l7 = s4;

// node_modules/@arcgis/core/widgets/Features.js
var E2 = "selected-index";
var L3 = 0;
var W3 = "features-spinner";
function S3(e10) {
  return (e10 == null ? void 0 : e10.declaredClass.startsWith("esri.layers.")) ?? false;
}
var B3 = class extends n4(B) {
  constructor(e10, i7) {
    super(e10, i7), this._featureMenuIntersectionObserverCallback = ([e11]) => {
      (e11 == null ? void 0 : e11.isIntersecting) && null != this.viewModel.featurePage && this.viewModel.featurePage++;
    }, this._featureMenuIntersectionObserver = new IntersectionObserver(this._featureMenuIntersectionObserverCallback, { root: window.document }), this._featureMenuIntersectionObserverNode = null, this._spinner = null, this._feature = null, this._focusAbortController = null, this._drillInFlowItems = new V(), this._drillInWidget = new m3({ flowItems: this._drillInFlowItems }), this._rootFlowItemNode = null, this._featureMenuViewportNode = null, this._actionBarMenuNode = null, this.collapsed = false, this.featureNavigationTop = false, this.headerActions = new i5(), this.headingLevel = 2, this.messages = null, this.messagesCommon = null, this.responsiveActionsEnabled = false, this.viewModel = new W2(), this.visibleElements = new l7(), this._renderAction = (e11, t7) => {
      const i8 = this._getActionTitle(e11), { type: o5, active: s6, uid: n9, disabled: r4, indicator: l8 } = e11;
      return e11.visible ? n2("calcite-action", { active: "toggle" === o5 && e11.value, appearance: "solid", bind: this, "data-action-uid": n9, disabled: r4, icon: this._getActionIcon(e11), indicator: l8, key: `action-${t7}`, loading: s6, onclick: this._triggerAction, scale: "s", text: i8, title: this._hideActionText ? i8 : void 0 }, this._getFallbackIcon(e11)) : null;
    }, this._openFeatureMenu = () => {
      this.featureMenuOpen = true, this._focusFlowItemNode("menu-flow-item");
    }, this._previousFeature = () => {
      this.viewModel.selectedFeatureIndex--;
    }, this._nextFeature = () => {
      this.viewModel.selectedFeatureIndex++;
    }, this._handleFeatureMenuBack = () => {
      this.featureMenuOpen && (this._focusFlowItemNode("root-flow-item"), this.featureMenuOpen = false);
    }, this._displaySpinnerThrottled = e2(() => this._displaySpinner(), L3), this._addSelectedFeatureIndexHandle(), this.addHandles([this._displaySpinnerThrottled, d2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.active;
    }, () => this._toggleScreenLocationEnabled()), d2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.active;
    }, (e11) => this._drillInWidget.closed = !e11), d2(() => {
      var _a;
      return (_a = this.visibleElements) == null ? void 0 : _a.closeButton;
    }, (e11) => this._drillInWidget.closable = e11), d2(() => {
      var _a;
      return (_a = this.visibleElements) == null ? void 0 : _a.spinner;
    }, (e11) => this._spinnerEnabledChange(e11)), d2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.view;
    }, (e11, t7) => this._viewChange(e11, t7)), d2(() => {
      var _a, _b;
      return (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.ready;
    }, (e11, t7) => this._viewReadyChange(e11 ?? false, t7 ?? false)), d2(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.waitingForResult, (_b = this.viewModel) == null ? void 0 : _b.location];
    }, () => {
      this._hideSpinner(), this._displaySpinnerThrottled();
    }), d2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.screenLocation;
    }, () => this._closeOpenActionMenu()), d2(() => this.selectedFeatureWidget, () => this._destroyDrillInFlowItemWidgets()), d2(() => {
      var _a;
      const e11 = (_a = this.selectedFeatureWidget) == null ? void 0 : _a.viewModel;
      return [e11 == null ? void 0 : e11.title, e11 == null ? void 0 : e11.state];
    }, () => this._setTitleFromFeatureWidget()), d2(() => {
      var _a;
      const e11 = (_a = this.selectedFeatureWidget) == null ? void 0 : _a.viewModel;
      return [e11 == null ? void 0 : e11.content, e11 == null ? void 0 : e11.state];
    }, () => this._setContentFromFeatureWidget()), d2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.featureViewModels;
    }, () => this._featureMenuViewportScrollTop()), this._drillInWidget.on("close", () => this.close()), this._drillInWidget.on("exit", () => this._destroyDrillInFlowItemWidgets()), this._drillInWidget.on("open-feature", ({ feature: e11 }) => this._openRelatedFeature(e11)), this._drillInWidget.on("zoom-to-feature", ({ featureWidget: e11 }) => f4(this.viewModel, e11))]);
  }
  loadDependencies() {
    return r2({ action: () => import("./calcite-action-OHJOS7FE.js"), "action-bar": () => import("./calcite-action-bar-6SMANTVI.js"), "action-group": () => import("./calcite-action-group-CBAGS7H5.js"), button: () => import("./calcite-button-CIWFCC6E.js"), flow: () => import("./calcite-flow-JXR7J4E3.js"), "flow-item": () => import("./calcite-flow-item-D7762FXE.js"), list: () => import("./calcite-list-J46ETVO2.js"), "list-item": () => import("./calcite-list-item-XAMOLEZU.js"), "list-item-group": () => import("./calcite-list-item-group-2DIR7H42.js"), loader: () => import("./calcite-loader-GZNTWKUG.js") });
  }
  destroy() {
    var _a, _b, _c;
    this._destroyDrillInFlowItemWidgets(), this._destroySelectedFeatureWidget(), this._destroySpinner(), this._unobserveFeatureMenuObserver(), (_a = this._featureMenuIntersectionObserver) == null ? void 0 : _a.disconnect(), (_b = this._drillInWidget) == null ? void 0 : _b.destroy(), (_c = this._focusAbortController) == null ? void 0 : _c.abort();
  }
  get _hideActionText() {
    var _a;
    if (!this.responsiveActionsEnabled) return false;
    const e10 = (_a = this.view) == null ? void 0 : _a.widthBreakpoint;
    return "xsmall" === e10 || "small" === e10 || "medium" === e10;
  }
  get _featureNavigationVisible() {
    return this.viewModel.active && this.viewModel.featureCount > 1 && this.visibleElements.featureNavigation;
  }
  get _isCollapsed() {
    return this._collapseEnabled && this.collapsed;
  }
  get _collapseEnabled() {
    return this.visibleElements.collapseButton && !!this.title && !!this.content;
  }
  get active() {
    return this.viewModel.active;
  }
  get content() {
    return this.viewModel.content;
  }
  set content(e10) {
    this.viewModel.content = e10;
  }
  get icon() {
    return null;
  }
  get featureMenuOpen() {
    return this.viewModel.featureMenuOpen;
  }
  set featureMenuOpen(e10) {
    this.viewModel.featureMenuOpen = e10;
  }
  get features() {
    return this.viewModel.features;
  }
  set features(e10) {
    this.viewModel.features = e10;
  }
  get goToOverride() {
    return this.viewModel.goToOverride;
  }
  set goToOverride(e10) {
    this.viewModel.goToOverride = e10;
  }
  get location() {
    return this.viewModel.location;
  }
  set location(e10) {
    this.viewModel.location = e10;
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e10) {
    this._overrideIfSome("label", e10);
  }
  get map() {
    return this.viewModel.map;
  }
  set map(e10) {
    this.viewModel.map = e10;
  }
  get promises() {
    return this.viewModel.promises;
  }
  set promises(e10) {
    this.viewModel.promises = e10;
  }
  get selectedFeature() {
    return this.viewModel.selectedFeature;
  }
  get selectedDrillInFeature() {
    const e10 = Array.from(this._drillInFlowItems).at(-1);
    if (!e10) return null;
    const { flowType: t7 } = e10;
    return "feature-association" === t7 || "feature-relationship" === t7 ? e10.graphic ?? null : null;
  }
  get selectedFeatureIndex() {
    return this.viewModel.selectedFeatureIndex;
  }
  set selectedFeatureIndex(e10) {
    this.viewModel.selectedFeatureIndex = e10;
  }
  get selectedFeatureWidget() {
    const { _feature: e10, headingLevel: t7, _drillInFlowItems: i7, timeZone: o5, spatialReference: s6, map: n9 } = this, { selectedFeatureViewModel: r4 } = this.viewModel, l8 = { title: false };
    return r4 ? (e10 ? (e10.viewModel = r4, e10.visibleElements = l8) : this._feature = new W({ flowItems: i7, headingLevel: t7 + 1, timeZone: o5, spatialReference: s6, map: n9, viewModel: r4, visibleElements: l8 }), this._feature) : null;
  }
  get spatialReference() {
    return this.viewModel.spatialReference;
  }
  set spatialReference(e10) {
    this.viewModel.spatialReference = e10;
  }
  get title() {
    return this.viewModel.title;
  }
  set title(e10) {
    this.viewModel.title = e10;
  }
  get timeZone() {
    return this.viewModel.timeZone;
  }
  set timeZone(e10) {
    this.viewModel.timeZone = e10;
  }
  get updateLocationEnabled() {
    return this.viewModel.updateLocationEnabled;
  }
  set updateLocationEnabled(e10) {
    this.viewModel.updateLocationEnabled = e10;
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e10) {
    this.viewModel.view = e10;
  }
  get visible() {
    return this.viewModel.visible;
  }
  set visible(e10) {
    this.viewModel.visible = e10;
  }
  blur() {
    var _a;
    const { active: e10 } = this.viewModel;
    e10 ? (_a = this._rootFlowItemNode) == null ? void 0 : _a.blur() : n.getLogger(this).warn("Features can only be blurred when currently active.");
  }
  clear() {
    return this.viewModel.clear();
  }
  close() {
    this.viewModel.visible = false;
  }
  fetchFeatures(e10, t7) {
    return this.viewModel.fetchFeatures(e10, t7);
  }
  focus() {
    const { active: e10 } = this.viewModel;
    e10 ? this._focusFlowItemNode(this.featureMenuOpen ? "menu-flow-item" : "root-flow-item") : n.getLogger(this).warn("Features can only be focused when currently active.");
  }
  next() {
    return this.viewModel.next();
  }
  open(e10) {
    this.removeHandles(E2);
    const t7 = { collapsed: (e10 == null ? void 0 : e10.collapsed) ?? false };
    this.set(t7), this.viewModel.open(e10), this.addHandles(p(() => !this.viewModel.waitingForResult, () => this._addSelectedFeatureIndexHandle(), { once: true }));
  }
  previous() {
    return this.viewModel.previous();
  }
  triggerAction(e10) {
    return this.viewModel.triggerAction(e10);
  }
  render() {
    return n2("div", { bind: this, class: this.classes(n7.base, e3.widget, e3.panel), onkeydown: this._onMainKeydown }, this._renderHeader(), this._renderContentContainer());
  }
  _renderFeatureNavigation() {
    return [this._renderPagination(), this._renderFeatureMenuButton()];
  }
  _renderHeader() {
    return !this.featureMenuOpen && this.featureNavigationTop && this._featureNavigationVisible ? n2("div", { class: n7.header, key: "header-actions" }, this._renderFeatureNavigation()) : null;
  }
  _renderFooter() {
    return this.featureMenuOpen || this.featureNavigationTop || !this._featureNavigationVisible ? null : n2("div", { class: n7.footer, key: "footer-actions", slot: "footer" }, this._renderFeatureNavigation());
  }
  _renderFeatureMenuButton() {
    const { messages: e10, viewModel: t7 } = this, { featureCount: i7, selectedFeatureIndex: o5, pendingPromisesCount: s6 } = t7;
    return n2("calcite-action", { appearance: "solid", bind: this, icon: "list", key: "feature-menu-button", label: e10.selectFeature, loading: s6 > 0, onclick: this._openFeatureMenu, scale: "s", text: s2(e10.pageText, { index: l(o5 + 1), total: l(i7) }), textEnabled: true, title: e10.selectFeature });
  }
  _renderPagination() {
    const { previous: e10, next: t7 } = this.messagesCommon.pagination;
    return n2("calcite-action-bar", { class: n7.paginationActionBar, expandDisabled: true, key: "pagination-action-bar", layout: "horizontal", overflowActionsDisabled: true, scale: "s" }, n2("calcite-action-group", { scale: "s" }, n2("calcite-action", { appearance: "solid", class: n7.paginationPrevious, icon: "chevron-left", iconFlipRtl: true, label: e10, onclick: this._previousFeature, scale: "s", text: e10, title: e10 }), n2("calcite-action", { appearance: "solid", icon: "chevron-right", iconFlipRtl: true, label: t7, onclick: this._nextFeature, scale: "s", text: t7, title: t7 })));
  }
  _renderFeatureMenuItem(e10) {
    const { selectedFeatureViewModel: t7, featureViewModels: i7 } = this.viewModel, o5 = e10 === t7, s6 = i7.indexOf(e10);
    return n2("calcite-list-item", { bind: this, "data-feature-index": s6, key: `feature-menu-item-${e10.uid}`, onblur: this._removeActiveFeature, onfocus: this._setActiveFeature, onmouseleave: this._removeActiveFeature, onmouseover: this._setActiveFeature, selected: o5, onCalciteListItemSelect: this._selectFeature }, n2("span", { innerHTML: e10.title || this.messagesCommon.untitled, slot: "content" }));
  }
  _groupResultsByLayer() {
    const { featureViewModels: e10 } = this.viewModel, t7 = /* @__PURE__ */ new Map();
    return e10.forEach((e11) => {
      const i7 = e11 == null ? void 0 : e11.graphic;
      if (!i7) return;
      const { layer: o5, sourceLayer: s6 } = i7, n9 = (S3(o5) ? o5 : null) || (S3(s6) ? s6 : null), r4 = t7.get(n9) ?? [];
      t7.set(n9, [...r4, e11]);
    }), t7;
  }
  _renderFeatureMenu() {
    const { featureViewModels: e10 } = this.viewModel, t7 = this._groupResultsByLayer();
    return e10.length ? n2("calcite-list", { selectionAppearance: "icon", selectionMode: "single" }, Array.from(t7.keys(), (e11) => {
      var _a;
      const i7 = (_a = t7.get(e11)) == null ? void 0 : _a.map((e12) => this._renderFeatureMenuItem(e12)), o5 = e11 ? e11.title ?? this.messagesCommon.untitled : null;
      return this.visibleElements.featureListLayerTitle && null !== o5 ? n2("calcite-list-item-group", { heading: o5, key: (e11 == null ? void 0 : e11.uid) || "map-graphics" }, i7) : i7;
    })) : null;
  }
  _renderHeaderAction(e10, t7) {
    const i7 = e10.title || "";
    return e10.visible ? n2("calcite-action", { active: "toggle" === e10.type && e10.value, appearance: "solid", bind: this, "data-action-uid": e10.uid, disabled: e10.disabled, icon: e10.icon ?? void 0, indicator: e10.indicator, key: `header-action-${t7}`, loading: e10.active, onclick: this._triggerHeaderAction, slot: "header-actions-end", text: i7, title: i7 }) : null;
  }
  _renderHeaderActions() {
    return this.headerActions.map((e10, t7) => this._renderHeaderAction(e10, t7)).toArray();
  }
  _renderContentFeature() {
    const { headingLevel: e10, visibleElements: t7, _isCollapsed: i7, _collapseEnabled: o5, featureNavigationTop: s6 } = this, { title: n9, active: r4 } = this.viewModel, l8 = t7.heading && n9 ? n9 : "";
    return n2("calcite-flow-item", { afterCreate: this._storeRootFlowItemNode, bind: this, class: this.classes({ [n7.contentFeature]: true, [n7.flowItemCollapsed]: i7 }), closable: t7.closeButton, closed: !r4, collapsed: i7, collapseDirection: s6 ? "down" : "up", collapsible: o5, headingLevel: e10, key: "root-flow-item", onCalciteFlowItemClose: this.close, onCalciteFlowItemToggle: this._handleCollapseToggle }, l8 ? n2(e4, { class: this.classes(n7.featuresHeading, e3.heading), innerHTML: l8, key: "header-content", level: this.headingLevel, slot: "header-content" }) : null, this._renderHeaderActions(), this._renderActionBar(), i7 ? null : n2("div", { class: this.classes(n7.container, n7.contentContainer) }, this._renderContent()), this._renderFooter());
  }
  _renderFeatureMenuContainer() {
    const { viewModel: e10, featureMenuOpen: t7, messages: i7, messagesCommon: o5 } = this, { active: s6, featureViewModels: n9, pendingPromisesCount: r4 } = e10;
    return t7 ? n2("calcite-flow-item", { afterCreate: this._storeFeatureMenuFlowItemNode, bind: this, closable: false, closed: !s6, description: s2(i7.total, { total: n9.length }), heading: i7.selectFeature, key: "feature-menu", loading: e10.waitingForContents, onCalciteFlowItemBack: (e11) => {
      e11.preventDefault(), this._handleFeatureMenuBack();
    } }, r4 > 0 ? n2("calcite-loader", { class: n7.loader, inline: true, key: "feature-menu-loader", label: o5.loading, slot: "header-actions-end" }) : null, n2("div", { class: n7.container }, this._renderFeatureMenu()), n2("div", { afterCreate: this._featureMenuIntersectionObserverCreated, bind: this, class: n7.featureMenuObserver }), n2("calcite-button", { appearance: "transparent", onclick: this._handleFeatureMenuBack, slot: "footer-actions", width: "full" }, o5.back)) : null;
  }
  _renderContentContainer() {
    const e10 = [this._renderContentFeature(), this._renderFeatureMenuContainer(), this._drillInWidget.render()];
    return this.visibleElements.flow ? n2("calcite-flow", { key: "content-container" }, e10) : e10;
  }
  _getFallbackIcon(e10) {
    const { className: t7, icon: i7 } = e10;
    if (i7) return null;
    const o5 = e6({ action: e10, feature: this.selectedFeature }), s6 = { [n7.icon]: !!t7, [n7.actionImage]: !!o5 };
    return t7 && (s6[t7] = true), o5 || t7 ? n2("span", { "aria-hidden": "true", class: this.classes(n7.icon, s6), key: "icon", styles: n6(o5) }) : null;
  }
  _renderActionBar() {
    var _a;
    return !this._isCollapsed && this.visibleElements.actionBar && ((_a = this.viewModel.allActions) == null ? void 0 : _a.length) ? n2("calcite-action-bar", { expandDisabled: true, expanded: !this._hideActionText, key: "header-action-bar", scale: "s", slot: "action-bar" }, n2("calcite-action-group", { afterCreate: (e10) => this._actionBarMenuNode = e10, overlayPositioning: "fixed", scale: "s" }, this._renderActions())) : null;
  }
  _renderActions() {
    return this.viewModel.allActions.toArray().map(this._renderAction);
  }
  _renderContent() {
    var _a;
    const e10 = (_a = this.viewModel) == null ? void 0 : _a.content;
    return e10 ? "string" == typeof e10 ? n2("div", { class: t.contentNode, innerHTML: e10, key: e10 }) : this.renderNodeContent(e10) : null;
  }
  _handleCollapseToggle() {
    this.collapsed = !this.collapsed;
  }
  async _openRelatedFeature(e10) {
    await e10.viewModel.updateGeometry();
    const t7 = e10.graphic, i7 = t7 == null ? void 0 : t7.geometry;
    if (null == i7 || null == t7) return;
    this._destroyDrillInFlowItemWidgets(), await this.viewModel.zoomTo({ target: i7 });
    const o5 = n5(i7);
    this.open({ features: [t7], location: null != o5 ? o5 : void 0 });
  }
  async _focusFlowItemNode(e10) {
    var _a;
    (_a = this._focusAbortController) == null ? void 0 : _a.abort(), this._focusAbortController = new AbortController();
    const t7 = this._focusAbortController.signal;
    await d(P(t7));
    const i7 = "menu-flow-item" === e10 ? this._featureMenuViewportNode : this._rootFlowItemNode;
    w2(i7);
  }
  _storeRootFlowItemNode(e10) {
    this._rootFlowItemNode = e10;
  }
  _storeFeatureMenuFlowItemNode(e10) {
    this._featureMenuViewportNode = e10;
  }
  _setActiveFeature(e10) {
    var _a;
    const { viewModel: t7 } = this, i7 = e10.currentTarget["data-feature-index"];
    t7.activeFeature = ((_a = t7.features) == null ? void 0 : _a[i7]) || null;
  }
  _removeActiveFeature() {
    this.viewModel.activeFeature = null;
  }
  _selectFeature(e10) {
    const t7 = e10.currentTarget["data-feature-index"];
    isNaN(t7) || (this.viewModel.selectedFeatureIndex = t7), this._handleFeatureMenuBack();
  }
  _unobserveFeatureMenuObserver() {
    this._featureMenuIntersectionObserverNode && this._featureMenuIntersectionObserver.unobserve(this._featureMenuIntersectionObserverNode);
  }
  _featureMenuIntersectionObserverCreated(e10) {
    this._unobserveFeatureMenuObserver(), this._featureMenuIntersectionObserver.observe(e10), this._featureMenuIntersectionObserverNode = e10;
  }
  _getActionIcon(e10) {
    return e10.icon ? e10.icon : e10.image || e10.className ? void 0 : "question";
  }
  _getActionTitle(e10) {
    const { messages: t7, selectedFeature: i7, messagesCommon: o5 } = this, { id: s6 } = e10, n9 = i7 == null ? void 0 : i7.attributes, r4 = e10.title ?? "", l8 = "zoom-to-feature" === s6 ? s2(r4, { messages: t7 }) : "remove-selected-feature" === s6 ? s2(r4, { messages: o5 }) : "zoom-to-clustered-features" === s6 || "browse-clustered-features" === s6 ? s2(r4, { messages: t7 }) : e10.title;
    return l8 && n9 ? s2(l8, n9) : l8 ?? "";
  }
  _onMainKeydown(e10) {
    const { key: t7 } = e10;
    "ArrowLeft" === t7 && (e10.stopPropagation(), this._handleFeatureMenuBack(), this.previous()), "ArrowRight" === t7 && (e10.stopPropagation(), this._handleFeatureMenuBack(), this.next());
  }
  _featureMenuViewportScrollTop() {
    this._featureMenuViewportNode && this._featureMenuViewportNode.scrollContentTo({ top: 0 });
  }
  _setContentFromFeatureWidget() {
    const { selectedFeatureWidget: e10 } = this;
    e10 && (this.viewModel.content = e10);
  }
  _setTitleFromFeatureWidget() {
    const { selectedFeatureWidget: e10, messagesCommon: t7 } = this, i7 = e10 == null ? void 0 : e10.viewModel;
    e10 && (this.viewModel.title = "error" === (i7 == null ? void 0 : i7.state) ? t7 == null ? void 0 : t7.errorMessage : (i7 == null ? void 0 : i7.title) || "");
  }
  _addSelectedFeatureIndexHandle() {
    const e10 = d2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.selectedFeatureIndex;
    }, (e11, t7) => this._selectedFeatureIndexUpdated(e11, t7));
    this.addHandles(e10, E2);
  }
  _selectedFeatureIndexUpdated(e10, t7) {
    const { featureCount: i7 } = this.viewModel;
    i7 && e10 !== t7 && -1 !== e10 && (this._destroyDrillInFlowItemWidgets(), this._rootFlowItemNode && this._rootFlowItemNode.scrollContentTo({ top: 0 }));
  }
  _triggerHeaderAction(e10) {
    const t7 = e10.currentTarget;
    if (t7.disabled) return;
    const i7 = t7.dataset.actionUid, o5 = this.headerActions.find(({ uid: e11 }) => e11 === i7);
    o5 && !o5.disabled && ("toggle" === (o5 == null ? void 0 : o5.type) && (o5.value = !o5.value), this.emit("trigger-header-action", { action: o5 }));
  }
  _triggerAction(e10) {
    const t7 = e10.currentTarget;
    if (t7.disabled) return;
    const i7 = t7.dataset.actionUid, { allActions: o5 } = this.viewModel, s6 = o5.findIndex((e11) => e11.uid === i7), n9 = o5.at(s6);
    n9 && "toggle" === n9.type && (n9.value = !n9.value), this.viewModel.triggerAction(s6);
  }
  _createSpinner(e10) {
    e10 && (this._spinner = new h({ view: e10 }), e10.ui.add(this._spinner, { key: W3, position: "manual", internal: true }));
  }
  _wireUpView(e10) {
    var _a;
    this._destroySpinner(), e10 && ((_a = this.visibleElements) == null ? void 0 : _a.spinner) && this._createSpinner(e10);
  }
  _hideSpinner() {
    const { _spinner: e10 } = this;
    e10 && (e10.location = null, e10.hide());
  }
  _viewReadyChange(e10, t7) {
    var _a;
    e10 ? this._wireUpView((_a = this.viewModel) == null ? void 0 : _a.view) : t7 && this.viewModel.clear();
  }
  _viewChange(e10, t7) {
    e10 && t7 && this.viewModel.clear();
  }
  _destroySelectedFeatureWidget() {
    const { _feature: e10 } = this;
    e10 && (e10.viewModel = null, !e10.destroyed && e10.destroy()), this._feature = null;
  }
  _closeOpenActionMenu() {
    const { _actionBarMenuNode: e10 } = this;
    e10 && (e10.menuOpen = false);
  }
  _destroyDrillInFlowItemWidgets() {
    this._drillInFlowItems.drain((e10) => {
      "showAllEnabled" in e10.viewModel && (e10.viewModel.showAllEnabled = false), e10.viewModel = null, e10.destroy();
    });
  }
  _toggleScreenLocationEnabled() {
    const { viewModel: e10 } = this;
    e10 && (e10.screenLocationEnabled = e10.active);
  }
  _displaySpinner() {
    const { _spinner: e10 } = this;
    if (!e10) return;
    const { location: t7, waitingForResult: i7 } = this.viewModel;
    i7 && t7 ? e10.show({ location: t7 }) : e10.hide();
  }
  _destroySpinner() {
    var _a;
    const { _spinner: e10, view: t7 } = this;
    e10 && ((_a = t7 == null ? void 0 : t7.ui) == null ? void 0 : _a.remove(e10, W3), e10.destroy(), this._spinner = null);
  }
  _spinnerEnabledChange(e10) {
    var _a;
    this._destroySpinner(), e10 && this._createSpinner((_a = this.viewModel) == null ? void 0 : _a.view);
  }
};
r([m()], B3.prototype, "_drillInFlowItems", void 0), r([m()], B3.prototype, "_hideActionText", null), r([m()], B3.prototype, "_featureNavigationVisible", null), r([m()], B3.prototype, "_isCollapsed", null), r([m()], B3.prototype, "_collapseEnabled", null), r([m({ readOnly: true })], B3.prototype, "active", null), r([m()], B3.prototype, "collapsed", void 0), r([m()], B3.prototype, "content", null), r([m()], B3.prototype, "icon", null), r([m()], B3.prototype, "featureMenuOpen", null), r([m()], B3.prototype, "featureNavigationTop", void 0), r([m()], B3.prototype, "features", null), r([m()], B3.prototype, "goToOverride", null), r([m({ type: i5 })], B3.prototype, "headerActions", void 0), r([m()], B3.prototype, "headingLevel", void 0), r([m()], B3.prototype, "location", null), r([m()], B3.prototype, "label", null), r([m()], B3.prototype, "map", null), r([m(), e("esri/widgets/Features/t9n/Features")], B3.prototype, "messages", void 0), r([m(), e("esri/t9n/common")], B3.prototype, "messagesCommon", void 0), r([m()], B3.prototype, "promises", null), r([m()], B3.prototype, "responsiveActionsEnabled", void 0), r([m({ readOnly: true })], B3.prototype, "selectedFeature", null), r([m({ readOnly: true })], B3.prototype, "selectedDrillInFeature", null), r([m()], B3.prototype, "selectedFeatureIndex", null), r([m({ readOnly: true })], B3.prototype, "selectedFeatureWidget", null), r([m()], B3.prototype, "spatialReference", null), r([m()], B3.prototype, "title", null), r([m()], B3.prototype, "timeZone", null), r([m()], B3.prototype, "updateLocationEnabled", null), r([m()], B3.prototype, "view", null), r([m({ type: W2 }), e5(["triggerAction", "trigger-action"])], B3.prototype, "viewModel", void 0), r([m({ type: l7, nonNullable: true })], B3.prototype, "visibleElements", void 0), r([m()], B3.prototype, "visible", null), B3 = r([a("esri.widgets.Features")], B3);
var R3 = B3;

// node_modules/@arcgis/core/widgets/Popup/css.js
var t5 = "esri-popup";
var o4 = `${t5}--is-docked`;
var e8 = { base: t5, baseHidden: `${t5}--hidden`, main: `${t5}__main-container`, shadow: `${t5}--shadow`, isDocked: o4, isDockedTopLeft: `${o4}-top-left`, isDockedTopCenter: `${o4}-top-center`, isDockedTopRight: `${o4}-top-right`, isDockedBottomLeft: `${o4}-bottom-left`, isDockedBottomCenter: `${o4}-bottom-center`, isDockedBottomRight: `${o4}-bottom-right`, alignTopCenter: `${t5}--aligned-top-center`, alignBottomCenter: `${t5}--aligned-bottom-center`, alignTopLeft: `${t5}--aligned-top-left`, alignBottomLeft: `${t5}--aligned-bottom-left`, alignTopRight: `${t5}--aligned-top-right`, alignBottomRight: `${t5}--aligned-bottom-right`, pointer: `${t5}__pointer`, pointerDirection: `${t5}__pointer-direction` };

// node_modules/@arcgis/core/widgets/Popup/PopupViewModel.js
var e9 = class extends W2 {
  constructor(o5) {
    super(o5);
  }
};
e9 = r([a("esri.widgets.Popup.PopupViewModel")], e9);
var t6 = e9;

// node_modules/@arcgis/core/widgets/Popup/PopupVisibleElements.js
var s5 = class extends b2 {
  constructor() {
    super(...arguments), this.actionBar = true, this.closeButton = true, this.collapseButton = true, this.featureNavigation = true, this.featureListLayerTitle = true, this.heading = true, this.spinner = true;
  }
};
r([m({ type: Boolean, nonNullable: true })], s5.prototype, "actionBar", void 0), r([m({ type: Boolean, nonNullable: true })], s5.prototype, "closeButton", void 0), r([m({ type: Boolean, nonNullable: true })], s5.prototype, "collapseButton", void 0), r([m({ type: Boolean, nonNullable: true })], s5.prototype, "featureNavigation", void 0), r([m({ type: Boolean, nonNullable: true })], s5.prototype, "featureListLayerTitle", void 0), r([m({ type: Boolean, nonNullable: true })], s5.prototype, "heading", void 0), r([m({ type: Boolean, nonNullable: true })], s5.prototype, "spinner", void 0), s5 = r([a("esri.widgets.Popup.PopupVisibleElements")], s5);
var p7 = s5;

// node_modules/@arcgis/core/widgets/Popup.js
var M2 = 200;
var y3 = { buttonEnabled: true, position: "auto", breakpoint: { width: 544 } };
var C3 = class extends B {
  constructor(e10, t7) {
    super(e10, t7), this._dockAction = new c({ id: "popup-dock-action" }), this._featuresWidget = new R3({ responsiveActionsEnabled: true }), this._containerNode = null, this._mainContainerNode = null, this._pointerOffsetInPx = 16, this._focusAbortController = null, this.alignment = "auto", this.dockEnabled = false, this.headingLevel = 2, this.messages = null, this.viewModel = new t6(), this.visibleElements = new p7();
  }
  initialize() {
    this.addHandles([d2(() => {
      var _a, _b;
      return [(_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.widthBreakpoint, this.dockEnabled];
    }, () => this._handleDockIcon(), P2), d2(() => {
      var _a, _b;
      return [this.dockEnabled, (_a = this.messages) == null ? void 0 : _a.undock, (_b = this.messages) == null ? void 0 : _b.dock];
    }, () => this._handleDockEnabled(), P2), d2(() => this.dockOptions, (e10) => {
      const { _dockAction: t7 } = this, i7 = this._featuresWidget.headerActions;
      i7.remove(t7), e10.buttonEnabled && i7.add(t7);
    }, P2), d2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.screenLocation;
    }, () => this._positionContainer()), d2(() => {
      var _a;
      return [(_a = this.viewModel) == null ? void 0 : _a.active, this.dockEnabled];
    }, () => this._toggleScreenLocationEnabled()), d2(() => {
      var _a, _b, _c, _d, _e, _f, _g;
      return [(_a = this.viewModel) == null ? void 0 : _a.screenLocation, (_c = (_b = this.viewModel) == null ? void 0 : _b.view) == null ? void 0 : _c.padding, (_e = (_d = this.viewModel) == null ? void 0 : _d.view) == null ? void 0 : _e.size, (_f = this.viewModel) == null ? void 0 : _f.active, (_g = this.viewModel) == null ? void 0 : _g.location, this.alignment];
    }, () => this.reposition()), d2(() => {
      var _a, _b;
      return (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.size;
    }, (e10, t7) => this._updateDockEnabledForViewSize(e10, t7)), d2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.view;
    }, (e10, t7) => this._viewChange(e10, t7)), d2(() => {
      var _a, _b;
      return (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.ready;
    }, (e10, t7) => this._viewReadyChange(e10 ?? false, t7 ?? false)), d2(() => this.viewModel, () => this._featuresWidget.viewModel = this.viewModel, P2), d2(() => this._featureNavigationTop, (e10) => this._featuresWidget.featureNavigationTop = e10, P2), d2(() => this.headingLevel, (e10) => this._featuresWidget.headingLevel = e10, P2), d2(() => this.visibleElements.actionBar, (e10) => this._featuresWidget.visibleElements.actionBar = !!e10, P2), d2(() => this.visibleElements.closeButton, (e10) => this._featuresWidget.visibleElements.closeButton = !!e10, P2), d2(() => this.visibleElements.collapseButton, (e10) => this._featuresWidget.visibleElements.collapseButton = !!e10, P2), d2(() => this.visibleElements.heading, (e10) => this._featuresWidget.visibleElements.heading = !!e10, P2), d2(() => this.visibleElements.spinner, (e10) => this._featuresWidget.visibleElements.spinner = !!e10, P2), d2(() => this.visibleElements.featureNavigation, (e10) => this._featuresWidget.visibleElements.featureNavigation = !!e10, P2), d2(() => this.visibleElements.featureListLayerTitle, (e10) => this._featuresWidget.visibleElements.featureListLayerTitle = !!e10, P2), v(() => this._featuresWidget, "trigger-header-action", (e10) => {
      e10.action === this._dockAction && (this.dockEnabled = !this.dockEnabled);
    })]);
  }
  normalizeCtorArgs(e10) {
    const t7 = { ...e10 };
    return null != (e10 == null ? void 0 : e10.visibleElements) && (t7.visibleElements = new p7(e10.visibleElements), null != e10.collapseEnabled && (t7.visibleElements.collapseButton = e10.collapseEnabled), null != e10.spinnerEnabled && (t7.visibleElements.spinner = e10.spinnerEnabled)), t7;
  }
  destroy() {
    var _a, _b;
    this._dockAction.destroy(), (_a = this._featuresWidget) == null ? void 0 : _a.destroy(), (_b = this._focusAbortController) == null ? void 0 : _b.abort();
  }
  get _featureNavigationTop() {
    const { currentAlignment: e10, currentDockPosition: t7 } = this;
    return "bottom-left" === e10 || "bottom-center" === e10 || "bottom-right" === e10 || "top-left" === t7 || "top-center" === t7 || "top-right" === t7;
  }
  get actions() {
    return this.viewModel.actions;
  }
  set actions(e10) {
    this.viewModel.actions = e10;
  }
  get active() {
    return this.viewModel.active;
  }
  get autoCloseEnabled() {
    return this.viewModel.autoCloseEnabled;
  }
  set autoCloseEnabled(e10) {
    this.viewModel.autoCloseEnabled = e10;
  }
  get defaultPopupTemplateEnabled() {
    return this.viewModel.defaultPopupTemplateEnabled;
  }
  set defaultPopupTemplateEnabled(e10) {
    this.viewModel.defaultPopupTemplateEnabled = e10;
  }
  get content() {
    return this.viewModel.content;
  }
  set content(e10) {
    this.viewModel.content = e10;
  }
  get collapsed() {
    return this._featuresWidget.collapsed;
  }
  set collapsed(e10) {
    this._featuresWidget.collapsed = e10;
  }
  get collapseEnabled() {
    return i(n.getLogger(this), "collapseEnabled", { replacement: "PopupVisibleElements.collapseButton", version: "4.29" }), this.visibleElements.collapseButton;
  }
  set collapseEnabled(e10) {
    i(n.getLogger(this), "collapseEnabled", { replacement: "PopupVisibleElements.collapseButton", version: "4.29" }), this.visibleElements.collapseButton = e10;
  }
  get currentAlignment() {
    return this._getCurrentAlignment();
  }
  get currentDockPosition() {
    return this._getCurrentDockPosition();
  }
  get dockOptions() {
    return this._get("dockOptions") || y3;
  }
  set dockOptions(e10) {
    var _a, _b;
    const t7 = { ...y3 }, i7 = (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.breakpoints, o5 = {};
    i7 && (o5.width = i7.xsmall, o5.height = i7.xsmall);
    const n9 = { ...t7, ...e10 }, s6 = { ...t7.breakpoint, ...o5 }, { breakpoint: r4 } = n9;
    "object" == typeof r4 ? n9.breakpoint = { ...s6, ...r4 } : r4 && (n9.breakpoint = s6), this._set("dockOptions", n9), this._setCurrentDockPosition(), this.reposition();
  }
  get featureCount() {
    return this.viewModel.featureCount;
  }
  get featureMenuOpen() {
    return this.viewModel.featureMenuOpen;
  }
  set featureMenuOpen(e10) {
    this.viewModel.featureMenuOpen = e10;
  }
  get features() {
    return this.viewModel.features;
  }
  set features(e10) {
    this.viewModel.features = e10;
  }
  get goToOverride() {
    return this.viewModel.goToOverride;
  }
  set goToOverride(e10) {
    this.viewModel.goToOverride = e10;
  }
  get highlightEnabled() {
    return this.viewModel.highlightEnabled;
  }
  set highlightEnabled(e10) {
    this.viewModel.highlightEnabled = e10;
  }
  get icon() {
    return "popup";
  }
  set icon(e10) {
    this._overrideIfSome("icon", e10);
  }
  get location() {
    return this.viewModel.location;
  }
  set location(e10) {
    this.viewModel.location = e10;
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e10) {
    this._overrideIfSome("label", e10);
  }
  get promises() {
    return this.viewModel.promises;
  }
  set promises(e10) {
    this.viewModel.promises = e10;
  }
  get selectedFeature() {
    return this.viewModel.selectedFeature;
  }
  get selectedFeatureIndex() {
    return this.viewModel.selectedFeatureIndex;
  }
  set selectedFeatureIndex(e10) {
    this.viewModel.selectedFeatureIndex = e10;
  }
  get selectedFeatureWidget() {
    return this._featuresWidget.selectedFeatureWidget;
  }
  get spinnerEnabled() {
    return i(n.getLogger(this), "spinnerEnabled", { replacement: "PopupVisibleElements.spinner", version: "4.29" }), this.visibleElements.spinner;
  }
  set spinnerEnabled(e10) {
    i(n.getLogger(this), "spinnerEnabled", { replacement: "PopupVisibleElements.spinner", version: "4.29" }), this.visibleElements.spinner = e10;
  }
  get title() {
    return this.viewModel.title;
  }
  set title(e10) {
    this.viewModel.title = e10;
  }
  get updateLocationEnabled() {
    return this.viewModel.updateLocationEnabled;
  }
  set updateLocationEnabled(e10) {
    this.viewModel.updateLocationEnabled = e10;
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e10) {
    this.viewModel.view = e10;
  }
  get visible() {
    return this.viewModel.visible;
  }
  set visible(e10) {
    this.viewModel.visible = e10;
  }
  blur() {
    const { active: e10 } = this.viewModel;
    e10 || n.getLogger(this).warn("Popup can only be blurred when currently active."), this._featuresWidget.blur();
  }
  clear() {
    return this.viewModel.clear();
  }
  close() {
    this.visible = false;
  }
  fetchFeatures(e10, t7) {
    return this.viewModel.fetchFeatures(e10, t7);
  }
  focus() {
    const { active: e10 } = this.viewModel;
    e10 || n.getLogger(this).warn("Popup can only be focused when currently active."), this._handleFocus();
  }
  next() {
    return this.viewModel.next();
  }
  open(e10) {
    const t7 = !!e10 && !!e10.featureMenuOpen, i7 = { collapsed: !!e10 && !!e10.collapsed, featureMenuOpen: t7 };
    this.set(i7), this.viewModel.open(e10), (e10 == null ? void 0 : e10.shouldFocus) && this._handleFocus(true);
  }
  previous() {
    return this.viewModel.previous();
  }
  reposition() {
    this.renderNow(), this._positionContainer(), this._setCurrentAlignment();
  }
  triggerAction(e10) {
    return this.viewModel.triggerAction(e10);
  }
  render() {
    var _a, _b, _c, _d;
    const { dockEnabled: e10, currentAlignment: t7, currentDockPosition: i7 } = this, { active: o5, screenLocation: n9 } = this.viewModel, s6 = o5 && e10, r4 = o5 && !e10, l8 = (_b = (_a = this.selectedFeature) == null ? void 0 : _a.layer) == null ? void 0 : _b.title, a5 = (_d = (_c = this.selectedFeature) == null ? void 0 : _c.layer) == null ? void 0 : _d.id, d6 = { [e8.alignTopCenter]: "top-center" === t7, [e8.alignBottomCenter]: "bottom-center" === t7, [e8.alignTopLeft]: "top-left" === t7, [e8.alignBottomLeft]: "bottom-left" === t7, [e8.alignTopRight]: "top-right" === t7, [e8.alignBottomRight]: "bottom-right" === t7, [e8.isDocked]: s6, [e8.shadow]: r4, [e8.isDockedTopLeft]: "top-left" === i7, [e8.isDockedTopCenter]: "top-center" === i7, [e8.isDockedTopRight]: "top-right" === i7, [e8.isDockedBottomLeft]: "bottom-left" === i7, [e8.isDockedBottomCenter]: "bottom-center" === i7, [e8.isDockedBottomRight]: "bottom-right" === i7 };
    return n2("div", { afterCreate: this._positionContainer, afterUpdate: this._positionContainer, bind: this, class: this.classes(e8.base, d6, { [e8.baseHidden]: !n9 && !e10 }), "data-layer-id": a5, "data-layer-title": l8, role: "presentation" }, o5 ? [this._renderMainContainer(), this._renderPointer()] : null);
  }
  _renderPointer() {
    return this.dockEnabled ? null : n2("div", { class: e8.pointer, key: "popup-pointer", role: "presentation" }, n2("div", { class: this.classes(e8.pointerDirection, e8.shadow) }));
  }
  _renderMainContainer() {
    const { dockEnabled: e10 } = this, t7 = { [e8.shadow]: e10 };
    return n2("div", { afterCreate: this._setMainContainerNode, afterUpdate: this._setMainContainerNode, bind: this, class: this.classes(e8.main, e3.widget, t7) }, this._featuresWidget.render());
  }
  _getAnimationDurationMS() {
    const { _containerNode: e10 } = this;
    return e10 ? 1e3 * parseFloat(window.getComputedStyle(e10).animationDuration) : M2;
  }
  async _handleFocus(e10 = false) {
    var _a;
    (_a = this._focusAbortController) == null ? void 0 : _a.abort(), this._focusAbortController = new AbortController();
    const t7 = this._focusAbortController.signal;
    e10 && await w(() => {
      var _a2;
      return true === ((_a2 = this.viewModel) == null ? void 0 : _a2.active);
    }, { signal: t7 }), await d(P(t7)), await d(A(this._getAnimationDurationMS(), t7)), this._featuresWidget.focus();
  }
  _isOutsideView(e10) {
    const { popupHeight: t7, popupWidth: i7, screenLocation: o5, side: n9, view: s6 } = e10;
    if (isNaN(i7) || isNaN(t7) || !s6 || !o5) return false;
    const r4 = s6.padding;
    return "right" === n9 && o5.x + i7 / 2 > s6.width - r4.right || ("left" === n9 && o5.x - i7 / 2 < r4.left || ("top" === n9 && o5.y - t7 < r4.top || "bottom" === n9 && o5.y + t7 > s6.height - r4.bottom));
  }
  _calculateAutoAlignment(e10) {
    if ("auto" !== e10) return e10;
    const { _pointerOffsetInPx: t7, _containerNode: i7, _mainContainerNode: o5, viewModel: n9 } = this, { screenLocation: s6, view: r4 } = n9;
    if (null == s6 || !r4 || !i7) return "top-center";
    function l8(e11) {
      return parseInt(e11.replaceAll(/[^-\d.]/g, ""), 10);
    }
    const a5 = o5 ? window.getComputedStyle(o5, null) : null, d6 = a5 ? l8(a5.getPropertyValue("max-height")) : 0, c6 = a5 ? l8(a5.getPropertyValue("height")) : 0, { height: p8, width: h5 } = i7.getBoundingClientRect(), u6 = h5 + t7, g3 = Math.max(p8, d6, c6) + t7, v4 = this._isOutsideView({ popupHeight: g3, popupWidth: u6, screenLocation: s6, side: "right", view: r4 }), m5 = this._isOutsideView({ popupHeight: g3, popupWidth: u6, screenLocation: s6, side: "left", view: r4 }), b4 = this._isOutsideView({ popupHeight: g3, popupWidth: u6, screenLocation: s6, side: "top", view: r4 }), f5 = this._isOutsideView({ popupHeight: g3, popupWidth: u6, screenLocation: s6, side: "bottom", view: r4 });
    return m5 ? b4 ? "bottom-right" : "top-right" : v4 ? b4 ? "bottom-left" : "top-left" : b4 ? f5 ? "top-center" : "bottom-center" : "top-center";
  }
  _callCurrentAlignment(e10) {
    return "function" == typeof e10 ? e10.call(this) : e10;
  }
  _getCurrentAlignment() {
    const { alignment: e10, dockEnabled: t7 } = this;
    return t7 || !this.viewModel.active ? null : this._calculatePositionResult(this._calculateAutoAlignment(this._callCurrentAlignment(e10)));
  }
  _setCurrentAlignment() {
    this._set("currentAlignment", this._getCurrentAlignment());
  }
  _setCurrentDockPosition() {
    this._set("currentDockPosition", this._getCurrentDockPosition());
  }
  _calculatePositionResult(e10) {
    const t7 = ["left", "right"];
    return u(this.container) && t7.reverse(), e10 == null ? void 0 : e10.replace(/leading/gi, t7[0]).replaceAll(/trailing/gi, t7[1]);
  }
  _callDockPosition(e10) {
    return "function" == typeof e10 ? e10.call(this) : e10;
  }
  _getDockPosition() {
    var _a;
    return this._calculatePositionResult(this._calculateAutoDockPosition(this._callDockPosition((_a = this.dockOptions) == null ? void 0 : _a.position)));
  }
  _getCurrentDockPosition() {
    return this.dockEnabled && this.viewModel.active ? this._getDockPosition() : null;
  }
  _calculateAutoDockPosition(e10) {
    var _a;
    if ("auto" !== e10) return e10;
    const t7 = (_a = this.viewModel) == null ? void 0 : _a.view, i7 = u(this.container) ? "top-left" : "top-right";
    if (!t7) return i7;
    const o5 = t7.padding || { left: 0, right: 0, top: 0, bottom: 0 }, n9 = t7.width - o5.left - o5.right, { breakpoints: s6 } = t7;
    return s6 && n9 <= s6.xsmall ? "bottom-center" : i7;
  }
  _getDockIcon() {
    const e10 = this._getDockPosition();
    if (this.dockEnabled) return "minimize";
    switch (e10) {
      case "top-left":
      case "bottom-left":
        return "dock-left";
      case "top-center":
        return "maximize";
      case "bottom-center":
        return "dock-bottom";
      default:
        return "dock-right";
    }
  }
  _handleDockIcon() {
    this._dockAction.icon = this._getDockIcon();
  }
  _handleDockEnabled() {
    var _a, _b;
    this._dockAction.title = this.dockEnabled ? (_a = this.messages) == null ? void 0 : _a.undock : (_b = this.messages) == null ? void 0 : _b.dock;
  }
  _setMainContainerNode(e10) {
    this._mainContainerNode = e10;
  }
  _positionContainer(e10 = this._containerNode) {
    if (e10 && (this._containerNode = e10), !this._containerNode) return;
    const { screenLocation: t7 } = this.viewModel, { width: i7 } = this._containerNode.getBoundingClientRect(), o5 = this._calculatePositionStyle(t7, i7);
    o5 && Object.assign(this._containerNode.style, o5);
  }
  _calculateFullWidth(e10) {
    const { currentAlignment: t7, _pointerOffsetInPx: i7 } = this;
    return "top-left" === t7 || "bottom-left" === t7 || "top-right" === t7 || "bottom-right" === t7 ? e10 + i7 : e10;
  }
  _calculateAlignmentPosition(e10, t7, i7, o5) {
    const { currentAlignment: n9, _pointerOffsetInPx: s6 } = this;
    if (!i7) return;
    const { padding: r4 } = i7, l8 = o5 / 2, a5 = i7.height - t7, d6 = i7.width - e10;
    return "bottom-center" === n9 ? { top: t7 + s6 - r4.top, left: e10 - l8 - r4.left } : "top-left" === n9 ? { bottom: a5 + s6 - r4.bottom, right: d6 + s6 - r4.right } : "bottom-left" === n9 ? { top: t7 + s6 - r4.top, right: d6 + s6 - r4.right } : "top-right" === n9 ? { bottom: a5 + s6 - r4.bottom, left: e10 + s6 - r4.left } : "bottom-right" === n9 ? { top: t7 + s6 - r4.top, left: e10 + s6 - r4.left } : "top-center" === n9 ? { bottom: a5 + s6 - r4.bottom, left: e10 - l8 - r4.left } : void 0;
  }
  _calculatePositionStyle(e10, t7) {
    const { dockEnabled: i7, view: o5 } = this;
    if (!o5) return;
    if (i7) return { left: "", top: "", right: "", bottom: "" };
    if (null == e10 || !t7) return;
    const n9 = this._calculateFullWidth(t7), s6 = this._calculateAlignmentPosition(e10.x, e10.y, o5, n9);
    return s6 ? { top: void 0 !== s6.top ? `${s6.top}px` : "auto", left: void 0 !== s6.left ? `${s6.left}px` : "auto", bottom: void 0 !== s6.bottom ? `${s6.bottom}px` : "auto", right: void 0 !== s6.right ? `${s6.right}px` : "auto" } : void 0;
  }
  _viewChange(e10, t7) {
    e10 && t7 && (this.close(), this.clear());
  }
  _viewReadyChange(e10, t7) {
    e10 ? this._wireUpView() : t7 && (this.close(), this.clear());
  }
  _wireUpView() {
    this._setDockEnabledForViewSize(this.dockOptions);
  }
  _dockingThresholdCrossed(e10, t7, i7) {
    const [o5, n9] = e10, [s6, r4] = t7, { width: l8 = 0, height: a5 = 0 } = i7 ?? {};
    return o5 <= l8 && s6 > l8 || o5 > l8 && s6 <= l8 || n9 <= a5 && r4 > a5 || n9 > a5 && r4 <= a5;
  }
  _updateDockEnabledForViewSize(e10, t7) {
    var _a, _b;
    if (!e10 || !t7) return;
    const i7 = ((_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.padding) || { left: 0, right: 0, top: 0, bottom: 0 }, o5 = i7.left + i7.right, n9 = i7.top + i7.bottom, s6 = [], r4 = [];
    s6[0] = e10[0] - o5, s6[1] = e10[1] - n9, r4[0] = t7[0] - o5, r4[1] = t7[1] - n9;
    const { dockOptions: l8 } = this, a5 = l8.breakpoint;
    this._dockingThresholdCrossed(s6, r4, a5) && this._setDockEnabledForViewSize(l8), this._setCurrentDockPosition();
  }
  _toggleScreenLocationEnabled() {
    const { dockEnabled: e10, viewModel: t7 } = this;
    if (!t7) return;
    const i7 = t7.active && !e10;
    t7.screenLocationEnabled = i7;
  }
  _shouldDockAtCurrentViewSize(e10) {
    var _a, _b;
    const t7 = e10.breakpoint, i7 = (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.ui;
    if (!i7) return false;
    const { width: o5, height: n9 } = i7;
    if (isNaN(o5) || isNaN(n9)) return false;
    if (!t7) return false;
    const s6 = t7.hasOwnProperty("width") && o5 <= (t7.width ?? 0), r4 = t7.hasOwnProperty("height") && n9 <= (t7.height ?? 0);
    return s6 || r4;
  }
  _setDockEnabledForViewSize(e10) {
    e10.breakpoint && (this.dockEnabled = this._shouldDockAtCurrentViewSize(e10));
  }
};
r([m({ readOnly: true })], C3.prototype, "_featureNavigationTop", null), r([m()], C3.prototype, "actions", null), r([m({ readOnly: true })], C3.prototype, "active", null), r([m()], C3.prototype, "alignment", void 0), r([m()], C3.prototype, "autoCloseEnabled", null), r([m()], C3.prototype, "defaultPopupTemplateEnabled", null), r([m()], C3.prototype, "content", null), r([m()], C3.prototype, "collapsed", null), r([m()], C3.prototype, "collapseEnabled", null), r([m({ readOnly: true })], C3.prototype, "currentAlignment", null), r([m({ readOnly: true })], C3.prototype, "currentDockPosition", null), r([m()], C3.prototype, "dockOptions", null), r([m()], C3.prototype, "dockEnabled", void 0), r([m({ readOnly: true })], C3.prototype, "featureCount", null), r([m()], C3.prototype, "featureMenuOpen", null), r([m()], C3.prototype, "features", null), r([m()], C3.prototype, "goToOverride", null), r([m()], C3.prototype, "headingLevel", void 0), r([m()], C3.prototype, "highlightEnabled", null), r([m()], C3.prototype, "icon", null), r([m()], C3.prototype, "location", null), r([m()], C3.prototype, "label", null), r([m(), e("esri/widgets/Popup/t9n/Popup")], C3.prototype, "messages", void 0), r([m()], C3.prototype, "promises", null), r([m({ readOnly: true })], C3.prototype, "selectedFeature", null), r([m()], C3.prototype, "selectedFeatureIndex", null), r([m({ readOnly: true })], C3.prototype, "selectedFeatureWidget", null), r([m()], C3.prototype, "spinnerEnabled", null), r([m()], C3.prototype, "title", null), r([m()], C3.prototype, "updateLocationEnabled", null), r([m()], C3.prototype, "view", null), r([m({ type: t6 }), e5(["triggerAction", "trigger-action"])], C3.prototype, "viewModel", void 0), r([m()], C3.prototype, "visible", null), r([m({ type: p7, nonNullable: true })], C3.prototype, "visibleElements", void 0), C3 = r([a("esri.widgets.Popup")], C3);
var P3 = C3;
export {
  P3 as default
};
//# sourceMappingURL=Popup-UGZHQY4Z.js.map
