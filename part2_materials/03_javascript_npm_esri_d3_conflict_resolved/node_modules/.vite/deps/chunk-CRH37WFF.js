import {
  $t,
  A,
  C,
  D,
  Et,
  F,
  H,
  I,
  K,
  M,
  P,
  T,
  X,
  Z,
  a as a2,
  kt,
  tt,
  v
} from "./chunk-YFGQMO6E.js";
import {
  b,
  c2 as c,
  m,
  u
} from "./chunk-GRW2QIBT.js";
import {
  a,
  s,
  s2
} from "./chunk-PKLD5YJF.js";
import {
  has
} from "./chunk-XKQWTZMW.js";

// node_modules/@arcgis/core/support/revision.js
var c2 = "20241122";
var f = "f6f7099a0e79cf518abdcf87c5aa8b6f24ecdcd8";

// node_modules/@arcgis/core/kernel.js
Symbol.dispose ?? (Symbol.dispose = Symbol("Symbol.dispose")), Symbol.asyncDispose ?? (Symbol.asyncDispose = Symbol("Symbol.asyncDispose"));
var s3 = "4.31";
var i;
var t = s3;
t = "4.31.6";
function n(o) {
  i = o;
}
function l(e) {
  const r = i == null ? void 0 : i.findCredential(e);
  return (r == null ? void 0 : r.token) ? kt(e, "token", r.token) : e;
}
has("host-webworker") || globalThis.$arcgis || Object.defineProperty(globalThis, "$arcgis", { configurable: false, enumerable: true, writable: false, value: {} }), has("host-webworker");

// node_modules/@arcgis/core/support/apiKeyUtils.js
var s4 = /* @__PURE__ */ new Set(["elevation3d.arcgis.com", "js.arcgis.com", "jsdev.arcgis.com", "jsqa.arcgis.com", "static.arcgis.com"]);
function i2(t2) {
  const c4 = X(t2, true);
  return !!c4 && (c4.endsWith(".arcgis.com") && !s4.has(c4) && !t2.endsWith("/sharing/rest/generateToken"));
}
function n2(r, s5) {
  return !(!s5 && !s.apiKey || !i2(r));
}

// node_modules/@arcgis/core/support/requestUtils.js
function i3(e, o, t2 = false, n3) {
  return new Promise((s5, i4) => {
    if (c(n3)) return void i4(c3());
    let a4 = () => {
      l3(), i4(new Error(`Unable to load ${o}`));
    }, u3 = () => {
      const r = e;
      l3(), s5(r);
    }, m3 = () => {
      if (!e) return;
      const r = e;
      l3(), r.src = "", i4(c3());
    };
    const l3 = () => {
      has("esri-image-decode") || (e.removeEventListener("error", a4), e.removeEventListener("load", u3)), a4 = null, u3 = null, e = null, null != n3 && n3.removeEventListener("abort", m3), m3 = null, t2 && URL.revokeObjectURL(o);
    };
    null != n3 && n3.addEventListener("abort", m3), has("esri-image-decode") ? e.decode().then(u3, a4) : (e.addEventListener("error", a4), e.addEventListener("load", u3));
  });
}
function c3() {
  try {
    return new DOMException("Aborted", "AbortError");
  } catch {
    const e = new Error();
    return e.name = "AbortError", e;
  }
}
var a3 = "Timeout exceeded";
function u2() {
  return new Error(a3);
}
function m2(e) {
  return "object" == typeof e && !!e && "message" in e && e.message === a3;
}
function l2(r) {
  s.request.crossOriginNoCorsDomains || (s.request.crossOriginNoCorsDomains = {});
  const t2 = s.request.crossOriginNoCorsDomains;
  for (let e of r) e = e.toLowerCase(), /^https?:\/\//.test(e) ? t2[X(e) ?? ""] = 0 : (t2[X("http://" + e) ?? ""] = 0, t2[X("https://" + e) ?? ""] = 0);
}
function d(r) {
  const s5 = s.request.crossOriginNoCorsDomains;
  if (s5) {
    let e = X(r);
    if (e) return e = e.toLowerCase(), !F(e, C()) && s5[e] < Date.now() - 36e5;
  }
  return false;
}
async function f2(r) {
  var _a;
  const t2 = I(r);
  r = t2.path, "json" === ((_a = t2.query) == null ? void 0 : _a.f) && (r += "?f=json");
  try {
    await fetch(r, { mode: "no-cors", credentials: "include" });
  } catch {
  }
  const n3 = s.request.crossOriginNoCorsDomains, i4 = X(r);
  n3 && i4 && (n3[i4.toLowerCase()] = Date.now());
}

// node_modules/@arcgis/core/request.js
async function U(e, t2) {
  var _a;
  e instanceof URL && (e = e.toString()), (t2 == null ? void 0 : t2.query) instanceof URLSearchParams && (t2.query = A(t2.query.toString().replaceAll("+", " ")));
  const r = tt(e), s5 = Z(e);
  s5 || r || (e = K(e));
  const a4 = { url: e, requestOptions: { ...t2 } }, n3 = (e2) => ({ data: e2, getAllHeaders: H2, getHeader: H2, httpStatus: 200, requestOptions: a4.requestOptions, url: a4.url }), i4 = D(e, A2.internalInterceptors);
  if (i4) {
    const e2 = await J(i4, a4);
    if (null != e2) return n3(e2);
  }
  let h = D(e);
  if (h) {
    const e2 = await J(h, a4);
    if (null != e2) return n3(e2);
    h.after || h.error || (h = null);
  }
  if (e = a4.url, "image" === (t2 = a4.requestOptions).responseType && (has("host-webworker") || has("host-node"))) throw N("request:invalid-parameters", new Error("responseType 'image' is not supported in Web Workers or Node environment"), a4);
  if ("head" === t2.method) {
    if (t2.body) throw N("request:invalid-parameters", new Error("body parameter cannot be set when method is 'head'"), a4);
    if (r || s5) throw N("request:invalid-parameters", new Error("data and blob URLs are not supported for method 'head'"), a4);
  }
  if (await B(), j) return j.execute(e, t2);
  const m3 = new AbortController(), f3 = m(t2, () => m3.abort()), y = { controller: m3, credential: void 0, credentialToken: void 0, fetchOptions: void 0, hasToken: false, interceptor: h, params: a4, redoRequest: false, useIdentity: A2.useIdentity, useProxy: false, useSSL: false, withCredentials: false }, w = await Q(y).finally(() => f3 == null ? void 0 : f3.remove());
  return (_a = h == null ? void 0 : h.after) == null ? void 0 : _a.call(h, w), w;
}
var j;
var A2 = s.request;
var P2 = "FormData" in globalThis;
var _ = /* @__PURE__ */ new Set([499, 498, 403, 401]);
var D2 = /* @__PURE__ */ new Set(["COM_0056", "COM_0057", "SB_0008"]);
var F2 = [/\/arcgis\/tokens/i, /\/sharing(\/rest)?\/generatetoken/i, /\/rest\/info/i];
var H2 = () => null;
var I2 = Symbol();
function R(e) {
  const t2 = X(e);
  t2 && !U._corsServers.includes(t2) && U._corsServers.push(t2);
}
function M2(e) {
  const t2 = X(e);
  return !t2 || t2.endsWith(".arcgis.com") || U._corsServers.includes(t2) || M(t2);
}
function N(e, t2, o, i4) {
  let l3 = "Error";
  const u3 = { url: o.url, requestOptions: o.requestOptions, getAllHeaders: H2, getHeader: H2, ssl: false };
  if (t2 instanceof s2) return t2.details ? (t2.details = a(t2.details), t2.details.url = o.url, t2.details.requestOptions = o.requestOptions) : t2.details = u3, t2;
  if (t2) {
    const e2 = i4 && (() => Array.from(i4.headers)), r = i4 && ((e3) => i4.headers.get(e3)), s5 = i4 == null ? void 0 : i4.status, o2 = t2.message;
    o2 && (l3 = o2), e2 && r && (u3.getAllHeaders = e2, u3.getHeader = r), u3.httpStatus = (null != t2.httpCode ? t2.httpCode : t2.code) || s5 || 0, u3.subCode = t2.subcode, u3.messageCode = t2.messageCode, "string" == typeof t2.details ? u3.messages = [t2.details] : u3.messages = t2.details, u3.raw = I2 in t2 ? t2[I2] : t2;
  }
  return b(t2) ? u() : new s2(e, l3, u3);
}
async function B() {
  has("host-webworker") && !j && (j = await import("./request-WMJHQZOV.js"));
}
async function $() {
  i || await import("./IdentityManager-6MRRVWT5.js");
}
async function z(r) {
  var _a;
  const s5 = r.params.url, o = r.params.requestOptions, a4 = r.controller.signal, n3 = o.body;
  let l3 = null, u3 = null;
  if (P2 && "HTMLFormElement" in globalThis && (n3 instanceof FormData ? l3 = n3 : n3 instanceof HTMLFormElement && (l3 = new FormData(n3))), "string" == typeof n3 && (u3 = n3), r.fetchOptions = { cache: o.cacheBust ? "no-cache" : "default", credentials: "same-origin", headers: o.headers || {}, method: "head" === o.method ? "HEAD" : "GET", mode: "cors", priority: A2.priority, redirect: "follow", signal: a4 }, (l3 || u3) && (r.fetchOptions.body = l3 || u3), "anonymous" === o.authMode && (r.useIdentity = false), r.hasToken = !!(/token=/i.test(s5) || ((_a = o.query) == null ? void 0 : _a.token) || (l3 == null ? void 0 : l3.get("token"))), !r.hasToken && n2(s5) && (o.query || (o.query = {}), o.query.token = s.apiKey, r.hasToken = true), r.useIdentity && !r.hasToken && !r.credentialToken && !W(s5) && !c(a4)) {
    let e;
    "immediate" === o.authMode ? (await $(), e = await i.getCredential(s5, { signal: a4 }), r.credential = e) : "no-prompt" === o.authMode ? (await $(), e = await i.getCredential(s5, { prompt: false, signal: a4 }).catch(() => {
    }), r.credential = e) : i && (e = i.findCredential(s5)), e && (r.credentialToken = e.token, r.useSSL = !!e.ssl);
  }
}
function W(e) {
  return F2.some((t2) => t2.test(e));
}
async function G(e) {
  let r = e.params.url;
  const s5 = e.params.requestOptions, o = e.fetchOptions ?? {}, a4 = Z(r) || tt(r), i4 = s5.responseType || "json", l3 = a4 ? 0 : null != s5.timeout ? s5.timeout : A2.timeout;
  let d2 = false;
  if (!a4) {
    e.useSSL && (r = $t(r));
    let a5 = { ...s5.query };
    e.credentialToken && (a5.token = e.credentialToken);
    let n3 = v(a5);
    has("esri-url-encodes-apostrophe") && (n3 = n3.replaceAll("'", "%27"));
    const i5 = r.length + 1 + n3.length;
    let l4;
    d2 = "delete" === s5.method || "post" === s5.method || "put" === s5.method || !!s5.body || i5 > A2.maxUrlLength;
    const u3 = s5.useProxy || !!T(r);
    if (u3) {
      const e2 = P(r);
      l4 = e2.path, !d2 && l4.length + 1 + i5 > A2.maxUrlLength && (d2 = true), e2.query && (a5 = { ...e2.query, ...a5 });
    }
    if ("HEAD" === o.method && (d2 || u3)) {
      if (d2) {
        if (i5 > A2.maxUrlLength) throw N("request:invalid-parameters", new Error("URL exceeds maximum length"), e.params);
        throw N("request:invalid-parameters", new Error("cannot use POST request when method is 'head'"), e.params);
      }
      if (u3) throw N("request:invalid-parameters", new Error("cannot use proxy when method is 'head'"), e.params);
    }
    if (d2 ? (o.method = "delete" === s5.method ? "DELETE" : "put" === s5.method ? "PUT" : "POST", s5.body ? r = Et(r, a5) : (o.body = v(a5), o.headers || (o.headers = {}), o.headers["Content-Type"] = "application/x-www-form-urlencoded")) : r = Et(r, a5), u3 && (e.useProxy = true, r = `${l4}?${r}`), a5.token && P2 && o.body instanceof FormData && !a2(r) && o.body.set("token", a5.token), s5.hasOwnProperty("withCredentials")) e.withCredentials = s5.withCredentials;
    else if (!F(r, C())) {
      if (M(r)) e.withCredentials = true;
      else if (i) {
        const s6 = i.findServerInfo(r);
        (s6 == null ? void 0 : s6.webTierAuth) && (e.withCredentials = true);
      }
    }
    e.withCredentials && (o.credentials = "include", d(r) && await f2(d2 ? Et(r, a5) : r));
  }
  let p, O, v2 = 0, E = false;
  l3 > 0 && (v2 = setTimeout(() => {
    E = true, e.controller.abort();
  }, l3));
  try {
    if ("native-request-init" === s5.responseType) O = o, O.url = r, s5.signal ? O.signal = s5.signal : delete O.signal;
    else if ("image" !== s5.responseType || "default" !== o.cache || "GET" !== o.method || d2 || K2(s5.headers) || !a4 && !e.useProxy && A2.proxyUrl && !M2(r)) {
      if (U._beforeFetch && await U._beforeFetch(r, o), p = await fetch(r, o), U._afterFetch && await U._afterFetch(p), e.useProxy || R(r), "native" === s5.responseType) O = p;
      else if ("HEAD" !== o.method) if (p.ok) {
        switch (i4) {
          case "array-buffer":
            O = await p.arrayBuffer();
            break;
          case "blob":
          case "image":
            O = await p.blob();
            break;
          default:
            O = await p.text();
        }
        if (v2 && (clearTimeout(v2), v2 = 0), "json" === i4 || "xml" === i4 || "document" === i4) if (O) switch (i4) {
          case "json":
            O = JSON.parse(O);
            break;
          case "xml":
            O = X2(O, "application/xml");
            break;
          case "document":
            O = X2(O, "text/html");
        }
        else O = null;
        if (O) {
          if ("array-buffer" === i4 || "blob" === i4) {
            const e2 = p.headers.get("Content-Type");
            if (e2 && /application\/json|text\/plain/i.test(e2) && O["blob" === i4 ? "size" : "byteLength"] <= 750) try {
              const e3 = await new Response(O).json();
              e3.error && (O = e3);
            } catch {
            }
          }
          "image" === i4 && O instanceof Blob && (O = await Y(URL.createObjectURL(O), e, true));
        }
      } else {
        O = await p.text();
        try {
          O = JSON.parse(O);
        } catch {
        }
      }
    } else O = await Y(r, e);
  } catch (j2) {
    if ("AbortError" === j2.name) {
      if (E) throw u2();
      throw u("Request canceled");
    }
    if (!(!p && j2 instanceof TypeError && A2.proxyUrl) || s5.body || "delete" === s5.method || "head" === s5.method || "post" === s5.method || "put" === s5.method || e.useProxy || M2(r)) throw j2;
    e.redoRequest = true, H({ proxyUrl: A2.proxyUrl, urlPrefix: X(r) ?? "" });
  } finally {
    v2 && clearTimeout(v2);
  }
  return [p, O];
}
async function J(e, t2) {
  if (null != e.responseData) return e.responseData;
  if (e.headers && (t2.requestOptions.headers = { ...t2.requestOptions.headers, ...e.headers }), e.query && (t2.requestOptions.query = { ...t2.requestOptions.query, ...e.query }), e.before) {
    let o, a4;
    try {
      a4 = await e.before(t2);
    } catch (s5) {
      o = N("request:interceptor", s5, t2);
    }
    if ((a4 instanceof Error || a4 instanceof s2) && (o = N("request:interceptor", a4, t2)), o) throw e.error && e.error(o), o;
    return a4;
  }
}
function K2(e) {
  if (e) {
    for (const t2 of Object.getOwnPropertyNames(e)) if (e[t2]) return true;
  }
  return false;
}
function X2(e, t2) {
  let r;
  try {
    r = new DOMParser().parseFromString(e, t2);
  } catch {
  }
  if (!r || r.getElementsByTagName("parsererror").length) throw new SyntaxError("XML Parse error");
  return r;
}
async function Q(e) {
  var _a, _b;
  let r, s5;
  await z(e);
  try {
    do {
      [r, s5] = await G(e);
    } while (!await V(e, r, s5));
  } catch (n3) {
    const t2 = N("request:server", n3, e.params, r);
    throw t2.details.ssl = e.useSSL, ((_a = e.interceptor) == null ? void 0 : _a.error) && e.interceptor.error(t2), t2;
  }
  const o = e.params.url;
  if (s5 && /\/sharing\/rest\/(accounts|portals)\/self/i.test(o)) {
    if (!e.hasToken && !e.credentialToken && ((_b = s5.user) == null ? void 0 : _b.username) && !M(o)) {
      const e2 = X(o, true);
      e2 && A2.trustedServers.push(e2);
    }
    Array.isArray(s5.authorizedCrossOriginNoCorsDomains) && l2(s5.authorizedCrossOriginNoCorsDomains);
  }
  const a4 = e.credential;
  if (a4 && i) {
    const e2 = i.findServerInfo(a4.server);
    let r2 = e2 == null ? void 0 : e2.owningSystemUrl;
    if (r2) {
      r2 = r2.replace(/\/?$/, "/sharing");
      const e3 = i.findCredential(r2, a4.userId);
      e3 && -1 === i._getIdenticalSvcIdx(r2, e3) && e3.resources.unshift(r2);
    }
  }
  return { data: s5, getAllHeaders: r ? () => Array.from(r.headers) : H2, getHeader: r ? (e2) => r.headers.get(e2) : H2, httpStatus: (r == null ? void 0 : r.status) ?? 200, requestOptions: e.params.requestOptions, ssl: e.useSSL, url: e.params.url };
}
async function V(e, r, s5) {
  var _a;
  if (e.redoRequest) return e.redoRequest = false, false;
  const o = e.params.requestOptions;
  if (!r || "native" === o.responseType || "native-request-init" === o.responseType) return true;
  let a4, n3;
  if (s5 && (s5.error && "object" == typeof s5.error ? a4 = s5.error : "error" === s5.status && Array.isArray(s5.messages) && (a4 = { ...s5 }, a4[I2] = s5, a4.details = s5.messages)), !a4 && !r.ok) throw a4 = new Error(`Unable to load ${r.url} status: ${r.status}`), a4[I2] = s5, a4;
  let i4, l3 = null;
  a4 && (n3 = Number(a4.code), l3 = a4.hasOwnProperty("subcode") ? Number(a4.subcode) : null, i4 = a4.messageCode, i4 = i4 == null ? void 0 : i4.toUpperCase());
  const u3 = o.authMode;
  if (403 === n3 && (4 === l3 || ((_a = a4.message) == null ? void 0 : _a.toLowerCase().includes("ssl")) && !a4.message.toLowerCase().includes("permission"))) {
    if (!e.useSSL) return e.useSSL = true, false;
  } else if (!e.hasToken && e.useIdentity && ("no-prompt" !== u3 || 498 === n3) && void 0 !== n3 && _.has(n3) && !W(e.params.url) && (403 !== n3 || (!i4 || !D2.has(i4)) && (null == l3 || 2 === l3 && e.credentialToken))) {
    await $();
    try {
      const r2 = await i.getCredential(e.params.url, { error: N("request:server", a4, e.params), prompt: "no-prompt" !== u3, signal: e.controller.signal, token: e.credentialToken });
      return e.credential = r2, e.credentialToken = r2.token, e.useSSL = e.useSSL || r2.ssl, false;
    } catch (c4) {
      if ("no-prompt" === u3) return e.credential = void 0, e.credentialToken = void 0, false;
      a4 = c4;
    }
  }
  if (a4) throw a4;
  return true;
}
function Y(e, t2, r = false) {
  const s5 = t2.controller.signal, o = new Image();
  return t2.withCredentials ? o.crossOrigin = "use-credentials" : o.crossOrigin = "anonymous", o.alt = "", o.fetchPriority = A2.priority, o.src = e, i3(o, e, r, s5);
}
U._corsServers = ["https://server.arcgisonline.com", "https://services.arcgisonline.com"], U._beforeFetch = void 0, U._afterFetch = void 0;

export {
  c2 as c,
  f,
  s3 as s,
  i,
  t,
  n,
  l,
  n2,
  i3 as i2,
  m2 as m,
  U
};
//# sourceMappingURL=chunk-CRH37WFF.js.map
