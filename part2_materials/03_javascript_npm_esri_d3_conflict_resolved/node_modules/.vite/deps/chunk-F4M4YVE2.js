import {
  c,
  m as m2,
  p,
  t
} from "./chunk-JHMJSZI5.js";
import {
  d,
  u,
  v2 as v
} from "./chunk-VUJERGGB.js";
import {
  j2 as j,
  n as n3
} from "./chunk-FG3XOAFD.js";
import {
  g
} from "./chunk-2WXAPZBK.js";
import {
  n as n2
} from "./chunk-TVTRNT6K.js";
import {
  U,
  i
} from "./chunk-CRH37WFF.js";
import {
  f
} from "./chunk-HAF6QJ32.js";
import {
  b2 as b,
  m
} from "./chunk-H77COA2S.js";
import {
  a4 as a
} from "./chunk-7LJCT7EA.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import {
  n2 as n,
  s2 as s
} from "./chunk-PKLD5YJF.js";
import {
  has
} from "./chunk-XKQWTZMW.js";

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphQueryResultHeader.js
var t2 = class extends b {
  constructor(e8) {
    super(e8), this.headerKeys = [], this.outSpatialReference = null, this.exceededTransferLimit = false;
  }
};
r([m()], t2.prototype, "headerKeys", void 0), r([m()], t2.prototype, "outSpatialReference", void 0), r([m()], t2.prototype, "exceededTransferLimit", void 0), t2 = r([a("esri.rest.knowledgeGraph.GraphQueryResultHeader")], t2);
var p2 = t2;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphQueryResult.js
var p3 = class extends b {
  constructor(r5) {
    super(r5), this.resultRows = [], this.resultHeader = new p2();
  }
};
r([m()], p3.prototype, "resultRows", void 0), r([m()], p3.prototype, "resultHeader", void 0), p3 = r([a("esri.rest.knowledgeGraph.GraphQueryResult")], p3);
var c2 = p3;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphQueryStreamingResult.js
var a2 = class extends b {
  constructor(r5) {
    super(r5), this.resultRowsStream = new ReadableStream(), this.resultHeader = new p2();
  }
};
r([m()], a2.prototype, "resultRowsStream", void 0), r([m()], a2.prototype, "resultHeader", void 0), a2 = r([a("esri.rest.knowledgeGraph.GraphQueryStreamingResult")], a2);
var p4 = a2;

// node_modules/@arcgis/core/rest/knowledgeGraph/FieldIndex.js
var s2 = class extends f {
  constructor(o3) {
    super(o3), this.name = null, this.unique = null, this.ascending = null, this.description = null, this.fieldNames = null;
  }
};
r([m({ type: String, json: { write: true } })], s2.prototype, "name", void 0), r([m({ type: Boolean, json: { write: true } })], s2.prototype, "unique", void 0), r([m({ type: Boolean, json: { write: true } })], s2.prototype, "ascending", void 0), r([m({ type: String, json: { write: true } })], s2.prototype, "description", void 0), r([m({ type: [String], json: { write: true } })], s2.prototype, "fieldNames", void 0), s2 = r([a("esri.rest.knowledgeGraph.FieldIndex")], s2);
var i2 = s2;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphProperty.js
var i3 = class extends f {
  constructor(t11) {
    super(t11), this.name = null, this.alias = null, this.fieldType = null, this.geometryType = null, this.hasM = null, this.hasZ = null, this.nullable = null, this.editable = null, this.required = null, this.defaultVisibility = null, this.systemMaintained = null, this.role = null, this.defaultValue = null;
  }
};
r([m({ type: String, json: { write: true } })], i3.prototype, "name", void 0), r([m({ type: String, json: { write: true } })], i3.prototype, "alias", void 0), r([m({ type: String, json: { write: true } })], i3.prototype, "fieldType", void 0), r([m({ type: String, json: { write: true } })], i3.prototype, "geometryType", void 0), r([m({ type: Boolean, json: { write: true } })], i3.prototype, "hasM", void 0), r([m({ type: Boolean, json: { write: true } })], i3.prototype, "hasZ", void 0), r([m({ type: Boolean, json: { write: true } })], i3.prototype, "nullable", void 0), r([m({ type: Boolean, json: { write: true } })], i3.prototype, "editable", void 0), r([m({ type: Boolean, json: { write: true } })], i3.prototype, "required", void 0), r([m({ type: Boolean, json: { write: true } })], i3.prototype, "defaultVisibility", void 0), r([m({ type: Boolean, json: { write: true } })], i3.prototype, "systemMaintained", void 0), r([m({ type: String, json: { write: true } })], i3.prototype, "role", void 0), r([m({ json: { write: true } })], i3.prototype, "defaultValue", void 0), i3 = r([a("esri.rest.knowledgeGraph.GraphProperty")], i3);
var s3 = i3;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphObjectType.js
var i4 = class extends f {
  constructor(o3) {
    super(o3), this.name = null, this.alias = null, this.role = null, this.strict = null, this.properties = null, this.fieldIndexes = null, this.type = null;
  }
};
r([m({ type: String, json: { write: true } })], i4.prototype, "name", void 0), r([m({ type: String, json: { write: true } })], i4.prototype, "alias", void 0), r([m({ type: String, json: { write: true } })], i4.prototype, "role", void 0), r([m({ type: Boolean, json: { write: true } })], i4.prototype, "strict", void 0), r([m({ type: [s3], json: { write: true } })], i4.prototype, "properties", void 0), r([m({ type: [i2], json: { write: true } })], i4.prototype, "fieldIndexes", void 0), i4 = r([a("esri.rest.knowledgeGraph.GraphObjectType")], i4);
var l = i4;

// node_modules/@arcgis/core/rest/knowledgeGraph/EntityType.js
var t3 = class extends l {
  constructor(r5) {
    super(r5), this.type = "entity";
  }
};
t3 = r([a("esri.rest.knowledgeGraph.EntityType")], t3);
var e = t3;

// node_modules/@arcgis/core/rest/knowledgeGraph/RelationshipType.js
var t4 = class extends l {
  constructor(o3) {
    super(o3), this.endPoints = [], this.type = "relationship";
  }
};
r([m()], t4.prototype, "endPoints", void 0), t4 = r([a("esri.rest.knowledgeGraph.RelationshipType")], t4);
var p5 = t4;

// node_modules/@arcgis/core/rest/knowledgeGraph/SourceTypeValueBehavior.js
var t5 = class extends f {
  constructor(o3) {
    super(o3), this.value = null, this.behavior = null;
  }
};
r([m({ type: String, json: { write: true } })], t5.prototype, "value", void 0), r([m({ type: String, json: { write: true } })], t5.prototype, "behavior", void 0), t5 = r([a("esri.rest.knowledgeGraph.SourceTypeValueBehavior")], t5);
var p6 = t5;

// node_modules/@arcgis/core/rest/knowledgeGraph/DataModel.js
var l2 = class extends f {
  constructor(e8) {
    super(e8), this.timestamp = null, this.spatialReference = null, this.strict = null, this.objectIdField = null, this.globalIdField = null, this.arcgisManaged = null, this.identifierInfo = null, this.searchIndexes = null, this.entityTypes = null, this.relationshipTypes = null, this.metaEntityTypes = null, this.provenanceSourceTypeValues = null;
  }
};
r([m({ type: Date, json: { type: Number, write: { writer: (e8, t11) => {
  t11.timestamp = e8 == null ? void 0 : e8.getTime();
} } } })], l2.prototype, "timestamp", void 0), r([m({ type: g, json: { write: true } })], l2.prototype, "spatialReference", void 0), r([m({ type: Boolean, json: { write: true } })], l2.prototype, "strict", void 0), r([m({ type: String, json: { write: true } })], l2.prototype, "objectIdField", void 0), r([m({ type: String, json: { write: true } })], l2.prototype, "globalIdField", void 0), r([m()], l2.prototype, "arcgisManaged", void 0), r([m()], l2.prototype, "identifierInfo", void 0), r([m()], l2.prototype, "searchIndexes", void 0), r([m({ type: [e], json: { write: true } })], l2.prototype, "entityTypes", void 0), r([m({ type: [p5], json: { write: true } })], l2.prototype, "relationshipTypes", void 0), r([m({ type: [e], json: { write: true } })], l2.prototype, "metaEntityTypes", void 0), r([m({ type: [p6], json: { write: true } })], l2.prototype, "provenanceSourceTypeValues", void 0), l2 = r([a("esri.rest.knowledgeGraph.DataModel")], l2);
var a3 = l2;

// node_modules/@arcgis/core/rest/knowledgeGraph/ServiceDefinition.js
var p7 = class extends f {
  constructor(t11) {
    super(t11), this.capabilities = [], this.supportsSearch = false, this.supportedQueryFormats = [], this.allowGeometryUpdates = false, this.searchMaxRecordCount = null, this.serviceCapabilities = null, this.maxRecordCount = null, this.description = "", this.copyrightText = "", this.units = "", this.spatialReference = null, this.currentVersion = null, this.dateFieldsTimeReference = null, this.serviceItemId = "", this.supportsDocuments = false, this.dataEditingNotSupported = false, this.schemaEditingNotSupported = false, this.supportsProvenance = false;
  }
};
r([m({ type: [String], json: { write: true } })], p7.prototype, "capabilities", void 0), r([m({ type: Boolean, json: { write: true } })], p7.prototype, "supportsSearch", void 0), r([m({ type: [String], json: { write: true } })], p7.prototype, "supportedQueryFormats", void 0), r([m({ type: Boolean, json: { write: true } })], p7.prototype, "allowGeometryUpdates", void 0), r([m({ type: Number, json: { write: true } })], p7.prototype, "searchMaxRecordCount", void 0), r([m({ type: Object, json: { write: true } })], p7.prototype, "serviceCapabilities", void 0), r([m({ type: Number, json: { write: true } })], p7.prototype, "maxRecordCount", void 0), r([m({ type: String, json: { write: true } })], p7.prototype, "description", void 0), r([m({ type: String, json: { write: true } })], p7.prototype, "copyrightText", void 0), r([m({ type: String, json: { write: true } })], p7.prototype, "units", void 0), r([m({ type: g, json: { write: true } })], p7.prototype, "spatialReference", void 0), r([m({ type: Number, json: { write: true } })], p7.prototype, "currentVersion", void 0), r([m({ type: Object, json: { write: true } })], p7.prototype, "dateFieldsTimeReference", void 0), r([m({ type: String, json: { write: true } })], p7.prototype, "serviceItemId", void 0), r([m({ type: Boolean, json: { write: true } })], p7.prototype, "supportsDocuments", void 0), r([m({ type: Boolean, json: { write: true } })], p7.prototype, "dataEditingNotSupported", void 0), r([m({ type: Boolean, json: { write: true } })], p7.prototype, "schemaEditingNotSupported", void 0), r([m({ type: Boolean, json: { write: true } })], p7.prototype, "supportsProvenance", void 0), p7 = r([a("esri.rest.knowledgeGraph.ServiceDefinition")], p7);
var s4 = p7;

// node_modules/@arcgis/core/rest/knowledgeGraph/KnowledgeGraph.js
var p8 = class extends f {
  constructor(o3) {
    super(o3), this.dataModel = null, this.serviceDefinition = null;
  }
};
r([m({ type: String, json: { write: true } })], p8.prototype, "url", void 0), r([m({ type: a3, json: { write: true } })], p8.prototype, "dataModel", void 0), r([m({ type: s4, json: { write: true } })], p8.prototype, "serviceDefinition", void 0), p8 = r([a("esri.rest.knowledgeGraph.KnowledgeGraph")], p8);
var c3 = p8;

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmUtils.js
function e2(e8, o3, s8) {
  if (0 !== e8.error_code) throw new s(o3, s8, { errorCode: e8.error_code, errorMessage: e8.error_message });
}

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/clientDataToWasmEncodedFactories.js
function t6(t11, r5, a6, o3 = false) {
  const c6 = new a6.ClientDataFetchRequestEncoder();
  c6.deleteLater();
  for (const e8 of t11) {
    const t12 = n4(e8, r5, a6, o3);
    c6.add_client_data_fetch_request_parameter(t12);
  }
  c6.encode();
  const s8 = c6.get_encoding_result();
  return e2(s8.error, "knowledge-graph:fetchClientDataAtKeys-encoding-failed", "Attempting to encode the fetchClientDataAtKeys failed"), structuredClone(s8.get_byte_buffer());
}
function n4(e8, t11, n9, r5) {
  const a6 = new n9.ClientDataKey();
  a6.deleteLater(), a6.key_string = e8;
  const o3 = new n9.ClientDataFetchRequestParameter();
  o3.deleteLater(), o3.set_key(a6);
  const c6 = t11.get(e8);
  return c6 && !r5 && (o3.v_tag = { v_tag: c6.version }), o3;
}

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/knowledgeWasmAccess.js
var t7 = "esri/rest/knowledgeGraph/wasmInterface/";
var s5;
var n5 = null;
async function r2() {
  const e8 = n5 ?? s5;
  if (e8) return e8;
  const t11 = !!has("wasm-simd");
  return s5 = o(t11), s5;
}
async function o(s8) {
  if (s8) {
    const { default: s9 } = await import("./arcgis-knowledge-client-core-simd-PK2W6L6K.js").then((e8) => e8.a);
    return s9({ locateFile: (s10) => n2(t7 + s10) });
  }
  const { default: n9 } = await import("./arcgis-knowledge-client-core-LX2AZI6R.js").then((e8) => e8.a);
  return n9({ locateFile: (s9) => n2(t7 + s9) });
}

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/WasmQueryWrapperInterfaces.js
var e3;
var T;
var i5;
!function(e8) {
  e8[e8.OBJECT = 0] = "OBJECT", e8[e8.ENTITY = 1] = "ENTITY", e8[e8.RELATIONSHIP = 2] = "RELATIONSHIP", e8[e8.PATH = 3] = "PATH", e8[e8.ARRAY = 4] = "ARRAY";
}(e3 || (e3 = {})), function(e8) {
  e8[e8.view = 0] = "view", e8[e8.edit = 1] = "edit";
}(T || (T = {})), function(e8) {
  e8[e8.exclude = 0] = "exclude", e8[e8.include = 1] = "include";
}(i5 || (i5 = {}));

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/queryToWasmEncodedFactories.js
function s6(e8, t11) {
  const n9 = new t11.ArrayValue();
  return n9.deleteLater(), e8.forEach((e9) => {
    n9.add_value(f2(e9, t11));
  }), n9;
}
function l3(e8, t11) {
  const n9 = new t11.ObjectValue();
  n9.deleteLater();
  for (const [o3, r5] of Object.entries(e8)) n9.set_key_value(o3, f2(r5, t11));
  return n9;
}
function u2(a6, i9) {
  if (a6 instanceof u) return g2(a6, i9);
  if (a6 instanceof j) return h(a6, i9);
  if (a6 instanceof d || a6 instanceof v) return p9(a6, i9);
  throw new s("knowledge-graph:unsupported-geometry", "Only Point, Multipoint, Polyline, and Polygon geometry are supported by ArcGIS Knowledge", { geometry: a6 });
}
function y(e8, t11) {
  t11.input_quantization_parameters = { xy_resolution: e8.xyResolution, x_false_origin: e8.xFalseOrigin, y_false_origin: e8.yFalseOrigin, z_resolution: e8.zResolution, z_false_origin: e8.zFalseOrigin, m_resolution: e8.mResolution, m_false_origin: e8.mFalseOrigin };
}
function m3(t11, n9, o3) {
  if (!t11.extent) throw new s("knowledge-graph:illegal-output-quantization", "The Output quantization provided to the encoder had an illegal value as part of its extent", t11.extent);
  if (!t11.quantizeMode) throw new s("knowledge-graph:illegal-output-quantization", "The Output quantization contained an illegal mode setting", t11.quantizeMode);
  if (!t11.tolerance) throw new s("knowledge-graph:illegal-output-quantization", "The Output quantization contained an illegal tolerance setting", t11.quantizeMode);
  n9.output_quantization_parameters = { extent: { xmax: t11.extent.xmax, ymax: t11.extent.ymax, xmin: t11.extent.xmin, ymin: t11.extent.ymin }, quantize_mode: o3.esriQuantizeMode[t11.quantizeMode], tolerance: t11.tolerance };
}
function c4(e8, t11) {
  t11.provenance_behavior = { value: i5[e8] };
}
function f2(e8, t11) {
  if (null == e8) return "";
  if ("object" != typeof e8) return e8;
  if (e8 instanceof Date) return e8;
  if (e8 instanceof n3) return u2(e8, t11);
  if (Array.isArray(e8)) {
    const n9 = new t11.ArrayValue();
    return n9.deleteLater(), e8.forEach((e9) => {
      n9.add_value(f2(e9, t11));
    }), n9;
  }
  return l3(e8, t11);
}
function p9(e8, t11) {
  const n9 = new t11.GeometryValue();
  n9.deleteLater(), n9.has_z = e8.hasZ, n9.has_m = e8.hasM;
  const a6 = [], i9 = [];
  let s8 = [];
  e8 instanceof d ? (n9.geometry_type = t11.esriGeometryType.esriGeometryPolyline, s8 = e8.paths) : e8 instanceof v && (n9.geometry_type = t11.esriGeometryType.esriGeometryPolygon, s8 = e8.rings);
  let l5 = 0, u3 = 0;
  return s8.forEach((e9) => {
    let t12 = 0;
    e9.forEach((e10) => {
      t12++, e10.forEach((e11) => {
        a6[u3] = e11, u3++;
      });
    }), i9[l5] = t12, l5++;
  }), n9.coords = new Float64Array(a6), n9.lengths = new Uint32Array(i9), n9;
}
function g2(e8, t11) {
  const n9 = new t11.GeometryValue();
  n9.deleteLater(), n9.geometry_type = n9.geometry_type = t11.esriGeometryType.esriGeometryMultipoint, n9.has_z = e8.hasZ, n9.has_m = e8.hasM;
  const o3 = [], r5 = [];
  r5[0] = e8.points.length;
  let a6 = 0;
  return e8.points.forEach((e9) => {
    e9.forEach((e10) => {
      o3[a6] = e10, a6++;
    });
  }), n9.coords = new Float64Array(o3), n9.lengths = new Uint32Array(r5), n9;
}
function h(e8, t11) {
  const n9 = new t11.GeometryValue();
  n9.deleteLater(), n9.geometry_type = t11.esriGeometryType.esriGeometryPoint, n9.has_z = e8.hasZ, n9.has_m = e8.hasM;
  const o3 = [], r5 = [];
  r5[0] = 1, o3[0] = e8.x, o3[1] = e8.y;
  let a6 = 2;
  return e8.hasZ && (o3[a6] = e8.z, a6++), e8.hasM && (o3[a6] = e8.m, a6++), n9.coords = new Float64Array(o3), n9.lengths = new Uint32Array(r5), n9;
}

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/updateToWasmEncodedFactories.js
function r3(i9, n9) {
  if (!i9.typeName) throw new s("knowledge-graph:no-type-name", "You must indicate the entity/relationship named object type to apply edits");
  if (i9 instanceof m2) {
    const e8 = new n9.EntityValue();
    e8.deleteLater(), e8.type_name = i9.typeName;
    for (const [t11, o3] of Object.entries(i9.properties)) e8.set_key_value(t11, a4(o3, n9));
    return i9.id && e8.set_id(i9.id), e8;
  }
  if (i9 instanceof p) {
    const e8 = new n9.RelationshipValue();
    e8.deleteLater(), e8.type_name = i9.typeName;
    for (const [t11, o3] of Object.entries(i9.properties)) e8.set_key_value(t11, a4(o3, n9));
    return i9.id && e8.set_id(i9.id), i9.originId && i9.destinationId && e8.set_related_entity_ids(i9.originId, i9.destinationId), e8;
  }
  throw new s("knowledge-graph:applyEdits-encoding-failure", "Could not determine the type of a named graph object passed to the encoder");
}
function s7(e8) {
  return { xy_resolution: e8.xyResolution, x_false_origin: e8.xFalseOrigin, y_false_origin: e8.yFalseOrigin, z_resolution: e8.zResolution, z_false_origin: e8.zFalseOrigin, m_resolution: e8.mResolution, m_false_origin: e8.mFalseOrigin };
}
function a4(e8, t11) {
  return null == e8 ? null : "object" != typeof e8 || e8 instanceof Date ? e8 : e8 instanceof n3 ? u2(e8, t11) : null;
}

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/WasmClientDataInterfaces.js
var e4;
var t8;
var i6;
var n6;
!function(e8) {
  e8[e8.ClientDataKeyTypeUNSPECIFIED = 0] = "ClientDataKeyTypeUNSPECIFIED", e8[e8.ClientDataKeyTypeString = 1] = "ClientDataKeyTypeString";
}(e4 || (e4 = {})), function(e8) {
  e8[e8.ClientDataTypeUNSPECIFIED = 0] = "ClientDataTypeUNSPECIFIED", e8[e8.ClientDataTypeString = 1] = "ClientDataTypeString";
}(t8 || (t8 = {})), function(e8) {
  e8[e8.Unspecified = 0] = "Unspecified", e8[e8.ClientData = 1] = "ClientData", e8[e8.NotModified = 2] = "NotModified";
}(i6 || (i6 = {})), function(e8) {
  e8[e8.Unspecified = 0] = "Unspecified", e8[e8.Error = 1] = "Error", e8[e8.ClientDataValue = 2] = "ClientDataValue";
}(n6 || (n6 = {}));

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToClientDataFactories.js
function n7(a6, n9, _2, s8 = false) {
  const r5 = /* @__PURE__ */ new Map();
  for (let o3 = 0; o3 < a6.get_results_count(); o3++) {
    const g5 = a6.get_result_at(o3);
    if (g5.get_fetch_result_case().value !== n6.ClientDataValue || 0 !== g5.error().error_code) {
      const e8 = g5.get_key().key_string;
      _2.has(e8) && n9.delete(e8);
      continue;
    }
    const l5 = g5.get_value(), i9 = g5.get_key().key_string, c6 = _2.get(i9);
    let u3;
    if (l5.get_data_case().value === i6.NotModified && c6) u3 = c6.value;
    else {
      if (l5.get_data_case().value !== i6.ClientData) continue;
      {
        u3 = l5.get_data().client_data_string;
        const e8 = g5.get_value().get_v_tag().v_tag;
        s8 || n9.set(i9, { key: i9, version: e8, value: u3 });
      }
    }
    r5.set(i9, u3);
  }
  return r5;
}
function _(e8) {
  const t11 = e8.get_keys(), n9 = new Array();
  for (let _2 = 0; _2 < t11.get_keys_count(); _2++) {
    const e9 = t11.get_key_at(_2);
    e9.get_client_data_key_type().value === e4.ClientDataKeyTypeString && n9.push(e9.key_string);
  }
  return n9;
}

// node_modules/@arcgis/core/rest/knowledgeGraph/SearchIndex.js
var t9 = class extends b {
  constructor(r5) {
    super(r5), this.name = null, this.supportedCategory = null, this.analyzers = [], this.searchProperties = /* @__PURE__ */ new Map();
  }
};
r([m()], t9.prototype, "name", void 0), r([m()], t9.prototype, "supportedCategory", void 0), r([m()], t9.prototype, "analyzers", void 0), r([m()], t9.prototype, "searchProperties", void 0), t9 = r([a("esri.rest.knowledgeGraph.SearchIndex")], t9);
var p10 = t9;

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/WasmDataModelWrapperInterfaces.js
var e5;
var r4;
var i7;
var t10;
var o2;
var p11;
var n8;
!function(e8) {
  e8[e8.Regular = 0] = "Regular", e8[e8.Provenance = 1] = "Provenance", e8[e8.Document = 2] = "Document";
}(e5 || (e5 = {})), function(e8) {
  e8[e8.esriFieldTypeSmallInteger = 0] = "esriFieldTypeSmallInteger", e8[e8.esriFieldTypeInteger = 1] = "esriFieldTypeInteger", e8[e8.esriFieldTypeSingle = 2] = "esriFieldTypeSingle", e8[e8.esriFieldTypeDouble = 3] = "esriFieldTypeDouble", e8[e8.esriFieldTypeString = 4] = "esriFieldTypeString", e8[e8.esriFieldTypeDate = 5] = "esriFieldTypeDate", e8[e8.esriFieldTypeOID = 6] = "esriFieldTypeOID", e8[e8.esriFieldTypeGeometry = 7] = "esriFieldTypeGeometry", e8[e8.esriFieldTypeBlob = 8] = "esriFieldTypeBlob", e8[e8.esriFieldTypeRaster = 9] = "esriFieldTypeRaster", e8[e8.esriFieldTypeGUID = 10] = "esriFieldTypeGUID", e8[e8.esriFieldTypeGlobalID = 11] = "esriFieldTypeGlobalID", e8[e8.esriFieldTypeXML = 12] = "esriFieldTypeXML", e8[e8.esriFieldTypeBigInteger = 13] = "esriFieldTypeBigInteger", e8[e8.esriFieldTypeDateOnly = 14] = "esriFieldTypeDateOnly", e8[e8.esriFieldTypeTimeOnly = 15] = "esriFieldTypeTimeOnly", e8[e8.esriFieldTypeTimestampOffset = 16] = "esriFieldTypeTimestampOffset";
}(r4 || (r4 = {})), function(e8) {
  e8[e8.esriGeometryNull = 0] = "esriGeometryNull", e8[e8.esriGeometryPoint = 1] = "esriGeometryPoint", e8[e8.esriGeometryMultipoint = 2] = "esriGeometryMultipoint", e8[e8.esriGeometryPolyline = 3] = "esriGeometryPolyline", e8[e8.esriGeometryPolygon = 4] = "esriGeometryPolygon", e8[e8.esriGeometryEnvelope = 5] = "esriGeometryEnvelope", e8[e8.esriGeometryAny = 6] = "esriGeometryAny", e8[e8.esriGeometryMultiPatch = 7] = "esriGeometryMultiPatch";
}(i7 || (i7 = {})), function(e8) {
  e8[e8.esriMethodHintUNSPECIFIED = 0] = "esriMethodHintUNSPECIFIED", e8[e8.esriUUIDESRI = 1] = "esriUUIDESRI", e8[e8.esriUUIDRFC4122 = 2] = "esriUUIDRFC4122";
}(t10 || (t10 = {})), function(e8) {
  e8[e8.esriTypeUNSPECIFIED = 0] = "esriTypeUNSPECIFIED", e8[e8.esriTypeEntity = 1] = "esriTypeEntity", e8[e8.esriTypeRelationship = 2] = "esriTypeRelationship", e8[e8.esriTypeBoth = 4] = "esriTypeBoth";
}(o2 || (o2 = {})), function(e8) {
  e8[e8.esriGraphPropertyUNSPECIFIED = 0] = "esriGraphPropertyUNSPECIFIED", e8[e8.esriGraphPropertyRegular = 1] = "esriGraphPropertyRegular", e8[e8.esriGraphPropertyDocumentName = 2] = "esriGraphPropertyDocumentName", e8[e8.esriGraphPropertyDocumentTitle = 3] = "esriGraphPropertyDocumentTitle", e8[e8.esriGraphPropertyDocumentUrl = 4] = "esriGraphPropertyDocumentUrl", e8[e8.esriGraphPropertyDocumentText = 5] = "esriGraphPropertyDocumentText", e8[e8.esriGraphPropertyDocumentKeywords = 6] = "esriGraphPropertyDocumentKeywords", e8[e8.esriGraphPropertyDocumentContentType = 7] = "esriGraphPropertyDocumentContentType", e8[e8.esriGraphPropertyDocumentMetadata = 8] = "esriGraphPropertyDocumentMetadata", e8[e8.esriGraphPropertyDocumentFileExtension = 9] = "esriGraphPropertyDocumentFileExtension", e8[e8.esriGraphPropertyProvenanceInstanceId = 10] = "esriGraphPropertyProvenanceInstanceId", e8[e8.esriGraphPropertyProvenanceSourceType = 11] = "esriGraphPropertyProvenanceSourceType", e8[e8.esriGraphPropertyProvenanceSourceName = 12] = "esriGraphPropertyProvenanceSourceName", e8[e8.esriGraphPropertyProvenanceSource = 13] = "esriGraphPropertyProvenanceSource", e8[e8.esriGraphPropertyProvenanceComment = 14] = "esriGraphPropertyProvenanceComment", e8[e8.esriGraphPropertyProvenanceTypeName = 15] = "esriGraphPropertyProvenanceTypeName", e8[e8.esriGraphPropertyProvenancePropertyName = 16] = "esriGraphPropertyProvenancePropertyName";
}(p11 || (p11 = {})), function(e8) {
  e8[e8.esriIdentifierInfoTypeUNSPECIFIED = 0] = "esriIdentifierInfoTypeUNSPECIFIED", e8[e8.esriIdentifierInfoTypeDatabaseNative = 1] = "esriIdentifierInfoTypeDatabaseNative", e8[e8.esriIdentifierInfoTypeUniformProperty = 2] = "esriIdentifierInfoTypeUniformProperty";
}(n8 || (n8 = {}));

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToDataModelFactories.js
var g3 = false;
function h2(r5) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k;
  r5.deleteLater(), g3 = false;
  const n9 = new a3({ timestamp: r5.timestamp, spatialReference: new g(r5.spatial_reference), strict: r5.strict, objectIdField: r5.objectid_property, globalIdField: r5.globalid_property, arcgisManaged: r5.arcgis_managed, identifierInfo: { identifierMappingInfo: { identifierInfoType: n8[(_c = (_b = (_a = r5.identifier_info) == null ? void 0 : _a.identifier_mapping_info) == null ? void 0 : _b.identifier_info_type) == null ? void 0 : _c.value], databaseNativeIdentifier: (_e = (_d = r5.identifier_info) == null ? void 0 : _d.identifier_mapping_info) == null ? void 0 : _e.database_native_identifier, uniformPropertyIdentifier: { identifierPropertyName: (_h = (_g = (_f = r5.identifier_info) == null ? void 0 : _f.identifier_mapping_info) == null ? void 0 : _g.uniform_property_identifier) == null ? void 0 : _h.identifier_property_name } }, identifierGenerationInfo: { uuidMethodHint: t10[(_k = (_j = (_i = r5.identifier_info) == null ? void 0 : _i.identifier_generation_info) == null ? void 0 : _j.uuid_method_hint) == null ? void 0 : _k.value] } }, searchIndexes: S(r5.search_indexes), entityTypes: L(r5.entity_types), relationshipTypes: F(r5.relationship_types), metaEntityTypes: L(r5.meta_entity_types), provenanceSourceTypeValues: G(r5.provenance_source_type_values.value_behavior_array) });
  return g3 && n.getLogger("esri.rest.knowledgeGraph.knowledgeGraphService").warnOnce("A big integer field was detected in the retrieved data model.  The `big-integer` field type is not fully supported in web clients.  Please see https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-Field.html#type"), n9;
}
function v2(e8) {
  return e8.deleteLater(), new e(z(e8));
}
function b2(e8) {
  return e8.deleteLater(), new i2({ name: e8.name, unique: e8.unique, ascending: e8.ascending, description: e8.description, fieldNames: x(e8.fields) });
}
function z(e8) {
  return { name: e8.name, alias: e8.alias, role: e5[e8.role.value] ? e5[e8.role.value] : null, strict: e8.strict, properties: M(e8.properties), fieldIndexes: P(e8.field_indexes) };
}
function T2(e8) {
  return e8.deleteLater(), new s3({ alias: e8.alias, name: e8.name, fieldType: r4[e8.field_type.value] ? r4[e8.field_type.value] : null, geometryType: i7[e8.geometry_type.value] ? i7[e8.geometry_type.value] : null, hasM: e8.has_m, hasZ: e8.has_z, nullable: e8.nullable, editable: e8.editable, required: e8.required, defaultVisibility: e8.default_visibility, systemMaintained: e8.system_maintained, role: p11[e8.role.value], defaultValue: e8.default_value });
}
function w(e8) {
  e8.deleteLater();
  const t11 = z(e8), i9 = [];
  for (let r5 = 0; r5 < e8.end_points.size(); r5++) {
    const t12 = e8.end_points.get(r5);
    i9.push({ originEntityType: t12.origin_entity_type, destinationEntityType: t12.dest_entity_type });
  }
  return e8.end_points.delete(), new p5(Object.assign({ endPoints: i9 }, t11));
}
function I(e8) {
  return new p6({ behavior: e8.behavior, value: e8.value });
}
function L(e8) {
  const t11 = [];
  for (let i9 = 0; i9 < e8.size(); i9++) t11.push(v2(e8.get(i9)));
  return e8.delete(), t11;
}
function x(e8) {
  const t11 = [];
  for (let i9 = 0; i9 < e8.size(); i9++) t11.push(e8.get(i9));
  return e8.delete(), t11;
}
function M(e8) {
  const t11 = [];
  for (let i9 = 0; i9 < e8.size(); i9++) {
    const r5 = T2(e8.get(i9));
    "esriFieldTypeBigInteger" === r5.fieldType && (g3 = true), t11.push(r5);
  }
  return e8.delete(), t11;
}
function P(e8) {
  const t11 = [];
  for (let i9 = 0; i9 < e8.size(); i9++) t11.push(b2(e8.get(i9)));
  return e8.delete(), t11;
}
function F(e8) {
  const t11 = [];
  for (let i9 = 0; i9 < e8.size(); i9++) t11.push(w(e8.get(i9)));
  return e8.delete(), t11;
}
function G(e8) {
  const t11 = [];
  for (let i9 = 0; i9 < e8.size(); i9++) {
    const r5 = e8.get(i9);
    r5.deleteLater(), t11.push(I(r5));
  }
  return e8.delete(), t11;
}
function S(e8) {
  const t11 = [];
  for (let i9 = 0; i9 < e8.size(); i9++) {
    const i10 = new p10(), r5 = e8.get(0);
    i10.name = r5.name, i10.supportedCategory = o2[r5.supported_category.value];
    const n9 = r5.analyzers.size();
    for (let e9 = 0; e9 < n9; e9++) i10.analyzers.push({ name: r5.analyzers.get(e9).name });
    r5.analyzers.delete();
    for (let e9 = 0; e9 < r5.search_properties.keys().size(); e9++) {
      const t12 = r5.search_properties.keys().get(e9), n10 = r5.search_properties.get(t12), a6 = [];
      for (let e10 = 0; e10 < n10.property_names.size(); e10++) a6.push(n10.property_names.get(e10));
      i10.searchProperties.set(t12, { propertyNames: a6 });
    }
    t11.push(i10);
  }
  return e8.delete(), t11;
}

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/KnowledgeWasmInterface.js
var E;
!function(E4) {
  E4[E4.ESRI_GEOMETRY_NULL = 0] = "ESRI_GEOMETRY_NULL", E4[E4.ESRI_GEOMETRY_POINT = 1] = "ESRI_GEOMETRY_POINT", E4[E4.ESRI_GEOMETRY_MULTIPOINT = 2] = "ESRI_GEOMETRY_MULTIPOINT", E4[E4.ESRI_GEOMETRY_POLYLINE = 3] = "ESRI_GEOMETRY_POLYLINE", E4[E4.ESRI_GEOMETRY_POLYGON = 4] = "ESRI_GEOMETRY_POLYGON", E4[E4.ESRI_GEOMETRY_ENVELOPE = 5] = "ESRI_GEOMETRY_ENVELOPE", E4[E4.ESRI_GEOMETRY_ANY = 6] = "ESRI_GEOMETRY_ANY", E4[E4.ESRI_GEOMETRY_MULTI_PATCH = 7] = "ESRI_GEOMETRY_MULTI_PATCH";
}(E || (E = {}));

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToGeometryFactories.js
function a5(e8, o3) {
  const s8 = { spatialReference: o3 }, r5 = c5(e8, s8), n9 = e8.lengths, a6 = e8.coords, h5 = n9[0];
  s8.points = [];
  let l5 = 0;
  for (let t11 = 0; t11 < h5; t11++) {
    const e9 = [];
    for (let t12 = 0; t12 < r5; t12++) e9[t12] = a6[l5], l5++;
    s8.points.push(e9);
  }
  return new u(s8);
}
function h3(e8, t11) {
  const s8 = { spatialReference: t11 };
  let r5 = 2;
  c5(e8, s8);
  const n9 = e8.coords;
  return s8.x = n9[0], s8.y = n9[1], e8.has_z && (s8.z = n9[r5], r5++), e8.has_m && (s8.m = n9[r5]), new j(s8);
}
function l4(e8, t11) {
  const { paths: o3, hasM: s8, hasZ: a6 } = p12(e8, E.ESRI_GEOMETRY_POLYLINE);
  return new d({ paths: o3, hasM: s8, hasZ: a6, spatialReference: t11 });
}
function i8(e8, t11) {
  const { paths: o3, hasM: r5, hasZ: a6 } = p12(e8, E.ESRI_GEOMETRY_POLYGON);
  return new v({ rings: o3, hasM: r5, hasZ: a6, spatialReference: t11 });
}
function p12(t11, o3) {
  const s8 = { paths: [], hasM: false, hasZ: false }, r5 = c5(t11, s8), { coords: n9, geometry_type: a6, lengths: h5 } = t11;
  if (a6.value !== o3) throw new s("KnowledgeGraph:illegal-geometry-type", "Illegal Geometry type for multipath conversion");
  let l5 = 0;
  return h5.forEach((e8) => {
    const t12 = [];
    for (let o4 = 0; o4 < e8; o4++) {
      const e9 = [];
      for (let t13 = 0; t13 < r5; t13++) e9[t13] = n9[l5], l5++;
      t12.push(e9);
    }
    s8.paths.push(t12);
  }), s8;
}
function c5(e8, t11) {
  let o3 = 2;
  return e8.has_z ? (t11.hasZ = e8.has_z, o3++) : t11.hasZ = false, e8.has_m ? (t11.hasM = e8.has_m, o3++) : t11.hasM = false, o3;
}

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToQueryResponseObjFactories.js
var m4 = () => n.getLogger("esri.rest.knowledgeGraph.WasmToQueryResponseObjConstructors");
var f3 = { decodedWasmObjToQueryResponseObj: (e8, t11, r5) => {
  if (null == e8) return null;
  if ("object" != typeof e8) return e8;
  if ("getDate" in e8) return e8;
  if ("geometry_type" in e8) switch (e8.geometry_type.value) {
    case null:
      return null;
    case E.ESRI_GEOMETRY_POINT:
      return h3(e8, r5);
    case E.ESRI_GEOMETRY_MULTIPOINT:
      return a5(e8, r5);
    case E.ESRI_GEOMETRY_POLYLINE:
      return l4(e8, r5);
    case E.ESRI_GEOMETRY_POLYGON:
      return i8(e8, r5);
    case E.ESRI_GEOMETRY_ENVELOPE:
    case E.ESRI_GEOMETRY_MULTI_PATCH:
      return m4().warnOnce("Envelope and Multipatch are not supported on knowledge entities, but one of those geometry types was detected. Result interpreted as null"), null;
    case E.ESRI_GEOMETRY_NULL:
    case E.ESRI_GEOMETRY_ANY:
    default:
      return m4().warnOnce("Unknown or blank geometry type returned - Result interpreted as null"), null;
  }
  else {
    if (!("object_value_type" in e8)) return m4().warnOnce("A decoded value came back of a type that is not supported. Result interpreted as null"), null;
    switch (e8.object_value_type.value) {
      case e3.OBJECT:
        return j2(e8, t11, r5);
      case e3.ENTITY:
        return E2(e8, t11, r5);
      case e3.RELATIONSHIP:
        return h4(e8, t11, r5);
      case e3.PATH:
        return T3(e8, t11, r5);
      case e3.ARRAY:
        return y2(e8, t11, r5);
      default:
        return m4().warnOnce("Unknown graph object type detected!  Result interpreted as null"), null;
    }
  }
} };
function y2(e8, t11, r5) {
  const n9 = [], o3 = e8.count();
  for (let s8 = 0; s8 < o3; s8++) {
    const o4 = e8.get_value_at(s8);
    n9.push(g4(o4, t11, r5));
  }
  return n9;
}
function g4(e8, t11, r5) {
  return f3.decodedWasmObjToQueryResponseObj(e8, t11, r5);
}
function E2(e8, r5, n9) {
  const o3 = e8.type_name, s8 = O(e8, r5, n9), a6 = e8.get_id();
  return new m2(Object.assign({ typeName: o3, id: a6 }, s8));
}
function O(e8, t11, r5) {
  const n9 = {}, o3 = e8.key_count();
  for (let s8 = 0; s8 < o3; s8++) n9[e8.get_key_at(s8)] = g4(e8.get_value_at(s8), t11, r5);
  return { properties: n9 };
}
function j2(e8, t11, r5) {
  return new t(O(e8, t11, r5));
}
function T3(e8, t11, r5) {
  const n9 = e8.entity_count(), o3 = e8.relationship_count(), a6 = [];
  for (let s8 = 0; s8 < n9; s8++) a6.push(E2(e8.get_entity_at(s8), t11, r5)), s8 < o3 && a6.push(h4(e8.get_relationship_at(s8), t11, r5));
  return new c({ path: a6 });
}
function h4(e8, t11, r5) {
  const n9 = e8.type_name, o3 = O(e8, t11, r5);
  return new p(Object.assign({ typeName: n9, id: e8.get_id(), originId: e8.get_origin_entity_id(), destinationId: e8.get_destination_entity_id() }, o3));
}
function w2(e8) {
  const t11 = [];
  for (let n9 = 0; n9 < e8.get_header_keys().size(); n9++) t11.push(e8.get_header_keys().get(n9));
  const r5 = new g(e8.get_out_sr());
  return new p2({ headerKeys: t11, outSpatialReference: r5, exceededTransferLimit: e8.exceeded_transfer_limit() });
}

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphApplyEditsResult.js
var e6 = class extends b {
  constructor(r5) {
    super(r5), this.hasError = null, this.error = null, this.editResults = [];
  }
};
r([m()], e6.prototype, "hasError", void 0), r([m()], e6.prototype, "error", void 0), r([m()], e6.prototype, "editResults", void 0), e6 = r([a("esri.rest.knowledgeGraph.GraphApplyEditsResult")], e6);
var p14 = e6;

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToUpdateResponseFactories.js
function e7(e8) {
  const o3 = e8.has_error(), t11 = new p14({ hasError: o3, error: o3 ? { errorCode: e8.error.error_code, errorMessage: e8.error.error_message } : null }), s8 = e8.get_edit_results_count();
  for (let r5 = 0; r5 < s8; r5++) {
    const o4 = e8.get_edit_results_at(r5), s9 = e8.get_edit_results_type_name_at(r5), _2 = [], d2 = [], u3 = [], a6 = o4.get_add_results_count(), l5 = o4.get_update_results_count(), g5 = o4.get_delete_results_count();
    for (let r6 = 0; r6 < a6; r6++) {
      const e9 = o4.get_add_result_at(r6);
      _2.push({ id: e9.id, error: { errorCode: e9.error.error_code, errorMessage: e9.error.error_message } });
    }
    for (let r6 = 0; r6 < l5; r6++) {
      const e9 = o4.get_update_result_at(r6);
      d2.push({ id: e9.id, error: { errorCode: e9.error.error_code, errorMessage: e9.error.error_message } });
    }
    for (let r6 = 0; r6 < g5; r6++) {
      const e9 = o4.get_delete_result_at(r6);
      u3.push({ id: e9.id, error: { errorCode: e9.error.error_code, errorMessage: e9.error.error_message } });
    }
    t11.editResults.push({ typeName: s9, adds: _2, updates: d2, deletes: u3 });
  }
  return t11;
}

// node_modules/@arcgis/core/rest/knowledgeGraphService.js
var C = /* @__PURE__ */ new Map();
var D = () => new Map(C.entries());
var E3 = { fetchKnowledgeGraph: async (e8) => {
  const t11 = new c3({ url: e8 }), r5 = [];
  return r5.push(K(t11)), r5.push(L2(t11)), await Promise.all(r5), t11;
}, refreshDataModel: async (e8) => {
  e8.dataModel = await X(e8);
}, refreshServiceDefinition: async (e8) => {
  var _a, _b;
  const r5 = (await U(e8.url, { query: { f: "json" } })).data;
  return r5.capabilities = (_a = r5 == null ? void 0 : r5.capabilities) == null ? void 0 : _a.split(","), r5.supportedQueryFormats = (_b = r5 == null ? void 0 : r5.supportedQueryFormats) == null ? void 0 : _b.split(","), e8.serviceDefinition = new s4(r5), e8.serviceDefinition;
}, executeQueryStreaming: async (e8, t11, a6) => {
  var _a;
  const n9 = "include", o3 = `${e8.url}/graph/query`;
  await U2(e8);
  const s8 = await B(o3, a6);
  if (!((_a = e8.serviceDefinition) == null ? void 0 : _a.supportsProvenance) && t11.provenanceBehavior === n9) throw new s("knowledge-graph:provenance-not-supported", "The Knowledge Graph Service definition indicated that provenance is not supported");
  s8.data.body = await N(t11, e8);
  const d2 = await I2(s8.data.url, s8.data);
  if (e8.dataModel) {
    const t12 = await J(d2, e8.dataModel);
    return new p4({ resultRowsStream: t12.readableStream, resultHeader: t12.resultHeader });
  }
  throw new s("knowledge-graph:undefined-data-model", "The KnowledgeGraph supplied did not have a data model");
}, executeApplyEdits: async (e8, t11, a6) => {
  var _a;
  if ((_a = e8.serviceDefinition) == null ? void 0 : _a.dataEditingNotSupported) throw new s("knowledge-graph:data-editing-not-supported", "The Knowledge Graph Service definition indicated that data editing is not supported");
  const n9 = `${e8.url}/graph/applyEdits`;
  await U2(e8);
  const o3 = await B(n9, a6);
  o3.data.body = await $(t11, e8);
  return V(await I2(o3.data.url, o3.data));
}, executeQuery: async (e8, a6, o3) => {
  var _a;
  const i9 = `${e8.url}/graph/query`, s8 = await U(i9, { responseType: "array-buffer", query: { f: "pbf", openCypherQuery: a6.openCypherQuery, ...o3 == null ? void 0 : o3.query }, signal: o3 == null ? void 0 : o3.signal, timeout: o3 == null ? void 0 : o3.timeout }), d2 = (_a = s8.getHeader) == null ? void 0 : _a.call(s8, "content-type"), p15 = s8.data;
  if (d2 == null ? void 0 : d2.includes("application/x-protobuf")) {
    const t11 = new (await r2()).GraphQueryDecoder();
    if (t11.deleteLater(), e8.dataModel) {
      const r5 = Y(t11, p15, e8.dataModel);
      return new c2({ resultRows: r5.resultRows, resultHeader: r5.resultHeader });
    }
    throw new s("knowledge-graph:undefined-data-model", "The KnowledgeGraph supplied did not have a data model");
  }
  throw new s("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: d2, data: s8.data });
}, executeSearch: async (e8, a6, o3) => {
  var _a;
  const i9 = a6.typeCategoryFilter, s8 = `${e8.url}/graph/search`, d2 = await U(s8, { responseType: "array-buffer", query: { f: "pbf", searchQuery: `"${a6.searchQuery}"`, typeCategoryFilter: i9, ...o3 == null ? void 0 : o3.query }, signal: o3 == null ? void 0 : o3.signal, timeout: o3 == null ? void 0 : o3.timeout }), p15 = (_a = d2.getHeader) == null ? void 0 : _a.call(d2, "content-type"), l5 = d2.data;
  if (p15 == null ? void 0 : p15.includes("application/x-protobuf")) {
    const t11 = new (await r2()).GraphQueryDecoder();
    if (t11.deleteLater(), e8.dataModel) {
      const r5 = Y(t11, l5, e8.dataModel);
      return new c2({ resultRows: r5.resultRows, resultHeader: r5.resultHeader });
    }
    throw new s("knowledge-graph:undefined-data-model", "The KnowledgeGraph supplied did not have a data model");
  }
  throw new s("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: p15, data: d2.data });
}, executeSearchStreaming: async (e8, t11, a6) => {
  const n9 = `${e8.url}/graph/search`;
  await U2(e8);
  const o3 = await B(n9, a6);
  o3.data.body = await O2(t11);
  const s8 = await I2(o3.data.url, o3.data);
  if (e8.dataModel) {
    const t12 = await J(s8, e8.dataModel);
    return new p4({ resultRowsStream: t12.readableStream, resultHeader: t12.resultHeader });
  }
  throw new s("knowledge-graph:undefined-data-model", "The KnowledgeGraph supplied did not have a data model");
}, fetchClientDataAtKeys: async (e8, t11, a6 = { ignoreCache: false }) => {
  if (!t11.length) return /* @__PURE__ */ new Map();
  let n9 = C.get(e8.url || "");
  n9 || (n9 = /* @__PURE__ */ new Map(), C.set(e8.url || "", n9));
  const o3 = new Map(n9.entries()), i9 = `${e8.url}/clientData/fetch`;
  t11 = Array.from(new Set(t11));
  const s8 = await r2(), d2 = t6(t11, n9, s8, a6.ignoreCache), l5 = await B(i9, a6.requestOptions);
  l5.data.body = d2;
  const u3 = await I2(l5.data.url, l5.data), h5 = u3.headers.get("content-type");
  if (h5 == null ? void 0 : h5.includes("application/x-protobuf")) {
    const e9 = new s8.ClientDataFetchResponseDecoder();
    e9.deleteLater();
    const t12 = await u3.arrayBuffer();
    return e9.decode(new Uint8Array(t12)), e9.has_error() && e2(e9.error, "knowledge-graph:fetchClientDataAtKeys-decoding-error", "An error occurred while decoding the client data keys response"), n7(e9, n9, o3, a6.ignoreCache);
  }
  throw new s("knowledge-graph:unexpected-server-response", "server returned an unexpected response when fetching client data", { responseType: h5, data: u3 });
}, fetchAllClientDataKeys: async (e8, a6) => {
  var _a;
  const n9 = `${e8.url}/clientData`, o3 = await U(n9, { responseType: "array-buffer", query: { f: "pbf" }, signal: a6 == null ? void 0 : a6.signal, timeout: a6 == null ? void 0 : a6.timeout }), i9 = (_a = o3.getHeader) == null ? void 0 : _a.call(o3, "content-type"), s8 = o3.data;
  if (i9 == null ? void 0 : i9.includes("application/x-protobuf")) {
    const e9 = new (await r2()).ClientDataKeysResponseDecoder();
    return e9.deleteLater(), e9.decode(new Uint8Array(s8)), e9.has_error() && e2(e9.error, "knowledge-graph:fetchAllClientDataKeys-decoding-error", "An error occurred while decoding the client data keys response"), _(e9);
  }
  throw new s("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: i9, data: o3.data });
}, clearClientDataCache: () => C.clear(), _fetchWrapper: async (e8, t11) => fetch(e8, t11) };
async function q(e8, t11, r5) {
  return E3.executeApplyEdits(e8, t11, r5);
}
async function R(e8, t11, r5) {
  return E3.executeQuery(e8, t11, r5);
}
async function M2(e8, t11, r5) {
  return E3.executeQueryStreaming(e8, t11, r5);
}
async function Q(e8, t11, r5) {
  return E3.executeSearch(e8, t11, r5);
}
async function j3(e8, t11, r5) {
  return E3.executeSearchStreaming(e8, t11, r5);
}
function H(e8, t11) {
  return E3.fetchAllClientDataKeys(e8, t11);
}
function W(e8, t11, r5) {
  return E3.fetchClientDataAtKeys(e8, t11, r5);
}
async function F2(e8) {
  return E3.fetchKnowledgeGraph(e8);
}
async function K(e8) {
  return E3.refreshDataModel(e8);
}
async function L2(e8) {
  return E3.refreshServiceDefinition(e8);
}
function P2() {
  return E3.clearClientDataCache();
}
async function I2(e8, t11) {
  return E3._fetchWrapper(e8, t11);
}
async function U2(t11) {
  var _a;
  const r5 = (_a = i) == null ? void 0 : _a.findCredential(t11.url);
  r5 || (t11.dataModel ? await X(t11) : await K(t11));
}
function z2(e8, t11, r5, a6) {
  null == t11 ? r5.set_param_key_value(e8, "") : "object" != typeof t11 || t11 instanceof Date ? r5.set_param_key_value(e8, t11) : t11 instanceof n3 ? r5.set_param_key_value(e8, u2(t11, a6)) : Array.isArray(t11) ? r5.set_param_key_value(e8, s6(t11, a6)) : r5.set_param_key_value(e8, l3(t11, a6));
}
async function $(e8, t11) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _i;
  if (t11.dataModel || await K(t11), !t11.dataModel) throw new s("knowledge-graph:data-model-undefined", "Encoding could not proceed because a data model was not provided and it could not be determined from the service");
  const a6 = await r2(), n9 = !!((_a = e8.options) == null ? void 0 : _a.cascadeDelete), o3 = new a6.GraphApplyEditsEncoder(a6.SpatialReferenceUtil.WGS84(), ((_b = e8.options) == null ? void 0 : _b.inputQuantizationParameters) ? s7((_c = e8.options) == null ? void 0 : _c.inputQuantizationParameters) : a6.InputQuantizationUtil.WGS84_lossless());
  o3.deleteLater(), o3.cascade_delete = n9;
  try {
    let t12;
    (_d = e8.entityAdds) == null ? void 0 : _d.forEach((e9) => {
      t12 = o3.add_entity(r3(e9, a6)), e2(t12, "knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits - an entity failed to be added to the encoder");
    }), (_e = e8.relationshipAdds) == null ? void 0 : _e.forEach((e9) => {
      if (!e9.originId || !e9.destinationId) throw new s("knowledge-graph:relationship-origin-destination-missing", "When adding a new relationship, you must provide both an origin and destination id on the appropriate class property");
      t12 = o3.add_relationship(r3(e9, a6)), e2(t12, "knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits - a relationship failed to be added to the encoder");
    }), (_f = e8.entityUpdates) == null ? void 0 : _f.forEach((e9) => {
      if (!e9.id) throw new s("knowledge-graph:entity-id-missing", "When updating an entity or relationship, you must specify the id on the class level property");
      t12 = o3.update_entity(r3(e9, a6)), e2(t12, "knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits - an entity failed to be added to the encoder");
    }), (_g = e8.relationshipUpdates) == null ? void 0 : _g.forEach((e9) => {
      if (!e9.id) throw new s("knowledge-graph:relationship-id-missing", "When updating an entity or relationship, you must specify the id on the class level property");
      t12 = o3.update_relationship(r3(e9, a6)), e2(t12, "knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits - a relationship failed to be added to the encoder");
    }), (_h = e8.entityDeletes) == null ? void 0 : _h.forEach((e9) => {
      var _a2;
      if (!e9.typeName) throw new s("knowledge-graph:no-type-name", "You must indicate the entity/relationship named object type to apply edits - delete");
      const t13 = o3.make_delete_helper(e9.typeName, true);
      t13.deleteLater(), (_a2 = e9.ids) == null ? void 0 : _a2.forEach((e10) => {
        t13.delete_by_id(e10);
      });
    }), (_i = e8.relationshipDeletes) == null ? void 0 : _i.forEach((e9) => {
      var _a2;
      if (!e9.typeName) throw new s("knowledge-graph:no-type-name", "You must indicate the entity/relationship named object type to apply edits - delete");
      const t13 = o3.make_delete_helper(e9.typeName, false);
      (_a2 = e9.ids) == null ? void 0 : _a2.forEach((e10) => {
        t13.delete_by_id(e10);
      });
    }), o3.encode();
  } catch (s8) {
    throw new s("knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits failed", { error: s8 });
  }
  const i9 = o3.get_encoding_result();
  return e2(i9.error, "knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits failed"), structuredClone(i9.get_byte_buffer());
}
async function N(e8, t11) {
  var _a, _b;
  const a6 = await r2(), n9 = new a6.GraphQueryRequestEncoder();
  if (n9.deleteLater(), e8.outputSpatialReference ? n9.output_spatial_reference = { wkid: e8.outputSpatialReference.wkid, latestWkid: e8.outputSpatialReference.latestWkid, vcsWkid: e8.outputSpatialReference.vcsWkid, latestVcsWkid: e8.outputSpatialReference.latestVcsWkid, wkt: e8.outputSpatialReference.wkt ?? "" } : n9.output_spatial_reference = a6.SpatialReferenceUtil.WGS84(), n9.open_cypher_query = e8.openCypherQuery, e8.bindParameters) for (const [r5, s8] of Object.entries(e8.bindParameters)) z2(r5, s8, n9, a6);
  if (e8.bindGeometryQuantizationParameters) y(e8.bindGeometryQuantizationParameters, n9);
  else {
    if (t11.dataModel || await K(t11), 4326 !== ((_b = (_a = t11.dataModel) == null ? void 0 : _a.spatialReference) == null ? void 0 : _b.wkid)) throw new s("knowledge-graph:SR-quantization-mismatch", "If the DataModel indicates a coordinate system other than WGS84, inputQuantizationParameters must be provided to the query encoder");
    n9.input_quantization_parameters = a6.InputQuantizationUtil.WGS84_lossless();
  }
  e8.outputQuantizationParameters && m3(e8.outputQuantizationParameters, n9, a6), e8.provenanceBehavior && c4(e8.provenanceBehavior, n9);
  try {
    n9.encode();
  } catch (i9) {
    throw new s("knowledge-graph:query-encoding-failed", "Attempting to encode the query failed", { error: i9 });
  }
  const o3 = n9.get_encoding_result();
  if (0 !== o3.error.error_code) throw new s("knowledge-graph:query-encoding-failed", "Attempting to encode the query failed", { errorCode: o3.error.error_code, errorMessage: o3.error.error_message });
  return structuredClone(o3.get_byte_buffer());
}
async function O2(e8) {
  var _a;
  const t11 = await r2(), a6 = new t11.GraphSearchRequestEncoder();
  if (a6.deleteLater(), a6.search_query = e8.searchQuery, a6.type_category_filter = t11.esriNamedTypeCategory[e8.typeCategoryFilter], true === e8.returnSearchContext && (a6.return_search_context = e8.returnSearchContext), null != e8.start && e8.start > 0 && (a6.start_index = e8.start), null != e8.num && (a6.max_num_results = e8.num), null != e8.idsFilter && Array.isArray(e8.idsFilter) && e8.idsFilter.length > 0) try {
    a6.set_ids_filter(s6(e8.idsFilter, t11));
  } catch (o3) {
    throw new s("knowledge-graph:ids-format-error", "Attempting to set ids filter failed.  This is usually caused by an incorrectly formatted UUID string", { error: o3 });
  }
  (_a = e8.namedTypesFilter) == null ? void 0 : _a.forEach((e9) => {
    a6.add_named_type_filter(e9);
  });
  try {
    a6.encode();
  } catch (o3) {
    throw new s("knowledge-graph:search-encoding-failed", "Attempting to encode the search failed", { error: o3 });
  }
  const n9 = a6.get_encoding_result();
  if (0 !== n9.error.error_code) throw new s("knowledge-graph:search-encoding-failed", "Attempting to get encoding result from the query failed", { errorCode: n9.error.error_code, errorMessage: n9.error.error_message });
  return structuredClone(n9.get_byte_buffer());
}
async function B(e8, r5) {
  return U(e8, { responseType: "native-request-init", method: "post", query: { f: "pbf", ...r5 == null ? void 0 : r5.query }, body: "x", headers: { "Content-Type": "application/octet-stream" }, signal: r5 == null ? void 0 : r5.signal, timeout: r5 == null ? void 0 : r5.timeout });
}
async function V(e8) {
  const t11 = e8.headers.get("content-type");
  if (t11 == null ? void 0 : t11.includes("application/x-protobuf")) {
    const t12 = await e8.arrayBuffer(), r5 = new (await r2()).GraphApplyEditsDecoder();
    return r5.deleteLater(), r5.decode(new Uint8Array(t12)), e7(r5);
  }
  throw new s("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: t11, data: e8.text() });
}
function Y(e8, t11, a6, n9) {
  e8.push_buffer(new Uint8Array(t11));
  const o3 = [];
  let i9, s8, d2 = 0;
  for (; e8.next_row(); ) {
    i9 && s8 || (i9 = n9 ?? w2(e8), s8 = i9.outSpatialReference ?? new g({ wkid: 4326 })), d2 || (d2 = e8.get_header_keys().size());
    const t12 = new Array(d2);
    for (let r5 = 0; r5 < d2; r5++) {
      const n10 = e8.get_value(r5);
      t12[r5] = g4(n10, a6, s8);
    }
    o3.push(t12);
  }
  if (e8.has_error()) throw new s("knowledge-graph:stream-decoding-error", "One or more result rows were not successfully decoded - inner row decoding", { errorCode: e8.error.error_code, errorMessage: e8.error.error_message });
  return { resultHeader: i9, resultRows: o3 };
}
async function J(e8, t11) {
  var _a;
  const n9 = e8.headers.get("content-type");
  if (e8.headers.get("content-length") && n.getLogger("esri.rest.knowledgeGraph.knowledgeGraphService").warnOnce("Found `Content-Length` header when expecting a streaming HTTP response! Please investigate whether all intermediate HTTP proxies and/or load balancers are configured such that they don't forcefully buffer the entire response before returning it to the client. A valid HTTP streaming response should use Chunked Transfer Encoding and not have a Content Length defined."), n9 == null ? void 0 : n9.includes("application/x-protobuf")) {
    const n10 = (_a = e8.body) == null ? void 0 : _a.getReader(), i9 = new (await r2()).GraphQueryDecoder();
    let s8, d2, p15;
    i9.deleteLater();
    const l5 = new Promise((e9, t12) => {
      d2 = e9, p15 = t12;
    });
    let u3 = false;
    return { readableStream: new ReadableStream({ async start(e9) {
      try {
        return c6();
      } catch (l6) {
        n10 == null ? void 0 : n10.releaseLock(), e9.error(new s("knowledge-graph:stream-decoding-error", "The server returned a valid response, but there was an error decoding the response stream", { error: l6 })), e9.close();
      }
      function c6() {
        return n10 == null ? void 0 : n10.read().then(({ done: l6, value: h5 }) => {
          try {
            if (l6) {
              let t12;
              if (i9.has_error() ? t12 = new s("knowledge-graph:stream-decoding-error", "One or more result rows were not successfully decoded - query stream done", { errorCode: i9.error.error_code, errorMessage: i9.error.error_message }) : u3 || d2(new p2()), n10.releaseLock(), t12) throw e9.error(t12), p15(t12), t12;
              return void e9.close();
            }
            const a6 = Y(i9, h5, t11, s8), w3 = a6.resultRows;
            return w3.length > 0 && e9.enqueue(w3), !s8 && a6.resultHeader && (s8 = a6.resultHeader, d2(a6.resultHeader), u3 = true), c6();
          } catch (w3) {
            throw n.getLogger("esri.rest.knowledgeGraph.knowledgeGraphService").error(w3), p15(w3), new s("knowledge-graph:unexpected-server-response", "Error inside streaming data return parsing", { error: w3 });
          }
        });
      }
    } }), resultHeader: await l5 };
  }
  throw new s("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: n9, data: e8.text() });
}
async function X(e8) {
  var _a;
  const a6 = `${e8.url}/dataModel/queryDataModel`, n9 = await U(a6, { responseType: "array-buffer", query: { f: "pbf" } }), o3 = (_a = n9.getHeader) == null ? void 0 : _a.call(n9, "content-type"), i9 = n9.data;
  if (o3 == null ? void 0 : o3.includes("application/x-protobuf")) {
    const e9 = (await r2()).decode_data_model_from_protocol_buffer(new Uint8Array(i9));
    if (!e9) throw new s("knowledge-graph:data-model-decode-failure", "The server responded to the data model query, but the response failed to be decoded.  This typically occurs when the Knowledge JS API (4.26 or later) is used with an unsupported backend (11.0 or earlier)");
    return h2(e9);
  }
  throw new s("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: o3, data: n9.data });
}

export {
  r2 as r,
  C,
  D,
  E3 as E,
  q,
  R,
  M2 as M,
  Q,
  j3 as j,
  H,
  W,
  F2 as F,
  K,
  L2 as L,
  P2 as P,
  I2 as I
};
//# sourceMappingURL=chunk-F4M4YVE2.js.map
