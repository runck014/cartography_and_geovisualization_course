import {
  e as e2
} from "./chunk-ARQ76THZ.js";
import {
  r as r3
} from "./chunk-ACRZEGQW.js";
import {
  a as a3
} from "./chunk-3L4RET4X.js";
import {
  A as A2
} from "./chunk-WH2FR6UE.js";
import {
  j
} from "./chunk-RG7AMCT5.js";
import {
  l
} from "./chunk-SM2VXWMT.js";
import "./chunk-WYO25WZZ.js";
import "./chunk-OC7D2HR4.js";
import {
  t as t3
} from "./chunk-IGMG7ERK.js";
import {
  b
} from "./chunk-V47ZBW5W.js";
import "./chunk-HKYICNT2.js";
import {
  S as S2
} from "./chunk-VGUQMPM6.js";
import "./chunk-4ISVH4NS.js";
import "./chunk-NIWINVGG.js";
import "./chunk-DOENTAA7.js";
import "./chunk-CGSFKZP2.js";
import {
  l as l2,
  n2 as n3,
  t as t4
} from "./chunk-EKHEOE6A.js";
import {
  n as n2
} from "./chunk-VIP4NQFO.js";
import {
  f as f2
} from "./chunk-QMGMKWTA.js";
import "./chunk-2IGXKE5P.js";
import "./chunk-ZICJB3ML.js";
import "./chunk-TA32QX7Z.js";
import "./chunk-XGYM66XX.js";
import "./chunk-JOOGZSAP.js";
import "./chunk-J6GHQIZ2.js";
import {
  A,
  C,
  d,
  v
} from "./chunk-W6D3ECTZ.js";
import {
  f
} from "./chunk-EMVTPRQK.js";
import {
  t as t2
} from "./chunk-EDGKOPSL.js";
import "./chunk-QXDQJEIU.js";
import "./chunk-MGMVRMXQ.js";
import "./chunk-SEUZ3J6J.js";
import "./chunk-BWTCR2DR.js";
import "./chunk-SMOTPOZ7.js";
import "./chunk-YVSEBNS4.js";
import "./chunk-Y2XCZQML.js";
import "./chunk-EZXLBRAS.js";
import "./chunk-7FJIOZSE.js";
import "./chunk-GNWAZIVF.js";
import "./chunk-2PK57UYA.js";
import "./chunk-3L2AYCZY.js";
import "./chunk-VUJERGGB.js";
import "./chunk-NTI2OCVI.js";
import "./chunk-ZCHZRNUG.js";
import "./chunk-G6REFQRQ.js";
import "./chunk-2TEGRXBS.js";
import "./chunk-6Y2LNRVP.js";
import "./chunk-JVEZN6WF.js";
import "./chunk-E2RPCJOE.js";
import "./chunk-NHJGPXZH.js";
import "./chunk-JS7R723S.js";
import "./chunk-RCLWOQNR.js";
import "./chunk-DOTSJZHK.js";
import "./chunk-UCO66LNK.js";
import "./chunk-5YRJ4YFE.js";
import {
  S
} from "./chunk-RD2BBQYN.js";
import "./chunk-SEG3PRUR.js";
import "./chunk-B6VE32RA.js";
import "./chunk-AIYFWM42.js";
import "./chunk-2M53HYNY.js";
import "./chunk-6YWQXXBX.js";
import "./chunk-Q7TEBZSN.js";
import "./chunk-FG3XOAFD.js";
import {
  o
} from "./chunk-GN5RE63N.js";
import {
  r as r2
} from "./chunk-2WXAPZBK.js";
import "./chunk-E2I7HYXQ.js";
import "./chunk-P5H5PJSC.js";
import "./chunk-WTNHDCCU.js";
import "./chunk-7O7KFKCG.js";
import "./chunk-TVTRNT6K.js";
import "./chunk-CRH37WFF.js";
import "./chunk-YFGQMO6E.js";
import "./chunk-HAF6QJ32.js";
import {
  e,
  m
} from "./chunk-H77COA2S.js";
import {
  a4 as a2,
  t
} from "./chunk-7LJCT7EA.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import {
  a,
  k
} from "./chunk-GRW2QIBT.js";
import "./chunk-R2PAF6JT.js";
import "./chunk-6WE7SNQY.js";
import "./chunk-L6CCOEVE.js";
import {
  n2 as n
} from "./chunk-PKLD5YJF.js";
import "./chunk-XKQWTZMW.js";
import "./chunk-A4OFG7JM.js";

// node_modules/@arcgis/core/layers/GroupLayer.js
var V = class extends l(t3(b(j(n3(l2(S2(f2))))))) {
  constructor(e3) {
    super(e3), this.allLayers = new n2({ getCollections: () => [this.layers], getChildrenFunction: (e4) => "layers" in e4 ? e4.layers : null }), this.allTables = t4(this), this.fullExtent = void 0, this.operationalLayerType = "GroupLayer", this.spatialReference = void 0, this.type = "group", this._debouncedSaveOperations = k(async (e4, i, t5) => {
      const { save: r4, saveAs: s } = await import("./groupLayerUtils-EJGHZ3FK.js");
      switch (e4) {
        case A2.SAVE:
          return r4(this, i);
        case A2.SAVE_AS:
          return s(this, t5, i);
      }
    });
  }
  initialize() {
    this._enforceVisibility(this.visibilityMode, this.visible), this.addHandles([d(() => {
      let e3 = this.parent;
      for (; e3 && "parent" in e3 && e3.parent; ) e3 = e3.parent;
      return e3 && e2 in e3;
    }, (e3) => {
      const i = "prevent-adding-tables";
      this.removeHandles(i), e3 && (this.tables.removeAll(), this.addHandles(v(() => this.tables, "before-add", (e4) => {
        e4.preventDefault(), n.getLogger(this).errorOnce("tables", "tables in group layers in a webscene are not supported. Please move the tables from the group layer to the webscene if you want to persist them.");
      }), i));
    }, A), d(() => this.visible, this._onVisibilityChange.bind(this), C)]);
  }
  destroy() {
    this.allLayers.destroy(), this.allTables.destroy();
  }
  get sourceIsPortalItem() {
    return this.portalItem && this.originIdOf("portalItem") === e.USER;
  }
  _writeLayers(e3, i, t5, r4) {
    const s = [];
    if (!e3) return s;
    e3.forEach((e4) => {
      const i2 = f(e4, r4.webmap ? r4.webmap.getLayerJSONFromResourceInfo(e4) : null, r4);
      (i2 == null ? void 0 : i2.layerType) && s.push(i2);
    }), i.layers = s;
  }
  set portalItem(e3) {
    this._set("portalItem", e3);
  }
  readPortalItem(e3, i, t5) {
    const { itemId: r4, layerType: s } = i;
    if ("GroupLayer" === s && r4) return new S({ id: r4, portal: t5 == null ? void 0 : t5.portal });
  }
  writePortalItem(e3, i) {
    (e3 == null ? void 0 : e3.id) && (i.itemId = e3.id);
  }
  set visibilityMode(e3) {
    const i = this._get("visibilityMode") !== e3;
    this._set("visibilityMode", e3), i && this._enforceVisibility(e3, this.visible);
  }
  async beforeSave() {
    return r3(this);
  }
  load(e3) {
    const i = this.loadFromPortal({ supportedTypes: ["Feature Service", "Feature Collection", "Group Layer", "Scene Service"], layerModuleTypeMap: a3 }, e3).catch((e4) => {
      if (a(e4), this.sourceIsPortalItem) throw e4;
    });
    return this.addResolvingPromise(i), Promise.resolve(this);
  }
  async loadAll() {
    return t2(this, (e3) => {
      e3(this.layers, this.tables);
    });
  }
  async save(e3) {
    return this._debouncedSaveOperations(A2.SAVE, e3);
  }
  async saveAs(e3, i) {
    return this._debouncedSaveOperations(A2.SAVE_AS, i, e3);
  }
  layerAdded(e3) {
    e3.visible && "exclusive" === this.visibilityMode ? this._turnOffOtherLayers(e3) : "inherited" === this.visibilityMode && (e3.visible = this.visible), this.hasHandles(e3.uid) ? console.error(`Layer read to Grouplayer: uid=${e3.uid}`) : this.addHandles(d(() => e3.visible, (i) => this._onChildVisibilityChange(e3, i), C), e3.uid);
  }
  layerRemoved(e3) {
    this.removeHandles(e3.uid), this._enforceVisibility(this.visibilityMode, this.visible);
  }
  _turnOffOtherLayers(e3) {
    this.layers.forEach((i) => {
      i !== e3 && (i.visible = false);
    });
  }
  _enforceVisibility(e3, i) {
    if (!t(this).initialized) return;
    const t5 = this.layers;
    let r4 = t5.find((e4) => e4.visible);
    switch (e3) {
      case "exclusive":
        t5.length && !r4 && (r4 = t5.at(0), r4.visible = true), this._turnOffOtherLayers(r4);
        break;
      case "inherited":
        t5.forEach((e4) => {
          e4.visible = i;
        });
    }
  }
  _onVisibilityChange(e3) {
    "inherited" === this.visibilityMode && this.layers.forEach((i) => {
      i.visible = e3;
    });
  }
  _onChildVisibilityChange(e3, i) {
    switch (this.visibilityMode) {
      case "exclusive":
        i ? this._turnOffOtherLayers(e3) : this._isAnyLayerVisible() || (e3.visible = true);
        break;
      case "inherited":
        e3.visible = this.visible;
    }
  }
  _isAnyLayerVisible() {
    return this.layers.some((e3) => e3.visible);
  }
};
r([m({ readOnly: true, dependsOn: [] })], V.prototype, "allLayers", void 0), r([m({ readOnly: true })], V.prototype, "allTables", void 0), r([m({ json: { read: true, write: true } })], V.prototype, "blendMode", void 0), r([m()], V.prototype, "fullExtent", void 0), r([m({ readOnly: true })], V.prototype, "sourceIsPortalItem", null), r([m({ json: { read: false, write: { ignoreOrigin: true } } })], V.prototype, "layers", void 0), r([r2("layers")], V.prototype, "_writeLayers", null), r([m({ type: ["GroupLayer"] })], V.prototype, "operationalLayerType", void 0), r([m({ json: { origins: { "web-map": { read: false, write: { overridePolicy(e3, i, t5) {
  return { enabled: "Group Layer" === (e3 == null ? void 0 : e3.type) && (t5 == null ? void 0 : t5.initiator) !== this };
} } }, "web-scene": { read: false, write: false } } } })], V.prototype, "portalItem", null), r([o("web-map", "portalItem", ["itemId"])], V.prototype, "readPortalItem", null), r([r2("web-map", "portalItem", { itemId: { type: String } })], V.prototype, "writePortalItem", null), r([m()], V.prototype, "spatialReference", void 0), r([m({ json: { read: false }, readOnly: true, value: "group" })], V.prototype, "type", void 0), r([m({ type: ["independent", "inherited", "exclusive"], value: "independent", json: { write: true, origins: { "web-map": { type: ["independent", "exclusive"], write: (e3, i, t5) => {
  "inherited" !== e3 && (i[t5] = e3);
} } } } })], V.prototype, "visibilityMode", null), V = r([a2("esri.layers.GroupLayer")], V);
var C2 = V;
export {
  C2 as default
};
//# sourceMappingURL=GroupLayer-7HU4JWQA.js.map
