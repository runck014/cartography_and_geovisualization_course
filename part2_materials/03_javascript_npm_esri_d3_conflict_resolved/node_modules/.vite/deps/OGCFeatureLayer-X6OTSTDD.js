import {
  C,
  N,
  O,
  P,
  R,
  k,
  q,
  v,
  x
} from "./chunk-XWI6GPZL.js";
import "./chunk-N77L5742.js";
import "./chunk-FHQJQISR.js";
import "./chunk-5PXF5FL6.js";
import "./chunk-2L7UGRIC.js";
import {
  s as s2
} from "./chunk-E6IUAXXM.js";
import "./chunk-MSUBZ5BW.js";
import "./chunk-OMMWWGIU.js";
import "./chunk-JPQIRBN6.js";
import "./chunk-CH3XVKUV.js";
import "./chunk-KI5F6KDS.js";
import {
  n
} from "./chunk-XECP56E2.js";
import {
  i as i2
} from "./chunk-ZZTUJWOP.js";
import {
  c as c2
} from "./chunk-JED7FM2Q.js";
import "./chunk-FFUKJAFO.js";
import "./chunk-H4E2VVPD.js";
import {
  p
} from "./chunk-CQFC4JO6.js";
import "./chunk-VS5MKM3H.js";
import {
  c
} from "./chunk-CQTV4C3X.js";
import "./chunk-764E6KTP.js";
import {
  s as s3
} from "./chunk-GEPD6W23.js";
import "./chunk-QSIT7EPR.js";
import {
  C as C2,
  n as n2
} from "./chunk-TP6LRQ42.js";
import {
  l as l2
} from "./chunk-ZE6OS33V.js";
import "./chunk-MWZJIOOL.js";
import {
  p as p2
} from "./chunk-ULSRCITK.js";
import {
  e
} from "./chunk-FLUE3DMC.js";
import {
  m as m3,
  u
} from "./chunk-5GQ62KHN.js";
import "./chunk-YAGJS3MX.js";
import "./chunk-43KBLSS3.js";
import {
  j
} from "./chunk-RG7AMCT5.js";
import {
  f
} from "./chunk-PV3ZZQOV.js";
import {
  l
} from "./chunk-SM2VXWMT.js";
import "./chunk-WYO25WZZ.js";
import "./chunk-OC7D2HR4.js";
import {
  t
} from "./chunk-IGMG7ERK.js";
import {
  b as b2
} from "./chunk-V47ZBW5W.js";
import {
  c as c3,
  d as d2,
  l as l3,
  p as p4,
  s as s4,
  y as y2
} from "./chunk-HKYICNT2.js";
import {
  S
} from "./chunk-VGUQMPM6.js";
import "./chunk-KKH7HGO3.js";
import "./chunk-Z3NV3VCK.js";
import "./chunk-7VNQKVOW.js";
import "./chunk-PNVXSHN2.js";
import "./chunk-3DVL3O3F.js";
import "./chunk-RN66FJAW.js";
import "./chunk-QYSQ6XPQ.js";
import "./chunk-2RIHQI4N.js";
import "./chunk-VLKWWBLY.js";
import "./chunk-NXGNMEHZ.js";
import "./chunk-TWYDW6LU.js";
import {
  d
} from "./chunk-PVHAAI32.js";
import "./chunk-MLATPUII.js";
import "./chunk-NVFQGMP6.js";
import "./chunk-P2IB5HBH.js";
import "./chunk-XX37BOHH.js";
import "./chunk-5CRXWQ3Y.js";
import "./chunk-4RFCLPAF.js";
import "./chunk-4ISVH4NS.js";
import "./chunk-NIWINVGG.js";
import "./chunk-DOENTAA7.js";
import "./chunk-CGSFKZP2.js";
import "./chunk-EPAKCM4A.js";
import "./chunk-WPERPIJF.js";
import "./chunk-RXJCBLN2.js";
import "./chunk-EFVIMN4N.js";
import "./chunk-XKMN3LJN.js";
import "./chunk-2U5JYYSG.js";
import "./chunk-AFULL6KA.js";
import "./chunk-URFLFG2R.js";
import {
  f as f2
} from "./chunk-QMGMKWTA.js";
import "./chunk-XQH2QDB2.js";
import "./chunk-6Q7GN2CW.js";
import {
  q as q2
} from "./chunk-MYUZZ3A3.js";
import "./chunk-2IGXKE5P.js";
import "./chunk-JFI4ESYU.js";
import "./chunk-4X2UADDH.js";
import "./chunk-ZICJB3ML.js";
import "./chunk-AVBIV2K3.js";
import "./chunk-4NJWIUZG.js";
import {
  b
} from "./chunk-F3NUC2RS.js";
import "./chunk-LE3YW4Y3.js";
import "./chunk-TA32QX7Z.js";
import "./chunk-NYLL2YZF.js";
import "./chunk-NYLBGE62.js";
import "./chunk-LPNAPHOF.js";
import {
  y
} from "./chunk-QCBTLG25.js";
import "./chunk-SUZN3TAH.js";
import "./chunk-K5RYAJV4.js";
import "./chunk-XGYM66XX.js";
import "./chunk-JOOGZSAP.js";
import "./chunk-J6GHQIZ2.js";
import "./chunk-VEUN2EF3.js";
import "./chunk-W6D3ECTZ.js";
import "./chunk-QXDQJEIU.js";
import "./chunk-MGMVRMXQ.js";
import "./chunk-SEUZ3J6J.js";
import {
  g as g2,
  p as p3
} from "./chunk-BWTCR2DR.js";
import "./chunk-SMOTPOZ7.js";
import "./chunk-YVSEBNS4.js";
import "./chunk-Y2XCZQML.js";
import "./chunk-EZXLBRAS.js";
import "./chunk-7FJIOZSE.js";
import "./chunk-GNWAZIVF.js";
import {
  i,
  o as o2
} from "./chunk-2PK57UYA.js";
import "./chunk-3L2AYCZY.js";
import "./chunk-TSVUPARM.js";
import "./chunk-VUJERGGB.js";
import "./chunk-NTI2OCVI.js";
import "./chunk-ZCHZRNUG.js";
import "./chunk-G6REFQRQ.js";
import "./chunk-2TEGRXBS.js";
import "./chunk-6Y2LNRVP.js";
import "./chunk-JVEZN6WF.js";
import "./chunk-E2RPCJOE.js";
import "./chunk-NHJGPXZH.js";
import "./chunk-JS7R723S.js";
import "./chunk-RCLWOQNR.js";
import "./chunk-DOTSJZHK.js";
import "./chunk-UCO66LNK.js";
import "./chunk-5YRJ4YFE.js";
import "./chunk-RD2BBQYN.js";
import "./chunk-SEG3PRUR.js";
import {
  m as m2
} from "./chunk-B6VE32RA.js";
import "./chunk-AIYFWM42.js";
import "./chunk-2M53HYNY.js";
import "./chunk-6YWQXXBX.js";
import "./chunk-Q7TEBZSN.js";
import {
  w
} from "./chunk-FG3XOAFD.js";
import "./chunk-GN5RE63N.js";
import {
  g
} from "./chunk-2WXAPZBK.js";
import "./chunk-E2I7HYXQ.js";
import "./chunk-P5H5PJSC.js";
import "./chunk-WTNHDCCU.js";
import "./chunk-7O7KFKCG.js";
import "./chunk-TVTRNT6K.js";
import "./chunk-CRH37WFF.js";
import "./chunk-YFGQMO6E.js";
import "./chunk-HAF6QJ32.js";
import {
  m
} from "./chunk-H77COA2S.js";
import {
  a4 as a
} from "./chunk-7LJCT7EA.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import "./chunk-GRW2QIBT.js";
import "./chunk-R2PAF6JT.js";
import "./chunk-6WE7SNQY.js";
import "./chunk-L6CCOEVE.js";
import {
  o,
  s2 as s
} from "./chunk-PKLD5YJF.js";
import "./chunk-XKQWTZMW.js";
import "./chunk-A4OFG7JM.js";

// node_modules/@arcgis/core/layers/graphics/sources/OGCFeatureSource.js
var C3 = class extends m2 {
  constructor() {
    super(...arguments), this.featureDefinition = null, this.type = "ogc-feature";
  }
  load(t2) {
    return this.addResolvingPromise(this._loadOGCServices(this.layer, t2)), this.when();
  }
  getSource() {
    const { featureDefinition: { collection: t2, layerDefinition: e2, spatialReference: s5, supportedCrs: r2 }, layer: { apiKey: o3, customParameters: p5, effectiveMaxRecordCount: i3 } } = this;
    return { type: "ogc-source", collection: t2, layerDefinition: e2, maxRecordCount: i3, queryParameters: { apiKey: o3, customParameters: p5 }, spatialReference: s5, supportedCrs: r2 };
  }
  queryExtent(t2, e2 = {}) {
    return null;
  }
  queryFeatureCount(t2, e2 = {}) {
    return null;
  }
  queryFeatures(t2, e2 = {}) {
    return this.queryFeaturesJSON(t2, e2).then((t3) => d.fromJSON(t3));
  }
  queryFeaturesJSON(t2, e2 = {}) {
    const s5 = this.getSource();
    return this.load(e2).then(() => R(s5, t2, e2));
  }
  queryObjectIds(t2, e2 = {}) {
    return null;
  }
  serviceSupportsSpatialReference(t2) {
    return !(!t2.isWGS84 && !t2.isWebMercator) || !!this.featureDefinition.supportedCrs[t2.wkid];
  }
  _conformsToType(t2, e2) {
    const s5 = new RegExp(`^${o(e2)}$`, "i");
    return t2.conformsTo.some((t3) => s5.test(t3)) ?? false;
  }
  _getCapabilities(t2, e2) {
    return { analytics: { supportsCacheHint: false }, attachment: null, data: { isVersioned: false, isBranchVersioned: false, supportsAttachment: false, supportsM: false, supportsZ: t2 }, metadata: { supportsAdvancedFieldProperties: false }, operations: { supportsCalculate: false, supportsTruncate: false, supportsValidateSql: false, supportsAdd: false, supportsDelete: false, supportsEditing: false, supportsChangeTracking: false, supportsQuery: false, supportsQueryBins: false, supportsQueryAnalytics: false, supportsQueryAttachments: false, supportsQueryTopFeatures: false, supportsResizeAttachments: false, supportsSync: false, supportsUpdate: false, supportsExceedsLimitStatistics: false, supportsAsyncConvert3D: false }, query: { maxRecordCount: e2, maxRecordCountFactor: void 0, standardMaxRecordCount: void 0, supportsCacheHint: false, supportsCentroid: false, supportsDisjointSpatialRelationship: false, supportsDistance: false, supportsDistinct: false, supportsExtent: false, supportsFormatPBF: false, supportsGeometryProperties: false, supportsHavingClause: false, supportsHistoricMoment: false, supportsMaxRecordCountFactor: false, supportsOrderBy: false, supportsPagination: false, supportsPercentileStatistics: false, supportsQuantization: false, supportsQuantizationEditMode: false, supportsQueryByAnonymous: false, supportsQueryByOthers: false, supportsQueryGeometry: false, supportsResultType: false, supportsStandardizedQueriesOnly: false, supportsTopFeaturesQuery: false, supportsStatistics: false, supportsSpatialAggregationStatistics: false, supportedSpatialAggregationStatistics: { envelope: false, centroid: false, convexHull: false }, supportsDefaultSpatialReference: false, supportsFullTextSearch: false, supportsCompactGeometry: false, supportsSqlExpression: false, tileMaxRecordCount: void 0 }, queryRelated: { supportsCount: false, supportsOrderBy: false, supportsPagination: false, supportsCacheHint: false }, queryTopFeatures: { supportsCacheHint: false }, queryBins: s2, editing: { supportsDeleteByAnonymous: false, supportsDeleteByOthers: false, supportsGeometryUpdate: false, supportsGlobalId: false, supportsReturnServiceEditsInSourceSpatialReference: false, supportsRollbackOnFailure: false, supportsUpdateByAnonymous: false, supportsUpdateByOthers: false, supportsUploadWithItemId: false, supportsUpdateWithoutM: false, supportsAsyncApplyEdits: false, zDefault: void 0 } };
  }
  _getMaxRecordCount(t2) {
    var _a, _b, _c, _d, _e;
    const e2 = (_a = t2 == null ? void 0 : t2.components) == null ? void 0 : _a.parameters;
    return ((_c = (_b = e2 == null ? void 0 : e2.limit) == null ? void 0 : _b.schema) == null ? void 0 : _c.maximum) ?? ((_e = (_d = e2 == null ? void 0 : e2.limitFeatures) == null ? void 0 : _d.schema) == null ? void 0 : _e.maximum);
  }
  _getStorageSpatialReference(t2) {
    const e2 = t2.storageCrs ?? x, s5 = C(e2);
    return null == s5 ? g.WGS84 : new g({ wkid: s5 });
  }
  _getSupportedSpatialReferences(t2, e2) {
    const s5 = "#/crs", r2 = t2.crs ?? [x], o3 = r2.includes(s5) ? r2.filter((t3) => t3 !== s5).concat(e2.crs ?? []) : r2, p5 = /^http:\/\/www\.opengis.net\/def\/crs\/epsg\/.*\/3785$/i;
    return o3.filter((t3) => !p5.test(t3));
  }
  async _loadOGCServices(t2, s5) {
    const o3 = null != s5 ? s5.signal : null, { apiKey: p5, collectionId: i3, customParameters: a2, fields: f3, geometryType: g3, hasZ: h, objectIdField: C4, timeInfo: R2, url: w2 } = t2, j2 = { fields: f3 == null ? void 0 : f3.map((t3) => t3.toJSON()), geometryType: i.toJSON(g3), hasZ: h ?? false, objectIdField: C4, timeInfo: R2 == null ? void 0 : R2.toJSON() }, x2 = { apiKey: p5, customParameters: a2, signal: o3 }, v2 = await P(w2, x2), [F, O2] = await Promise.all([O(v2, x2), N(v2, x2)]);
    if (!this._conformsToType(F, "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson")) throw new s("ogc-feature-layer:no-geojson-support", "Server does not support geojson");
    const D = O2.collections.find(({ id: t3 }) => t3 === i3);
    if (!D) throw new s("ogc-feature-layer:collection-not-found", "Server does not contain the named collection");
    const T = this._conformsToType(F, "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30") ? await q(v2, x2) : null, A = await v(D, j2, x2), _ = this._getMaxRecordCount(T), b3 = this._getCapabilities(A.hasZ, _), q3 = this._getStorageSpatialReference(D).toJSON(), P2 = this._getSupportedSpatialReferences(D, O2), B2 = new RegExp(`^${o(k)}`, "i"), Q = {};
    for (const e2 of P2) {
      const t3 = C(e2);
      null != t3 && (Q[t3] || (Q[t3] = e2.replace(B2, "")));
    }
    this.featureDefinition = { capabilities: b3, collection: D, layerDefinition: A, spatialReference: q3, supportedCrs: Q };
  }
};
r([m()], C3.prototype, "featureDefinition", void 0), r([m({ constructOnly: true })], C3.prototype, "layer", void 0), r([m()], C3.prototype, "type", void 0), C3 = r([a("esri.layers.graphics.sources.OGCFeatureSource")], C3);

// node_modules/@arcgis/core/layers/OGCFeatureLayer.js
var U = s3();
var B = class extends i2(e(c2(c(l(p(l2(t(b2(j(f(S(f2)))))))))))) {
  constructor(e2) {
    super(e2), this.capabilities = null, this.collectionId = null, this.copyright = null, this.description = null, this.displayField = null, this.elevationInfo = null, this.fields = null, this.fieldsIndex = null, this.fullExtent = null, this.geometryType = null, this.hasZ = void 0, this.labelingInfo = null, this.labelsVisible = true, this.legendEnabled = true, this.maxRecordCount = null, this.objectIdField = null, this.operationalLayerType = "OGCFeatureLayer", this.popupEnabled = true, this.popupTemplate = null, this.screenSizePerspectiveEnabled = true, this.source = new C3({ layer: this }), this.spatialReference = null, this.title = null, this.type = "ogc-feature", this.typeIdField = null, this.types = null, this.url = null;
  }
  destroy() {
    var _a;
    (_a = this.source) == null ? void 0 : _a.destroy();
  }
  load(e2) {
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["OGCFeatureServer"] }, e2).then(() => this._fetchService(e2))), this.when();
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  get effectiveMaxRecordCount() {
    var _a;
    return this.maxRecordCount ?? ((_a = this.capabilities) == null ? void 0 : _a.query.maxRecordCount) ?? 5e3;
  }
  get isTable() {
    return this.loaded && null == this.geometryType;
  }
  set renderer(e2) {
    p3(e2, this.fieldsIndex), this._set("renderer", e2);
  }
  on(e2, r2) {
    return super.on(e2, r2);
  }
  createPopupTemplate(e2) {
    return p2(this, e2);
  }
  createQuery() {
    return new b();
  }
  getField(e2) {
    return this.fieldsIndex.get(e2);
  }
  getFieldDomain(e2, r2) {
    var _a;
    let t2, i3 = false;
    const o3 = (_a = r2 == null ? void 0 : r2.feature) == null ? void 0 : _a.attributes, s5 = this.typeIdField && (o3 == null ? void 0 : o3[this.typeIdField]);
    return null != s5 && this.types && (i3 = this.types.some((r3) => {
      var _a2;
      return r3.id == s5 && (t2 = (_a2 = r3.domains) == null ? void 0 : _a2[e2], "inherited" === (t2 == null ? void 0 : t2.type) && (t2 = this._getLayerDomain(e2)), true);
    })), i3 || t2 || (t2 = this._getLayerDomain(e2)), t2;
  }
  queryFeatures(e2, r2) {
    return this.load().then(() => this.source.queryFeatures(b.from(e2) || this.createQuery(), r2)).then((e3) => {
      var _a;
      return (_a = e3 == null ? void 0 : e3.features) == null ? void 0 : _a.forEach((e4) => {
        e4.layer = e4.sourceLayer = this;
      }), e3;
    });
  }
  serviceSupportsSpatialReference(e2) {
    var _a;
    return ((_a = this.source) == null ? void 0 : _a.serviceSupportsSpatialReference(e2)) ?? false;
  }
  async _fetchService(e2) {
    await this.source.load(e2), this.read(this.source.featureDefinition, { origin: "service" }), p3(this.renderer, this.fieldsIndex), g2(this.timeInfo, this.fieldsIndex);
  }
  _getLayerDomain(e2) {
    if (!this.fields) return null;
    for (const r2 of this.fields) if (r2.name === e2 && r2.domain) return r2.domain;
    return null;
  }
};
r([m({ readOnly: true, json: { origins: { service: { read: true } } } })], B.prototype, "capabilities", void 0), r([m({ type: String, json: { write: true } })], B.prototype, "collectionId", void 0), r([m({ type: String })], B.prototype, "copyright", void 0), r([m({ readOnly: true })], B.prototype, "defaultPopupTemplate", null), r([m({ readOnly: true, type: String, json: { origins: { service: { name: "collection.description" } } } })], B.prototype, "description", void 0), r([m({ type: String })], B.prototype, "displayField", void 0), r([m({ type: Number })], B.prototype, "effectiveMaxRecordCount", null), r([m(c3)], B.prototype, "elevationInfo", void 0), r([m({ type: [y], json: { origins: { service: { name: "layerDefinition.fields" } } } })], B.prototype, "fields", void 0), r([m(U.fieldsIndex)], B.prototype, "fieldsIndex", void 0), r([m({ readOnly: true, type: w, json: { origins: { service: { name: "layerDefinition.extent" } } } })], B.prototype, "fullExtent", void 0), r([m({ type: o2.apiValues, json: { origins: { service: { name: "layerDefinition.geometryType", read: { reader: o2.read } } } } })], B.prototype, "geometryType", void 0), r([m({ type: Boolean, json: { origins: { service: { name: "layerDefinition.hasZ" } } } })], B.prototype, "hasZ", void 0), r([m({ type: Boolean, readOnly: true })], B.prototype, "isTable", null), r([m({ type: [C2], json: { origins: { "web-document": { name: "layerDefinition.drawingInfo.labelingInfo", read: { reader: n2 }, write: true } } } })], B.prototype, "labelingInfo", void 0), r([m(p4)], B.prototype, "labelsVisible", void 0), r([m(d2)], B.prototype, "legendEnabled", void 0), r([m({ type: Number })], B.prototype, "maxRecordCount", void 0), r([m({ type: String, json: { origins: { service: { name: "layerDefinition.objectIdField" } } } })], B.prototype, "objectIdField", void 0), r([m({ type: ["OGCFeatureLayer"] })], B.prototype, "operationalLayerType", void 0), r([m(l3)], B.prototype, "popupEnabled", void 0), r([m({ type: q2, json: { name: "popupInfo", write: true } })], B.prototype, "popupTemplate", void 0), r([m({ types: m3, json: { origins: { service: { name: "layerDefinition.drawingInfo.renderer", write: false }, "web-scene": { types: u, name: "layerDefinition.drawingInfo.renderer", write: true } }, name: "layerDefinition.drawingInfo.renderer", write: true } })], B.prototype, "renderer", null), r([m(s4)], B.prototype, "screenSizePerspectiveEnabled", void 0), r([m({ readOnly: true })], B.prototype, "source", void 0), r([m({ readOnly: true, type: g, json: { origins: { service: { read: true } } } })], B.prototype, "spatialReference", void 0), r([m({ type: String, json: { write: { enabled: true, ignoreOrigin: true, isRequired: true }, origins: { service: { name: "collection.title" } } } })], B.prototype, "title", void 0), r([m({ readOnly: true, json: { read: false } })], B.prototype, "type", void 0), r([m({ type: String, readOnly: true })], B.prototype, "typeIdField", void 0), r([m({ type: [n] })], B.prototype, "types", void 0), r([m(y2)], B.prototype, "url", void 0), B = r([a("esri.layers.OGCFeatureLayer")], B);
var V = B;
export {
  V as default
};
//# sourceMappingURL=OGCFeatureLayer-X6OTSTDD.js.map
