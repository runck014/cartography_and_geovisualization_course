import {
  b,
  c
} from "./chunk-SEG3PRUR.js";
import {
  U
} from "./chunk-CRH37WFF.js";
import {
  K,
  Rt
} from "./chunk-YFGQMO6E.js";
import {
  a
} from "./chunk-GRW2QIBT.js";
import {
  s2 as s
} from "./chunk-PKLD5YJF.js";
import {
  has
} from "./chunk-XKQWTZMW.js";

// node_modules/@arcgis/core/symbols/support/styleCache.js
var e = /* @__PURE__ */ new Map();

// node_modules/@arcgis/core/symbols/support/styleUtils.js
async function f(e2, t) {
  try {
    return { data: (await p(e2, t)).data, baseUrl: Rt(e2), styleUrl: e2 };
  } catch (o) {
    return a(o), null;
  }
}
function u(e2, t, r) {
  var _a;
  const o = null != t.portal ? t.portal : b.getDefault();
  let s2;
  const l = `${o.url} - ${(_a = o.user) == null ? void 0 : _a.username} - ${e2}`, f2 = e.get(l);
  if (f2) return f2;
  const u2 = c2(e2, o, r).then((e3) => (s2 = e3, e3.fetchData())).then((t2) => ({ data: t2, baseUrl: s2.itemUrl ?? "", styleName: e2 }));
  return e.set(l, u2), u2;
}
function c2(e2, r, o) {
  return r.load(o).then(() => {
    const t = new c({ disableExtraQuery: true, query: `owner:${d} AND type:${b2} AND typekeywords:"${e2}"` });
    return r.queryItems(t, o);
  }).then(({ results: r2 }) => {
    var _a;
    let s2 = null;
    const n = e2.toLowerCase();
    if (r2 && Array.isArray(r2)) for (const e3 of r2) {
      const t = (_a = e3.typeKeywords) == null ? void 0 : _a.some((e4) => e4.toLowerCase() === n);
      if (t && e3.type === b2 && e3.owner === d) {
        s2 = e3;
        break;
      }
    }
    if (!s2) throw new s("symbolstyleutils:style-not-found", `The style '${e2}' could not be found`, { styleName: e2 });
    return s2.load(o);
  });
}
function i(e2, r, o) {
  return null != (e2 == null ? void 0 : e2.styleUrl) ? f(e2.styleUrl, o) : null != (e2 == null ? void 0 : e2.styleName) ? u(e2.styleName, r, o) : Promise.reject(new s("symbolstyleutils:style-url-and-name-missing", "Either styleUrl or styleName is required to resolve a style"));
}
function m(e2) {
  return null === e2 || "CIMSymbolReference" === e2.type ? e2 : { type: "CIMSymbolReference", symbol: e2 };
}
function y(e2, t, r = ["gltf"]) {
  if ("cimRef" === t) return encodeURI(e2.cimRef);
  if (e2.formatInfos && !has("enable-feature:force-wosr")) for (const o of r) {
    const t2 = e2.formatInfos.find((e3) => e3.type === o);
    if (t2) return t2.href;
  }
  return encodeURI(e2.webRef);
}
function p(t, r) {
  const s2 = { responseType: "json", query: { f: "json" }, ...r };
  return U(K(t), s2);
}
var d = "esri_en";
var b2 = "Style";
var h = "https://cdn.arcgis.com/sharing/rest/content/items/220936cc6ed342c9937abd8f180e7d1e/resources/styles/cim/{SymbolName}.json?f=json";

export {
  i,
  m,
  y,
  p,
  h
};
//# sourceMappingURL=chunk-MLATPUII.js.map
