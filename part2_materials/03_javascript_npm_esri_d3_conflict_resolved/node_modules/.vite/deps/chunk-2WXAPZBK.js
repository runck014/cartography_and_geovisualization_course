import {
  C,
  N,
  O2 as O,
  P2 as P,
  U,
  ee,
  h,
  m as m2,
  s3 as s,
  z
} from "./chunk-E2I7HYXQ.js";
import {
  f
} from "./chunk-HAF6QJ32.js";
import {
  b2 as b,
  j,
  m
} from "./chunk-H77COA2S.js";
import {
  a4 as a2,
  x
} from "./chunk-7LJCT7EA.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import {
  a
} from "./chunk-PKLD5YJF.js";

// node_modules/@arcgis/core/core/accessorSupport/decorators/writer.js
function r2(r3, o, e) {
  let i, n;
  return void 0 === o ? (n = r3, i = [void 0]) : "string" != typeof o ? (n = r3, i = [void 0], e = o) : (n = o, i = Array.isArray(r3) ? r3 : [r3]), (r4, o2) => {
    const p = r4.constructor.prototype;
    for (const c of i) {
      const i2 = j(r4, c, n);
      i2.write && "object" == typeof i2.write || (i2.write = {}), e && (i2.write.target = e), i2.write.writer = p[o2];
    }
  };
}

// node_modules/@arcgis/core/geometry/SpatialReference.js
var S;
var f2 = S = class extends f {
  static fromJSON(e) {
    if (!e) return null;
    if (102100 === (e == null ? void 0 : e.wkid)) return S.WebMercator;
    if (4326 === (e == null ? void 0 : e.wkid)) return S.WGS84;
    const t = new S();
    return t.read(e), t;
  }
  constructor(e) {
    super(e), this.latestWkid = null, this.wkid = null, this.wkt = null, this.wkt2 = null, this.vcsWkid = null, this.latestVcsWkid = null, this.imageCoordinateSystem = null;
  }
  normalizeCtorArgs(e) {
    if (e && "object" == typeof e) return e;
    const t = "string" == typeof e ? "wkt" : "wkid";
    return { [t]: e };
  }
  get isWGS84() {
    return C(this);
  }
  get isWebMercator() {
    return O(this);
  }
  get isGeographic() {
    return P(this);
  }
  get isWrappable() {
    return N(this);
  }
  get metersPerUnit() {
    return z(this);
  }
  get unit() {
    return ee(this) || (this.isGeographic ? "degrees" : null);
  }
  writeWkt(e, t) {
    this.wkid || (t.wkt = e);
  }
  clone() {
    if (this === S.WGS84) return new S(U);
    if (this === S.WebMercator) return new S(h);
    const e = new S();
    return null != this.wkid ? (e.wkid = this.wkid, null != this.latestWkid && (e.latestWkid = this.latestWkid), null != this.vcsWkid && (e.vcsWkid = this.vcsWkid), null != this.latestVcsWkid && (e.latestVcsWkid = this.latestVcsWkid)) : (null != this.wkt && (e.wkt = this.wkt), null != this.wkt2 && (e.wkt2 = this.wkt2)), this.imageCoordinateSystem && (e.imageCoordinateSystem = a(this.imageCoordinateSystem)), e;
  }
  equals(e) {
    if (null == e) return false;
    if (this.imageCoordinateSystem || e.imageCoordinateSystem) {
      if (null == this.imageCoordinateSystem || null == e.imageCoordinateSystem) return false;
      const { id: t, referenceServiceName: r3 } = e.imageCoordinateSystem, { geodataXform: i } = e.imageCoordinateSystem, o = this.imageCoordinateSystem;
      return null == t || i ? JSON.stringify(o) === JSON.stringify(e.imageCoordinateSystem) : r3 ? o.id === t && o.referenceServiceName === r3 : o.id === t;
    }
    return s(this, e);
  }
  toJSON(e) {
    return this.write(void 0, e);
  }
};
f2.GCS_NAD_1927 = null, f2.WGS84 = null, f2.WebMercator = null, f2.PlateCarree = null, r([m({ readOnly: true })], f2.prototype, "isWGS84", null), r([m({ readOnly: true })], f2.prototype, "isWebMercator", null), r([m({ readOnly: true })], f2.prototype, "isGeographic", null), r([m({ readOnly: true })], f2.prototype, "isWrappable", null), r([m({ type: x, json: { write: true } })], f2.prototype, "latestWkid", void 0), r([m({ readOnly: true })], f2.prototype, "metersPerUnit", null), r([m({ readOnly: true })], f2.prototype, "unit", null), r([m({ type: x, json: { write: true, origins: { "web-scene": { write: { overridePolicy() {
  return { isRequired: null == this.wkt };
} } } } } })], f2.prototype, "wkid", void 0), r([m({ type: String, json: { origins: { "web-scene": { write: { overridePolicy() {
  return { isRequired: null == this.wkid };
} } } } } })], f2.prototype, "wkt", void 0), r([r2("wkt"), r2("web-scene", "wkt")], f2.prototype, "writeWkt", null), r([m({ type: String, json: { write: false } })], f2.prototype, "wkt2", void 0), r([m({ type: x, json: { write: true } })], f2.prototype, "vcsWkid", void 0), r([m({ type: x, json: { write: true } })], f2.prototype, "latestVcsWkid", void 0), r([m()], f2.prototype, "imageCoordinateSystem", void 0), f2 = S = r([a2("esri.geometry.SpatialReference")], f2), f2.prototype.toJSON.isDefaultToJSON = true, f2.GCS_NAD_1927 = b.freeze(new f2({ wkid: 4267, wkt: 'GEOGCS["GCS_North_American_1927",DATUM["D_North_American_1927",SPHEROID["Clarke_1866",6378206.4,294.9786982]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]]' })), f2.WGS84 = b.freeze(new f2(U)), f2.WebMercator = b.freeze(new f2(h)), f2.PlateCarree = b.freeze(new f2(m2));
var g = f2;

export {
  r2 as r,
  g
};
//# sourceMappingURL=chunk-2WXAPZBK.js.map
