import {
  g2 as g3,
  h as h2
} from "./chunk-5OJUBUJF.js";
import {
  I as I3
} from "./chunk-OZQVNYO5.js";
import {
  B,
  V as V3
} from "./chunk-UK4PA5E2.js";
import "./chunk-D4XQN7BI.js";
import "./chunk-C5QEEP7V.js";
import "./chunk-ZTENQQ25.js";
import {
  t as t3
} from "./chunk-TGFVKJXH.js";
import {
  i as i2
} from "./chunk-ZZTUJWOP.js";
import {
  l as l2
} from "./chunk-SVRTKGNR.js";
import {
  s as s3
} from "./chunk-GEPD6W23.js";
import {
  p as p3
} from "./chunk-QSIT7EPR.js";
import {
  C as C3,
  n as n3
} from "./chunk-TP6LRQ42.js";
import {
  l as l3
} from "./chunk-ZE6OS33V.js";
import {
  d as d2
} from "./chunk-MWZJIOOL.js";
import {
  p as p4
} from "./chunk-ULSRCITK.js";
import {
  e as e2
} from "./chunk-FLUE3DMC.js";
import "./chunk-5GQ62KHN.js";
import "./chunk-YAGJS3MX.js";
import {
  z
} from "./chunk-43KBLSS3.js";
import {
  A as A3
} from "./chunk-WH2FR6UE.js";
import {
  j
} from "./chunk-RG7AMCT5.js";
import {
  f
} from "./chunk-PV3ZZQOV.js";
import {
  l
} from "./chunk-SM2VXWMT.js";
import "./chunk-WYO25WZZ.js";
import "./chunk-OC7D2HR4.js";
import {
  t as t2
} from "./chunk-IGMG7ERK.js";
import {
  b as b2
} from "./chunk-V47ZBW5W.js";
import {
  d as d3,
  f as f2,
  j as j2,
  l as l4,
  p as p6,
  u as u3,
  v as v2
} from "./chunk-HKYICNT2.js";
import {
  S
} from "./chunk-VGUQMPM6.js";
import {
  O
} from "./chunk-KKH7HGO3.js";
import {
  A as A2,
  C as C2,
  E,
  F as F2,
  I as I2,
  J,
  L,
  M,
  O as O2,
  P,
  Q,
  R,
  S as S3,
  T,
  Z,
  q as q2,
  v
} from "./chunk-Z3NV3VCK.js";
import {
  p as p2
} from "./chunk-7VNQKVOW.js";
import {
  A,
  p
} from "./chunk-PNVXSHN2.js";
import "./chunk-3DVL3O3F.js";
import "./chunk-RN66FJAW.js";
import "./chunk-QYSQ6XPQ.js";
import "./chunk-2RIHQI4N.js";
import "./chunk-VLKWWBLY.js";
import "./chunk-NXGNMEHZ.js";
import "./chunk-TWYDW6LU.js";
import "./chunk-MLATPUII.js";
import "./chunk-NVFQGMP6.js";
import {
  S as S2,
  c,
  u as u2
} from "./chunk-P2IB5HBH.js";
import "./chunk-XX37BOHH.js";
import "./chunk-5CRXWQ3Y.js";
import "./chunk-4RFCLPAF.js";
import {
  F
} from "./chunk-U3JQIAF6.js";
import "./chunk-4ISVH4NS.js";
import "./chunk-NIWINVGG.js";
import "./chunk-DOENTAA7.js";
import "./chunk-CGSFKZP2.js";
import "./chunk-EPAKCM4A.js";
import "./chunk-WPERPIJF.js";
import "./chunk-RXJCBLN2.js";
import "./chunk-EFVIMN4N.js";
import "./chunk-XKMN3LJN.js";
import "./chunk-2U5JYYSG.js";
import "./chunk-AFULL6KA.js";
import "./chunk-URFLFG2R.js";
import "./chunk-BVHISPUT.js";
import {
  f as f3
} from "./chunk-QMGMKWTA.js";
import "./chunk-XQH2QDB2.js";
import "./chunk-6Q7GN2CW.js";
import {
  q
} from "./chunk-MYUZZ3A3.js";
import {
  s as s2
} from "./chunk-2IGXKE5P.js";
import "./chunk-JFI4ESYU.js";
import "./chunk-4X2UADDH.js";
import "./chunk-ZICJB3ML.js";
import "./chunk-AVBIV2K3.js";
import "./chunk-4NJWIUZG.js";
import {
  b
} from "./chunk-F3NUC2RS.js";
import "./chunk-LE3YW4Y3.js";
import "./chunk-TA32QX7Z.js";
import "./chunk-NYLL2YZF.js";
import {
  w
} from "./chunk-P3GRQ2CH.js";
import {
  i
} from "./chunk-NYLBGE62.js";
import "./chunk-LPNAPHOF.js";
import "./chunk-QCBTLG25.js";
import "./chunk-SUZN3TAH.js";
import "./chunk-K5RYAJV4.js";
import "./chunk-XGYM66XX.js";
import "./chunk-JOOGZSAP.js";
import "./chunk-J6GHQIZ2.js";
import "./chunk-VEUN2EF3.js";
import {
  C,
  d
} from "./chunk-W6D3ECTZ.js";
import {
  t
} from "./chunk-EDGKOPSL.js";
import "./chunk-QXDQJEIU.js";
import "./chunk-MGMVRMXQ.js";
import "./chunk-SEUZ3J6J.js";
import {
  g as g2,
  p as p5
} from "./chunk-BWTCR2DR.js";
import {
  n as n2
} from "./chunk-SMOTPOZ7.js";
import "./chunk-YVSEBNS4.js";
import "./chunk-Y2XCZQML.js";
import "./chunk-EZXLBRAS.js";
import "./chunk-7FJIOZSE.js";
import "./chunk-GNWAZIVF.js";
import "./chunk-2PK57UYA.js";
import "./chunk-3L2AYCZY.js";
import "./chunk-TSVUPARM.js";
import "./chunk-VUJERGGB.js";
import "./chunk-NTI2OCVI.js";
import "./chunk-ZCHZRNUG.js";
import "./chunk-G6REFQRQ.js";
import "./chunk-2TEGRXBS.js";
import "./chunk-6Y2LNRVP.js";
import "./chunk-JVEZN6WF.js";
import "./chunk-E2RPCJOE.js";
import "./chunk-NHJGPXZH.js";
import "./chunk-JS7R723S.js";
import {
  V as V2
} from "./chunk-RCLWOQNR.js";
import "./chunk-DOTSJZHK.js";
import "./chunk-UCO66LNK.js";
import "./chunk-5YRJ4YFE.js";
import "./chunk-RD2BBQYN.js";
import "./chunk-SEG3PRUR.js";
import {
  m as m2
} from "./chunk-B6VE32RA.js";
import "./chunk-AIYFWM42.js";
import "./chunk-2M53HYNY.js";
import "./chunk-6YWQXXBX.js";
import "./chunk-Q7TEBZSN.js";
import "./chunk-FG3XOAFD.js";
import {
  o
} from "./chunk-GN5RE63N.js";
import {
  g,
  r as r2
} from "./chunk-2WXAPZBK.js";
import "./chunk-E2I7HYXQ.js";
import "./chunk-P5H5PJSC.js";
import "./chunk-WTNHDCCU.js";
import "./chunk-7O7KFKCG.js";
import "./chunk-TVTRNT6K.js";
import "./chunk-CRH37WFF.js";
import {
  I,
  V
} from "./chunk-YFGQMO6E.js";
import "./chunk-HAF6QJ32.js";
import {
  m
} from "./chunk-H77COA2S.js";
import {
  a4 as a3,
  u4 as u
} from "./chunk-7LJCT7EA.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import {
  a as a2,
  h,
  k
} from "./chunk-GRW2QIBT.js";
import "./chunk-R2PAF6JT.js";
import "./chunk-6WE7SNQY.js";
import "./chunk-L6CCOEVE.js";
import {
  a,
  e,
  n2 as n,
  s2 as s
} from "./chunk-PKLD5YJF.js";
import "./chunk-XKQWTZMW.js";
import "./chunk-A4OFG7JM.js";

// node_modules/@arcgis/core/layers/support/subtypeGroupLayerUtils.js
var l5 = { key: "type", base: p, errorContext: "renderer", typeMap: { simple: p2, "unique-value": A, "class-breaks": z } };
var d4 = u({ types: l5 });
function f4(e3, r3) {
  var _a;
  const s4 = (_a = e3.drawingInfo) == null ? void 0 : _a.renderer, o2 = s4 ? d4(s4, e3, r3) : null;
  if ("simple" !== (o2 == null ? void 0 : o2.type)) return;
  return h2(o2.symbol, null) ? o2.symbol.clone() : null;
}
var c2 = ["#ed5151", "#149ece", "#a7c636", "#9e559c", "#fc921f", "#ffde3e", "#f789d8", "#b7814a", "#3caf99", "#6b6bd6", "#b54779", "#7f7f7f"];
function a4(e3, r3) {
  return O(c2, e3, { offset: true, shuffle: true }).reverse().map((e4) => {
    const o2 = r3.clone();
    return "cim" === o2.type ? I3(o2, e4) : g3(o2, e4), new p2({ symbol: o2 });
  });
}

// node_modules/@arcgis/core/layers/support/SubtypeSublayer.js
var V4 = s3();
var N = 0;
function $(e3) {
  const t4 = e3.json.write;
  return "object" == typeof t4 ? t4.ignoreOrigin = true : e3.json.write = { ignoreOrigin: true }, e3;
}
function _(e3) {
  return new p2({ symbol: k2(e3) });
}
function k2(e3) {
  switch (e3) {
    case "point":
    case "multipoint":
      return S2.clone();
    case "polyline":
      return u2.clone();
    case "polygon":
    case "multipatch":
      return c.clone();
    default:
      return null;
  }
}
function M2(e3, t4) {
  return !!t4 && ("unique-value" === (e3 == null ? void 0 : e3.type) && null != e3.field && e3.field.toLowerCase() === t4.toLowerCase() && !e3.field2 && !e3.field3 && !e3.valueExpression);
}
function B2(e3, t4) {
  var _a;
  return null == e3 ? null : (_a = t4.subtypes) == null ? void 0 : _a.find((t5) => t5.code === e3);
}
function H(e3, t4) {
  let r3 = null;
  switch (t4.geometryType) {
    case "esriGeometryPoint":
    case "esriGeometryMultipoint":
      r3 = "point";
      break;
    case "esriGeometryPolyline":
      r3 = "line";
      break;
    case "esriGeometryPolygon":
    case "esriGeometryMultiPatch":
      r3 = "polygon";
      break;
    default:
      t4.type, r3 = null;
  }
  const i3 = {}, n4 = B2(e3, t4);
  if (null != n4) {
    const { defaultValues: e4 } = n4;
    for (const t5 in e4) i3[t5] = e4[t5];
  }
  return i3[t4.subtypeField] = e3, new p3({ name: "New Feature", drawingTool: r3, prototype: { attributes: i3 } });
}
var Q2 = class extends S(i(s2(m2))) {
  constructor(e3) {
    super(e3), this.attributeTableTemplate = null, this.charts = null, this.editingEnabled = true, this.fieldOverrides = null, this.fieldsIndex = null, this.formTemplate = null, this.id = `${Date.now().toString(16)}-subtype-sublayer-${N++}`, this.type = "subtype-sublayer", this.labelsVisible = true, this.labelingInfo = null, this.layerType = "ArcGISFeatureLayer", this.legendEnabled = true, this.listMode = "show", this.minScale = 0, this.maxScale = 0, this.opacity = 1, this.parent = null, this.popupEnabled = true, this.popupTemplate = null, this.subtypeCode = null, this.templates = null, this.title = null, this.visible = true;
  }
  load(e3) {
    return p5(this.renderer, this.fieldsIndex), Promise.resolve(this);
  }
  get capabilities() {
    var _a;
    return (_a = this.parent) == null ? void 0 : _a.capabilities;
  }
  get effectiveCapabilities() {
    var _a;
    return (_a = this.parent) == null ? void 0 : _a.effectiveCapabilities;
  }
  get effectiveEditingEnabled() {
    const { parent: e3 } = this;
    return e3 ? e3.effectiveEditingEnabled && this.editingEnabled : this.editingEnabled;
  }
  get elevationInfo() {
    var _a;
    return (_a = this.parent) == null ? void 0 : _a.elevationInfo;
  }
  writeFieldOverrides(e3, t4, r3) {
    const { fields: i3, parent: n4 } = this;
    let o2;
    if (i3) {
      o2 = [];
      let e4 = 0;
      i3.forEach(({ name: t5, alias: r4, editable: i4, visible: s4 }) => {
        var _a;
        if (!s4) return;
        const a5 = (_a = n4 == null ? void 0 : n4.fields) == null ? void 0 : _a.find((e5) => e5.name === t5);
        if (!a5) return;
        const l6 = { name: t5 };
        let p7 = false;
        r4 !== a5.alias && (l6.alias = r4, p7 = true), i4 !== a5.editable && (l6.editable = i4, p7 = true), o2.push(l6), p7 && e4++;
      }), 0 === e4 && o2.length === i3.length && (o2 = null);
    } else o2 = a(e3);
    (o2 == null ? void 0 : o2.length) && e(r3, o2, t4);
  }
  get fields() {
    const { parent: e3, fieldOverrides: t4, subtypeCode: r3 } = this, i3 = e3 == null ? void 0 : e3.fields;
    if (!e3 || !(i3 == null ? void 0 : i3.length)) return null;
    const { subtypes: n4, subtypeField: o2 } = e3, s4 = n4 == null ? void 0 : n4.find((e4) => e4.code === r3), a5 = s4 == null ? void 0 : s4.defaultValues, l6 = s4 == null ? void 0 : s4.domains, p7 = [];
    for (const d5 of i3) {
      const e4 = d5.clone(), { name: i4 } = e4, n5 = t4 == null ? void 0 : t4.find((e5) => e5.name === i4);
      if (e4.visible = !t4 || !!n5, n5) {
        const { alias: t5, editable: r4 } = n5;
        t5 && (e4.alias = t5), false === r4 && (e4.editable = false);
      }
      const s5 = (a5 == null ? void 0 : a5[i4]) ?? null;
      e4.defaultValue = i4 === o2 ? r3 : s5;
      const u4 = (l6 == null ? void 0 : l6[i4]) ?? null;
      e4.domain = i4 === o2 ? null : u4 ? "inherited" === u4.type ? e4.domain : u4.clone() : null, p7.push(e4);
    }
    return p7;
  }
  get floorInfo() {
    var _a;
    return (_a = this.parent) == null ? void 0 : _a.floorInfo;
  }
  get geometryType() {
    var _a;
    return (_a = this.parent) == null ? void 0 : _a.geometryType;
  }
  get effectiveScaleRange() {
    const { minScale: e3, maxScale: t4 } = this;
    return { minScale: e3, maxScale: t4 };
  }
  get objectIdField() {
    var _a;
    return this.parent || n.getLogger(this).error(z2("objectIdField")), (_a = this.parent) == null ? void 0 : _a.objectIdField;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  get relationships() {
    var _a;
    return (_a = this.parent) == null ? void 0 : _a.relationships;
  }
  set renderer(e3) {
    p5(e3, this.fieldsIndex), this._override("renderer", e3);
  }
  get renderer() {
    if (this._isOverridden("renderer")) return this._get("renderer");
    const { parent: e3 } = this;
    return e3 && !e3.isTable && "mesh" !== e3.geometryType ? _(e3.geometryType) : null;
  }
  readRendererFromService(e3, t4, i3) {
    var _a, _b, _c;
    if ("Table" === t4.type) return null;
    const n4 = (_a = t4.drawingInfo) == null ? void 0 : _a.renderer, o2 = d4(n4, t4, i3);
    let s4;
    const { subtypeCode: a5 } = this;
    if (null != a5 && M2(o2, t4.subtypeField)) {
      const e4 = (_b = o2.uniqueValueInfos) == null ? void 0 : _b.find(({ value: e5 }) => (e5 = "number" == typeof e5 ? String(e5) : e5) === String(a5));
      e4 && (s4 = new p2({ symbol: e4.symbol }));
    } else "simple" !== (o2 == null ? void 0 : o2.type) || ((_c = o2.visualVariables) == null ? void 0 : _c.length) || (s4 = o2);
    return s4;
  }
  readRenderer(e3, t4, r3) {
    var _a, _b, _c;
    const i3 = (_b = (_a = t4 == null ? void 0 : t4.layerDefinition) == null ? void 0 : _a.drawingInfo) == null ? void 0 : _b.renderer;
    if (!i3) return;
    const n4 = (_c = i3.visualVariables) == null ? void 0 : _c.some((e4) => "rotationInfo" !== e4.type);
    return n4 ? void 0 : d4(i3, t4, r3) || void 0;
  }
  get spatialReference() {
    var _a;
    return ((_a = this.parent) == null ? void 0 : _a.spatialReference) ?? g.WGS84;
  }
  get subtypeField() {
    var _a;
    return (_a = this.parent) == null ? void 0 : _a.subtypeField;
  }
  readTemplatesFromService(e3, t4) {
    return [H(this.subtypeCode, t4)];
  }
  readTitleFromService(e3, t4) {
    const r3 = B2(this.subtypeCode, t4);
    return null != r3 ? r3.name : null;
  }
  get url() {
    var _a;
    return (_a = this.parent) == null ? void 0 : _a.url;
  }
  get userHasUpdateItemPrivileges() {
    var _a;
    return !!((_a = this.parent) == null ? void 0 : _a.userHasUpdateItemPrivileges);
  }
  async addAttachment(e3, t4) {
    const { parent: r3 } = this;
    if (!r3) throw z2("addAttachment");
    if (e3.getAttribute(r3.subtypeField) !== this.subtypeCode) throw new s("subtype-sublayer:addAttachment", "The feature provided does not belong to this SubtypeSublayer");
    return r3.addAttachment(e3, t4);
  }
  async updateAttachment(e3, t4, r3) {
    const { parent: i3 } = this;
    if (!i3) throw z2("updateAttachment");
    if (e3.getAttribute(i3.subtypeField) !== this.subtypeCode) throw new s("subtype-sublayer:updateAttachment", "The feature provided does not belong to this SubtypeSublayer");
    return i3.updateAttachment(e3, t4, r3);
  }
  async deleteAttachments(e3, t4) {
    const { parent: r3 } = this;
    if (!r3) throw z2("deleteAttachments");
    if (e3.getAttribute(r3.subtypeField) !== this.subtypeCode) throw new s("subtype-sublayer:deleteAttachments", "The feature provided does not belong to this SubtypeSublayer");
    return r3.deleteAttachments(e3, t4);
  }
  async applyEdits(e3, t4) {
    if (!this.parent) throw z2("applyEdits");
    return this.parent.applyEdits(e3, t4);
  }
  createPopupTemplate(e3) {
    let t4 = this;
    const { parent: r3, fields: i3, title: n4 } = this;
    if (r3) {
      const { displayField: e4, editFieldsInfo: o2, objectIdField: s4 } = r3;
      t4 = { displayField: e4, editFieldsInfo: o2, fields: i3, objectIdField: s4, title: n4 };
    }
    return p4(t4, e3);
  }
  createQuery() {
    if (!this.parent) throw z2("createQuery");
    const e3 = M(this.parent), t4 = `${this.parent.subtypeField}=${this.subtypeCode}`;
    return e3.where = n2(t4, this.parent.definitionExpression), e3;
  }
  getField(e3) {
    return this.fieldsIndex.get(e3);
  }
  getFieldDomain(e3, t4) {
    if (!(t4 == null ? void 0 : t4.excludeImpliedDomains) && this.parent) {
      const t5 = T(this.parent, e3);
      if (t5) return t5;
    }
    return this._getLayerDomain(e3);
  }
  async queryAttachments(e3, t4) {
    const r3 = await this.load();
    if (!r3.parent) throw z2("queryAttachments");
    const i3 = e3.clone();
    return i3.where = W(i3.where, r3.parent.subtypeField, r3.subtypeCode), r3.parent.queryAttachments(e3, t4);
  }
  async queryFeatureCount(e3, t4) {
    const r3 = await this.load();
    if (!r3.parent) throw z2("queryFeatureCount");
    return r3.parent.queryFeatureCount(J2(r3.parent, r3, e3), t4);
  }
  async queryFeatures(e3, t4) {
    const r3 = await this.load();
    if (!r3.parent) throw z2("queryFeatures");
    return r3.parent.queryFeatures(J2(r3.parent, r3, e3), t4);
  }
  async queryObjectIds(e3, t4) {
    const r3 = await this.load();
    if (!r3.parent) throw z2("queryObjectIds");
    return r3.parent.queryObjectIds(J2(r3.parent, r3, e3), t4);
  }
  async queryRelatedFeatures(e3, t4) {
    const r3 = await this.load();
    if (!r3.parent) throw z2("queryRelatedFeatures");
    return r3.parent.queryRelatedFeatures(e3, t4);
  }
  async queryRelatedFeaturesCount(e3, t4) {
    const r3 = await this.load();
    if (!r3.parent) throw z2("queryRelatedFeaturesCount");
    return r3.parent.queryRelatedFeaturesCount(e3, t4);
  }
  _getLayerDomain(e3) {
    const t4 = this.fieldsIndex.get(e3);
    return t4 ? t4.domain : null;
  }
};
r([m({ type: f2, json: { name: "attributeTableInfo", write: { ignoreOrigin: true } } })], Q2.prototype, "attributeTableTemplate", void 0), r([m({ readOnly: true, json: { read: false } })], Q2.prototype, "capabilities", null), r([m({ readOnly: true, json: { read: false } })], Q2.prototype, "effectiveCapabilities", null), r([m({ json: { write: { ignoreOrigin: true } } })], Q2.prototype, "charts", void 0), r([m({ type: Boolean, nonNullable: true, json: { name: "enableEditing", write: { ignoreOrigin: true } } })], Q2.prototype, "editingEnabled", void 0), r([m({ type: Boolean, readOnly: true })], Q2.prototype, "effectiveEditingEnabled", null), r([m({ readOnly: true, json: { read: false } })], Q2.prototype, "elevationInfo", null), r([m({ json: { name: "layerDefinition.fieldOverrides", origins: { service: { read: false } }, write: { ignoreOrigin: true, allowNull: true } } })], Q2.prototype, "fieldOverrides", void 0), r([r2("fieldOverrides")], Q2.prototype, "writeFieldOverrides", null), r([m({ ...V4.fields, readOnly: true, json: { read: false } })], Q2.prototype, "fields", null), r([m(V4.fieldsIndex)], Q2.prototype, "fieldsIndex", void 0), r([m({ readOnly: true, json: { read: false } })], Q2.prototype, "floorInfo", null), r([m({ type: V3, json: { name: "formInfo", write: { ignoreOrigin: true } } })], Q2.prototype, "formTemplate", void 0), r([m({ type: String, clonable: false, json: { origins: { service: { read: false }, "portal-item": { read: false } }, write: { ignoreOrigin: true } } })], Q2.prototype, "id", void 0), r([m({ readOnly: true, json: { read: false } })], Q2.prototype, "geometryType", null), r([m({ readOnly: true, json: { read: false } })], Q2.prototype, "type", void 0), r([m($(a(p6)))], Q2.prototype, "labelsVisible", void 0), r([m({ type: [C3], json: { name: "layerDefinition.drawingInfo.labelingInfo", origins: { service: { read: false } }, read: { reader: n3 }, write: { ignoreOrigin: true } } })], Q2.prototype, "labelingInfo", void 0), r([m({ type: ["ArcGISFeatureLayer"], readOnly: true, json: { read: false, write: { ignoreOrigin: true } } })], Q2.prototype, "layerType", void 0), r([m($(a(d3)))], Q2.prototype, "legendEnabled", void 0), r([m({ type: ["show", "hide"] })], Q2.prototype, "listMode", void 0), r([m((() => {
  const e3 = a(j2);
  return e3.json.origins.service.read = false, $(e3);
})())], Q2.prototype, "minScale", void 0), r([m((() => {
  const e3 = a(v2);
  return e3.json.origins.service.read = false, $(e3);
})())], Q2.prototype, "maxScale", void 0), r([m({ readOnly: true })], Q2.prototype, "effectiveScaleRange", null), r([m({ readOnly: true, json: { read: false } })], Q2.prototype, "objectIdField", null), r([m({ type: Number, range: { min: 0, max: 1 }, nonNullable: true, json: { write: { ignoreOrigin: true } } })], Q2.prototype, "opacity", void 0), r([m({ clonable: false })], Q2.prototype, "parent", void 0), r([m($(a(l4)))], Q2.prototype, "popupEnabled", void 0), r([m({ type: q, json: { name: "popupInfo", write: { ignoreOrigin: true } } })], Q2.prototype, "popupTemplate", void 0), r([m({ readOnly: true })], Q2.prototype, "defaultPopupTemplate", null), r([m({ readOnly: true, json: { read: false } })], Q2.prototype, "relationships", null), r([m({ types: l5, json: { write: { target: "layerDefinition.drawingInfo.renderer", ignoreOrigin: true } } })], Q2.prototype, "renderer", null), r([o("service", "renderer", ["drawingInfo.renderer", "subtypeField", "type"])], Q2.prototype, "readRendererFromService", null), r([o("renderer", ["layerDefinition.drawingInfo.renderer"])], Q2.prototype, "readRenderer", null), r([m({ readOnly: true, json: { read: false } })], Q2.prototype, "spatialReference", null), r([m({ type: Number, json: { origins: { service: { read: false } }, write: { ignoreOrigin: true } } })], Q2.prototype, "subtypeCode", void 0), r([m({ readOnly: true, json: { read: false } })], Q2.prototype, "subtypeField", null), r([m({ type: [p3], json: { name: "layerDefinition.templates", write: { ignoreOrigin: true } } })], Q2.prototype, "templates", void 0), r([o("service", "templates", ["geometryType", "subtypeField", "subtypes", "type"])], Q2.prototype, "readTemplatesFromService", null), r([m({ type: String, json: { write: { ignoreOrigin: true } } })], Q2.prototype, "title", void 0), r([o("service", "title", ["subtypes"])], Q2.prototype, "readTitleFromService", null), r([m({ readOnly: true, json: { read: false } })], Q2.prototype, "url", null), r([m({ readOnly: true })], Q2.prototype, "userHasUpdateItemPrivileges", null), r([m({ type: Boolean, nonNullable: true, json: { name: "visibility", write: { ignoreOrigin: true } } })], Q2.prototype, "visible", void 0), Q2 = r([a3("esri.layers.support.SubtypeSublayer")], Q2);
var J2 = (e3, t4, r3) => {
  if (!r3) return t4.createQuery();
  const i3 = b.from(r3);
  return i3.where = W(i3.where, e3.subtypeField, t4.subtypeCode), i3;
};
var W = (e3, t4, r3) => {
  const i3 = new RegExp(`${t4}\\s*=\\s*\\d+`), n4 = `${t4}=${r3}`, o2 = e3 ?? "";
  return i3.test(o2) ? o2.replace(i3, n4) : n2(n4, o2);
};
var z2 = (e3) => new s(`This sublayer must have a parent SubtypeGroupLayer in order to use ${e3}`);
var K = Q2;

// node_modules/@arcgis/core/layers/SubtypeGroupLayer.js
var se = "SubtypeGroupLayer";
var ie = "esri.layers.SubtypeGroupLayer";
function oe(e3, t4) {
  return new s("layer:unsupported", `Layer (${e3.title}, ${e3.id}) of type '${e3.declaredClass}' ${t4}`, { layer: e3 });
}
var ae = s3();
var ne = class extends B(F(l(l3(t2(f(l2(b2(j(S(e2(i2(i(f3))))))))))))) {
  constructor(...e3) {
    super(...e3), this._sublayerLookup = /* @__PURE__ */ new Map(), this.fields = null, this.fieldsIndex = null, this.outFields = null, this.sublayers = new (V2.ofType(K))(), this.useUniqueColorsForSublayers = true, this.supportedSourceTypes = /* @__PURE__ */ new Set(["Feature Layer"]), this.timeInfo = null, this.title = "Layer", this.type = "subtype-group", this._debouncedSaveOperations = k(async (e4, t4, r3) => {
      const { save: s4, saveAs: i3 } = await import("./featureLayerUtils-FDGTT2YY.js");
      switch (e4) {
        case A3.SAVE:
          return s4(this, t4);
        case A3.SAVE_AS:
          return i3(this, r3, t4);
      }
    }), this.addHandles(d(() => this.sublayers, (e4, t4) => this._handleSublayersChange(e4, t4), C));
  }
  destroy() {
    var _a;
    (_a = this.source) == null ? void 0 : _a.destroy();
  }
  normalizeCtorArgs(e3, t4) {
    return "string" == typeof e3 ? { url: e3, ...t4 } : e3;
  }
  load(e3) {
    const t4 = null != e3 ? e3.signal : null, r3 = this.loadFromPortal({ supportedTypes: ["Feature Service"] }, e3).catch(a2).then(async () => {
      if (!this.url) throw new s("subtype-grouplayer:missing-url-or-source", "SubtypeGroupLayer must be created with either a url or a portal item");
      if (null == this.layerId) throw new s("subtype-grouplayer:missing-layerid", "layerId is required for a SubtypeGroupLayer created with url");
      return this._initLayerProperties(await this.createGraphicsSource(t4));
    }).then(() => J(this, "load", e3));
    return this.addResolvingPromise(r3), Promise.resolve(this);
  }
  get createQueryVersion() {
    return this.commitProperty("definitionExpression"), this.commitProperty("timeExtent"), this.commitProperty("timeOffset"), this.commitProperty("geometryType"), this.commitProperty("gdbVersion"), this.commitProperty("historicMoment"), this.commitProperty("returnZ"), this.commitProperty("capabilities"), this.commitProperty("returnM"), (this._get("createQueryVersion") ?? 0) + 1;
  }
  get editingEnabled() {
    return this.loaded && null != this.capabilities && this.capabilities.operations.supportsEditing && this.userHasEditingPrivileges;
  }
  get effectiveEditingEnabled() {
    return Z(this);
  }
  get parsedUrl() {
    const e3 = I(this.url);
    return null != e3 && null != this.layerId && (e3.path = V(e3.path, this.layerId.toString())), e3;
  }
  set source(e3) {
    this._get("source") !== e3 && this._set("source", e3);
  }
  readTitleFromService(e3, { name: t4 }) {
    return this.url ? w(this.url, t4) : t4;
  }
  async addAttachment(e3, t4) {
    const r3 = await I2(this, e3, t4, se);
    return this.lastEditsEventDate = /* @__PURE__ */ new Date(), r3;
  }
  async updateAttachment(e3, t4, r3) {
    const s4 = await F2(this, e3, t4, r3, se);
    return this.lastEditsEventDate = /* @__PURE__ */ new Date(), s4;
  }
  async applyEdits(e3, t4) {
    return q2(this, e3, t4);
  }
  on(e3, t4) {
    return super.on(e3, t4);
  }
  async createGraphicsSource(e3) {
    const { default: t4 } = await h(import("./FeatureLayerSource-E3CFS5BC.js"), e3);
    return new t4({ layer: this, supportedSourceTypes: this.supportedSourceTypes }).load({ signal: e3 });
  }
  createQuery() {
    const e3 = M(this), t4 = this.sublayers.map((e4) => e4.subtypeCode);
    return e3.where = n2(`${this.subtypeField} IN (${t4.join(",")})`, this.definitionExpression), e3;
  }
  async deleteAttachments(e3, t4) {
    const r3 = await A2(this, e3, t4, se);
    return this.lastEditsEventDate = /* @__PURE__ */ new Date(), r3;
  }
  async fetchRecomputedExtents(e3) {
    return v(this, e3, se);
  }
  findSublayerForFeature(e3) {
    const t4 = this.fieldsIndex.get(this.subtypeField), r3 = e3.attributes[t4.name];
    return this.findSublayerForSubtypeCode(r3);
  }
  findSublayerForSubtypeCode(e3) {
    return this._sublayerLookup.get(e3);
  }
  getFieldDomain(e3, t4) {
    var _a;
    if (!(t4 == null ? void 0 : t4.excludeImpliedDomains)) {
      const t5 = T(this, e3);
      if (t5) return t5;
    }
    const r3 = Q(this, t4 == null ? void 0 : t4.feature);
    if (r3) {
      const t5 = (_a = r3.domains) == null ? void 0 : _a[e3];
      return "inherited" === (t5 == null ? void 0 : t5.type) ? this._getLayerDomain(e3) : t5;
    }
    return this._getLayerDomain(e3);
  }
  getField(e3) {
    return this.fieldsIndex.get(e3);
  }
  loadAll() {
    return t(this, (e3) => {
      e3(this.sublayers);
    });
  }
  async queryAttachments(e3, t4) {
    return S3(this, e3, t4, se);
  }
  async queryFeatures(e3, t4) {
    const r3 = await this.load(), s4 = b.from(e3) ?? r3.createQuery(), i3 = s4.outFields ?? [];
    i3.includes(this.subtypeField) || (i3.push(this.subtypeField), s4.outFields = i3);
    const o2 = await r3.source.queryFeatures(s4, t4);
    if (o2 == null ? void 0 : o2.features) for (const a5 of o2.features) a5.layer = a5.sourceLayer = this.findSublayerForFeature(a5);
    return o2;
  }
  async queryObjectIds(e3, t4) {
    return O2(this, e3, t4, se);
  }
  async queryFeatureCount(e3, t4) {
    return P(this, e3, t4, se);
  }
  async queryExtent(e3, t4) {
    return E(this, e3, t4, se);
  }
  async queryRelatedFeatures(e3, t4) {
    return L(this, e3, t4, se);
  }
  async queryRelatedFeaturesCount(e3, t4) {
    return C2(this, e3, t4, se);
  }
  async save(e3) {
    return this._debouncedSaveOperations(A3.SAVE, e3);
  }
  async saveAs(e3, t4) {
    return this._debouncedSaveOperations(A3.SAVE_AS, t4, e3);
  }
  write(e3, t4) {
    var _a;
    const { origin: r3, layerContainerType: i3, messages: o2 } = t4;
    if (this.isTable) {
      if ("web-scene" === r3 || "web-map" === r3 && "tables" !== i3) return o2 == null ? void 0 : o2.push(oe(this, "using a table source cannot be written to web scenes and web maps")), null;
    } else if (this.loaded && "web-map" === r3 && "tables" === i3) return o2 == null ? void 0 : o2.push(oe(this, "using a non-table source cannot be written to tables in web maps")), null;
    return ((_a = this.sublayers) == null ? void 0 : _a.length) ? super.write(e3, t4) : (o2 == null ? void 0 : o2.push(new s("web-document-write:invalid-property", `Layer (${this.title}, ${this.id}) of type '${this.declaredClass}' has invalid value for 'sublayers' property. 'sublayers' collection should contain at least one sublayer`, { layer: this })), null);
  }
  serviceSupportsSpatialReference(e3) {
    return !!this.loaded && t3(this, e3);
  }
  _getLayerDomain(e3) {
    const t4 = this.fieldsIndex.get(e3);
    return t4 ? t4.domain : null;
  }
  async _initLayerProperties(e3) {
    var _a;
    this._set("source", e3);
    const { sourceJSON: t4 } = e3;
    if (t4 && (this.sourceJSON = t4, this.read(t4, { origin: "service", url: this.parsedUrl })), !((_a = this.subtypes) == null ? void 0 : _a.length)) throw new s("subtype-grouplayer:missing-subtypes", "SubtypeGroupLayer must be created using a layer with subtypes");
    this._verifyFields(), g2(this.timeInfo, this.fieldsIndex);
  }
  async hasDataChanged() {
    return R(this);
  }
  _verifyFields() {
    var _a, _b;
    const e3 = ((_a = this.parsedUrl) == null ? void 0 : _a.path) ?? "undefined";
    this.objectIdField || console.log("SubtypeGroupLayer: 'objectIdField' property is not defined (url: " + e3 + ")"), this.isTable || -1 !== e3.search(/\/FeatureServer\//i) || ((_b = this.fields) == null ? void 0 : _b.some((e4) => "geometry" === e4.type)) || console.log("SubtypeGroupLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: " + e3 + ")");
  }
  _handleSublayersChange(e3, t4) {
    t4 && (t4.forEach((e4) => {
      e4.parent = null;
    }), this.removeHandles("sublayers-owner"), this._sublayerLookup.clear()), e3 && (e3.forEach((e4) => {
      e4.parent = this, this._sublayerLookup.set(e4.subtypeCode, e4);
    }), this.addHandles([e3.on("after-add", ({ item: e4 }) => {
      e4.parent = this, this._sublayerLookup.set(e4.subtypeCode, e4);
    }), e3.on("after-remove", ({ item: e4 }) => {
      e4.parent = null, this._sublayerLookup.delete(e4.subtypeCode);
    })], "sublayers-owner"));
  }
};
r([m({ readOnly: true })], ne.prototype, "createQueryVersion", null), r([m({ readOnly: true })], ne.prototype, "editingEnabled", null), r([m({ readOnly: true })], ne.prototype, "effectiveEditingEnabled", null), r([m({ ...ae.fields, readOnly: true, json: { origins: { service: { read: true } }, read: false } })], ne.prototype, "fields", void 0), r([m(ae.fieldsIndex)], ne.prototype, "fieldsIndex", void 0), r([m(u3)], ne.prototype, "id", void 0), r([m({ type: ["show", "hide", "hide-children"], json: { origins: { "portal-item": { read: false, write: false } } } })], ne.prototype, "listMode", void 0), r([m({ value: "SubtypeGroupLayer", type: ["SubtypeGroupLayer"], json: { origins: { "portal-item": { name: "layerType", write: { enabled: true, ignoreOrigin: true } } } } })], ne.prototype, "operationalLayerType", void 0), r([m(ae.outFields)], ne.prototype, "outFields", void 0), r([m({ readOnly: true })], ne.prototype, "parsedUrl", null), r([m({ clonable: false })], ne.prototype, "source", null), r([m({ type: V2.ofType(K), json: { origins: { service: { read: { source: "subtypes", reader(e3, t4, s4) {
  let i3 = null;
  if (this.useUniqueColorsForSublayers) {
    const r3 = f4(t4, s4);
    i3 = r3 ? a4(e3.length, r3) : null;
  }
  const o2 = e3.map(({ code: e4 }, r3) => {
    const o3 = new K({ subtypeCode: e4 });
    o3.read(t4, s4);
    const a5 = i3 == null ? void 0 : i3[r3];
    return a5 && o3.read({ drawingInfo: { renderer: a5.toJSON() } }, s4), o3;
  });
  return new (V2.ofType(K))(o2);
} } } }, name: "layers", write: { ignoreOrigin: true } } })], ne.prototype, "sublayers", void 0), r([m()], ne.prototype, "useUniqueColorsForSublayers", void 0), r([m({ type: d2 })], ne.prototype, "timeInfo", void 0), r([m({ json: { origins: { "portal-item": { write: { enabled: true, ignoreOrigin: true, writerEnsuresNonNull: true } } } } })], ne.prototype, "title", void 0), r([o("service", "title", ["name"])], ne.prototype, "readTitleFromService", null), r([m({ json: { read: false } })], ne.prototype, "type", void 0), ne = r([a3(ie)], ne);
var ue = ne;
export {
  ue as default
};
//# sourceMappingURL=SubtypeGroupLayer-26CO6HK2.js.map
