import {
  s2 as s
} from "./chunk-7YNV23MG.js";
import {
  o
} from "./chunk-A33GYYOL.js";
import {
  g,
  r as r2
} from "./chunk-L6D73M4D.js";
import "./chunk-DRBJFCLQ.js";
import {
  n
} from "./chunk-7O7KFKCG.js";
import "./chunk-E2X3OBBC.js";
import "./chunk-X7VTUWCX.js";
import "./chunk-QS62R4CH.js";
import {
  f
} from "./chunk-VU6O6TFT.js";
import {
  m
} from "./chunk-GD4XDYZL.js";
import {
  a4 as a,
  h
} from "./chunk-33ECLFFF.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import "./chunk-L6CCOEVE.js";
import "./chunk-GRW2QIBT.js";
import "./chunk-R2PAF6JT.js";
import "./chunk-6WE7SNQY.js";
import "./chunk-PKLD5YJF.js";
import "./chunk-XKQWTZMW.js";
import "./chunk-A4OFG7JM.js";

// node_modules/@arcgis/core/rest/networks/support/TraceLocation.js
var i = new n({ startingPoint: "starting-point", barrier: "barrier" });
var p = class extends f {
  constructor(r3) {
    super(r3), this.globalId = null, this.isFilterBarrier = false, this.percentAlong = null, this.terminalId = null, this.type = null;
  }
};
r([m({ type: String, json: { write: true } })], p.prototype, "globalId", void 0), r([m({ type: Boolean, json: { write: true } })], p.prototype, "isFilterBarrier", void 0), r([m({ type: Number, json: { write: true } })], p.prototype, "percentAlong", void 0), r([m({ type: Number, json: { write: true } })], p.prototype, "terminalId", void 0), r([m({ type: i.apiValues, json: { type: i.jsonValues, read: { reader: i.read, source: "traceLocationType" }, write: { writer: i.write, target: "traceLocationType" } } })], p.prototype, "type", void 0), p = r([a("esri.rest.networks.support.TraceLocation")], p);
var a2 = p;

// node_modules/@arcgis/core/rest/networks/support/TraceParameters.js
var l;
var u = l = class extends f {
  static from(t) {
    return h(l, t);
  }
  constructor(t) {
    super(t), this.namedTraceConfigurationGlobalId = null, this.gdbVersion = null, this.traceLocations = [], this.moment = null, this.outSpatialReference = null, this.traceConfiguration = null, this.resultTypes = null, this.traceType = null;
  }
  writeOutSR(t, o2, r3) {
    if (null != t) {
      const { wkid: e, latestWkid: i2, wkt: s2, wkt2: p2 } = t;
      o2[r3] = JSON.stringify({ wkid: e ?? void 0, latestWkid: i2 ?? void 0, wkt: s2 ?? void 0, wkt2: p2 ?? void 0 });
    }
  }
};
r([m({ type: String, json: { read: { source: "traceConfigurationGlobalId" }, write: { target: "traceConfigurationGlobalId" } } })], u.prototype, "namedTraceConfigurationGlobalId", void 0), r([m({ type: String, json: { write: true } })], u.prototype, "gdbVersion", void 0), r([m({ type: [a2], json: { write: true } })], u.prototype, "traceLocations", void 0), r([m({ type: Date, json: { type: Number, write: { writer: (t, o2) => {
  o2.moment = t ? t.getTime() : null;
} } } })], u.prototype, "moment", void 0), r([m({ type: g, json: { write: { allowNull: true, target: "outSR" } } })], u.prototype, "outSpatialReference", void 0), r([r2("outSpatialReference")], u.prototype, "writeOutSR", null), r([m({ type: s, json: { write: true } })], u.prototype, "traceConfiguration", void 0), r([m({ type: [Object], json: { write: true } })], u.prototype, "resultTypes", void 0), r([m({ type: o.apiValues, json: { type: o.jsonValues, read: o.read, write: o.write } })], u.prototype, "traceType", void 0), u = l = r([a("esri.rest.networks.support.TraceParameters")], u);
var m2 = u;
export {
  m2 as default
};
//# sourceMappingURL=TraceParameters-HQ4JI7YC.js.map
