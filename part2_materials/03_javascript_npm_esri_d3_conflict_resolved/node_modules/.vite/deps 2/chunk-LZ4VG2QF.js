import {
  p as p2
} from "./chunk-GT4YOV7H.js";
import {
  i as i4
} from "./chunk-3GYJQZ7U.js";
import {
  p
} from "./chunk-LKSPV4ZE.js";
import {
  B,
  D,
  G,
  V as V2,
  X,
  g as g2
} from "./chunk-5IA763KB.js";
import {
  a as a3,
  c as c2,
  j,
  v,
  y
} from "./chunk-OPBXQTOC.js";
import {
  v as v2
} from "./chunk-SX2OLFE7.js";
import {
  i2,
  n as n2
} from "./chunk-AMH7OVBF.js";
import {
  i3
} from "./chunk-ATEWWVHG.js";
import {
  i
} from "./chunk-M5RSIRGD.js";
import {
  Xe,
  b,
  h,
  w as w2
} from "./chunk-6D5XULXX.js";
import {
  C,
  S
} from "./chunk-TDZ623HP.js";
import {
  c
} from "./chunk-JS7R723S.js";
import {
  V
} from "./chunk-SIQNRYEG.js";
import {
  w
} from "./chunk-A3J7W53Y.js";
import {
  o
} from "./chunk-HLF5XJSV.js";
import {
  g,
  r as r3
} from "./chunk-L6D73M4D.js";
import {
  s
} from "./chunk-H6RIEXAG.js";
import {
  Ue,
  fe
} from "./chunk-DRBJFCLQ.js";
import {
  f
} from "./chunk-VU6O6TFT.js";
import {
  m,
  r4 as r2,
  t5 as t
} from "./chunk-GD4XDYZL.js";
import {
  N,
  a4 as a2
} from "./chunk-33ECLFFF.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import {
  a,
  n2 as n
} from "./chunk-PKLD5YJF.js";

// node_modules/@arcgis/core/form/ExpressionInfo.js
var s2;
var i5 = s2 = class extends f {
  constructor(e4) {
    super(e4), this.expression = null, this.name = null, this.returnType = "boolean", this.title = null;
  }
  clone() {
    return new s2({ name: this.name, title: this.title, expression: this.expression, returnType: this.returnType });
  }
};
r([m({ type: String, json: { write: true } })], i5.prototype, "expression", void 0), r([m({ type: String, json: { write: true } })], i5.prototype, "name", void 0), r([m({ type: ["boolean", "date", "number", "string"], json: { write: true } })], i5.prototype, "returnType", void 0), r([m({ type: String, json: { write: true } })], i5.prototype, "title", void 0), i5 = s2 = r([a2("esri.form.ExpressionInfo")], i5);
var p3 = i5;

// node_modules/@arcgis/core/form/elements/Element.js
var e = class extends f {
  constructor(t3) {
    super(t3), this.description = null, this.label = null, this.type = null, this.visibilityExpression = null;
  }
};
r([m({ type: String, json: { write: true } })], e.prototype, "description", void 0), r([m({ type: String, json: { write: true } })], e.prototype, "label", void 0), r([m()], e.prototype, "type", void 0), r([m({ type: String, json: { write: true } })], e.prototype, "visibilityExpression", void 0), e = r([a2("esri.form.elements.Element")], e);
var i6 = e;

// node_modules/@arcgis/core/form/elements/inputs/attachments/Input.js
var p4 = class extends i(f) {
  constructor(o2) {
    super(o2), this.type = null;
  }
};
r([m()], p4.prototype, "type", void 0), p4 = r([a2("esri.form.elements.inputs.attachments.Input")], p4);
var c3 = p4;

// node_modules/@arcgis/core/form/elements/inputs/attachments/support/utils.js
var a4 = ["any", "capture", "upload"];

// node_modules/@arcgis/core/form/elements/inputs/attachments/AudioInput.js
var p5 = class extends c3 {
  constructor(o2) {
    super(o2), this.type = "audio", this.inputMethod = "any", this.maxDuration = null;
  }
};
r([m({ type: ["audio"], readOnly: true, json: { write: true } })], p5.prototype, "type", void 0), r([m({ type: a4, json: { write: true } })], p5.prototype, "inputMethod", void 0), r([m({ type: Number, json: { write: true } })], p5.prototype, "maxDuration", void 0), p5 = r([a2("esri.form.elements.inputs.attachments.AudioInput")], p5);
var i7 = p5;

// node_modules/@arcgis/core/form/elements/inputs/attachments/DocumentInput.js
var s3 = class extends c3 {
  constructor(o2) {
    super(o2), this.type = "document", this.maxFileSize = null;
  }
};
r([m({ type: ["document"], readOnly: true, json: { write: true } })], s3.prototype, "type", void 0), r([m({ type: Number, json: { write: true } })], s3.prototype, "maxFileSize", void 0), s3 = r([a2("esri.form.elements.inputs.attachments.DocumentInput")], s3);
var p6 = s3;

// node_modules/@arcgis/core/form/elements/inputs/attachments/ImageInput.js
var p7 = class extends c3 {
  constructor(t3) {
    super(t3), this.type = "image", this.inputMethod = "any", this.maxImageSize = null;
  }
};
r([m({ type: ["image"], readOnly: true, json: { write: true } })], p7.prototype, "type", void 0), r([m({ type: a4, json: { write: true } })], p7.prototype, "inputMethod", void 0), r([m({ type: Number, json: { write: true } })], p7.prototype, "maxImageSize", void 0), p7 = r([a2("esri.form.elements.inputs.attachments.ImageInput")], p7);
var i8 = p7;

// node_modules/@arcgis/core/form/elements/inputs/attachments/SignatureInput.js
var p8 = class extends c3 {
  constructor(t3) {
    super(t3), this.type = "signature", this.inputMethod = "any";
  }
};
r([m({ type: ["signature"], readOnly: true, json: { write: true } })], p8.prototype, "type", void 0), r([m({ type: a4, json: { write: true } })], p8.prototype, "inputMethod", void 0), p8 = r([a2("esri.form.elements.inputs.attachments.SignatureInput")], p8);
var i9 = p8;

// node_modules/@arcgis/core/form/elements/inputs/attachments/VideoInput.js
var p9 = class extends c3 {
  constructor(o2) {
    super(o2), this.type = "video", this.inputMethod = "any", this.maxDuration = null;
  }
};
r([m({ type: ["video"], readOnly: true, json: { write: true } })], p9.prototype, "type", void 0), r([m({ type: a4, json: { write: true } })], p9.prototype, "inputMethod", void 0), r([m({ type: Number, json: { write: true } })], p9.prototype, "maxDuration", void 0), p9 = r([a2("esri.form.elements.inputs.attachments.VideoInput")], p9);
var i10 = p9;

// node_modules/@arcgis/core/form/elements/inputs/attachments/support/inputs.js
function u(e4) {
  return { nestableTypes: { base: c3, key: "type", typeMap: { audio: i7, document: p6, image: i8, signature: i9, video: i10 } }, allTypes: { base: c3, key: "type", typeMap: { attachment: e4, audio: i7, document: p6, image: i8, signature: i9, video: i10 } } };
}
function s4(t3, p26, n9) {
  return t3 ? t3.map((t4) => N(n9 ? p26.nestableTypes : p26.allTypes, t4)) : null;
}
function i11(e4, t3, p26) {
  if (!e4) return null;
  const n9 = p26 ? t3.nestableTypes.typeMap : t3.allTypes.typeMap;
  return e4.filter((e5) => n9[e5.type]).map((e5) => n9[e5.type].fromJSON(e5));
}
function m2(e4, t3, p26) {
  if (!e4) return null;
  const n9 = p26 ? t3.nestableTypes.typeMap : t3.allTypes.typeMap;
  return e4.filter((e5) => n9[e5.type]).map((e5) => e5.toJSON());
}

// node_modules/@arcgis/core/form/elements/inputs/attachments/AttachmentInput.js
var m3 = class extends c3 {
  constructor(t3) {
    super(t3), this.type = "attachment", this.attachmentAssociationType = "exact", this.inputTypes = null;
  }
  castInputs(t3) {
    return s4(t3, y2, true);
  }
  readInputs(t3, r5) {
    return i11(r5.inputTypes, y2, true);
  }
  writeInputs(t3, r5) {
    r5.inputTypes = m2(t3, y2, true);
  }
};
r([m({ type: ["attachment"], readOnly: true, json: { write: true } })], m3.prototype, "type", void 0), r([m({ type: ["any", "exact", "exactOrNone"], json: { write: true } })], m3.prototype, "attachmentAssociationType", void 0), r([m({ json: { write: { isRequired: true } } })], m3.prototype, "inputTypes", void 0), r([s("inputTypes")], m3.prototype, "castInputs", null), r([o("inputTypes")], m3.prototype, "readInputs", null), r([r3("inputTypes")], m3.prototype, "writeInputs", null), m3 = r([a2("esri.form.elements.inputs.attachments.AttachmentInput")], m3);
var y2 = u(m3);
var d = m3;

// node_modules/@arcgis/core/form/elements/AttachmentElement.js
var r4;
var a5 = u(d);
var p10 = r4 = class extends i6 {
  constructor(t3) {
    super(t3), this.allowUserRename = true, this.attachmentKeyword = null, this.displayFilename = false, this.editableExpression = null, this.filenameExpression = "{attachmentKeyword}_{now}", this.input = null, this.maxAttachmentCount = null, this.minAttachmentCount = null, this.type = "attachment", this.useOriginalFilename = true;
  }
  clone() {
    var _a;
    return new r4({ allowUserRename: this.allowUserRename, attachmentKeyword: this.attachmentKeyword, description: this.description, displayFilename: this.displayFilename, editableExpression: this.editableExpression, filenameExpression: this.filenameExpression, input: (_a = this.input) == null ? void 0 : _a.clone(), label: this.label, maxAttachmentCount: this.maxAttachmentCount, minAttachmentCount: this.minAttachmentCount, useOriginalFilename: this.useOriginalFilename, visibilityExpression: this.visibilityExpression });
  }
};
r([m({ type: Boolean, json: { write: true } })], p10.prototype, "allowUserRename", void 0), r([m({ type: String, json: { write: { isRequired: true } } })], p10.prototype, "attachmentKeyword", void 0), r([m({ type: Boolean, json: { write: true } })], p10.prototype, "displayFilename", void 0), r([m({ type: String, json: { write: true } })], p10.prototype, "editableExpression", void 0), r([m({ type: String, json: { write: true } })], p10.prototype, "filenameExpression", void 0), r([m({ types: a5.allTypes, json: { read: { source: "inputType" }, write: { target: "inputType", isRequired: true } } })], p10.prototype, "input", void 0), r([m({ type: Number, json: { write: true } })], p10.prototype, "maxAttachmentCount", void 0), r([m({ type: Number, json: { write: true } })], p10.prototype, "minAttachmentCount", void 0), r([m({ type: ["attachment"], readOnly: true, json: { read: false, write: true } })], p10.prototype, "type", void 0), r([m({ type: Boolean, json: { write: true } })], p10.prototype, "useOriginalFilename", void 0), p10 = r4 = r([a2("esri.form.elements.AttachmentElement")], p10);
var m4 = p10;

// node_modules/@arcgis/core/form/elements/inputs/Input.js
var e2 = class extends f {
  constructor(o2) {
    super(o2), this.type = null;
  }
};
r([m()], e2.prototype, "type", void 0), e2 = r([a2("esri.form.elements.inputs.Input")], e2);
var p11 = e2;

// node_modules/@arcgis/core/form/elements/inputs/TextInput.js
var s5 = class extends p11 {
  constructor(o2) {
    super(o2), this.maxLength = null, this.minLength = 0;
  }
};
r([m({ type: Number, json: { write: true } })], s5.prototype, "maxLength", void 0), r([m({ type: Number, json: { write: true } })], s5.prototype, "minLength", void 0), s5 = r([a2("esri.form.elements.inputs.TextInput")], s5);
var p12 = s5;

// node_modules/@arcgis/core/form/elements/inputs/BarcodeScannerInput.js
var s6;
var n3 = s6 = class extends p12 {
  constructor(r5) {
    super(r5), this.type = "barcode-scanner";
  }
  clone() {
    return new s6({ maxLength: this.maxLength, minLength: this.minLength });
  }
};
r([m({ type: ["barcode-scanner"], json: { read: false, write: true } })], n3.prototype, "type", void 0), n3 = s6 = r([a2("esri.form.elements.inputs.BarcodeScannerInput")], n3);
var c4 = n3;

// node_modules/@arcgis/core/form/elements/inputs/ComboBoxInput.js
var s7;
var p13 = s7 = class extends p11 {
  constructor(o2) {
    super(o2), this.noValueOptionLabel = null, this.showNoValueOption = true, this.type = "combo-box";
  }
  clone() {
    return new s7({ showNoValueOption: this.showNoValueOption, noValueOptionLabel: this.noValueOptionLabel });
  }
};
r([m({ type: String, json: { write: true } })], p13.prototype, "noValueOptionLabel", void 0), r([m({ type: Boolean, json: { write: true } })], p13.prototype, "showNoValueOption", void 0), r([m({ type: ["combo-box"], json: { read: false, write: true } })], p13.prototype, "type", void 0), p13 = s7 = r([a2("esri.form.elements.inputs.ComboBoxInput")], p13);
var i12 = p13;

// node_modules/@arcgis/core/form/elements/inputs/DatePickerInput.js
var p14;
function s8(r5) {
  return null != r5 ? r5 : null;
}
function a6(r5) {
  return null != r5 ? r5 : null;
}
var m5 = p14 = class extends p11 {
  constructor(r5) {
    super(r5), this.max = null, this.min = null, this.type = "date-picker";
  }
  readMax(r5, t3) {
    return s8(t3.max);
  }
  writeMax(r5, t3) {
    t3.max = a6(r5);
  }
  readMin(r5, t3) {
    return s8(t3.min);
  }
  writeMin(r5, t3) {
    t3.min = a6(r5);
  }
  clone() {
    return new p14({ max: this.max, min: this.min });
  }
};
r([m({ type: String, json: { type: String, write: true } })], m5.prototype, "max", void 0), r([o("max")], m5.prototype, "readMax", null), r([r3("max")], m5.prototype, "writeMax", null), r([m({ type: String, json: { type: String, write: true } })], m5.prototype, "min", void 0), r([o("min")], m5.prototype, "readMin", null), r([r3("min")], m5.prototype, "writeMin", null), r([m({ type: ["date-picker"], json: { read: false, write: true } })], m5.prototype, "type", void 0), m5 = p14 = r([a2("esri.form.elements.inputs.DatePickerInput")], m5);
var c5 = m5;

// node_modules/@arcgis/core/form/elements/inputs/DateTimeOffsetPickerInput.js
var s9;
function p15(t3) {
  return null != t3 ? t3 : null;
}
function m6(t3) {
  return null != t3 ? t3 : null;
}
var u2 = s9 = class extends p11 {
  constructor(t3) {
    super(t3), this.includeTimeOffset = true, this.max = null, this.min = null, this.timeResolution = "minutes", this.type = "datetimeoffset-picker";
  }
  readMax(t3, e4) {
    return p15(e4.max);
  }
  writeMax(t3, e4) {
    e4.max = m6(t3);
  }
  readMin(t3, e4) {
    return p15(e4.min);
  }
  writeMin(t3, e4) {
    e4.min = m6(t3);
  }
  readTimeResolution(t3, e4) {
    return p15(e4.timeResolution);
  }
  writeTimeResolution(t3, e4) {
    e4.timeResolution = m6(t3);
  }
  clone() {
    return new s9({ includeTimeOffset: this.includeTimeOffset, max: this.max, min: this.min, timeResolution: this.timeResolution });
  }
};
r([m({ type: Boolean, json: { write: true } })], u2.prototype, "includeTimeOffset", void 0), r([m({ type: String, json: { type: String, write: true } })], u2.prototype, "max", void 0), r([o("max")], u2.prototype, "readMax", null), r([r3("max")], u2.prototype, "writeMax", null), r([m({ type: String, json: { type: String, write: true } })], u2.prototype, "min", void 0), r([o("min")], u2.prototype, "readMin", null), r([r3("min")], u2.prototype, "writeMin", null), r([m({ type: String, json: { type: String, write: true } })], u2.prototype, "timeResolution", void 0), r([o("timeResolution")], u2.prototype, "readTimeResolution", null), r([r3("timeResolution")], u2.prototype, "writeTimeResolution", null), r([m({ type: ["datetimeoffset-picker"], json: { read: false, write: true } })], u2.prototype, "type", void 0), u2 = s9 = r([a2("esri.form.elements.inputs.DateTimeOffsetPickerInput")], u2);
var l = u2;

// node_modules/@arcgis/core/form/elements/inputs/DateTimePickerInput.js
var p16;
function s10(e4) {
  return null != e4 ? new Date(e4) : null;
}
function m7(e4) {
  return e4 ? e4.getTime() : null;
}
var a7 = p16 = class extends p11 {
  constructor(e4) {
    super(e4), this.includeTime = false, this.max = null, this.min = null, this.type = "datetime-picker";
  }
  readMax(e4, r5) {
    return s10(r5.max);
  }
  writeMax(e4, r5) {
    r5.max = m7(e4);
  }
  readMin(e4, r5) {
    return s10(r5.min);
  }
  writeMin(e4, r5) {
    r5.min = m7(e4);
  }
  clone() {
    return new p16({ includeTime: this.includeTime, max: this.max, min: this.min });
  }
};
r([m({ type: Boolean, json: { write: true } })], a7.prototype, "includeTime", void 0), r([m({ type: Date, json: { type: Number, write: true } })], a7.prototype, "max", void 0), r([o("max")], a7.prototype, "readMax", null), r([r3("max")], a7.prototype, "writeMax", null), r([m({ type: Date, json: { type: Number, write: true } })], a7.prototype, "min", void 0), r([o("min")], a7.prototype, "readMin", null), r([r3("min")], a7.prototype, "writeMin", null), r([m({ type: ["datetime-picker"], json: { read: false, write: true } })], a7.prototype, "type", void 0), a7 = p16 = r([a2("esri.form.elements.inputs.DateTimePickerInput")], a7);
var c6 = a7;

// node_modules/@arcgis/core/form/elements/inputs/RadioButtonsInput.js
var s11;
var p17 = s11 = class extends p11 {
  constructor(o2) {
    super(o2), this.noValueOptionLabel = null, this.showNoValueOption = true, this.type = "radio-buttons";
  }
  clone() {
    return new s11({ noValueOptionLabel: this.noValueOptionLabel, showNoValueOption: this.showNoValueOption });
  }
};
r([m({ type: String, json: { write: true } })], p17.prototype, "noValueOptionLabel", void 0), r([m({ type: Boolean, json: { write: true } })], p17.prototype, "showNoValueOption", void 0), r([m({ type: ["radio-buttons"], json: { read: false, write: true } })], p17.prototype, "type", void 0), p17 = s11 = r([a2("esri.form.elements.inputs.RadioButtonsInput")], p17);
var i13 = p17;

// node_modules/@arcgis/core/form/elements/inputs/SwitchInput.js
var s12;
var p18 = s12 = class extends p11 {
  constructor(o2) {
    super(o2), this.offValue = null, this.onValue = null, this.type = "switch";
  }
  clone() {
    return new s12({ offValue: this.offValue, onValue: this.onValue });
  }
};
r([m({ type: [String, Number], json: { write: true } })], p18.prototype, "offValue", void 0), r([m({ type: [String, Number], json: { write: true } })], p18.prototype, "onValue", void 0), r([m({ type: ["switch"], json: { read: false, write: true } })], p18.prototype, "type", void 0), p18 = s12 = r([a2("esri.form.elements.inputs.SwitchInput")], p18);
var i14 = p18;

// node_modules/@arcgis/core/form/elements/inputs/TextAreaInput.js
var s13;
var p19 = s13 = class extends p12 {
  constructor(t3) {
    super(t3), this.type = "text-area";
  }
  clone() {
    return new s13({ maxLength: this.maxLength, minLength: this.minLength });
  }
};
r([m({ type: ["text-area"], json: { read: false, write: true } })], p19.prototype, "type", void 0), p19 = s13 = r([a2("esri.form.elements.inputs.TextAreaInput")], p19);
var a8 = p19;

// node_modules/@arcgis/core/form/elements/inputs/TextBoxInput.js
var s14;
var p20 = s14 = class extends p12 {
  constructor(t3) {
    super(t3), this.type = "text-box";
  }
  clone() {
    return new s14({ maxLength: this.maxLength, minLength: this.minLength });
  }
};
r([m({ type: ["text-box"], json: { read: false, write: true } })], p20.prototype, "type", void 0), p20 = s14 = r([a2("esri.form.elements.inputs.TextBoxInput")], p20);
var n4 = p20;

// node_modules/@arcgis/core/form/elements/inputs/TimePickerInput.js
var s15;
function p21(t3) {
  return null != t3 ? t3 : null;
}
function m8(t3) {
  return null != t3 ? t3 : null;
}
var u3 = s15 = class extends p11 {
  constructor(t3) {
    super(t3), this.max = null, this.min = null, this.timeResolution = "minutes", this.type = "time-picker";
  }
  readMax(t3, e4) {
    return p21(e4.max);
  }
  writeMax(t3, e4) {
    e4.max = m8(t3);
  }
  readMin(t3, e4) {
    return p21(e4.min);
  }
  writeMin(t3, e4) {
    e4.min = m8(t3);
  }
  readTimeResolution(t3, e4) {
    return p21(e4.timeResolution);
  }
  writeTimeResolution(t3, e4) {
    e4.timeResolution = m8(t3);
  }
  clone() {
    return new s15({ max: this.max, min: this.min, timeResolution: this.timeResolution });
  }
};
r([m({ type: String, json: { type: String, write: true } })], u3.prototype, "max", void 0), r([o("max")], u3.prototype, "readMax", null), r([r3("max")], u3.prototype, "writeMax", null), r([m({ type: String, json: { type: String, write: true } })], u3.prototype, "min", void 0), r([o("min")], u3.prototype, "readMin", null), r([r3("min")], u3.prototype, "writeMin", null), r([m({ type: String, json: { type: String, write: true } })], u3.prototype, "timeResolution", void 0), r([o("timeResolution")], u3.prototype, "readTimeResolution", null), r([r3("timeResolution")], u3.prototype, "writeTimeResolution", null), r([m({ type: ["time-picker"], json: { read: false, write: true } })], u3.prototype, "type", void 0), u3 = s15 = r([a2("esri.form.elements.inputs.TimePickerInput")], u3);
var l2 = u3;

// node_modules/@arcgis/core/form/elements/support/inputs.js
var c7 = { base: p11, key: "type", typeMap: { "barcode-scanner": c4, "combo-box": i12, "date-picker": c5, "datetime-picker": c6, "datetimeoffset-picker": l, "radio-buttons": i13, switch: i14, "text-area": a8, "text-box": n4, "time-picker": l2 } };

// node_modules/@arcgis/core/form/elements/FieldElement.js
var n5;
var l3 = n5 = class extends i6 {
  constructor(e4) {
    super(e4), this.domain = null, this.editable = null, this.editableExpression = null, this.fieldName = null, this.hint = null, this.input = null, this.requiredExpression = null, this.type = "field", this.valueExpression = null;
  }
  clone() {
    return new n5({ description: this.description, domain: this.domain, editable: this.editable, editableExpression: this.editableExpression, fieldName: this.fieldName, hint: this.hint, input: this.input, label: this.label, requiredExpression: this.requiredExpression, valueExpression: this.valueExpression, visibilityExpression: this.visibilityExpression });
  }
};
r([m({ types: n2, json: { read: { reader: i2 }, write: true } })], l3.prototype, "domain", void 0), r([m({ type: Boolean, json: { write: true } })], l3.prototype, "editable", void 0), r([m({ type: String, json: { write: true } })], l3.prototype, "editableExpression", void 0), r([m({ type: String, json: { write: true } })], l3.prototype, "fieldName", void 0), r([m({ type: String, json: { write: true } })], l3.prototype, "hint", void 0), r([m({ types: c7, json: { read: { source: "inputType" }, write: { target: "inputType" } } })], l3.prototype, "input", void 0), r([m({ type: String, json: { write: true } })], l3.prototype, "requiredExpression", void 0), r([m({ type: String, json: { read: false, write: true } })], l3.prototype, "type", void 0), r([m({ type: String, json: { write: true } })], l3.prototype, "valueExpression", void 0), l3 = n5 = r([a2("esri.form.elements.FieldElement")], l3);
var a9 = l3;

// node_modules/@arcgis/core/form/elements/RelationshipElement.js
var p22;
var l4 = p22 = class extends i6 {
  constructor(e4) {
    super(e4), this.displayCount = null, this.displayType = "list", this.editableExpression = null, this.orderByFields = null, this.relationshipId = null, this.type = "relationship";
  }
  clone() {
    return new p22({ description: this.description, displayCount: this.displayCount, displayType: this.displayType, editableExpression: this.editableExpression, label: this.label, orderByFields: a(this.orderByFields), relationshipId: this.relationshipId, visibilityExpression: this.visibilityExpression });
  }
};
r([m({ type: Number, json: { write: true } })], l4.prototype, "displayCount", void 0), r([m({ type: ["list"], json: { write: true } })], l4.prototype, "displayType", void 0), r([m({ type: String, json: { write: true } })], l4.prototype, "editableExpression", void 0), r([m({ type: [i3], json: { write: true } })], l4.prototype, "orderByFields", void 0), r([m({ type: Number, json: { write: true } })], l4.prototype, "relationshipId", void 0), r([m({ type: ["relationship"], json: { read: false, write: true } })], l4.prototype, "type", void 0), l4 = p22 = r([a2("esri.form.elements.RelationshipElement")], l4);
var n6 = l4;

// node_modules/@arcgis/core/form/elements/TextElement.js
var s16;
var i15 = s16 = class extends i6 {
  constructor(t3) {
    super(t3), this.text = null, this.textFormat = "plain-text", this.type = "text";
  }
  clone() {
    return new s16({ text: this.text, textFormat: this.textFormat, visibilityExpression: this.visibilityExpression });
  }
};
r([m({ type: String, json: { write: true } })], i15.prototype, "text", void 0), r([m({ type: String, json: { write: true } })], i15.prototype, "textFormat", void 0), r([m({ type: ["text"], readOnly: true, json: { read: false, write: true } })], i15.prototype, "type", void 0), i15 = s16 = r([a2("esri.form.elements.TextElement")], i15);
var p23 = i15;

// node_modules/@arcgis/core/form/support/elements.js
function i16(t3) {
  return { typesWithGroup: { base: i6, key: "type", typeMap: { attachment: m4, field: a9, group: t3, relationship: n6, text: p23 } }, typesWithoutGroup: { base: i6, key: "type", typeMap: { attachment: m4, field: a9, relationship: n6, text: p23 } } };
}
function m9(t3, e4, p26 = true) {
  if (!t3) return null;
  const r5 = p26 ? e4.typesWithGroup.typeMap : e4.typesWithoutGroup.typeMap;
  return t3.filter((t4) => r5[t4.type]).map((t4) => r5[t4.type].fromJSON(t4));
}
function s17(t3, e4, p26 = true) {
  if (!t3) return null;
  const r5 = p26 ? e4.typesWithGroup.typeMap : e4.typesWithoutGroup.typeMap;
  return t3.filter((t4) => r5[t4.type]).map((t4) => t4.toJSON());
}
function u4(e4, p26, r5 = true) {
  return e4 ? e4.map((e5) => N(r5 ? p26.typesWithGroup : p26.typesWithoutGroup, e5)) : null;
}

// node_modules/@arcgis/core/form/elements/GroupElement.js
var d2;
var u5 = d2 = class extends i6 {
  constructor(e4) {
    super(e4), this.elements = null, this.initialState = "expanded", this.type = "group";
  }
  castElements(e4) {
    return u4(e4, f2, false);
  }
  readElements(e4, t3) {
    return m9(t3.formElements, f2, false);
  }
  writeElements(e4, t3) {
    t3.formElements = s17(e4, f2, false);
  }
  clone() {
    return new d2({ description: this.description, elements: a(this.elements), initialState: this.initialState, label: this.label, visibilityExpression: this.visibilityExpression });
  }
};
r([m({ json: { write: true } })], u5.prototype, "elements", void 0), r([s("elements")], u5.prototype, "castElements", null), r([o("elements", ["formElements"])], u5.prototype, "readElements", null), r([r3("elements")], u5.prototype, "writeElements", null), r([m({ type: ["collapsed", "expanded"], json: { write: true } })], u5.prototype, "initialState", void 0), r([m({ type: String, json: { read: false, write: true } })], u5.prototype, "type", void 0), u5 = d2 = r([a2("esri.form.elements.GroupElement")], u5);
var f2 = i16(u5);
var y3 = u5;

// node_modules/@arcgis/core/form/support/formUtils.js
var t2 = (t3) => "field" === t3.type;
var e3 = (t3) => "group" === t3.type;
var n7 = (t3) => "text" === t3.type;

// node_modules/@arcgis/core/form/FormTemplate.js
var I;
var b2 = i16(y3);
var F = I = class extends f {
  constructor(e4) {
    super(e4), this.description = null, this.elements = null, this.expressionInfos = null, this.preserveFieldValuesWhenHidden = false, this.title = null;
  }
  castElements(e4) {
    return u4(e4, b2);
  }
  readElements(e4, s18) {
    return m9(s18.formElements, b2);
  }
  writeElements(e4, s18) {
    s18.formElements = s17(e4, b2);
  }
  clone() {
    return new I({ description: this.description, expressionInfos: a(this.expressionInfos), elements: a(this.elements), title: this.title, preserveFieldValuesWhenHidden: this.preserveFieldValuesWhenHidden });
  }
  async getFieldsUsed(e4, s18) {
    const t3 = /* @__PURE__ */ new Set(), { description: r5, elements: o2, expressionInfos: i17, title: n9 } = this;
    if (U(t3, e4, r5), U(t3, e4, n9), !o2) return [];
    const p26 = k(o2, i17).map((s19) => h(t3, e4, s19));
    await Promise.all(p26);
    for (const l6 of o2) g3(t3, { fieldsIndex: e4, relationships: s18 }, l6);
    return Array.from(t3).sort();
  }
};
function g3(e4, s18, t3) {
  var _a;
  const { fieldsIndex: r5 } = s18;
  if (!r5 || r5.fields.length !== e4.size) switch (U(e4, r5, t3.label), U(e4, r5, t3.description), t3.type) {
    case "field":
      w2(e4, r5, t3.fieldName);
      break;
    case "group":
      t3.elements.forEach((t4) => g3(e4, s18, t4));
      break;
    case "relationship":
      if (s18.relationships) {
        const o2 = s18.relationships.find((e5) => e5.id === t3.relationshipId);
        o2 && w2(e4, r5, o2.keyField);
      }
      b(e4, r5, (_a = t3.orderByFields) == null ? void 0 : _a.map((e5) => e5.field));
      break;
    case "text":
      U(e4, r5, t3.text);
  }
}
function k(e4, s18) {
  if (!s18 || 0 === s18.length) return [];
  const t3 = H(e4), r5 = [];
  for (const o2 of s18) t3.has(o2.name) && r5.push(o2.expression);
  return r5;
}
function H(e4) {
  const s18 = /* @__PURE__ */ new Set();
  for (const t3 of e4) if (t(s18, t3.visibilityExpression), !n7(t3)) {
    if (e3(t3)) r2(s18, H(t3.elements));
    else if (t(s18, t3.editableExpression), t2(t3)) {
      const { requiredExpression: e5, valueExpression: r5 } = t3;
      r2(s18, [e5, r5]);
    }
  }
  return s18;
}
function U(e4, s18, t3) {
  b(e4, s18, Xe(t3));
}
r([m({ type: String, json: { write: true } })], F.prototype, "description", void 0), r([m({ json: { write: true } })], F.prototype, "elements", void 0), r([s("elements")], F.prototype, "castElements", null), r([o("elements", ["formElements"])], F.prototype, "readElements", null), r([r3("elements")], F.prototype, "writeElements", null), r([m({ type: [p3], json: { write: true } })], F.prototype, "expressionInfos", void 0), r([m({ type: Boolean, json: { default: false, write: true } })], F.prototype, "preserveFieldValuesWhenHidden", void 0), r([m({ type: String, json: { write: true } })], F.prototype, "title", void 0), F = I = r([a2("esri.form.FormTemplate")], F);
var V3 = F;

// node_modules/@arcgis/core/layers/support/EditFieldsInfo.js
var l5 = class extends i(f) {
  constructor(o2) {
    super(o2), this.creatorField = null, this.creationDateField = null, this.editorField = null, this.editDateField = null, this.realm = null, this.timeZone = null;
  }
};
r([m()], l5.prototype, "creatorField", void 0), r([m()], l5.prototype, "creationDateField", void 0), r([m()], l5.prototype, "editorField", void 0), r([m()], l5.prototype, "editDateField", void 0), r([m()], l5.prototype, "realm", void 0), r([m(c("dateFieldsTimeReference", true))], l5.prototype, "timeZone", void 0), l5 = r([a2("esri.layers.support.EditFieldsInfo")], l5);
var p24 = l5;

// node_modules/@arcgis/core/layers/support/FeatureIndex.js
var p25 = class extends i(f) {
  constructor(o2) {
    super(o2);
  }
};
r([m({ constructOnly: true, json: { write: true } })], p25.prototype, "name", void 0), r([m({ constructOnly: true, json: { write: true } })], p25.prototype, "fields", void 0), r([m({ constructOnly: true, json: { write: true } })], p25.prototype, "isAscending", void 0), r([m({ constructOnly: true, json: { write: true } })], p25.prototype, "indexType", void 0), r([m({ constructOnly: true, json: { write: true } })], p25.prototype, "isUnique", void 0), r([m({ constructOnly: true, json: { write: true } })], p25.prototype, "description", void 0), p25 = r([a2("esri.layers.support.FeatureIndex")], p25);

// node_modules/@arcgis/core/layers/support/GeometryFieldsInfo.js
var a10 = class extends i(f) {
  constructor(e4) {
    super(e4), this.shapeAreaField = null, this.shapeLengthField = null, this.units = null;
  }
};
r([m({ type: String, json: { read: { source: "shapeAreaFieldName" } } })], a10.prototype, "shapeAreaField", void 0), r([m({ type: String, json: { read: { source: "shapeLengthFieldName" } } })], a10.prototype, "shapeLengthField", void 0), r([m({ type: String, json: { read: (e4) => fe.read(e4) || Ue.read(e4) } })], a10.prototype, "units", void 0), a10 = r([a2("esri.layers.support.GeometryFieldsInfo")], a10);
var c8 = a10;

// node_modules/@arcgis/core/layers/support/Subtype.js
var c9 = class extends i(f) {
  constructor(o2) {
    super(o2), this.code = null, this.defaultValues = {}, this.domains = null, this.name = null;
  }
  readDomains(o2) {
    if (!o2) return null;
    const r5 = {};
    for (const t3 of Object.keys(o2)) r5[t3] = i2(o2[t3]);
    return r5;
  }
  writeDomains(o2, r5) {
    var _a;
    if (!o2) return;
    const t3 = {};
    for (const e4 of Object.keys(o2)) o2[e4] && (t3[e4] = (_a = o2[e4]) == null ? void 0 : _a.toJSON());
    r5.domains = t3;
  }
};
r([m({ type: Number, json: { write: true } })], c9.prototype, "code", void 0), r([m({ type: Object, json: { write: true } })], c9.prototype, "defaultValues", void 0), r([m({ json: { write: true } })], c9.prototype, "domains", void 0), r([o("domains")], c9.prototype, "readDomains", null), r([r3("domains")], c9.prototype, "writeDomains", null), r([m({ type: String, json: { write: true } })], c9.prototype, "name", void 0), c9 = r([a2("esri.layers.support.Subtype")], c9);
var n8 = c9;

// node_modules/@arcgis/core/layers/mixins/FeatureLayerBase.js
var B2 = (B3) => {
  let R = class extends B3 {
    constructor() {
      super(...arguments), this.copyright = null, this.capabilities = null, this.dateFieldsTimeZone = null, this.datesInUnknownTimezone = false, this.definitionExpression = null, this.displayField = null, this.editFieldsInfo = null, this.editingInfo = null, this.elevationInfo = null, this.floorInfo = null, this.fullExtent = null, this.gdbVersion = null, this.geometryFieldsInfo = null, this.geometryType = null, this.globalIdField = null, this.hasM = void 0, this.hasZ = void 0, this.heightModelInfo = null, this.historicMoment = null, this.indexes = new (V.ofType(p25))(), this.isTable = false, this.layerId = void 0, this.maxScale = 0, this.minScale = 0, this.objectIdField = null, this.preferredTimeZone = null, this.relationships = null, this.returnM = void 0, this.returnZ = void 0, this.serviceDefinitionExpression = null, this.serviceItemId = null, this.sourceJSON = null, this.spatialReference = g.WGS84, this.subtypeField = null, this.subtypes = null, this.trackIdField = null, this.version = void 0;
    }
    get authenticationTriggerEvent() {
      var _a;
      if (!this.url) return null;
      const { capabilities: e4 } = this;
      if (e4) {
        const { query: t4, operations: r5, editing: i17 } = e4;
        if (!t4.supportsQueryByOthers || !t4.supportsQueryByAnonymous) return "load";
        if (r5.supportsEditing && !(i17.supportsUpdateByOthers && i17.supportsUpdateByAnonymous && i17.supportsDeleteByOthers && i17.supportsDeleteByAnonymous)) return "load";
      }
      if ((_a = this.serviceDefinitionExpression) == null ? void 0 : _a.toLowerCase().includes("current_user")) return "load";
      if (this.userHasUpdateItemPrivileges) {
        if (B(this)) return "load";
        if (this.hasUpdateItemRestrictions) return e4.operations.supportsQuery ? "editing" : "load";
      }
      if (this.userHasFullEditingPrivileges && this.hasFullEditingRestrictions) return "editing";
      const t3 = this.editFieldsInfo;
      return ((t3 == null ? void 0 : t3.creatorField) || (t3 == null ? void 0 : t3.editorField)) && (e4 == null ? void 0 : e4.operations.supportsEditing) ? "editing" : null;
    }
    readCapabilitiesFromService(e4, t3) {
      return i4(t3, this.url);
    }
    readEditingInfo(e4, t3) {
      const { editingInfo: r5 } = t3;
      return r5 ? { lastEditDate: null != r5.lastEditDate ? new Date(r5.lastEditDate) : null } : null;
    }
    get effectiveCapabilities() {
      const e4 = this.capabilities;
      if (!e4) return null;
      const t3 = a(e4), { operations: i17, editing: o2 } = t3;
      return X(this) ? (this.userHasUpdateItemPrivileges && (i17.supportsQuery = true), t3) : this.userHasUpdateItemPrivileges ? (i17.supportsAdd = i17.supportsDelete = i17.supportsEditing = i17.supportsQuery = i17.supportsUpdate = o2.supportsDeleteByOthers = o2.supportsGeometryUpdate = o2.supportsUpdateByOthers = true, t3) : (this.userHasFullEditingPrivileges && i17.supportsEditing && (i17.supportsAdd = i17.supportsDelete = i17.supportsUpdate = o2.supportsGeometryUpdate = true), t3);
    }
    readGlobalIdFieldFromService(e4, t3) {
      return V2(t3);
    }
    get hasFullEditingRestrictions() {
      const e4 = this.capabilities;
      if (!e4 || X(this)) return false;
      const { operations: t3, editing: r5 } = e4;
      return t3.supportsEditing && !(t3.supportsAdd && t3.supportsDelete && t3.supportsUpdate && r5.supportsGeometryUpdate);
    }
    get hasUpdateItemRestrictions() {
      const e4 = this.capabilities;
      if (!e4) return false;
      const { operations: t3, editing: r5 } = e4;
      return X(this) ? !t3.supportsQuery : !(t3.supportsAdd && t3.supportsDelete && t3.supportsEditing && t3.supportsQuery && t3.supportsUpdate && r5.supportsDeleteByOthers && r5.supportsGeometryUpdate && r5.supportsUpdateByOthers);
    }
    readIsTableFromService(e4, t3) {
      return "Table" === t3.type;
    }
    readMaxScale(e4, t3) {
      return t3.effectiveMaxScale || e4 || 0;
    }
    readMinScale(e4, t3) {
      return t3.effectiveMinScale || e4 || 0;
    }
    readObjectIdFieldFromService(e4, t3) {
      return D(t3);
    }
    readServiceDefinitionExpression(e4, t3) {
      return t3.definitionQuery || t3.definitionExpression;
    }
    set url(e4) {
      if (null == e4) return void this._set("url", e4);
      const t3 = S({ layer: this, url: e4, nonStandardUrlAllowed: true, logger: n.getLogger(this) });
      this._set("url", t3.url), null != t3.layerId && this._set("layerId", t3.layerId);
    }
    writeUrl(e4, t3, r5, i17) {
      C(this, e4, null, t3, i17);
    }
    readVersion(e4, t3) {
      return G(t3);
    }
  };
  return r([m({ readOnly: true })], R.prototype, "authenticationTriggerEvent", null), r([m({ type: String, json: { origins: { service: { read: { source: "copyrightText" } } } } })], R.prototype, "copyright", void 0), r([m({ readOnly: true, json: { read: false, origins: { service: { read: { source: ["advancedQueryCapabilities", "allowGeometryUpdates", "allowUpdateWithoutMValues", "archivingInfo", "capabilities", "datesInUnknownTimezone", "hasAttachments", "hasM", "hasZ", "isDataBranchVersioned", "isDataVersioned", "maxRecordCount", "maxRecordCountFactor", "ownershipBasedAccessControlForFeatures", "standardMaxRecordCount", "supportedQueryFormats", "supportsAdvancedQueries", "supportsApplyEditsWithGlobalIds", "supportsAttachmentsByUploadId", "supportsAttachmentsResizing", "supportsCalculate", "supportsCoordinatesQuantization", "supportsExceedsLimitStatistics", "supportsFieldDescriptionProperty", "supportsQuantizationEditMode", "supportsRollbackOnFailureParameter", "supportsStatistics", "supportsTruncate", "supportsValidateSql", "tileMaxRecordCount", "useStandardizedQueries"] } } } } })], R.prototype, "capabilities", void 0), r([o("service", "capabilities")], R.prototype, "readCapabilitiesFromService", null), r([m(c("dateFieldsTimeReference"))], R.prototype, "dateFieldsTimeZone", void 0), r([m({ type: Boolean })], R.prototype, "datesInUnknownTimezone", void 0), r([m({ type: String, json: { origins: { service: { read: false, write: false } }, name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], R.prototype, "definitionExpression", void 0), r([m({ type: String, json: { origins: { service: { read: { source: "displayField" } } } } })], R.prototype, "displayField", void 0), r([m({ readOnly: true, type: p24 })], R.prototype, "editFieldsInfo", void 0), r([m({ readOnly: true })], R.prototype, "editingInfo", void 0), r([o("editingInfo")], R.prototype, "readEditingInfo", null), r([m({ readOnly: true })], R.prototype, "effectiveCapabilities", null), r([m((() => {
    const e4 = a(c2), t3 = e4.json.origins;
    return t3["web-map"] = { read: false, write: false }, t3["portal-item"] = { read: false, write: false }, e4;
  })())], R.prototype, "elevationInfo", void 0), r([m({ type: p, json: { name: "layerDefinition.floorInfo", write: true, origins: { "web-scene": { name: "layerDefinition.floorInfo", write: { enabled: true, layerContainerTypes: a3 } } } } })], R.prototype, "floorInfo", void 0), r([m({ type: w, json: { origins: { service: { read: { source: "extent" } } } } })], R.prototype, "fullExtent", void 0), r([m()], R.prototype, "gdbVersion", void 0), r([m({ readOnly: true, type: c8, json: { read: { source: "geometryProperties" } } })], R.prototype, "geometryFieldsInfo", void 0), r([m({ type: ["point", "polygon", "polyline", "multipoint", "multipatch", "mesh"], json: { origins: { service: { read: g2.read } } } })], R.prototype, "geometryType", void 0), r([m({ type: String })], R.prototype, "globalIdField", void 0), r([o("service", "globalIdField", ["globalIdField", "fields"])], R.prototype, "readGlobalIdFieldFromService", null), r([m({ readOnly: true })], R.prototype, "hasFullEditingRestrictions", null), r([m({ type: Boolean, json: { origins: { service: { read: true } } } })], R.prototype, "hasM", void 0), r([m({ readOnly: true })], R.prototype, "hasUpdateItemRestrictions", null), r([m({ type: Boolean, json: { origins: { service: { read: true } } } })], R.prototype, "hasZ", void 0), r([m({ readOnly: true, type: v2 })], R.prototype, "heightModelInfo", void 0), r([m({ type: Date })], R.prototype, "historicMoment", void 0), r([m({ type: V.ofType(p25), readOnly: true })], R.prototype, "indexes", void 0), r([m({ readOnly: true })], R.prototype, "isTable", void 0), r([o("service", "isTable", ["type"])], R.prototype, "readIsTableFromService", null), r([m({ type: Number, json: { origins: { service: { read: { source: "id" } }, "portal-item": { read: false, write: { target: "id" } } }, read: false } })], R.prototype, "layerId", void 0), r([m(v)], R.prototype, "maxScale", void 0), r([o("service", "maxScale", ["maxScale", "effectiveMaxScale"])], R.prototype, "readMaxScale", null), r([m(j)], R.prototype, "minScale", void 0), r([o("service", "minScale", ["minScale", "effectiveMinScale"])], R.prototype, "readMinScale", null), r([m({ type: String })], R.prototype, "objectIdField", void 0), r([o("service", "objectIdField", ["objectIdField", "fields"])], R.prototype, "readObjectIdFieldFromService", null), r([m(c("preferredTimeReference"))], R.prototype, "preferredTimeZone", void 0), r([m({ type: [p2], readOnly: true })], R.prototype, "relationships", void 0), r([m({ type: Boolean })], R.prototype, "returnM", void 0), r([m({ type: Boolean })], R.prototype, "returnZ", void 0), r([m({ readOnly: true, json: { write: false } })], R.prototype, "serverGens", void 0), r([m({ readOnly: true })], R.prototype, "serviceDefinitionExpression", void 0), r([o("service", "serviceDefinitionExpression", ["definitionQuery", "definitionExpression"])], R.prototype, "readServiceDefinitionExpression", null), r([m({ type: String, readOnly: true, json: { read: false, origins: { service: { read: true } } } })], R.prototype, "serviceItemId", void 0), r([m()], R.prototype, "sourceJSON", void 0), r([m({ type: g, json: { origins: { service: { read: { source: "extent.spatialReference" } } } } })], R.prototype, "spatialReference", void 0), r([m({ type: String, readOnly: true, json: { origins: { service: { read: true } } } })], R.prototype, "subtypeField", void 0), r([m({ type: [n8], readOnly: true, json: { read: false, origins: { service: { read: true } } } })], R.prototype, "subtypes", void 0), r([m({ type: String, json: { read: { source: "timeInfo.trackIdField" } } })], R.prototype, "trackIdField", void 0), r([m(y)], R.prototype, "url", null), r([r3("url")], R.prototype, "writeUrl", null), r([m({ json: { origins: { service: { read: true } }, read: false } })], R.prototype, "version", void 0), r([o("service", "version", ["currentVersion", "capabilities", "drawingInfo", "hasAttachments", "htmlPopupType", "relationships", "timeInfo", "typeIdField", "types"])], R.prototype, "readVersion", null), R = r([a2("esri.layers.mixins.FeatureLayerBase")], R), R;
};

export {
  V3 as V,
  B2 as B
};
//# sourceMappingURL=chunk-LZ4VG2QF.js.map
