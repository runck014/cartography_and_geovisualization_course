import {
  n as n6,
  p as p3
} from "./chunk-NML2U2OQ.js";
import {
  V as V3
} from "./chunk-H2HEE74G.js";
import "./chunk-HB2JTNV2.js";
import "./chunk-R7BLUDCP.js";
import "./chunk-DLJHW32W.js";
import "./chunk-IWXHREP5.js";
import "./chunk-57M37V54.js";
import {
  a as a5,
  m as m5,
  p as p2,
  y
} from "./chunk-FSFFMQ4X.js";
import {
  R,
  V as V4,
  r as r3
} from "./chunk-UFLCSFX7.js";
import {
  $,
  Z as Z2,
  w as w2
} from "./chunk-3ZPRTR7X.js";
import "./chunk-CQ5ECUDF.js";
import "./chunk-374X2AXO.js";
import "./chunk-W3O5CFJ6.js";
import "./chunk-HRP7POO2.js";
import "./chunk-JVGNMUKK.js";
import "./chunk-X2UYZD2B.js";
import "./chunk-JQJITHTO.js";
import "./chunk-6LGJYARD.js";
import "./chunk-N42IF4WX.js";
import "./chunk-L7OHH2HW.js";
import {
  t as t4
} from "./chunk-E6IUAXXM.js";
import "./chunk-I2OLSNCI.js";
import "./chunk-U7ZFK3X2.js";
import "./chunk-VMQKPMJK.js";
import "./chunk-A7PB2PTS.js";
import "./chunk-LTCEJX6G.js";
import "./chunk-L6HI4BLZ.js";
import "./chunk-5FROWG6B.js";
import "./chunk-NW7VXBHZ.js";
import "./chunk-RIQUDAW6.js";
import "./chunk-JEA2CH67.js";
import "./chunk-FDS5NNQY.js";
import "./chunk-ACRZEGQW.js";
import {
  s as s4
} from "./chunk-7W7WBJSE.js";
import "./chunk-OVCHDXLS.js";
import "./chunk-BOSRS73G.js";
import "./chunk-ECMDQ4LS.js";
import "./chunk-D6FJTDNK.js";
import "./chunk-RENLZYKC.js";
import {
  Xe
} from "./chunk-ER5KJVHG.js";
import "./chunk-Y24KYRDB.js";
import "./chunk-BF46TBV5.js";
import "./chunk-H4E2VVPD.js";
import "./chunk-CTU2XDPA.js";
import "./chunk-LZ4VG2QF.js";
import "./chunk-GT4YOV7H.js";
import "./chunk-3GYJQZ7U.js";
import "./chunk-LKSPV4ZE.js";
import "./chunk-QB7C6VGC.js";
import {
  i
} from "./chunk-TKIFUSBT.js";
import "./chunk-BIXTRT5D.js";
import {
  l as l2
} from "./chunk-5OE5J4F6.js";
import "./chunk-RON7HSX6.js";
import "./chunk-3SYUQL4E.js";
import "./chunk-XWTALKKJ.js";
import "./chunk-JWQMRQX4.js";
import "./chunk-24OTECJ5.js";
import {
  s as s5
} from "./chunk-EYETIQ6R.js";
import "./chunk-DFLI5RC4.js";
import "./chunk-QYSQ6XPQ.js";
import {
  u
} from "./chunk-YYZ2CTYE.js";
import "./chunk-HZRXUNDJ.js";
import "./chunk-XKMN3LJN.js";
import "./chunk-2U5JYYSG.js";
import {
  Z
} from "./chunk-GGPPKSP2.js";
import "./chunk-EA7CPLTC.js";
import "./chunk-SI5IJ3AZ.js";
import {
  p
} from "./chunk-7ZA6GWGF.js";
import {
  e
} from "./chunk-JU4Z6UVP.js";
import "./chunk-JHXGQ3AW.js";
import "./chunk-MR727DXB.js";
import "./chunk-VLKWWBLY.js";
import "./chunk-GNY4KZ34.js";
import "./chunk-WPERPIJF.js";
import "./chunk-Q3BBONW3.js";
import "./chunk-5IA763KB.js";
import "./chunk-QKS6PIY6.js";
import "./chunk-R5BTSPWT.js";
import "./chunk-Z2L6EED4.js";
import "./chunk-43W2AR4R.js";
import "./chunk-X5EOLPIE.js";
import "./chunk-VNPGSD2C.js";
import "./chunk-PJALR7VA.js";
import "./chunk-AFULL6KA.js";
import "./chunk-URFLFG2R.js";
import "./chunk-CE7WVJQV.js";
import "./chunk-LCFK6PEB.js";
import "./chunk-GJTB7YCT.js";
import "./chunk-LQEYS467.js";
import "./chunk-A66MNK5C.js";
import "./chunk-EPAKCM4A.js";
import "./chunk-RCGJPJRB.js";
import "./chunk-5CRXWQ3Y.js";
import "./chunk-G54IOEGF.js";
import "./chunk-EP5G3AVD.js";
import "./chunk-VH245UJV.js";
import "./chunk-HJ7SKBLO.js";
import "./chunk-WH2FR6UE.js";
import {
  j
} from "./chunk-F3W2DG3D.js";
import "./chunk-YMJZWW2N.js";
import "./chunk-7Q4JSL7R.js";
import "./chunk-VBJTBJYL.js";
import {
  t as t2
} from "./chunk-ES2OYM5K.js";
import {
  b as b2
} from "./chunk-JXPOROPE.js";
import {
  c,
  d,
  g as g2,
  l,
  m as m4
} from "./chunk-OPBXQTOC.js";
import {
  h
} from "./chunk-DKMSVKV3.js";
import "./chunk-YIIXBP6I.js";
import {
  S,
  m as m3
} from "./chunk-LN6VH2LB.js";
import "./chunk-GZFJKWTS.js";
import "./chunk-2DHZIDQK.js";
import "./chunk-EFVIMN4N.js";
import "./chunk-SW3IBIJ7.js";
import "./chunk-E54MA7AH.js";
import "./chunk-6TU4HBID.js";
import "./chunk-SX2OLFE7.js";
import {
  b
} from "./chunk-WGIZLWW7.js";
import "./chunk-PUOCGOJB.js";
import "./chunk-XQH2QDB2.js";
import "./chunk-LPNAPHOF.js";
import "./chunk-DBQLTBDH.js";
import "./chunk-AMH7OVBF.js";
import "./chunk-SUZN3TAH.js";
import {
  d as d2
} from "./chunk-VILGTHTP.js";
import {
  q
} from "./chunk-ATEWWVHG.js";
import {
  t as t3
} from "./chunk-LEOFRCUR.js";
import "./chunk-CP4GPQHD.js";
import "./chunk-IZSNXKMJ.js";
import "./chunk-IOKAACTA.js";
import "./chunk-VFTH6C2E.js";
import "./chunk-M5RSIRGD.js";
import {
  r as r2
} from "./chunk-UYSPJCCV.js";
import {
  n as n5
} from "./chunk-BB6L755V.js";
import {
  a as a4,
  t
} from "./chunk-TCZ4QHYH.js";
import "./chunk-SMFCDOAJ.js";
import {
  f as f2
} from "./chunk-2HEBE37N.js";
import "./chunk-5A4G4OVM.js";
import "./chunk-MGMVRMXQ.js";
import "./chunk-GNWAZIVF.js";
import "./chunk-2TEGRXBS.js";
import {
  s as s3
} from "./chunk-44C2A72D.js";
import "./chunk-DIKY6MBW.js";
import "./chunk-YVSEBNS4.js";
import "./chunk-GGCWKF4X.js";
import {
  x as x2
} from "./chunk-6D5XULXX.js";
import "./chunk-445IB4DS.js";
import "./chunk-Y2XCZQML.js";
import "./chunk-SW4DFX7N.js";
import "./chunk-2PK57UYA.js";
import "./chunk-F26LCWNQ.js";
import "./chunk-H4N5QOMX.js";
import "./chunk-F2LC36UV.js";
import "./chunk-6Y2LNRVP.js";
import "./chunk-VNRDIGVF.js";
import "./chunk-QRJFHPMB.js";
import "./chunk-G6REFQRQ.js";
import "./chunk-Z2DWZ5IF.js";
import "./chunk-TDZ623HP.js";
import "./chunk-6RLUKSNK.js";
import {
  n as n4
} from "./chunk-VEUN2EF3.js";
import "./chunk-UN4ISSP7.js";
import "./chunk-E2RPCJOE.js";
import "./chunk-TKY5RBM3.js";
import "./chunk-NHJGPXZH.js";
import "./chunk-JS7R723S.js";
import {
  V as V2
} from "./chunk-SIQNRYEG.js";
import "./chunk-TTDEVHSF.js";
import "./chunk-QSRFVAIF.js";
import "./chunk-X6JBJVM2.js";
import "./chunk-Q7TEBZSN.js";
import "./chunk-BMGF5ELJ.js";
import "./chunk-JU6MEO4D.js";
import {
  m as m2
} from "./chunk-CY5MS6DC.js";
import "./chunk-C6FFJ4QS.js";
import {
  n as n3
} from "./chunk-Q4Q32WYV.js";
import {
  w
} from "./chunk-A3J7W53Y.js";
import {
  o
} from "./chunk-HLF5XJSV.js";
import {
  g
} from "./chunk-L6D73M4D.js";
import "./chunk-P5H5PJSC.js";
import "./chunk-H6RIEXAG.js";
import "./chunk-Y6AYXNMP.js";
import "./chunk-6YWQXXBX.js";
import "./chunk-DRBJFCLQ.js";
import {
  n as n2
} from "./chunk-7O7KFKCG.js";
import "./chunk-E2X3OBBC.js";
import {
  U
} from "./chunk-X7VTUWCX.js";
import {
  V
} from "./chunk-QS62R4CH.js";
import {
  f
} from "./chunk-VU6O6TFT.js";
import {
  m
} from "./chunk-GD4XDYZL.js";
import {
  a4 as a2,
  s4 as s2,
  x
} from "./chunk-33ECLFFF.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import "./chunk-L6CCOEVE.js";
import {
  a as a3
} from "./chunk-GRW2QIBT.js";
import "./chunk-R2PAF6JT.js";
import "./chunk-6WE7SNQY.js";
import {
  a,
  n2 as n,
  s2 as s
} from "./chunk-PKLD5YJF.js";
import "./chunk-XKQWTZMW.js";
import "./chunk-A4OFG7JM.js";

// node_modules/@arcgis/core/layers/buildingSublayers/BuildingSublayer.js
var n7 = class extends s3(m3) {
  constructor(e3) {
    super(e3), this.title = "", this.id = -1, this.modelName = null, this.isEmpty = null, this.legendEnabled = true, this.visible = true, this.opacity = 1;
  }
  readTitle(e3, o2) {
    return "string" == typeof o2.alias ? o2.alias : "string" == typeof o2.name ? o2.name : "";
  }
  readIdOnlyOnce(e3) {
    return -1 !== this.id ? this.id : "number" == typeof e3 ? e3 : -1;
  }
};
r([m({ type: String, json: { origins: { "web-scene": { write: true }, "portal-item": { write: true } } } })], n7.prototype, "title", void 0), r([o("service", "title", ["alias", "name"])], n7.prototype, "readTitle", null), r([m()], n7.prototype, "layer", void 0), r([m({ type: x, readOnly: true, json: { read: false, write: { ignoreOrigin: true } } })], n7.prototype, "id", void 0), r([o("service", "id")], n7.prototype, "readIdOnlyOnce", null), r([m(m4(String))], n7.prototype, "modelName", void 0), r([m(m4(Boolean))], n7.prototype, "isEmpty", void 0), r([m({ type: Boolean, nonNullable: true })], n7.prototype, "legendEnabled", void 0), r([m({ type: Boolean, json: { name: "visibility", write: true } })], n7.prototype, "visible", void 0), r([m({ type: Number, json: { write: true } })], n7.prototype, "opacity", void 0), n7 = r([a2("esri.layers.buildingSublayers.BuildingSublayer")], n7);
var a6 = n7;

// node_modules/@arcgis/core/layers/buildingSublayers/BuildingComponentSublayer.js
var Q = s5();
var E = class extends m2.LoadableMixin(n3(a6)) {
  constructor(e3) {
    super(e3), this.type = "building-component", this.nodePages = null, this.materialDefinitions = [], this.textureSetDefinitions = [], this.geometryDefinitions = [], this.indexInfo = null, this.serviceUpdateTimeStamp = null, this.store = null, this.attributeStorageInfo = [], this.fields = [], this.associatedLayer = null, this.outFields = null, this.listMode = "show", this.renderer = null, this.definitionExpression = null, this.popupEnabled = true, this.popupTemplate = null, this.layerType = "3d-object";
  }
  get parsedUrl() {
    var _a2, _b;
    return this.layer ? { path: `${(_a2 = this.layer.parsedUrl) == null ? void 0 : _a2.path}/sublayers/${this.id}`, query: (_b = this.layer.parsedUrl) == null ? void 0 : _b.query } : { path: "" };
  }
  get fieldsIndex() {
    return new Z(this.fields);
  }
  readAssociatedLayer(e3, t8) {
    const r4 = this.layer.associatedFeatureServiceItem, o2 = t8.associatedLayerID;
    return null != r4 && "number" == typeof o2 ? new Xe({ portalItem: r4, customParameters: this.customParameters, layerId: o2 }) : null;
  }
  get objectIdField() {
    if (null != this.fields) {
      for (const e3 of this.fields) if ("oid" === e3.type) return e3.name;
    }
    return null;
  }
  get displayField() {
    return null != this.associatedLayer ? this.associatedLayer.displayField : void 0;
  }
  get apiKey() {
    return this.layer.apiKey;
  }
  get customParameters() {
    return this.layer.customParameters;
  }
  get fullExtent() {
    return this.layer.fullExtent;
  }
  get spatialReference() {
    return this.layer.spatialReference;
  }
  get version() {
    return this.layer.version;
  }
  get elevationInfo() {
    return this.layer.elevationInfo;
  }
  get minScale() {
    return this.layer.minScale;
  }
  get maxScale() {
    return this.layer.maxScale;
  }
  get effectiveScaleRange() {
    return this.layer.effectiveScaleRange;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  load(e3) {
    const t8 = null != e3 ? e3.signal : null, r4 = this._fetchService(t8).then(() => {
      this.indexInfo = r3(this.parsedUrl.path, this.rootNode, this.nodePages, this.customParameters, this.apiKey, n.getLogger(this), t8);
    });
    return this.addResolvingPromise(r4), Promise.resolve(this);
  }
  createPopupTemplate(e3) {
    return p(this, e3);
  }
  async _fetchService(e3) {
    const t8 = (await U(this.parsedUrl.path, { query: { f: "json", ...this.customParameters, token: this.apiKey }, responseType: "json", signal: e3 })).data;
    this.read(t8, { origin: "service", url: this.parsedUrl });
  }
  getField(e3) {
    return this.fieldsIndex.get(e3);
  }
  getFieldDomain(e3, t8) {
    var _a2, _b, _c;
    const r4 = (_b = (_a2 = this.getFeatureType(t8 == null ? void 0 : t8.feature)) == null ? void 0 : _a2.domains) == null ? void 0 : _b[e3];
    return r4 && "inherited" !== r4.type ? r4 : ((_c = this.getField(e3)) == null ? void 0 : _c.domain) ?? null;
  }
  getFeatureType(e3) {
    return e3 && null != this.associatedLayer ? this.associatedLayer.getFeatureType(e3) : null;
  }
  get types() {
    return null != this.associatedLayer ? this.associatedLayer.types ?? [] : [];
  }
  get typeIdField() {
    return null != this.associatedLayer ? this.associatedLayer.typeIdField : null;
  }
  get geometryType() {
    return "3d-object" === this.layerType ? "mesh" : "point";
  }
  get profile() {
    return "3d-object" === this.layerType ? "mesh-pyramids" : "points";
  }
  get capabilities() {
    const e3 = null != this.associatedLayer && this.associatedLayer.capabilities ? this.associatedLayer.capabilities : t4, { query: t8, data: { supportsZ: r4, supportsM: o2, isVersioned: s6 } } = e3;
    return { query: t8, data: { supportsZ: r4, supportsM: o2, isVersioned: s6 } };
  }
  createQuery() {
    const e3 = new b();
    return "mesh" !== this.geometryType && (e3.returnGeometry = true, e3.returnZ = true), e3.where = this.definitionExpression || "1=1", e3.sqlFormat = "standard", e3;
  }
  queryExtent(e3, t8) {
    return this._getAssociatedLayerForQuery().then((r4) => r4.queryExtent(e3 || this.createQuery(), t8));
  }
  queryFeatureCount(e3, t8) {
    return this._getAssociatedLayerForQuery().then((r4) => r4.queryFeatureCount(e3 || this.createQuery(), t8));
  }
  queryFeatures(e3, t8) {
    return this._getAssociatedLayerForQuery().then((r4) => r4.queryFeatures(e3 || this.createQuery(), t8)).then((e4) => {
      if (e4 == null ? void 0 : e4.features) for (const t9 of e4.features) t9.layer = this.layer, t9.sourceLayer = this;
      return e4;
    });
  }
  queryObjectIds(e3, t8) {
    return this._getAssociatedLayerForQuery().then((r4) => r4.queryObjectIds(e3 || this.createQuery(), t8));
  }
  async queryCachedAttributes(e3, t8) {
    const r4 = x2(this.fieldsIndex, await n6(this, p3(this)));
    return V3(this.parsedUrl.path, this.attributeStorageInfo, e3, t8, r4, this.apiKey, this.customParameters);
  }
  async queryCachedFeature(e3, r4) {
    const o2 = await this.queryCachedAttributes(e3, [r4]);
    if (!o2 || 0 === o2.length) throw new s("scenelayer:feature-not-in-cached-data", "Feature not found in cached data");
    return new d2({ attributes: o2[0], layer: this, sourceLayer: this });
  }
  getFieldUsageInfo(e3) {
    return this.fieldsIndex.has(e3) ? { supportsLabelingInfo: false, supportsRenderer: false, supportsPopupTemplate: false, supportsLayerQuery: false } : { supportsLabelingInfo: false, supportsRenderer: true, supportsPopupTemplate: true, supportsLayerQuery: null != this.associatedLayer };
  }
  _getAssociatedLayerForQuery() {
    const e3 = this.associatedLayer;
    return null != e3 && e3.loaded ? Promise.resolve(e3) : this._loadAssociatedLayerForQuery();
  }
  async _loadAssociatedLayerForQuery() {
    if (await this.load(), null == this.associatedLayer) throw new s("buildingscenelayer:query-not-available", "BuildingSceneLayer component layer queries are not available without an associated feature layer", { layer: this });
    try {
      await this.associatedLayer.load();
    } catch (e3) {
      throw new s("buildingscenelayer:query-not-available", "BuildingSceneLayer associated feature layer could not be loaded", { layer: this, error: e3 });
    }
    return this.associatedLayer;
  }
};
r([m({ readOnly: true })], E.prototype, "parsedUrl", null), r([m({ type: p2, readOnly: true })], E.prototype, "nodePages", void 0), r([m({ type: [a5], readOnly: true })], E.prototype, "materialDefinitions", void 0), r([m({ type: [y], readOnly: true })], E.prototype, "textureSetDefinitions", void 0), r([m({ type: [m5], readOnly: true })], E.prototype, "geometryDefinitions", void 0), r([m({ readOnly: true })], E.prototype, "serviceUpdateTimeStamp", void 0), r([m({ readOnly: true })], E.prototype, "store", void 0), r([m({ type: String, readOnly: true, json: { read: { source: "store.rootNode" } } })], E.prototype, "rootNode", void 0), r([m({ readOnly: true })], E.prototype, "attributeStorageInfo", void 0), r([m(Q.fields)], E.prototype, "fields", void 0), r([m({ readOnly: true })], E.prototype, "fieldsIndex", null), r([m({ readOnly: true, type: Xe })], E.prototype, "associatedLayer", void 0), r([o("service", "associatedLayer", ["associatedLayerID"])], E.prototype, "readAssociatedLayer", null), r([m(Q.outFields)], E.prototype, "outFields", void 0), r([m({ type: String, readOnly: true })], E.prototype, "objectIdField", null), r([m({ readOnly: true, type: String, json: { read: false } })], E.prototype, "displayField", null), r([m({ readOnly: true, type: String })], E.prototype, "apiKey", null), r([m({ readOnly: true, type: String })], E.prototype, "customParameters", null), r([m({ readOnly: true, type: w })], E.prototype, "fullExtent", null), r([m({ readOnly: true, type: g })], E.prototype, "spatialReference", null), r([m({ readOnly: true })], E.prototype, "version", null), r([m({ readOnly: true, type: h })], E.prototype, "elevationInfo", null), r([m({ readOnly: true, type: Number })], E.prototype, "minScale", null), r([m({ readOnly: true, type: Number })], E.prototype, "maxScale", null), r([m({ readOnly: true, type: Number })], E.prototype, "effectiveScaleRange", null), r([m({ type: ["hide", "show"], json: { write: true } })], E.prototype, "listMode", void 0), r([m({ types: u, json: { origins: { service: { read: { source: "drawingInfo.renderer" } } }, name: "layerDefinition.drawingInfo.renderer", write: true }, value: null })], E.prototype, "renderer", void 0), r([m({ type: String, json: { origins: { service: { read: false, write: false } }, name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], E.prototype, "definitionExpression", void 0), r([m(l)], E.prototype, "popupEnabled", void 0), r([m({ type: q, json: { read: { source: "popupInfo" }, write: { target: "popupInfo" } } })], E.prototype, "popupTemplate", void 0), r([m({ readOnly: true, type: String, json: { origins: { service: { read: { source: "store.normalReferenceFrame" } } }, read: false } })], E.prototype, "normalReferenceFrame", void 0), r([m({ readOnly: true, json: { read: false } })], E.prototype, "defaultPopupTemplate", null), r([m()], E.prototype, "types", null), r([m()], E.prototype, "typeIdField", null), r([m({ json: { write: false } }), r2(new n2({ "3DObject": "3d-object", Point: "point" }))], E.prototype, "layerType", void 0), r([m()], E.prototype, "geometryType", null), r([m()], E.prototype, "profile", null), r([m({ readOnly: true, json: { read: false } })], E.prototype, "capabilities", null), r([m({ readOnly: true })], E.prototype, "statisticsInfo", void 0), E = r([a2("esri.layers.buildingSublayers.BuildingComponentSublayer")], E);
var A = E;

// node_modules/@arcgis/core/layers/buildingSublayers/BuildingGroupSublayer.js
var a7;
var l3 = { type: V2, readOnly: true, json: { origins: { service: { read: { source: "sublayers", reader: p4 } } }, read: false } };
function p4(r4, o2, t8) {
  if (r4 && Array.isArray(r4)) return new V2(r4.map((r5) => {
    const e3 = y2(r5);
    if (e3) {
      const o3 = new e3();
      return o3.read(r5, t8), o3;
    }
    return (t8 == null ? void 0 : t8.messages) && r5 && t8.messages.push(new s2("building-scene-layer:unsupported-sublayer-type", "Building scene sublayer of type '" + (r5.type || "unknown") + "' are not supported", { definition: r5, context: t8 })), null;
  }));
}
var c2 = a7 = class extends a6 {
  constructor(r4) {
    super(r4), this.type = "building-group", this.listMode = "show", this.sublayers = null;
  }
  loadAll() {
    return a4(this, (r4) => a7.forEachSublayer(this.sublayers, (e3) => {
      "building-group" !== e3.type && r4(e3);
    }));
  }
};
function y2(r4) {
  return "group" === r4.layerType ? c2 : A;
}
r([m({ type: ["hide", "show", "hide-children"], json: { write: true } })], c2.prototype, "listMode", void 0), r([m(l3)], c2.prototype, "sublayers", void 0), c2 = a7 = r([a2("esri.layers.buildingSublayers.BuildingGroupSublayer")], c2), function(r4) {
  function e3(r5, o2) {
    r5.forEach((r6) => {
      o2(r6), "building-group" === r6.type && e3(r6.sublayers, o2);
    });
  }
  r4.sublayersProperty = l3, r4.readSublayers = p4, r4.forEachSublayer = e3;
}(c2 || (c2 = {}));
var d3 = c2;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfo.js
var e2 = class extends f {
  constructor() {
    super(...arguments), this.type = null;
  }
};
r([m({ type: String, readOnly: true, json: { write: true } })], e2.prototype, "type", void 0), e2 = r([a2("esri.layers.support.BuildingFilterAuthoringInfo")], e2);
var p5 = e2;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoType.js
var i2;
var p6 = i2 = class extends f {
  constructor() {
    super(...arguments), this.filterType = null, this.filterValues = null;
  }
  clone() {
    return new i2({ filterType: this.filterType, filterValues: a(this.filterValues) });
  }
};
r([m({ type: String, json: { write: true } })], p6.prototype, "filterType", void 0), r([m({ type: [String], json: { write: true } })], p6.prototype, "filterValues", void 0), p6 = i2 = r([a2("esri.layers.support.BuildingFilterAuthoringInfoType")], p6);
var l4 = p6;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoBlock.js
var c3;
var l5 = V2.ofType(l4);
var m6 = c3 = class extends f {
  clone() {
    return new c3({ filterTypes: a(this.filterTypes) });
  }
};
r([m({ type: l5, json: { write: true } })], m6.prototype, "filterTypes", void 0), m6 = c3 = r([a2("esri.layers.support.BuildingFilterAuthoringInfoBlock")], m6);
var n8 = m6;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoCheckbox.js
var p7;
var l6 = V2.ofType(n8);
var n9 = p7 = class extends p5 {
  constructor() {
    super(...arguments), this.type = "checkbox";
  }
  clone() {
    return new p7({ filterBlocks: a(this.filterBlocks) });
  }
};
r([m({ type: ["checkbox"] })], n9.prototype, "type", void 0), r([m({ type: l6, json: { write: true } })], n9.prototype, "filterBlocks", void 0), n9 = p7 = r([a2("esri.layers.support.BuildingFilterAuthoringInfoCheckbox")], n9);
var m7 = n9;

// node_modules/@arcgis/core/layers/support/BuildingFilterMode.js
var t5 = class extends f {
};
r([m({ readOnly: true, json: { read: false } })], t5.prototype, "type", void 0), t5 = r([a2("esri.layers.support.BuildingFilterMode")], t5);
var p8 = t5;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeSolid.js
var t6;
var p9 = t6 = class extends p8 {
  constructor() {
    super(...arguments), this.type = "solid";
  }
  clone() {
    return new t6();
  }
};
r([m({ type: ["solid"], readOnly: true, json: { write: true } })], p9.prototype, "type", void 0), p9 = t6 = r([a2("esri.layers.support.BuildingFilterModeSolid")], p9);
var i3 = p9;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeWireFrame.js
var c4;
var m8 = c4 = class extends p8 {
  constructor() {
    super(...arguments), this.type = "wire-frame", this.edges = null;
  }
  clone() {
    return new c4({ edges: a(this.edges) });
  }
};
r([r2({ wireFrame: "wire-frame" })], m8.prototype, "type", void 0), r([m(t3)], m8.prototype, "edges", void 0), m8 = c4 = r([a2("esri.layers.support.BuildingFilterModeWireFrame")], m8);
var a8 = m8;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeXRay.js
var t7;
var p10 = t7 = class extends p8 {
  constructor() {
    super(...arguments), this.type = "x-ray";
  }
  clone() {
    return new t7();
  }
};
r([m({ type: ["x-ray"], readOnly: true, json: { write: true } })], p10.prototype, "type", void 0), p10 = t7 = r([a2("esri.layers.support.BuildingFilterModeXRay")], p10);
var c5 = p10;

// node_modules/@arcgis/core/layers/support/BuildingFilterBlock.js
var d4;
var a9 = { nonNullable: true, types: { key: "type", base: p8, typeMap: { solid: i3, "wire-frame": a8, "x-ray": c5 } }, json: { read: (e3) => {
  switch (e3 == null ? void 0 : e3.type) {
    case "solid":
      return i3.fromJSON(e3);
    case "wireFrame":
      return a8.fromJSON(e3);
    case "x-ray":
      return c5.fromJSON(e3);
    default:
      return;
  }
}, write: { enabled: true, isRequired: true } } };
var m9 = d4 = class extends f {
  constructor() {
    super(...arguments), this.filterExpression = null, this.filterMode = new i3(), this.title = "";
  }
  clone() {
    return new d4({ filterExpression: this.filterExpression, filterMode: a(this.filterMode), title: this.title });
  }
};
r([m({ type: String, json: { write: { enabled: true, isRequired: true } } })], m9.prototype, "filterExpression", void 0), r([m(a9)], m9.prototype, "filterMode", void 0), r([m({ type: String, json: { write: { enabled: true, isRequired: true } } })], m9.prototype, "title", void 0), m9 = d4 = r([a2("esri.layers.support.BuildingFilterBlock")], m9);
var c6 = m9;

// node_modules/@arcgis/core/layers/support/BuildingFilter.js
var d5;
var u2 = V2.ofType(c6);
var m10 = d5 = class extends f {
  constructor() {
    super(...arguments), this.description = null, this.filterBlocks = null, this.id = n4(), this.name = null;
  }
  clone() {
    return new d5({ description: this.description, filterBlocks: a(this.filterBlocks), id: this.id, name: this.name, filterAuthoringInfo: a(this.filterAuthoringInfo) });
  }
};
r([m({ type: String, json: { write: true } })], m10.prototype, "description", void 0), r([m({ type: u2, json: { write: { enabled: true, isRequired: true } } })], m10.prototype, "filterBlocks", void 0), r([m({ types: { key: "type", base: p5, typeMap: { checkbox: m7 } }, json: { read: (o2) => "checkbox" === (o2 == null ? void 0 : o2.type) ? m7.fromJSON(o2) : null, write: true } })], m10.prototype, "filterAuthoringInfo", void 0), r([m({ type: String, constructOnly: true, json: { write: { enabled: true, isRequired: true } } })], m10.prototype, "id", void 0), r([m({ type: String, json: { write: { enabled: true, isRequired: true } } })], m10.prototype, "name", void 0), m10 = d5 = r([a2("esri.layers.support.BuildingFilter")], m10);
var f3 = m10;

// node_modules/@arcgis/core/layers/support/BuildingSummaryStatistics.js
var p11 = class extends f {
  constructor() {
    super(...arguments), this.fieldName = null, this.modelName = null, this.label = null, this.min = null, this.max = null, this.mostFrequentValues = null, this.subLayerIds = null;
  }
};
r([m({ type: String })], p11.prototype, "fieldName", void 0), r([m({ type: String })], p11.prototype, "modelName", void 0), r([m({ type: String })], p11.prototype, "label", void 0), r([m({ type: Number })], p11.prototype, "min", void 0), r([m({ type: Number })], p11.prototype, "max", void 0), r([m({ json: { read: (e3) => Array.isArray(e3) && (e3.every((e4) => "string" == typeof e4) || e3.every((e4) => "number" == typeof e4)) ? e3.slice() : null } })], p11.prototype, "mostFrequentValues", void 0), r([m({ type: [Number] })], p11.prototype, "subLayerIds", void 0), p11 = r([a2("esri.layers.support.BuildingSummaryStatistics.BuildingFieldStatistics")], p11);
var n10 = class extends m2.LoadableMixin(n3(f)) {
  constructor() {
    super(...arguments), this.url = null;
  }
  get fields() {
    return this.loaded || "loading" === this.loadStatus ? this._get("fields") : (n.getLogger(this).error("building summary statistics are not loaded"), null);
  }
  load(e3) {
    const t8 = null != e3 ? e3.signal : null;
    return this.addResolvingPromise(this._fetchService(t8)), Promise.resolve(this);
  }
  async _fetchService(e3) {
    const r4 = (await U(this.url, { query: { f: "json" }, responseType: "json", signal: e3 })).data;
    this.read(r4, { origin: "service" });
  }
};
r([m({ constructOnly: true, type: String })], n10.prototype, "url", void 0), r([m({ readOnly: true, type: [p11], json: { read: { source: "summary" } } })], n10.prototype, "fields", null), n10 = r([a2("esri.layers.support.BuildingSummaryStatistics")], n10);
var u3 = n10;

// node_modules/@arcgis/core/layers/BuildingSceneLayer.js
var C = V2.ofType(f3);
var R2 = a(d3.sublayersProperty);
var _a;
var M = (_a = R2.json) == null ? void 0 : _a.origins;
M && (M["web-scene"] = { type: [A], write: { enabled: true, overridePolicy: () => ({ enabled: false }) } }, M["portal-item"] = { type: [A], write: { enabled: true, overridePolicy: () => ({ enabled: false }) } });
var U2 = class extends R(l2(b2(j(t2(S(e(i(f2)))))))) {
  constructor(e3) {
    super(e3), this.operationalLayerType = "BuildingSceneLayer", this.allSublayers = new n5({ getCollections: () => [this.sublayers], getChildrenFunction: (e4) => "building-group" === e4.type ? e4.sublayers : null }), this.sublayers = null, this._allSublayerOverrides = null, this.filters = new C(), this.activeFilterId = null, this.summaryStatistics = null, this.outFields = null, this.legendEnabled = true, this.type = "building-scene";
  }
  normalizeCtorArgs(e3) {
    return "string" == typeof e3 ? { url: e3 } : e3 ?? {};
  }
  destroy() {
    this.allSublayers.destroy();
  }
  readSublayers(e3, r4, t8) {
    const s6 = d3.readSublayers(e3, r4, t8);
    return d3.forEachSublayer(s6, (e4) => e4.layer = this), this._allSublayerOverrides && (H(s6, this._allSublayerOverrides), this._allSublayerOverrides = null), s6;
  }
  write(e3, r4) {
    return e3 = super.write(e3, r4), !r4 || "web-scene" !== r4.origin && "portal-item" !== r4.origin || (this.sublayers ? G(this.sublayers, e3, r4) : this._allSublayerOverrides && V5(this._allSublayerOverrides, e3, r4)), e3;
  }
  read(e3, r4) {
    if (super.read(e3, r4), ("web-scene" === (r4 == null ? void 0 : r4.origin) || "portal-item" === (r4 == null ? void 0 : r4.origin)) && Array.isArray(e3 == null ? void 0 : e3.sublayers)) {
      const t8 = k(e3.sublayers, r4);
      this.sublayers ? N(this.sublayers, t8) : (this._allSublayerOverrides ?? (this._allSublayerOverrides = /* @__PURE__ */ new Map()), this._allSublayerOverrides.set(r4.origin, t8));
    }
  }
  readSummaryStatistics(e3, r4) {
    var _a2;
    if ("string" == typeof r4.statisticsHRef) {
      const e4 = V((_a2 = this.parsedUrl) == null ? void 0 : _a2.path, r4.statisticsHRef);
      return new u3({ url: e4 });
    }
    return null;
  }
  set elevationInfo(e3) {
    this._set("elevationInfo", e3), this._validateElevationInfo();
  }
  load(e3) {
    const r4 = null != e3 ? e3.signal : null, t8 = this.loadFromPortal({ supportedTypes: ["Scene Service"] }, e3).catch(a3).then(() => this._fetchService(r4)).then(() => this._fetchAssociatedFeatureService(r4));
    return this.addResolvingPromise(t8), Promise.resolve(this);
  }
  loadAll() {
    return t(this, (e3) => {
      d3.forEachSublayer(this.sublayers, (r4) => {
        "building-group" !== r4.type && e3(r4);
      }), this.summaryStatistics && e3(this.summaryStatistics);
    });
  }
  async saveAs(e3, r4) {
    return this._debouncedSaveOperations(V4.SAVE_AS, { ...r4, getTypeKeywords: () => this._getTypeKeywords(), portalItemLayerType: "building-scene" }, e3);
  }
  async save() {
    const e3 = { getTypeKeywords: () => this._getTypeKeywords(), portalItemLayerType: "building-scene" };
    return this._debouncedSaveOperations(V4.SAVE, e3);
  }
  validateLayer(e3) {
    if (!e3.layerType || "Building" !== e3.layerType) throw new s("buildingscenelayer:layer-type-not-supported", "BuildingSceneLayer does not support this layer type", { layerType: e3.layerType });
  }
  _getTypeKeywords() {
    return ["Building"];
  }
  async _fetchAssociatedFeatureService(e3) {
    try {
      const { portalItem: r4 } = await s4(`${this.url}/layers/${this.layerId}`, { sceneLayerItem: this.portalItem, customParameters: this.customParameters, apiKey: this.apiKey, signal: e3 });
      this.associatedFeatureServiceItem = r4;
    } catch (r4) {
      n.getLogger(this).warn("Associated feature service item could not be loaded", r4);
    }
  }
  _validateElevationInfo() {
    const e3 = this.elevationInfo, r4 = "Building scene layers";
    $(n.getLogger(this), Z2(r4, "absolute-height", e3)), $(n.getLogger(this), w2(r4, e3));
  }
};
function H(e3, r4) {
  r4.forEach((r5) => N(e3, r5));
}
function N(e3, r4) {
  const { overrides: t8, context: s6 } = r4;
  d3.forEachSublayer(e3, (e4) => e4.read(t8.get(e4.id), s6));
}
function k(e3, r4) {
  var _a2;
  const t8 = /* @__PURE__ */ new Map();
  for (const i4 of e3) null != i4 && "object" == typeof i4 && "number" == typeof i4.id ? t8.set(i4.id, i4) : (_a2 = r4.messages) == null ? void 0 : _a2.push(new s("building-scene-layer:invalid-sublayer-override", "Invalid value for sublayer override. Not an object or no id specified.", { value: i4 }));
  return { overrides: t8, context: r4 };
}
function G(e3, r4, t8) {
  const s6 = [];
  d3.forEachSublayer(e3, (e4) => {
    const r5 = e4.write({}, t8);
    Object.keys(r5).length > 1 && s6.push(r5);
  }), s6.length > 0 && (r4.sublayers = s6);
}
function V5(e3, r4, t8) {
  const s6 = (t8 == null ? void 0 : t8.origin) && e3.get(t8.origin);
  s6 && (r4.sublayers = [], s6.overrides.forEach((e4) => {
    r4.sublayers.push(a(e4));
  }));
}
r([m({ type: ["BuildingSceneLayer"] })], U2.prototype, "operationalLayerType", void 0), r([m({ readOnly: true })], U2.prototype, "allSublayers", void 0), r([m(R2)], U2.prototype, "sublayers", void 0), r([o("service", "sublayers")], U2.prototype, "readSublayers", null), r([m({ type: C, nonNullable: true, json: { write: true } })], U2.prototype, "filters", void 0), r([m({ type: String, json: { write: true } })], U2.prototype, "activeFilterId", void 0), r([m({ readOnly: true, type: u3 })], U2.prototype, "summaryStatistics", void 0), r([o("summaryStatistics", ["statisticsHRef"])], U2.prototype, "readSummaryStatistics", null), r([m({ type: [String], json: { read: false } })], U2.prototype, "outFields", void 0), r([m(g2)], U2.prototype, "fullExtent", void 0), r([m(d)], U2.prototype, "legendEnabled", void 0), r([m({ type: ["show", "hide", "hide-children"] })], U2.prototype, "listMode", void 0), r([m(m4(g))], U2.prototype, "spatialReference", void 0), r([m(c)], U2.prototype, "elevationInfo", null), r([m({ json: { read: false }, readOnly: true })], U2.prototype, "type", void 0), r([m()], U2.prototype, "associatedFeatureServiceItem", void 0), U2 = r([a2("esri.layers.BuildingSceneLayer")], U2);
var $2 = U2;
export {
  $2 as default
};
//# sourceMappingURL=BuildingSceneLayer-3JB33NJZ.js.map
