import {
  c as c2
} from "./chunk-Y24KYRDB.js";
import "./chunk-BF46TBV5.js";
import "./chunk-H4E2VVPD.js";
import {
  l as l3
} from "./chunk-5OE5J4F6.js";
import {
  c
} from "./chunk-JWQMRQX4.js";
import "./chunk-24OTECJ5.js";
import {
  s as s3
} from "./chunk-EYETIQ6R.js";
import {
  C,
  n as n2
} from "./chunk-DFLI5RC4.js";
import "./chunk-QYSQ6XPQ.js";
import {
  m as m2,
  o as o3,
  u
} from "./chunk-YYZ2CTYE.js";
import "./chunk-HZRXUNDJ.js";
import "./chunk-XKMN3LJN.js";
import "./chunk-2U5JYYSG.js";
import "./chunk-GGPPKSP2.js";
import {
  l as l4
} from "./chunk-EA7CPLTC.js";
import "./chunk-SI5IJ3AZ.js";
import {
  p as p2
} from "./chunk-7ZA6GWGF.js";
import {
  e
} from "./chunk-JU4Z6UVP.js";
import "./chunk-JHXGQ3AW.js";
import "./chunk-MR727DXB.js";
import "./chunk-VLKWWBLY.js";
import "./chunk-GNY4KZ34.js";
import "./chunk-WPERPIJF.js";
import {
  z
} from "./chunk-5IA763KB.js";
import "./chunk-QKS6PIY6.js";
import "./chunk-R5BTSPWT.js";
import "./chunk-Z2L6EED4.js";
import "./chunk-43W2AR4R.js";
import "./chunk-X5EOLPIE.js";
import "./chunk-VNPGSD2C.js";
import "./chunk-AFULL6KA.js";
import "./chunk-URFLFG2R.js";
import {
  f as f3
} from "./chunk-LCFK6PEB.js";
import "./chunk-GJTB7YCT.js";
import "./chunk-LQEYS467.js";
import "./chunk-A66MNK5C.js";
import "./chunk-EPAKCM4A.js";
import "./chunk-RCGJPJRB.js";
import "./chunk-5CRXWQ3Y.js";
import "./chunk-G54IOEGF.js";
import {
  t as t2
} from "./chunk-VH245UJV.js";
import {
  A
} from "./chunk-WH2FR6UE.js";
import {
  j as j2
} from "./chunk-F3W2DG3D.js";
import {
  l
} from "./chunk-YMJZWW2N.js";
import "./chunk-7Q4JSL7R.js";
import "./chunk-VBJTBJYL.js";
import {
  t as t3
} from "./chunk-ES2OYM5K.js";
import {
  b as b2
} from "./chunk-JXPOROPE.js";
import {
  d,
  j,
  l as l2,
  p,
  s as s2,
  v,
  y as y2
} from "./chunk-OPBXQTOC.js";
import {
  h
} from "./chunk-DKMSVKV3.js";
import "./chunk-YIIXBP6I.js";
import {
  S
} from "./chunk-LN6VH2LB.js";
import "./chunk-GZFJKWTS.js";
import "./chunk-2DHZIDQK.js";
import "./chunk-EFVIMN4N.js";
import {
  b
} from "./chunk-WGIZLWW7.js";
import "./chunk-PUOCGOJB.js";
import "./chunk-XQH2QDB2.js";
import "./chunk-LPNAPHOF.js";
import "./chunk-DBQLTBDH.js";
import {
  y
} from "./chunk-AMH7OVBF.js";
import "./chunk-SUZN3TAH.js";
import "./chunk-VILGTHTP.js";
import {
  q
} from "./chunk-ATEWWVHG.js";
import "./chunk-LEOFRCUR.js";
import "./chunk-CP4GPQHD.js";
import "./chunk-IZSNXKMJ.js";
import "./chunk-IOKAACTA.js";
import "./chunk-VFTH6C2E.js";
import {
  i
} from "./chunk-M5RSIRGD.js";
import "./chunk-UYSPJCCV.js";
import "./chunk-SMFCDOAJ.js";
import {
  f as f2
} from "./chunk-2HEBE37N.js";
import "./chunk-5A4G4OVM.js";
import "./chunk-MGMVRMXQ.js";
import "./chunk-GNWAZIVF.js";
import "./chunk-2TEGRXBS.js";
import "./chunk-44C2A72D.js";
import "./chunk-DIKY6MBW.js";
import "./chunk-YVSEBNS4.js";
import "./chunk-GGCWKF4X.js";
import {
  g as g2,
  p as p3
} from "./chunk-6D5XULXX.js";
import "./chunk-445IB4DS.js";
import "./chunk-Y2XCZQML.js";
import "./chunk-SW4DFX7N.js";
import {
  o as o2
} from "./chunk-2PK57UYA.js";
import "./chunk-F26LCWNQ.js";
import "./chunk-H4N5QOMX.js";
import "./chunk-F2LC36UV.js";
import "./chunk-6Y2LNRVP.js";
import "./chunk-VNRDIGVF.js";
import "./chunk-QRJFHPMB.js";
import "./chunk-G6REFQRQ.js";
import "./chunk-Z2DWZ5IF.js";
import "./chunk-TDZ623HP.js";
import "./chunk-6RLUKSNK.js";
import "./chunk-VEUN2EF3.js";
import "./chunk-UN4ISSP7.js";
import "./chunk-E2RPCJOE.js";
import "./chunk-TKY5RBM3.js";
import "./chunk-NHJGPXZH.js";
import "./chunk-JS7R723S.js";
import "./chunk-SIQNRYEG.js";
import "./chunk-TTDEVHSF.js";
import "./chunk-QSRFVAIF.js";
import "./chunk-X6JBJVM2.js";
import "./chunk-Q7TEBZSN.js";
import "./chunk-BMGF5ELJ.js";
import "./chunk-JU6MEO4D.js";
import "./chunk-CY5MS6DC.js";
import "./chunk-C6FFJ4QS.js";
import "./chunk-Q4Q32WYV.js";
import {
  w
} from "./chunk-A3J7W53Y.js";
import {
  o
} from "./chunk-HLF5XJSV.js";
import {
  g
} from "./chunk-L6D73M4D.js";
import "./chunk-P5H5PJSC.js";
import "./chunk-H6RIEXAG.js";
import "./chunk-Y6AYXNMP.js";
import "./chunk-6YWQXXBX.js";
import "./chunk-DRBJFCLQ.js";
import "./chunk-7O7KFKCG.js";
import "./chunk-E2X3OBBC.js";
import {
  U
} from "./chunk-X7VTUWCX.js";
import "./chunk-QS62R4CH.js";
import {
  f
} from "./chunk-VU6O6TFT.js";
import {
  m
} from "./chunk-GD4XDYZL.js";
import {
  a4 as a2,
  x
} from "./chunk-33ECLFFF.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import "./chunk-L6CCOEVE.js";
import {
  a as a3,
  k,
  t
} from "./chunk-GRW2QIBT.js";
import "./chunk-R2PAF6JT.js";
import "./chunk-6WE7SNQY.js";
import {
  a,
  n2 as n,
  s2 as s
} from "./chunk-PKLD5YJF.js";
import "./chunk-XKQWTZMW.js";
import "./chunk-A4OFG7JM.js";

// node_modules/@arcgis/core/layers/support/PurgeOptions.js
var t4;
var i2 = t4 = class extends f {
  constructor() {
    super(...arguments), this.age = null, this.ageReceived = null, this.displayCount = null, this.maxObservations = 1;
  }
  clone() {
    return new t4({ age: this.age, ageReceived: this.ageReceived, displayCount: this.displayCount, maxObservations: this.maxObservations });
  }
};
r([m({ type: Number, json: { write: true } })], i2.prototype, "age", void 0), r([m({ type: Number, json: { write: true } })], i2.prototype, "ageReceived", void 0), r([m({ type: Number, json: { write: true } })], i2.prototype, "displayCount", void 0), r([m({ type: Number, json: { write: true } })], i2.prototype, "maxObservations", void 0), i2 = t4 = r([a2("esri.layers.support.PurgeOptions")], i2);
var p4 = i2;

// node_modules/@arcgis/core/layers/StreamLayer.js
var Y = s3();
function Z(e2, t5) {
  return new s("layer:unsupported", `Layer (${e2.title}, ${e2.id}) of type '${e2.declaredClass}' ${t5}`, { layer: e2 });
}
var ee = class extends c2(c(l(l4(t3(f3(l3(b2(j2(S(e(i(f2)))))))))))) {
  constructor(...e2) {
    super(...e2), this.copyright = null, this.definitionExpression = null, this.displayField = null, this.elevationInfo = null, this.fields = null, this.fieldsIndex = null, this.geometryDefinition = null, this.geometryType = null, this.labelsVisible = true, this.labelingInfo = null, this.legendEnabled = true, this.maxReconnectionAttempts = 0, this.maxReconnectionInterval = 20, this.maxScale = 0, this.minScale = 0, this.objectIdField = null, this.operationalLayerType = "ArcGISStreamLayer", this.outFields = ["*"], this.popupEnabled = true, this.popupTemplate = null, this.purgeOptions = new p4(), this.refreshInterval = 0, this.screenSizePerspectiveEnabled = true, this.sourceJSON = null, this.spatialReference = g.WGS84, this.type = "stream", this.url = null, this.updateInterval = 300, this.useViewTime = true, this.webSocketUrl = null, this._debouncedSaveOperations = k(async (e3, t5, r2) => {
      const { save: i3, saveAs: o4 } = await import("./streamLayerUtils-CRRA7M7B.js");
      switch (e3) {
        case A.SAVE:
          return i3(this, t5);
        case A.SAVE_AS:
          return o4(this, r2, t5);
      }
    });
  }
  normalizeCtorArgs(e2, t5) {
    return "string" == typeof e2 ? { url: e2, ...t5 } : e2;
  }
  load(e2) {
    if (!("WebSocket" in globalThis)) return this.addResolvingPromise(Promise.reject(new s("stream-layer:websocket-unsupported", "WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))), Promise.resolve(this);
    const t5 = null != e2 ? e2.signal : null;
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["Stream Service", "Feed"] }, e2).catch(a3).then(() => this._fetchService(t5))), Promise.resolve(this);
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  set featureReduction(e2) {
    const t5 = this._normalizeFeatureReduction(e2);
    this._set("featureReduction", t5);
  }
  set renderer(e2) {
    p3(e2, this.fieldsIndex), this._set("renderer", e2);
  }
  readRenderer(e2, t5, i3) {
    var _a;
    t5 = t5.layerDefinition || t5;
    const o4 = (_a = t5.drawingInfo) == null ? void 0 : _a.renderer;
    if (o4) {
      const e3 = o3(o4, t5, i3) || void 0;
      return e3 || n.getLogger(this).error("Failed to create renderer", { rendererDefinition: t5.drawingInfo.renderer, layer: this, context: i3 }), e3;
    }
    return z(t5, i3);
  }
  async connect(e2) {
    const [{ createConnection: t5 }] = await Promise.all([import("./createConnection-LKZDE6JK.js"), this.load()]), r2 = this.geometryType ? o2.toJSON(this.geometryType) : null, { customParameters: i3 = null, definitionExpression: o4 = null, geometryDefinition: s4 = null, maxReconnectionAttempts: n3 = 0, maxReconnectionInterval: a4 = 20, spatialReference: l5 = this.spatialReference } = e2 || this.createConnectionParameters(), d2 = t5(this.parsedUrl, this.spatialReference, l5, r2, o4, s4, n3, a4, i3 ?? void 0), m3 = t([this.on("send-message-to-socket", (e3) => d2.sendMessageToSocket(e3)), this.on("send-message-to-client", (e3) => d2.sendMessageToClient(e3))]);
    return d2.once("destroy", m3.remove), d2;
  }
  createConnectionParameters() {
    return { spatialReference: this.spatialReference, customParameters: this.customParameters, definitionExpression: this.definitionExpression, geometryDefinition: this.geometryDefinition, maxReconnectionAttempts: this.maxReconnectionAttempts, maxReconnectionInterval: this.maxReconnectionInterval };
  }
  createPopupTemplate(e2) {
    return p2(this, e2);
  }
  createQuery() {
    const e2 = new b();
    return e2.returnGeometry = true, e2.outFields = ["*"], e2.where = this.definitionExpression || "1=1", e2;
  }
  getFieldDomain(e2, t5) {
    if (!this.fields) return null;
    let r2 = null;
    return this.fields.some((t6) => (t6.name === e2 && (r2 = t6.domain), !!r2)), r2;
  }
  getField(e2) {
    return this.fieldsIndex.get(e2);
  }
  serviceSupportsSpatialReference(e2) {
    return true;
  }
  sendMessageToSocket(e2) {
    this.emit("send-message-to-socket", e2);
  }
  sendMessageToClient(e2) {
    this.emit("send-message-to-client", e2);
  }
  async save(e2) {
    return this._debouncedSaveOperations(A.SAVE, e2);
  }
  async saveAs(e2, t5) {
    return this._debouncedSaveOperations(A.SAVE_AS, t5, e2);
  }
  write(e2, t5) {
    const r2 = t5 == null ? void 0 : t5.messages;
    return this.webSocketUrl ? (r2 == null ? void 0 : r2.push(Z(this, "using a custom websocket connection cannot be written to web scenes and web maps")), null) : this.parsedUrl ? super.write(e2, t5) : (r2 == null ? void 0 : r2.push(Z(this, "using a client-side only connection without a url cannot be written to web scenes and web maps")), null);
  }
  async _fetchService(e2) {
    var _a, _b, _c;
    if (!!!this.webSocketUrl && this.parsedUrl) {
      if (!this.sourceJSON) {
        const { data: t5 } = await U(this.parsedUrl.path, { query: { f: "json", ...this.customParameters, ...this.parsedUrl.query }, responseType: "json", signal: e2 });
        this.sourceJSON = t5;
      }
    } else {
      if (!((_a = this.timeInfo) == null ? void 0 : _a.trackIdField)) throw new s("stream-layer:missing-metadata", "The stream layer trackIdField must be specified.");
      if (!this.objectIdField) {
        const e3 = (_b = this.fields.find((e4) => "oid" === e4.type)) == null ? void 0 : _b.name;
        if (!e3) throw new s("stream-layer:missing-metadata", "The stream layer objectIdField must be specified.");
        this.objectIdField = e3;
      }
      if (!this.fields) throw new s("stream-layer:missing-metadata", "The stream layer fields must be specified.");
      if (this.fields.some((e3) => e3.name === this.objectIdField) || this.fields.push(new y({ name: this.objectIdField, alias: this.objectIdField, type: "oid" })), !this.geometryType) throw new s("stream-layer:missing-metadata", "The stream layer geometryType must be specified.");
      this.webSocketUrl && (this.url = this.webSocketUrl);
    }
    return this.read(this.sourceJSON, { origin: "service", portalItem: this.portalItem, portal: (_c = this.portalItem) == null ? void 0 : _c.portal, url: this.parsedUrl }), p3(this.renderer, this.fieldsIndex), g2(this.timeInfo, this.fieldsIndex), this.objectIdField || (this.objectIdField = "__esri_stream_id__"), t2(this, { origin: "service" });
  }
};
r([m({ type: String })], ee.prototype, "copyright", void 0), r([m({ readOnly: true })], ee.prototype, "defaultPopupTemplate", null), r([m({ type: String, json: { name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], ee.prototype, "definitionExpression", void 0), r([m({ type: String })], ee.prototype, "displayField", void 0), r([m({ type: h })], ee.prototype, "elevationInfo", void 0), r([m({ json: { origins: { "web-map": { read: false, write: false }, "portal-item": { read: false, write: false }, "web-scene": { read: false, write: false } } } })], ee.prototype, "featureReduction", null), r([m(Y.fields)], ee.prototype, "fields", void 0), r([m(Y.fieldsIndex)], ee.prototype, "fieldsIndex", void 0), r([m({ type: w, json: { name: "layerDefinition.definitionGeometry", write: true } })], ee.prototype, "geometryDefinition", void 0), r([m({ type: o2.apiValues, json: { read: { reader: o2.read } } })], ee.prototype, "geometryType", void 0), r([m(p)], ee.prototype, "labelsVisible", void 0), r([m({ type: [C], json: { name: "layerDefinition.drawingInfo.labelingInfo", read: { reader: n2 }, write: true } })], ee.prototype, "labelingInfo", void 0), r([m(d)], ee.prototype, "legendEnabled", void 0), r([m({ type: ["show", "hide"], json: { origins: { "portal-item": { read: false, write: false } } } })], ee.prototype, "listMode", void 0), r([m({ type: x })], ee.prototype, "maxReconnectionAttempts", void 0), r([m({ type: x })], ee.prototype, "maxReconnectionInterval", void 0), r([m(v)], ee.prototype, "maxScale", void 0), r([m(j)], ee.prototype, "minScale", void 0), r([m({ type: String })], ee.prototype, "objectIdField", void 0), r([m({ value: "ArcGISStreamLayer", type: ["ArcGISStreamLayer"] })], ee.prototype, "operationalLayerType", void 0), r([m({ readOnly: true })], ee.prototype, "outFields", void 0), r([m(l2)], ee.prototype, "popupEnabled", void 0), r([m({ type: q, json: { name: "popupInfo", write: true } })], ee.prototype, "popupTemplate", void 0), r([m({ type: p4 })], ee.prototype, "purgeOptions", void 0), r([m({ json: { read: false, write: false } })], ee.prototype, "refreshInterval", void 0), r([m({ types: m2, json: { origins: { service: { write: { target: "drawingInfo.renderer", enabled: false } }, "web-scene": { name: "layerDefinition.drawingInfo.renderer", types: u, write: true } }, write: { target: "layerDefinition.drawingInfo.renderer" } } })], ee.prototype, "renderer", null), r([o("service", "renderer", ["drawingInfo.renderer", "defaultSymbol"]), o("renderer", ["layerDefinition.drawingInfo.renderer", "layerDefinition.defaultSymbol"])], ee.prototype, "readRenderer", null), r([m((() => {
  const e2 = a(s2);
  return e2.json.origins["portal-item"] = { read: false, write: false }, e2;
})())], ee.prototype, "screenSizePerspectiveEnabled", void 0), r([m()], ee.prototype, "sourceJSON", void 0), r([m({ type: g, json: { origins: { service: { read: { source: "spatialReference" } } } } })], ee.prototype, "spatialReference", void 0), r([m({ json: { read: false } })], ee.prototype, "type", void 0), r([m(y2)], ee.prototype, "url", void 0), r([m({ type: Number })], ee.prototype, "updateInterval", void 0), r([m({ json: { read: false, write: false } })], ee.prototype, "useViewTime", void 0), r([m({ type: String })], ee.prototype, "webSocketUrl", void 0), ee = r([a2("esri.layers.StreamLayer")], ee);
var te = ee;
export {
  te as default
};
//# sourceMappingURL=StreamLayer-P6CJULC6.js.map
