import {
  d
} from "./chunk-7XRQBOQ2.js";
import "./chunk-4RG73KY7.js";
import {
  i as i3
} from "./chunk-A33GYYOL.js";
import {
  f as f2,
  i as i2,
  s
} from "./chunk-D2JPDRZZ.js";
import "./chunk-SW4DFX7N.js";
import "./chunk-2PK57UYA.js";
import "./chunk-F26LCWNQ.js";
import "./chunk-VNRDIGVF.js";
import "./chunk-QRJFHPMB.js";
import "./chunk-G6REFQRQ.js";
import "./chunk-Z2DWZ5IF.js";
import "./chunk-A3J7W53Y.js";
import "./chunk-HLF5XJSV.js";
import "./chunk-L6D73M4D.js";
import "./chunk-H6RIEXAG.js";
import "./chunk-6YWQXXBX.js";
import "./chunk-DRBJFCLQ.js";
import "./chunk-7O7KFKCG.js";
import "./chunk-E2X3OBBC.js";
import {
  U
} from "./chunk-X7VTUWCX.js";
import "./chunk-QS62R4CH.js";
import {
  f
} from "./chunk-VU6O6TFT.js";
import {
  i,
  m
} from "./chunk-GD4XDYZL.js";
import {
  a4 as a
} from "./chunk-33ECLFFF.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import "./chunk-L6CCOEVE.js";
import "./chunk-GRW2QIBT.js";
import "./chunk-R2PAF6JT.js";
import "./chunk-6WE7SNQY.js";
import {
  n2 as n
} from "./chunk-PKLD5YJF.js";
import "./chunk-XKQWTZMW.js";
import "./chunk-A4OFG7JM.js";

// node_modules/@arcgis/core/rest/networks/support/QueryAssociationsResult.js
var p = class extends f {
  constructor(o) {
    super(o), this.associations = [];
  }
};
r([m({ type: [d], json: { write: true } })], p.prototype, "associations", void 0), p = r([a("esri.rest.networks.support.QueryAssociationsResult")], p);
var c = p;

// node_modules/@arcgis/core/rest/networks/queryAssociations.js
function a2(e) {
  const { returnDeletes: t, elements: r2, gdbVersion: s2, moment: n2 } = e.toJSON();
  return { returnDeletes: t, elements: JSON.stringify(r2.map((e2) => ({ globalId: e2.globalId, networkSourceId: e2.networkSourceId, terminalId: e2.terminalId }))), types: JSON.stringify(e.types.map((e2) => i3.toJSON(e2))).replaceAll('"connectivity"', '"junctionJunctionConnectivity"'), gdbVersion: s2, moment: n2 };
}
async function p2(o, p3, m2) {
  const u = f2(o), l = { ...a2(p3), f: "json" }, y = s({ ...u.query, ...l }), d2 = i2(y, { ...m2, method: "post" }), f3 = `${u.path}/associations/query`, { data: g } = await U(f3, d2), j = c.fromJSON(g);
  return p3.types.includes("connectivity") && i(n.getLogger("esri/rest/networks/support/QueryAssociationsParameters"), "types", { replacement: "Please use 'junction-junction-connectivity' instead of 'connectivity'.", see: "https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-networks-support-QueryAssociationsParameters.html#types", version: "4.29", warnOnce: true }), j;
}
export {
  p2 as queryAssociations
};
//# sourceMappingURL=queryAssociations-Z5SQTA7X.js.map
