{
  "version": 3,
  "sources": ["../../@esri/calcite-components/node_modules/focus-trap/dist/focus-trap.esm.js", "../../@esri/calcite-components/dist/components/src/utils/focusTrapComponent.ts", "../../@esri/calcite-components/dist/components/src/components/functional/Heading.tsx", "../../@esri/calcite-components/dist/components/src/components/popover/PopoverManager.ts", "../../@esri/calcite-components/dist/components/src/components/popover/resources.ts", "../../@esri/calcite-components/dist/components/src/components/popover/popover.scss?tag=calcite-popover&encapsulation=shadow", "../../@esri/calcite-components/dist/components/src/components/popover/popover.tsx", "../../@esri/calcite-components/dist/components/src/utils/array.ts", "../../@esri/calcite-components/dist/components/src/components/action-menu/resources.ts", "../../@esri/calcite-components/dist/components/src/components/action-menu/action-menu.scss?tag=calcite-action-menu&encapsulation=shadow", "../../@esri/calcite-components/dist/components/src/components/action-menu/action-menu.tsx"],
  "sourcesContent": ["/*!\n* focus-trap 7.6.0\n* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE\n*/\nimport { isFocusable, tabbable, focusable, isTabbable, getTabIndex } from 'tabbable';\n\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\n\nvar activeFocusTraps = {\n  activateTrap: function activateTrap(trapStack, trap) {\n    if (trapStack.length > 0) {\n      var activeTrap = trapStack[trapStack.length - 1];\n      if (activeTrap !== trap) {\n        activeTrap.pause();\n      }\n    }\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex === -1) {\n      trapStack.push(trap);\n    } else {\n      // move this existing trap to the front of the queue\n      trapStack.splice(trapIndex, 1);\n      trapStack.push(trap);\n    }\n  },\n  deactivateTrap: function deactivateTrap(trapStack, trap) {\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex !== -1) {\n      trapStack.splice(trapIndex, 1);\n    }\n    if (trapStack.length > 0) {\n      trapStack[trapStack.length - 1].unpause();\n    }\n  }\n};\nvar isSelectableInput = function isSelectableInput(node) {\n  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';\n};\nvar isEscapeEvent = function isEscapeEvent(e) {\n  return (e === null || e === void 0 ? void 0 : e.key) === 'Escape' || (e === null || e === void 0 ? void 0 : e.key) === 'Esc' || (e === null || e === void 0 ? void 0 : e.keyCode) === 27;\n};\nvar isTabEvent = function isTabEvent(e) {\n  return (e === null || e === void 0 ? void 0 : e.key) === 'Tab' || (e === null || e === void 0 ? void 0 : e.keyCode) === 9;\n};\n\n// checks for TAB by default\nvar isKeyForward = function isKeyForward(e) {\n  return isTabEvent(e) && !e.shiftKey;\n};\n\n// checks for SHIFT+TAB by default\nvar isKeyBackward = function isKeyBackward(e) {\n  return isTabEvent(e) && e.shiftKey;\n};\nvar delay = function delay(fn) {\n  return setTimeout(fn, 0);\n};\n\n// Array.find/findIndex() are not supported on IE; this replicates enough\n//  of Array.findIndex() for our needs\nvar findIndex = function findIndex(arr, fn) {\n  var idx = -1;\n  arr.every(function (value, i) {\n    if (fn(value)) {\n      idx = i;\n      return false; // break\n    }\n    return true; // next\n  });\n  return idx;\n};\n\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\nvar valueOrHandler = function valueOrHandler(value) {\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n  return typeof value === 'function' ? value.apply(void 0, params) : value;\n};\nvar getActualTarget = function getActualTarget(event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function' ? event.composedPath()[0] : event.target;\n};\n\n// NOTE: this must be _outside_ `createFocusTrap()` to make sure all traps in this\n//  current instance use the same stack if `userOptions.trapStack` isn't specified\nvar internalTrapStack = [];\nvar createFocusTrap = function createFocusTrap(elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  var doc = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.document) || document;\n  var trapStack = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.trapStack) || internalTrapStack;\n  var config = _objectSpread2({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true,\n    isKeyForward: isKeyForward,\n    isKeyBackward: isKeyBackward\n  }, userOptions);\n  var state = {\n    // containers given to createFocusTrap()\n    // @type {Array<HTMLElement>}\n    containers: [],\n    // list of objects identifying tabbable nodes in `containers` in the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   tabbableNodes: Array<HTMLElement>, // empty if none\n    //   focusableNodes: Array<HTMLElement>, // empty if none\n    //   posTabIndexesFound: boolean,\n    //   firstTabbableNode: HTMLElement|undefined,\n    //   lastTabbableNode: HTMLElement|undefined,\n    //   firstDomTabbableNode: HTMLElement|undefined,\n    //   lastDomTabbableNode: HTMLElement|undefined,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    containerGroups: [],\n    // same order/length as `containers` list\n\n    // references to objects in `containerGroups`, but only those that actually have\n    //  tabbable nodes in them\n    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__\n    //  the same length\n    tabbableGroups: [],\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined,\n    // the most recent KeyboardEvent for the configured nav key (typically [SHIFT+]TAB), if any\n    recentNavEvent: undefined\n  };\n  var trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  /**\n   * Gets a configuration option value.\n   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,\n   *  value will be taken from this object. Otherwise, value will be taken from base configuration.\n   * @param {string} optionName Name of the option whose value is sought.\n   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`\n   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.\n   */\n  var getOption = function getOption(configOverrideOptions, optionName, configOptionName) {\n    return configOverrideOptions && configOverrideOptions[optionName] !== undefined ? configOverrideOptions[optionName] : config[configOptionName || optionName];\n  };\n\n  /**\n   * Finds the index of the container that contains the element.\n   * @param {HTMLElement} element\n   * @param {Event} [event] If available, and `element` isn't directly found in any container,\n   *  the event's composed path is used to see if includes any known trap containers in the\n   *  case where the element is inside a Shadow DOM.\n   * @returns {number} Index of the container in either `state.containers` or\n   *  `state.containerGroups` (the order/length of these lists are the same); -1\n   *  if the element isn't found.\n   */\n  var findContainerIndex = function findContainerIndex(element, event) {\n    var composedPath = typeof (event === null || event === void 0 ? void 0 : event.composedPath) === 'function' ? event.composedPath() : undefined;\n    // NOTE: search `containerGroups` because it's possible a group contains no tabbable\n    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)\n    //  and we still need to find the element in there\n    return state.containerGroups.findIndex(function (_ref) {\n      var container = _ref.container,\n        tabbableNodes = _ref.tabbableNodes;\n      return container.contains(element) || ( // fall back to explicit tabbable search which will take into consideration any\n      //  web components if the `tabbableOptions.getShadowRoot` option was used for\n      //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't\n      //  look inside web components even if open)\n      composedPath === null || composedPath === void 0 ? void 0 : composedPath.includes(container)) || tabbableNodes.find(function (node) {\n        return node === element;\n      });\n    });\n  };\n\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @returns {undefined | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `false` if the option\n   *  resolved to `false` (node explicitly not given); otherwise, the resolved\n   *  DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node.\n   */\n  var getNodeForOption = function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    if (typeof optionValue === 'function') {\n      for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        params[_key2 - 1] = arguments[_key2];\n      }\n      optionValue = optionValue.apply(void 0, params);\n    }\n    if (optionValue === true) {\n      optionValue = undefined; // use default value\n    }\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      }\n      // else, empty string (invalid), null (invalid), 0 (invalid)\n\n      throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n    }\n    var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue); // resolve to node, or null if fails\n      if (!node) {\n        throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n      }\n    }\n    return node;\n  };\n  var getInitialFocusNode = function getInitialFocusNode() {\n    var node = getNodeForOption('initialFocus');\n\n    // false explicitly indicates we want no initialFocus at all\n    if (node === false) {\n      return false;\n    }\n    if (node === undefined || !isFocusable(node, config.tabbableOptions)) {\n      // option not specified nor focusable: use fallback options\n      if (findContainerIndex(doc.activeElement) >= 0) {\n        node = doc.activeElement;\n      } else {\n        var firstTabbableGroup = state.tabbableGroups[0];\n        var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n\n        // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    }\n    if (!node) {\n      throw new Error('Your focus-trap needs to have at least one focusable element');\n    }\n    return node;\n  };\n  var updateTabbableNodes = function updateTabbableNodes() {\n    state.containerGroups = state.containers.map(function (container) {\n      var tabbableNodes = tabbable(container, config.tabbableOptions);\n\n      // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes\n      //  are a superset of tabbable nodes since nodes with negative `tabindex` attributes\n      //  are focusable but not tabbable\n      var focusableNodes = focusable(container, config.tabbableOptions);\n      var firstTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[0] : undefined;\n      var lastTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : undefined;\n      var firstDomTabbableNode = focusableNodes.find(function (node) {\n        return isTabbable(node);\n      });\n      var lastDomTabbableNode = focusableNodes.slice().reverse().find(function (node) {\n        return isTabbable(node);\n      });\n      var posTabIndexesFound = !!tabbableNodes.find(function (node) {\n        return getTabIndex(node) > 0;\n      });\n      return {\n        container: container,\n        tabbableNodes: tabbableNodes,\n        focusableNodes: focusableNodes,\n        /** True if at least one node with positive `tabindex` was found in this container. */\n        posTabIndexesFound: posTabIndexesFound,\n        /** First tabbable node in container, __tabindex__ order; `undefined` if none. */\n        firstTabbableNode: firstTabbableNode,\n        /** Last tabbable node in container, __tabindex__ order; `undefined` if none. */\n        lastTabbableNode: lastTabbableNode,\n        // NOTE: DOM order is NOT NECESSARILY \"document position\" order, but figuring that out\n        //  would require more than just https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n        //  because that API doesn't work with Shadow DOM as well as it should (@see\n        //  https://github.com/whatwg/dom/issues/320) and since this first/last is only needed, so far,\n        //  to address an edge case related to positive tabindex support, this seems like a much easier,\n        //  \"close enough most of the time\" alternative for positive tabindexes which should generally\n        //  be avoided anyway...\n        /** First tabbable node in container, __DOM__ order; `undefined` if none. */\n        firstDomTabbableNode: firstDomTabbableNode,\n        /** Last tabbable node in container, __DOM__ order; `undefined` if none. */\n        lastDomTabbableNode: lastDomTabbableNode,\n        /**\n         * Finds the __tabbable__ node that follows the given node in the specified direction,\n         *  in this container, if any.\n         * @param {HTMLElement} node\n         * @param {boolean} [forward] True if going in forward tab order; false if going\n         *  in reverse.\n         * @returns {HTMLElement|undefined} The next tabbable node, if any.\n         */\n        nextTabbableNode: function nextTabbableNode(node) {\n          var forward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n          var nodeIdx = tabbableNodes.indexOf(node);\n          if (nodeIdx < 0) {\n            // either not tabbable nor focusable, or was focused but not tabbable (negative tabindex):\n            //  since `node` should at least have been focusable, we assume that's the case and mimic\n            //  what browsers do, which is set focus to the next node in __document position order__,\n            //  regardless of positive tabindexes, if any -- and for reasons explained in the NOTE\n            //  above related to `firstDomTabbable` and `lastDomTabbable` properties, we fall back to\n            //  basic DOM order\n            if (forward) {\n              return focusableNodes.slice(focusableNodes.indexOf(node) + 1).find(function (el) {\n                return isTabbable(el);\n              });\n            }\n            return focusableNodes.slice(0, focusableNodes.indexOf(node)).reverse().find(function (el) {\n              return isTabbable(el);\n            });\n          }\n          return tabbableNodes[nodeIdx + (forward ? 1 : -1)];\n        }\n      };\n    });\n    state.tabbableGroups = state.containerGroups.filter(function (group) {\n      return group.tabbableNodes.length > 0;\n    });\n\n    // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n    if (state.tabbableGroups.length <= 0 && !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error('Your focus-trap must have at least one container with at least one tabbable node in it at all times');\n    }\n\n    // NOTE: Positive tabindexes are only properly supported in single-container traps because\n    //  doing it across multiple containers where tabindexes could be all over the place\n    //  would require Tabbable to support multiple containers, would require additional\n    //  specialized Shadow DOM support, and would require Tabbable's multi-container support\n    //  to look at those containers in document position order rather than user-provided\n    //  order (as they are treated in Focus-trap, for legacy reasons). See discussion on\n    //  https://github.com/focus-trap/focus-trap/issues/375 for more details.\n    if (state.containerGroups.find(function (g) {\n      return g.posTabIndexesFound;\n    }) && state.containerGroups.length > 1) {\n      throw new Error(\"At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.\");\n    }\n  };\n\n  /**\n   * Gets the current activeElement. If it's a web-component and has open shadow-root\n   * it will recursively search inside shadow roots for the \"true\" activeElement.\n   *\n   * @param {Document | ShadowRoot} el\n   *\n   * @returns {HTMLElement} The element that currently has the focus\n   **/\n  var _getActiveElement = function getActiveElement(el) {\n    var activeElement = el.activeElement;\n    if (!activeElement) {\n      return;\n    }\n    if (activeElement.shadowRoot && activeElement.shadowRoot.activeElement !== null) {\n      return _getActiveElement(activeElement.shadowRoot);\n    }\n    return activeElement;\n  };\n  var _tryFocus = function tryFocus(node) {\n    if (node === false) {\n      return;\n    }\n    if (node === _getActiveElement(document)) {\n      return;\n    }\n    if (!node || !node.focus) {\n      _tryFocus(getInitialFocusNode());\n      return;\n    }\n    node.focus({\n      preventScroll: !!config.preventScroll\n    });\n    // NOTE: focus() API does not trigger focusIn event so set MRU node manually\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n  var getReturnFocusNode = function getReturnFocusNode(previousActiveElement) {\n    var node = getNodeForOption('setReturnFocus', previousActiveElement);\n    return node ? node : node === false ? false : previousActiveElement;\n  };\n\n  /**\n   * Finds the next node (in either direction) where focus should move according to a\n   *  keyboard focus-in event.\n   * @param {Object} params\n   * @param {Node} [params.target] Known target __from which__ to navigate, if any.\n   * @param {KeyboardEvent|FocusEvent} [params.event] Event to use if `target` isn't known (event\n   *  will be used to determine the `target`). Ignored if `target` is specified.\n   * @param {boolean} [params.isBackward] True if focus should move backward.\n   * @returns {Node|undefined} The next node, or `undefined` if a next node couldn't be\n   *  determined given the current state of the trap.\n   */\n  var findNextNavNode = function findNextNavNode(_ref2) {\n    var target = _ref2.target,\n      event = _ref2.event,\n      _ref2$isBackward = _ref2.isBackward,\n      isBackward = _ref2$isBackward === void 0 ? false : _ref2$isBackward;\n    target = target || getActualTarget(event);\n    updateTabbableNodes();\n    var destinationNode = null;\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      var containerIndex = findContainerIndex(target, event);\n      var containerGroup = containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back into...\n        if (isBackward) {\n          // ...the last node in the last group\n          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (isBackward) {\n        // REVERSE\n\n        // is the target the first tabbable node in a group?\n        var startOfGroupIndex = findIndex(state.tabbableGroups, function (_ref3) {\n          var firstTabbableNode = _ref3.firstTabbableNode;\n          return target === firstTabbableNode;\n        });\n        if (startOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target, false))) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n          var destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = getTabIndex(target) >= 0 ? destinationGroup.lastTabbableNode : destinationGroup.lastDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target, false);\n        }\n      } else {\n        // FORWARD\n\n        // is the target the last tabbable node in a group?\n        var lastOfGroupIndex = findIndex(state.tabbableGroups, function (_ref4) {\n          var lastTabbableNode = _ref4.lastTabbableNode;\n          return target === lastTabbableNode;\n        });\n        if (lastOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target))) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];\n          destinationNode = getTabIndex(target) >= 0 ? _destinationGroup.firstTabbableNode : _destinationGroup.firstDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target);\n        }\n      }\n    } else {\n      // no groups available\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n    return destinationNode;\n  };\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  var checkPointerDown = function checkPointerDown(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target, e) >= 0) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked (and if not focusable, to \"nothing\"); by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node), whether the\n        //  outside click was on a focusable node or not\n        returnFocus: config.returnFocusOnDeactivate\n      });\n      return;\n    }\n\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    }\n\n    // otherwise, prevent the click\n    e.preventDefault();\n  };\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  // NOTE: the focusIn event is NOT cancelable, so if focus escapes, it may cause unexpected\n  //  scrolling if the node that got focused was out of view; there's nothing we can do to\n  //  prevent that from happening by the time we discover that focus escaped\n  var checkFocusIn = function checkFocusIn(event) {\n    var target = getActualTarget(event);\n    var targetContained = findContainerIndex(target, event) >= 0;\n\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      event.stopImmediatePropagation();\n\n      // focus will escape if the MRU node had a positive tab index and user tried to nav forward;\n      //  it will also escape if the MRU node had a 0 tab index and user tried to nav backward\n      //  toward a node with a positive tab index\n      var nextNode; // next node to focus, if we find one\n      var navAcrossContainers = true;\n      if (state.mostRecentlyFocusedNode) {\n        if (getTabIndex(state.mostRecentlyFocusedNode) > 0) {\n          // MRU container index must be >=0 otherwise we wouldn't have it as an MRU node...\n          var mruContainerIdx = findContainerIndex(state.mostRecentlyFocusedNode);\n          // there MAY not be any tabbable nodes in the container if there are at least 2 containers\n          //  and the MRU node is focusable but not tabbable (focus-trap requires at least 1 container\n          //  with at least one tabbable node in order to function, so this could be the other container\n          //  with nothing tabbable in it)\n          var tabbableNodes = state.containerGroups[mruContainerIdx].tabbableNodes;\n          if (tabbableNodes.length > 0) {\n            // MRU tab index MAY not be found if the MRU node is focusable but not tabbable\n            var mruTabIdx = tabbableNodes.findIndex(function (node) {\n              return node === state.mostRecentlyFocusedNode;\n            });\n            if (mruTabIdx >= 0) {\n              if (config.isKeyForward(state.recentNavEvent)) {\n                if (mruTabIdx + 1 < tabbableNodes.length) {\n                  nextNode = tabbableNodes[mruTabIdx + 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              } else {\n                if (mruTabIdx - 1 >= 0) {\n                  nextNode = tabbableNodes[mruTabIdx - 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              }\n              // else, don't find in container order without considering direction too\n            }\n          }\n          // else, no tabbable nodes in that container (which means we must have at least one other\n          //  container with at least one tabbable node in it, otherwise focus-trap would've thrown\n          //  an error the last time updateTabbableNodes() was run): find next node among all known\n          //  containers\n        } else {\n          // check to see if there's at least one tabbable node with a positive tab index inside\n          //  the trap because focus seems to escape when navigating backward from a tabbable node\n          //  with tabindex=0 when this is the case (instead of wrapping to the tabbable node with\n          //  the greatest positive tab index like it should)\n          if (!state.containerGroups.some(function (g) {\n            return g.tabbableNodes.some(function (n) {\n              return getTabIndex(n) > 0;\n            });\n          })) {\n            // no containers with tabbable nodes with positive tab indexes which means the focus\n            //  escaped for some other reason and we should just execute the fallback to the\n            //  MRU node or initial focus node, if any\n            navAcrossContainers = false;\n          }\n        }\n      } else {\n        // no MRU node means we're likely in some initial condition when the trap has just\n        //  been activated and initial focus hasn't been given yet, in which case we should\n        //  fall through to trying to focus the initial focus node, which is what should\n        //  happen below at this point in the logic\n        navAcrossContainers = false;\n      }\n      if (navAcrossContainers) {\n        nextNode = findNextNavNode({\n          // move FROM the MRU node, not event-related node (which will be the node that is\n          //  outside the trap causing the focus escape we're trying to fix)\n          target: state.mostRecentlyFocusedNode,\n          isBackward: config.isKeyBackward(state.recentNavEvent)\n        });\n      }\n      if (nextNode) {\n        _tryFocus(nextNode);\n      } else {\n        _tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n      }\n    }\n    state.recentNavEvent = undefined; // clear\n  };\n\n  // Hijack key nav events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  var checkKeyNav = function checkKeyNav(event) {\n    var isBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    state.recentNavEvent = event;\n    var destinationNode = findNextNavNode({\n      event: event,\n      isBackward: isBackward\n    });\n    if (destinationNode) {\n      if (isTabEvent(event)) {\n        // since tab natively moves focus, we wouldn't have a destination node unless we\n        //  were on the edge of a container and had to move to the next/previous edge, in\n        //  which case we want to prevent default to keep the browser from moving focus\n        //  to where it normally would\n        event.preventDefault();\n      }\n      _tryFocus(destinationNode);\n    }\n    // else, let the browser take care of [shift+]tab and move the focus\n  };\n  var checkTabKey = function checkTabKey(event) {\n    if (config.isKeyForward(event) || config.isKeyBackward(event)) {\n      checkKeyNav(event, config.isKeyBackward(event));\n    }\n  };\n\n  // we use a different event phase for the Escape key to allow canceling the event and checking for this in escapeDeactivates\n  var checkEscapeKey = function checkEscapeKey(event) {\n    if (isEscapeEvent(event) && valueOrHandler(config.escapeDeactivates, event) !== false) {\n      event.preventDefault();\n      trap.deactivate();\n    }\n  };\n  var checkClick = function checkClick(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target, e) >= 0) {\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n\n  //\n  // EVENT LISTENERS\n  //\n\n  var addListeners = function addListeners() {\n    if (!state.active) {\n      return;\n    }\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trapStack, trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function () {\n      _tryFocus(getInitialFocusNode());\n    }) : _tryFocus(getInitialFocusNode());\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkTabKey, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkEscapeKey);\n    return trap;\n  };\n  var removeListeners = function removeListeners() {\n    if (!state.active) {\n      return;\n    }\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkTabKey, true);\n    doc.removeEventListener('keydown', checkEscapeKey);\n    return trap;\n  };\n\n  //\n  // MUTATION OBSERVER\n  //\n\n  var checkDomRemoval = function checkDomRemoval(mutations) {\n    var isFocusedNodeRemoved = mutations.some(function (mutation) {\n      var removedNodes = Array.from(mutation.removedNodes);\n      return removedNodes.some(function (node) {\n        return node === state.mostRecentlyFocusedNode;\n      });\n    });\n\n    // If the currently focused is removed then browsers will move focus to the\n    // <body> element. If this happens, try to move focus back into the trap.\n    if (isFocusedNodeRemoved) {\n      _tryFocus(getInitialFocusNode());\n    }\n  };\n\n  // Use MutationObserver - if supported - to detect if focused node is removed\n  // from the DOM.\n  var mutationObserver = typeof window !== 'undefined' && 'MutationObserver' in window ? new MutationObserver(checkDomRemoval) : undefined;\n  var updateObservedNodes = function updateObservedNodes() {\n    if (!mutationObserver) {\n      return;\n    }\n    mutationObserver.disconnect();\n    if (state.active && !state.paused) {\n      state.containers.map(function (container) {\n        mutationObserver.observe(container, {\n          subtree: true,\n          childList: true\n        });\n      });\n    }\n  };\n\n  //\n  // TRAP DEFINITION\n  //\n\n  trap = {\n    get active() {\n      return state.active;\n    },\n    get paused() {\n      return state.paused;\n    },\n    activate: function activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n      var onActivate = getOption(activateOptions, 'onActivate');\n      var onPostActivate = getOption(activateOptions, 'onPostActivate');\n      var checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n      onActivate === null || onActivate === void 0 || onActivate();\n      var finishActivation = function finishActivation() {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n        addListeners();\n        updateObservedNodes();\n        onPostActivate === null || onPostActivate === void 0 || onPostActivate();\n      };\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);\n        return this;\n      }\n      finishActivation();\n      return this;\n    },\n    deactivate: function deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n      var options = _objectSpread2({\n        onDeactivate: config.onDeactivate,\n        onPostDeactivate: config.onPostDeactivate,\n        checkCanReturnFocus: config.checkCanReturnFocus\n      }, deactivateOptions);\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n      state.delayInitialFocusTimer = undefined;\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      updateObservedNodes();\n      activeFocusTraps.deactivateTrap(trapStack, trap);\n      var onDeactivate = getOption(options, 'onDeactivate');\n      var onPostDeactivate = getOption(options, 'onPostDeactivate');\n      var checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');\n      var returnFocus = getOption(options, 'returnFocus', 'returnFocusOnDeactivate');\n      onDeactivate === null || onDeactivate === void 0 || onDeactivate();\n      var finishDeactivation = function finishDeactivation() {\n        delay(function () {\n          if (returnFocus) {\n            _tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n          onPostDeactivate === null || onPostDeactivate === void 0 || onPostDeactivate();\n        });\n      };\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n      finishDeactivation();\n      return this;\n    },\n    pause: function pause(pauseOptions) {\n      if (state.paused || !state.active) {\n        return this;\n      }\n      var onPause = getOption(pauseOptions, 'onPause');\n      var onPostPause = getOption(pauseOptions, 'onPostPause');\n      state.paused = true;\n      onPause === null || onPause === void 0 || onPause();\n      removeListeners();\n      updateObservedNodes();\n      onPostPause === null || onPostPause === void 0 || onPostPause();\n      return this;\n    },\n    unpause: function unpause(unpauseOptions) {\n      if (!state.paused || !state.active) {\n        return this;\n      }\n      var onUnpause = getOption(unpauseOptions, 'onUnpause');\n      var onPostUnpause = getOption(unpauseOptions, 'onPostUnpause');\n      state.paused = false;\n      onUnpause === null || onUnpause === void 0 || onUnpause();\n      updateTabbableNodes();\n      addListeners();\n      updateObservedNodes();\n      onPostUnpause === null || onPostUnpause === void 0 || onPostUnpause();\n      return this;\n    },\n    updateContainerElements: function updateContainerElements(containerElements) {\n      var elementsAsArray = [].concat(containerElements).filter(Boolean);\n      state.containers = elementsAsArray.map(function (element) {\n        return typeof element === 'string' ? doc.querySelector(element) : element;\n      });\n      if (state.active) {\n        updateTabbableNodes();\n      }\n      updateObservedNodes();\n      return this;\n    }\n  };\n\n  // initialize container elements\n  trap.updateContainerElements(elements);\n  return trap;\n};\n\nexport { createFocusTrap };\n//# sourceMappingURL=focus-trap.esm.js.map\n", "import { createFocusTrap, FocusTrap as _FocusTrap, Options as FocusTrapOptions } from \"focus-trap\";\nimport { FocusableElement, focusElement, tabbableOptions } from \"./dom\";\nimport { focusTrapStack } from \"./config\";\n\n/**\n * Defines interface for components with a focus trap. Focusable content is required for components implementing focus trapping with this interface.\n */\nexport interface FocusTrapComponent {\n  /**\n   * The focus trap element.\n   */\n  el: HTMLElement;\n\n  /**\n   * When `true`, prevents focus trapping.\n   */\n  focusTrapDisabled?: boolean;\n\n  /**\n   * The focus trap instance.\n   */\n  focusTrap: FocusTrap;\n\n  /**\n   * Method to update the element(s) that are used within the FocusTrap component.\n   *\n   * This should be implemented for components that allow user content and/or have conditionally-rendered focusable elements within the trap.\n   */\n  updateFocusTrapElements?: () => Promise<void>;\n}\n\nexport type FocusTrap = _FocusTrap;\n\ninterface ConnectFocusTrapOptions {\n  /**\n   * This option allows the focus trap to be created on a different element that's not the host (e.g., a supporting popup component).\n   */\n  focusTrapEl?: HTMLElement;\n\n  /**\n   * This allows specifying overrides to ConnectFocusTrap options.\n   */\n  focusTrapOptions?: Omit<FocusTrapOptions, \"document\" | \"tabbableOptions\" | \"trapStack\">;\n}\n\n/**\n * Helper to set up the FocusTrap component.\n *\n * @param {FocusTrapComponent} component The FocusTrap component.\n * @param options\n */\nexport function connectFocusTrap(component: FocusTrapComponent, options?: ConnectFocusTrapOptions): void {\n  const { el } = component;\n  const focusTrapNode = options?.focusTrapEl || el;\n\n  if (!focusTrapNode) {\n    return;\n  }\n\n  const focusTrapOptions: FocusTrapOptions = {\n    clickOutsideDeactivates: true,\n    escapeDeactivates: false,\n    fallbackFocus: focusTrapNode,\n    setReturnFocus: (el) => {\n      focusElement(el as FocusableElement);\n      return false;\n    },\n    ...options?.focusTrapOptions,\n\n    // the following options are not overridable\n    document: el.ownerDocument,\n    tabbableOptions,\n    trapStack: focusTrapStack,\n  };\n\n  component.focusTrap = createFocusTrap(focusTrapNode, focusTrapOptions);\n}\n\n/**\n * Helper to activate the FocusTrap component.\n *\n * @param {FocusTrapComponent} component The FocusTrap component.\n * @param [options] The FocusTrap activate options.\n */\nexport function activateFocusTrap(\n  component: FocusTrapComponent,\n  options?: Parameters<_FocusTrap[\"activate\"]>[0],\n): void {\n  if (!component.focusTrapDisabled) {\n    component.focusTrap?.activate(options);\n  }\n}\n\n/**\n * Helper to deactivate the FocusTrap component.\n *\n * @param {FocusTrapComponent} component The FocusTrap component.\n * @param [options] The FocusTrap deactivate options.\n */\nexport function deactivateFocusTrap(\n  component: FocusTrapComponent,\n  options?: Parameters<_FocusTrap[\"deactivate\"]>[0],\n): void {\n  component.focusTrap?.deactivate(options);\n}\n\n/**\n * Helper to update the element(s) that are used within the FocusTrap component.\n *\n * @param {FocusTrapComponent} component The FocusTrap component.\n * @example\n * const modal = document.querySelector(\"calcite-modal\");\n * const input = document.createElement(\"calcite-input\");\n * content.appendChild(input);\n * await input.componentOnReady();\n * await modal.updateFocusTrapElements();\n * requestAnimationFrame(() => input.setFocus());\n */\nexport function updateFocusTrapElements(component: FocusTrapComponent): void {\n  component.focusTrap?.updateContainerElements(component.el);\n}\n", "import { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { JSXBase } from \"@stencil/core/internal\";\n\nexport type HeadingLevel = 1 | 2 | 3 | 4 | 5 | 6;\n\ninterface HeadingProps extends Pick<JSXBase.HTMLAttributes, \"class\" | \"key\"> {\n  level?: HeadingLevel;\n}\n\nexport function constrainHeadingLevel(level: number): HeadingLevel {\n  return Math.min(Math.max(Math.ceil(level), 1), 6) as HeadingLevel;\n}\n\nexport const Heading: FunctionalComponent<HeadingProps> = (props, children): VNode => {\n  const HeadingTag = props.level ? `h${props.level}` : \"div\";\n\n  delete props.level;\n\n  return (\n    <HeadingTag class={props.class} key={props.key}>\n      {children}\n    </HeadingTag>\n  );\n};\n", "import { ReferenceElement } from \"../../utils/floating-ui\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { isKeyboardTriggeredClick } from \"../../utils/dom\";\n\nexport default class PopoverManager {\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  private registeredElements = new Map<ReferenceElement, HTMLCalcitePopoverElement>();\n\n  private registeredElementCount = 0;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  registerElement(referenceEl: ReferenceElement, popover: HTMLCalcitePopoverElement): void {\n    this.registeredElementCount++;\n\n    this.registeredElements.set(referenceEl, popover);\n\n    if (this.registeredElementCount === 1) {\n      this.addListeners();\n    }\n  }\n\n  unregisterElement(referenceEl: ReferenceElement): void {\n    if (this.registeredElements.delete(referenceEl)) {\n      this.registeredElementCount--;\n    }\n\n    if (this.registeredElementCount === 0) {\n      this.removeListeners();\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private queryPopover = (composedPath: EventTarget[]): HTMLCalcitePopoverElement => {\n    const { registeredElements } = this;\n\n    const registeredElement = (composedPath as HTMLElement[]).find((pathEl) => registeredElements.has(pathEl));\n\n    return registeredElements.get(registeredElement);\n  };\n\n  private togglePopovers = (event: KeyboardEvent | PointerEvent): void => {\n    const composedPath = event.composedPath();\n    const togglePopover = this.queryPopover(composedPath);\n\n    if (togglePopover && !togglePopover.triggerDisabled) {\n      togglePopover.open = !togglePopover.open;\n    }\n\n    Array.from(this.registeredElements.values())\n      .filter(\n        (popover) => popover !== togglePopover && popover.autoClose && popover.open && !composedPath.includes(popover),\n      )\n      .forEach((popover) => (popover.open = false));\n  };\n\n  private closeAllPopovers(): void {\n    Array.from(this.registeredElements.values()).forEach((popover) => (popover.open = false));\n  }\n\n  private keyDownHandler = (event: KeyboardEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.key === \"Escape\") {\n      this.closeAllPopovers();\n    } else if (isActivationKey(event.key)) {\n      this.togglePopovers(event);\n    }\n  };\n\n  private clickHandler = (event: PointerEvent): void => {\n    if (isKeyboardTriggeredClick(event)) {\n      return;\n    }\n\n    this.togglePopovers(event);\n  };\n\n  private addListeners(): void {\n    window.addEventListener(\"click\", this.clickHandler);\n    window.addEventListener(\"keydown\", this.keyDownHandler);\n  }\n\n  private removeListeners(): void {\n    window.removeEventListener(\"click\", this.clickHandler);\n    window.removeEventListener(\"keydown\", this.keyDownHandler);\n  }\n}\n", "export const CSS = {\n  container: \"container\",\n  imageContainer: \"image-container\",\n  closeButtonContainer: \"close-button-container\",\n  closeButton: \"close-button\",\n  content: \"content\",\n  hasHeader: \"has-header\",\n  header: \"header\",\n  headerContainer: \"headerContainer\",\n  headerContent: \"header-content\",\n  heading: \"heading\",\n};\n\nexport const defaultPopoverPlacement = \"auto\";\nexport const ARIA_CONTROLS = \"aria-controls\";\nexport const ARIA_EXPANDED = \"aria-expanded\";\n", "/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-popover-background-color: Specifies the component's background color.\n * @prop --calcite-popover-border-color: Specifies the component's border color.\n * @prop --calcite-popover-corner-radius: Specifies the component's corner radius.\n * @prop --calcite-popover-text-color: Specifies the component's text color.\n * @prop --calcite-popover-z-index: Specifies the component's z-index value.\n */\n\n:host {\n  --calcite-floating-ui-z-index: var(--calcite-popover-z-index, theme(\"zIndex.popover\"));\n}\n\n@include floating-ui-host();\n@include floating-ui-arrow();\n\n:host([scale=\"s\"]) {\n  .heading {\n    @apply text-n1-wrap\n    px-3\n    py-2;\n  }\n}\n\n:host([scale=\"m\"]) {\n  .heading {\n    @apply text-0-wrap\n    px-4\n    py-3;\n  }\n}\n\n:host([scale=\"l\"]) {\n  .heading {\n    @apply text-1-wrap\n    px-5\n    py-4;\n  }\n}\n\n:host {\n  @apply pointer-events-none;\n}\n\n:host([open]) {\n  pointer-events: initial;\n}\n\n.calcite-floating-ui-anim {\n  @apply border\n    border-solid;\n\n  background-color: var(--calcite-popover-background-color, var(--calcite-color-foreground-1));\n  border-color: var(--calcite-popover-border-color, var(--calcite-color-border-3));\n  border-radius: var(--calcite-popover-corner-radius, var(--calcite-corner-radius-round));\n}\n\n.calcite-floating-ui-arrow {\n  fill: var(--calcite-popover-background-color, var(--calcite-color-foreground-1));\n}\n\n.calcite-floating-ui-arrow__stroke {\n  stroke: var(--calcite-popover-border-color, var(--calcite-color-border-3));\n}\n\n.header {\n  @apply flex\n    flex-auto\n    items-stretch\n    justify-start\n    border-0\n    border-b\n    border-solid;\n\n  border-block-end-color: var(--calcite-popover-border-color, var(--calcite-color-border-3));\n}\n\n.heading {\n  @apply word-break\n  m-0\n  block\n  flex-auto\n  self-center\n  whitespace-normal\n  font-medium;\n\n  color: var(--calcite-popover-text-color, var(--calcite-color-text-1));\n}\n\n.headerContainer {\n  @apply relative\n    flex\n    h-full\n    flex-row\n    flex-nowrap\n    rounded;\n  color: var(--calcite-popover-text-color, var(--calcite-color-text-1));\n\n  &.has-header {\n    @apply flex-col;\n  }\n}\n\n.content {\n  @apply word-break\n  flex\n  h-full\n  w-full\n  flex-col\n  flex-nowrap\n  self-center;\n}\n\n.close-button-container {\n  @apply flex overflow-hidden;\n  flex: 0 0 auto;\n  border-start-end-radius: var(--calcite-popover-corner-radius, var(--calcite-corner-radius-round));\n  border-end-end-radius: var(--calcite-popover-corner-radius, var(--calcite-corner-radius-round));\n  --calcite-action-corner-radius-start-end: var(--calcite-popover-corner-radius, var(--calcite-corner-radius-sharp));\n  --calcite-action-corner-radius-end-end: var(--calcite-popover-corner-radius, var(--calcite-corner-radius-sharp));\n}\n\n::slotted(calcite-panel),\n::slotted(calcite-flow) {\n  @apply h-full;\n}\n\n@include base-component();\n", "import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  connectFloatingUI,\n  defaultOffsetDistance,\n  disconnectFloatingUI,\n  filterValidFlipPlacements,\n  FlipPlacement,\n  FloatingCSS,\n  FloatingLayout,\n  FloatingUIComponent,\n  LogicalPlacement,\n  OverlayPositioning,\n  ReferenceElement,\n  reposition,\n} from \"../../utils/floating-ui\";\nimport {\n  activateFocusTrap,\n  connectFocusTrap,\n  deactivateFocusTrap,\n  FocusTrap,\n  FocusTrapComponent,\n  updateFocusTrapElements,\n} from \"../../utils/focusTrapComponent\";\nimport { focusFirstTabbable, queryElementRoots, toAriaBoolean } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { Heading, HeadingLevel } from \"../functional/Heading\";\nimport { Scale } from \"../interfaces\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { FloatingArrow } from \"../functional/FloatingArrow\";\nimport { getIconScale } from \"../../utils/component\";\nimport PopoverManager from \"./PopoverManager\";\nimport { PopoverMessages } from \"./assets/popover/t9n\";\nimport { ARIA_CONTROLS, ARIA_EXPANDED, CSS, defaultPopoverPlacement } from \"./resources\";\n\nconst manager = new PopoverManager();\n\n/**\n * @slot - A slot for adding custom content.\n */\n@Component({\n  tag: \"calcite-popover\",\n  styleUrl: \"popover.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Popover\n  implements\n    FloatingUIComponent,\n    OpenCloseComponent,\n    FocusTrapComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, clicking outside of the component automatically closes open `calcite-popover`s.\n   */\n  @Prop({ reflect: true }) autoClose = false;\n\n  /** When `true`, displays a close button within the component. */\n  @Prop({ reflect: true }) closable = false;\n\n  /**\n   * When `true`, prevents flipping the component's placement when overlapping its `referenceElement`.\n   */\n  @Prop({ reflect: true }) flipDisabled = false;\n\n  /**\n   * When `true`, prevents focus trapping.\n   */\n  @Prop({ reflect: true }) focusTrapDisabled = false;\n\n  @Watch(\"focusTrapDisabled\")\n  handleFocusTrapDisabled(focusTrapDisabled: boolean): void {\n    if (!this.open) {\n      return;\n    }\n\n    focusTrapDisabled ? deactivateFocusTrap(this) : activateFocusTrap(this);\n  }\n\n  /**\n   * When `true`, removes the caret pointer.\n   */\n  @Prop({ reflect: true }) pointerDisabled = false;\n\n  /**\n   * Specifies the component's fallback `placement` when it's initial or specified `placement` has insufficient space available.\n   */\n  @Prop() flipPlacements: FlipPlacement[];\n\n  @Watch(\"flipPlacements\")\n  flipPlacementsHandler(): void {\n    this.setFilteredPlacements();\n    this.reposition(true);\n  }\n\n  /**\n   * The component header text.\n   */\n  @Prop() heading: string;\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /** Accessible name for the component. */\n  @Prop() label!: string;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<PopoverMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: PopoverMessages;\n\n  /**\n   * Offsets the position of the popover away from the `referenceElement`.\n   *\n   * @default 6\n   */\n  @Prop({ reflect: true }) offsetDistance = defaultOffsetDistance;\n\n  @Watch(\"offsetDistance\")\n  offsetDistanceOffsetHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * Offsets the position of the component along the `referenceElement`.\n   */\n  @Prop({ reflect: true }) offsetSkidding = 0;\n\n  @Watch(\"offsetSkidding\")\n  offsetSkiddingHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * When `true`, displays and positions the component.\n   */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(): void {\n    onToggleOpenCloseComponent(this);\n    this.reposition(true);\n    this.setExpandedAttr();\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` value should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  @Watch(\"overlayPositioning\")\n  overlayPositioningHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * Determines where the component will be positioned relative to the `referenceElement`.\n   */\n  @Prop({ reflect: true }) placement: LogicalPlacement = defaultPopoverPlacement;\n\n  @Watch(\"placement\")\n  placementHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   *  The `referenceElement` used to position the component according to its `placement` value. Setting to an `HTMLElement` is preferred so the component does not need to query the DOM. However, a string `id` of the reference element can also be used.\n   */\n  @Prop() referenceElement!: ReferenceElement | string;\n\n  @Watch(\"referenceElement\")\n  referenceElementHandler(): void {\n    this.setUpReferenceElement();\n    this.reposition(true);\n  }\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * When `true`, disables automatically toggling the component when its `referenceElement` has been triggered.\n   *\n   * This property can be set to `true` to manage when the component is open.\n   */\n  @Prop({ reflect: true }) triggerDisabled = false;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalcitePopoverElement;\n\n  mutationObserver: MutationObserver = createObserver(\"mutation\", () =>\n    this.updateFocusTrapElements(),\n  );\n\n  filteredFlipPlacements: FlipPlacement[];\n\n  @State() effectiveLocale = \"\";\n\n  @State() floatingLayout: FloatingLayout = \"vertical\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() effectiveReferenceElement: ReferenceElement;\n\n  @State() defaultMessages: PopoverMessages;\n\n  arrowEl: SVGSVGElement;\n\n  closeButtonEl: HTMLCalciteActionElement;\n\n  guid = `calcite-popover-${guid()}`;\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLDivElement;\n\n  hasLoaded = false;\n\n  focusTrap: FocusTrap;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n    this.setFilteredPlacements();\n    connectLocalized(this);\n    connectMessages(this);\n    connectFocusTrap(this);\n\n    // we set up the ref element in the next frame to ensure PopoverManager\n    // event handlers are invoked after connect (mainly for `components` output target)\n    requestAnimationFrame(() => this.setUpReferenceElement(this.hasLoaded));\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    if (this.referenceElement && !this.effectiveReferenceElement) {\n      this.setUpReferenceElement();\n    }\n\n    if (this.open) {\n      onToggleOpenCloseComponent(this);\n    }\n    this.hasLoaded = true;\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n    this.removeReferences();\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectFloatingUI(this, this.effectiveReferenceElement, this.el);\n    deactivateFocusTrap(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calcitePopoverBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calcitePopoverClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calcitePopoverBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calcitePopoverOpen: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed\n   */\n  @Method()\n  async reposition(delayed = false): Promise<void> {\n    const {\n      el,\n      effectiveReferenceElement,\n      placement,\n      overlayPositioning,\n      flipDisabled,\n      filteredFlipPlacements,\n      offsetDistance,\n      offsetSkidding,\n      arrowEl,\n    } = this;\n    return reposition(\n      this,\n      {\n        floatingEl: el,\n        referenceEl: effectiveReferenceElement,\n        overlayPositioning,\n        placement,\n        flipDisabled,\n        flipPlacements: filteredFlipPlacements,\n        offsetDistance,\n        offsetSkidding,\n        arrowEl,\n        type: \"popover\",\n      },\n      delayed,\n    );\n  }\n\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    forceUpdate(this.el);\n    focusFirstTabbable(this.el);\n  }\n\n  /**\n   * Updates the element(s) that are used within the focus-trap of the component.\n   */\n  @Method()\n  async updateFocusTrapElements(): Promise<void> {\n    updateFocusTrapElements(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private setTransitionEl = (el: HTMLDivElement): void => {\n    this.transitionEl = el;\n  };\n\n  setFilteredPlacements = (): void => {\n    const { el, flipPlacements } = this;\n\n    this.filteredFlipPlacements = flipPlacements\n      ? filterValidFlipPlacements(flipPlacements, el)\n      : null;\n  };\n\n  setUpReferenceElement = (warn = true): void => {\n    this.removeReferences();\n    this.effectiveReferenceElement = this.getReferenceElement();\n    connectFloatingUI(this, this.effectiveReferenceElement, this.el);\n\n    const { el, referenceElement, effectiveReferenceElement } = this;\n    if (warn && referenceElement && !effectiveReferenceElement) {\n      console.warn(`${el.tagName}: reference-element id \"${referenceElement}\" was not found.`, {\n        el,\n      });\n    }\n\n    this.addReferences();\n  };\n\n  getId = (): string => {\n    return this.el.id || this.guid;\n  };\n\n  setExpandedAttr = (): void => {\n    const { effectiveReferenceElement, open } = this;\n\n    if (!effectiveReferenceElement) {\n      return;\n    }\n\n    if (\"setAttribute\" in effectiveReferenceElement) {\n      effectiveReferenceElement.setAttribute(ARIA_EXPANDED, toAriaBoolean(open));\n    }\n  };\n\n  addReferences = (): void => {\n    const { effectiveReferenceElement } = this;\n\n    if (!effectiveReferenceElement) {\n      return;\n    }\n\n    const id = this.getId();\n\n    if (\"setAttribute\" in effectiveReferenceElement) {\n      effectiveReferenceElement.setAttribute(ARIA_CONTROLS, id);\n    }\n\n    manager.registerElement(effectiveReferenceElement, this.el);\n    this.setExpandedAttr();\n  };\n\n  removeReferences = (): void => {\n    const { effectiveReferenceElement } = this;\n\n    if (!effectiveReferenceElement) {\n      return;\n    }\n\n    if (\"removeAttribute\" in effectiveReferenceElement) {\n      effectiveReferenceElement.removeAttribute(ARIA_CONTROLS);\n      effectiveReferenceElement.removeAttribute(ARIA_EXPANDED);\n    }\n\n    manager.unregisterElement(effectiveReferenceElement);\n  };\n\n  getReferenceElement(): ReferenceElement {\n    const { referenceElement, el } = this;\n\n    return (\n      (typeof referenceElement === \"string\"\n        ? queryElementRoots(el, { id: referenceElement })\n        : referenceElement) || null\n    );\n  }\n\n  hide = (): void => {\n    this.open = false;\n  };\n\n  onBeforeOpen(): void {\n    this.calcitePopoverBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.calcitePopoverOpen.emit();\n    activateFocusTrap(this);\n  }\n\n  onBeforeClose(): void {\n    this.calcitePopoverBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calcitePopoverClose.emit();\n    deactivateFocusTrap(this);\n  }\n\n  storeArrowEl = (el: SVGSVGElement): void => {\n    this.arrowEl = el;\n    this.reposition(true);\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderCloseButton(): VNode {\n    const { messages, closable } = this;\n    return closable ? (\n      <div class={CSS.closeButtonContainer} key={CSS.closeButtonContainer}>\n        <calcite-action\n          appearance=\"transparent\"\n          class={CSS.closeButton}\n          onClick={this.hide}\n          ref={(closeButtonEl) => (this.closeButtonEl = closeButtonEl)}\n          scale={this.scale}\n          text={messages.close}\n        >\n          <calcite-icon icon=\"x\" scale={getIconScale(this.scale)} />\n        </calcite-action>\n      </div>\n    ) : null;\n  }\n\n  renderHeader(): VNode {\n    const { heading, headingLevel } = this;\n    const headingNode = heading ? (\n      <Heading class={CSS.heading} level={headingLevel}>\n        {heading}\n      </Heading>\n    ) : null;\n\n    return headingNode ? (\n      <div class={CSS.header} key={CSS.header}>\n        {headingNode}\n        {this.renderCloseButton()}\n      </div>\n    ) : null;\n  }\n\n  render(): VNode {\n    const { effectiveReferenceElement, heading, label, open, pointerDisabled, floatingLayout } =\n      this;\n    const displayed = effectiveReferenceElement && open;\n    const hidden = !displayed;\n    const arrowNode = !pointerDisabled ? (\n      <FloatingArrow floatingLayout={floatingLayout} key=\"floating-arrow\" ref={this.storeArrowEl} />\n    ) : null;\n\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(hidden)}\n        aria-label={label}\n        aria-live=\"polite\"\n        calcite-hydrated-hidden={hidden}\n        id={this.getId()}\n        role=\"dialog\"\n      >\n        <div\n          class={{\n            [CSS.container]: true,\n            [FloatingCSS.animation]: true,\n            [FloatingCSS.animationActive]: displayed,\n          }}\n          ref={this.setTransitionEl}\n        >\n          {arrowNode}\n          <div\n            class={{\n              [CSS.hasHeader]: !!heading,\n              [CSS.headerContainer]: true,\n            }}\n          >\n            {this.renderHeader()}\n            <div class={CSS.content}>\n              <slot />\n            </div>\n            {!heading ? this.renderCloseButton() : null}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n", "export function getRoundRobinIndex(index: number, total: number): number {\n  return (index + total) % total;\n}\n", "export const CSS = {\n  menu: \"menu\",\n  defaultTrigger: \"default-trigger\",\n};\n\nexport const SLOTS = {\n  tooltip: \"tooltip\",\n  trigger: \"trigger\",\n};\n\nexport const ICONS = {\n  menu: \"ellipsis\",\n} as const;\n\nexport const activeAttr = \"data-active\";\n", "/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-action-menu-items-space: Specifies the space between actions in the menu.\n *\n */\n\n:host {\n  @apply text-1\n  box-border\n  flex\n  flex-col;\n}\n\n::slotted(calcite-action-group:not(:last-of-type)) {\n  border-block-end-width: var(--calcite-border-width-sm);\n}\n\n.default-trigger {\n  @apply relative\n  h-full\n  flex-initial\n  self-stretch;\n}\n\n@include slotted(\"trigger\", \"calcite-action\") {\n  @apply relative\n  h-full\n  flex-initial\n  self-stretch;\n}\n\n.menu {\n  @apply flex\n  flex-col\n  flex-nowrap\n  outline-none\n  overflow-y-auto\n  overflow-x-hidden\n  max-h-menu;\n  gap: var(--calcite-action-menu-items-space, 0);\n}\n\n@include base-component();\n", "import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  Watch,\n} from \"@stencil/core\";\nimport { Fragment, VNode } from \"@stencil/core/internal\";\nimport { getRoundRobinIndex } from \"../../utils/array\";\nimport { focusElement, toAriaBoolean } from \"../../utils/dom\";\nimport { FlipPlacement, LogicalPlacement, OverlayPositioning } from \"../../utils/floating-ui\";\nimport { guid } from \"../../utils/guid\";\nimport { isActivationKey } from \"../../utils/key\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { Appearance, Scale } from \"../interfaces\";\nimport { activeAttr, CSS, ICONS, SLOTS } from \"./resources\";\n\nconst SUPPORTED_MENU_NAV_KEYS = [\"ArrowUp\", \"ArrowDown\", \"End\", \"Home\"];\n\n/**\n * @slot - A slot for adding `calcite-action`s.\n * @slot trigger - A slot for adding a `calcite-action` to trigger opening the menu.\n * @slot tooltip - A slot for adding an tooltip for the menu.\n */\n@Component({\n  tag: \"calcite-action-menu\",\n  styleUrl: \"action-menu.scss\",\n  shadow: true,\n})\nexport class ActionMenu implements LoadableComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.connectMenuButtonEl();\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    this.disconnectMenuButtonEl();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /** Specifies the appearance of the component. */\n  @Prop({ reflect: true }) appearance: Extract<\"solid\" | \"transparent\", Appearance> = \"solid\";\n\n  /**\n   * When `true`, the component is expanded.\n   */\n  @Prop({ reflect: true }) expanded = false;\n\n  @Watch(\"expanded\")\n  expandedHandler(): void {\n    this.open = false;\n    this.setTooltipReferenceElement();\n  }\n\n  /**\n   * Specifies the component's fallback slotted content `placement` when it's initial or specified `placement` has insufficient space available.\n   */\n  @Prop() flipPlacements: FlipPlacement[];\n\n  /**\n   *  Specifies the text string for the component.\n   */\n  @Prop() label!: string;\n\n  /**\n   * When `true`, the component is open.\n   */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(open: boolean): void {\n    this.activeMenuItemIndex = this.open ? 0 : -1;\n    if (this.menuButtonEl) {\n      this.menuButtonEl.active = open;\n    }\n    this.calciteActionMenuOpen.emit();\n\n    this.setTooltipReferenceElement();\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  /**\n   * Determines where the component will be positioned relative to the `referenceElement`.\n   */\n  @Prop({ reflect: true }) placement: LogicalPlacement = \"auto\";\n\n  /**\n   * Specifies the size of the component's trigger `calcite-action`.\n   */\n  @Prop({ reflect: true }) scale: Scale;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the `open` property is toggled.\n   *\n   */\n  @Event({ cancelable: false }) calciteActionMenuOpen: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteActionMenuElement;\n\n  @State() menuButtonEl: HTMLCalciteActionElement;\n\n  slottedMenuButtonEl: HTMLCalciteActionElement;\n\n  defaultMenuButtonEl: HTMLCalciteActionElement;\n\n  actionElements: HTMLCalciteActionElement[] = [];\n\n  guid = `calcite-action-menu-${guid()}`;\n\n  menuId = `${this.guid}-menu`;\n\n  menuButtonId = `${this.guid}-menu-button`;\n\n  tooltipEl: HTMLCalciteTooltipElement;\n\n  @State() activeMenuItemIndex = -1;\n\n  @Watch(\"activeMenuItemIndex\")\n  activeMenuItemIndexHandler(): void {\n    this.updateActions(this.actionElements);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    return focusElement(this.menuButtonEl);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Component Methods\n  //\n  // --------------------------------------------------------------------------\n\n  connectMenuButtonEl = (): void => {\n    const { menuButtonId, menuId, open, label } = this;\n    const menuButtonEl = this.slottedMenuButtonEl || this.defaultMenuButtonEl;\n\n    if (this.menuButtonEl === menuButtonEl) {\n      return;\n    }\n\n    this.disconnectMenuButtonEl();\n\n    this.menuButtonEl = menuButtonEl;\n\n    this.setTooltipReferenceElement();\n\n    if (!menuButtonEl) {\n      return;\n    }\n\n    menuButtonEl.active = open;\n    menuButtonEl.setAttribute(\"aria-controls\", menuId);\n    menuButtonEl.setAttribute(\"aria-expanded\", toAriaBoolean(open));\n    menuButtonEl.setAttribute(\"aria-haspopup\", \"true\");\n\n    if (!menuButtonEl.id) {\n      menuButtonEl.id = menuButtonId;\n    }\n\n    if (!menuButtonEl.label) {\n      menuButtonEl.label = label;\n    }\n\n    if (!menuButtonEl.text) {\n      menuButtonEl.text = label;\n    }\n\n    menuButtonEl.addEventListener(\"click\", this.menuButtonClick);\n    menuButtonEl.addEventListener(\"keydown\", this.menuButtonKeyDown);\n  };\n\n  disconnectMenuButtonEl = (): void => {\n    const { menuButtonEl } = this;\n\n    if (!menuButtonEl) {\n      return;\n    }\n\n    menuButtonEl.removeEventListener(\"click\", this.menuButtonClick);\n    menuButtonEl.removeEventListener(\"keydown\", this.menuButtonKeyDown);\n  };\n\n  setMenuButtonEl = (event: Event): void => {\n    const actions = (event.target as HTMLSlotElement)\n      .assignedElements({\n        flatten: true,\n      })\n      .filter((el): el is HTMLCalciteActionElement => el?.matches(\"calcite-action\"));\n\n    this.slottedMenuButtonEl = actions[0];\n    this.connectMenuButtonEl();\n  };\n\n  setDefaultMenuButtonEl = (el: HTMLCalciteActionElement): void => {\n    this.defaultMenuButtonEl = el;\n    this.connectMenuButtonEl();\n  };\n\n  renderMenuButton(): VNode {\n    const { appearance, label, scale, expanded } = this;\n\n    const menuButtonSlot = (\n      <slot name={SLOTS.trigger} onSlotchange={this.setMenuButtonEl}>\n        <calcite-action\n          appearance={appearance}\n          class={CSS.defaultTrigger}\n          icon={ICONS.menu}\n          ref={this.setDefaultMenuButtonEl}\n          scale={scale}\n          text={label}\n          textEnabled={expanded}\n        />\n      </slot>\n    );\n\n    return menuButtonSlot;\n  }\n\n  renderMenuItems(): VNode {\n    const {\n      actionElements,\n      activeMenuItemIndex,\n      open,\n      menuId,\n      menuButtonEl,\n      label,\n      placement,\n      overlayPositioning,\n      flipPlacements,\n    } = this;\n\n    const activeAction = actionElements[activeMenuItemIndex];\n    const activeDescendantId = activeAction?.id || null;\n\n    return (\n      <calcite-popover\n        autoClose={true}\n        flipPlacements={flipPlacements}\n        focusTrapDisabled={true}\n        label={label}\n        offsetDistance={0}\n        onCalcitePopoverClose={this.handlePopoverClose}\n        onCalcitePopoverOpen={this.handlePopoverOpen}\n        open={open}\n        overlayPositioning={overlayPositioning}\n        placement={placement}\n        pointerDisabled={true}\n        referenceElement={menuButtonEl}\n      >\n        <div\n          aria-activedescendant={activeDescendantId}\n          aria-labelledby={menuButtonEl?.id}\n          class={CSS.menu}\n          id={menuId}\n          onClick={this.handleCalciteActionClick}\n          role=\"menu\"\n          tabIndex={-1}\n        >\n          <slot onSlotchange={this.handleDefaultSlotChange} />\n        </div>\n      </calcite-popover>\n    );\n  }\n\n  render(): VNode {\n    return (\n      <Fragment>\n        {this.renderMenuButton()}\n        {this.renderMenuItems()}\n        <slot name={SLOTS.tooltip} onSlotchange={this.updateTooltip} />\n      </Fragment>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  handleCalciteActionClick = (): void => {\n    this.open = false;\n    this.setFocus();\n  };\n\n  private menuButtonClick = (): void => {\n    this.toggleOpen();\n  };\n\n  updateTooltip = (event: Event): void => {\n    const tooltips = (event.target as HTMLSlotElement)\n      .assignedElements({\n        flatten: true,\n      })\n      .filter((el): el is HTMLCalciteTooltipElement => el?.matches(\"calcite-tooltip\"));\n\n    this.tooltipEl = tooltips[0];\n    this.setTooltipReferenceElement();\n  };\n\n  setTooltipReferenceElement = (): void => {\n    const { tooltipEl, expanded, menuButtonEl, open } = this;\n\n    if (tooltipEl) {\n      tooltipEl.referenceElement = !expanded && !open ? menuButtonEl : null;\n    }\n  };\n\n  updateAction = (action: HTMLCalciteActionElement, index: number): void => {\n    const { guid, activeMenuItemIndex } = this;\n    const id = `${guid}-action-${index}`;\n\n    action.tabIndex = -1;\n    action.setAttribute(\"role\", \"menuitem\");\n\n    if (!action.id) {\n      action.id = id;\n    }\n\n    // data attribute is used to style the \"activeMenuItemIndex\" action using token focus styling.\n    action.toggleAttribute(activeAttr, index === activeMenuItemIndex);\n  };\n\n  updateActions = (actions: HTMLCalciteActionElement[]): void => {\n    actions?.forEach(this.updateAction);\n  };\n\n  handleDefaultSlotChange = (event: Event): void => {\n    const actions = (event.target as HTMLSlotElement)\n      .assignedElements({\n        flatten: true,\n      })\n      .reduce<HTMLCalciteActionElement[]>((previousValue, currentValue) => {\n        if (currentValue?.matches(\"calcite-action\")) {\n          previousValue.push(currentValue as HTMLCalciteActionElement);\n          return previousValue;\n        }\n\n        if (currentValue?.matches(\"calcite-action-group\")) {\n          return previousValue.concat(Array.from(currentValue.querySelectorAll(\"calcite-action\")));\n        }\n\n        return previousValue;\n      }, []);\n\n    this.actionElements = actions.filter((action) => !action.disabled && !action.hidden);\n  };\n\n  isValidKey(key: string, supportedKeys: string[]): boolean {\n    return !!supportedKeys.find((k) => k === key);\n  }\n\n  menuButtonKeyDown = (event: KeyboardEvent): void => {\n    const { key } = event;\n    const { actionElements, activeMenuItemIndex, open } = this;\n\n    if (!actionElements.length) {\n      return;\n    }\n\n    if (isActivationKey(key)) {\n      event.preventDefault();\n\n      if (!open) {\n        this.toggleOpen();\n        return;\n      }\n\n      const action = actionElements[activeMenuItemIndex];\n      action ? action.click() : this.toggleOpen(false);\n    }\n\n    if (key === \"Tab\") {\n      this.open = false;\n      return;\n    }\n\n    if (key === \"Escape\") {\n      this.toggleOpen(false);\n      event.preventDefault();\n      return;\n    }\n\n    this.handleActionNavigation(event, key, actionElements);\n  };\n\n  handleActionNavigation = (\n    event: KeyboardEvent,\n    key: string,\n    actions: HTMLCalciteActionElement[],\n  ): void => {\n    if (!this.isValidKey(key, SUPPORTED_MENU_NAV_KEYS)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (!this.open) {\n      this.toggleOpen();\n\n      if (key === \"Home\" || key === \"ArrowDown\") {\n        this.activeMenuItemIndex = 0;\n      }\n\n      if (key === \"End\" || key === \"ArrowUp\") {\n        this.activeMenuItemIndex = actions.length - 1;\n      }\n\n      return;\n    }\n\n    if (key === \"Home\") {\n      this.activeMenuItemIndex = 0;\n    }\n\n    if (key === \"End\") {\n      this.activeMenuItemIndex = actions.length - 1;\n    }\n\n    const currentIndex = this.activeMenuItemIndex;\n\n    if (key === \"ArrowUp\") {\n      this.activeMenuItemIndex = getRoundRobinIndex(Math.max(currentIndex - 1, -1), actions.length);\n    }\n\n    if (key === \"ArrowDown\") {\n      this.activeMenuItemIndex = getRoundRobinIndex(currentIndex + 1, actions.length);\n    }\n  };\n\n  toggleOpenEnd = (): void => {\n    this.setFocus();\n    this.el.removeEventListener(\"calcitePopoverOpen\", this.toggleOpenEnd);\n  };\n\n  toggleOpen = (value = !this.open): void => {\n    this.el.addEventListener(\"calcitePopoverOpen\", this.toggleOpenEnd);\n    this.open = value;\n  };\n\n  private handlePopoverOpen = (): void => {\n    this.open = true;\n  };\n\n  private handlePopoverClose = (): void => {\n    this.open = false;\n  };\n}\n"],
  "mappings": "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",
  "names": ["r", "isSelectableInput", "isEscapeEvent", "isTabEvent", "isKeyForward", "isKeyBackward", "delay", "findIndex", "valueOrHandler", "getActualTarget", "createFocusTrap", "getOption", "findContainerIndex", "getNodeForOption", "getInitialFocusNode", "updateTabbableNodes", "getReturnFocusNode", "findNextNavNode", "checkPointerDown", "checkFocusIn", "checkKeyNav", "checkTabKey", "checkEscapeKey", "checkClick", "addListeners", "removeListeners", "checkDomRemoval", "updateObservedNodes", "finishActivation", "finishDeactivation", "el", "Popover", "CSS", "ActionMenu", "guid"]
}
