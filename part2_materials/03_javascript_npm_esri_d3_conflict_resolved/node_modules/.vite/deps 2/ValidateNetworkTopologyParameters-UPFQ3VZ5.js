import {
  a as a2
} from "./chunk-A33GYYOL.js";
import "./chunk-SW4DFX7N.js";
import "./chunk-2PK57UYA.js";
import "./chunk-F26LCWNQ.js";
import "./chunk-VNRDIGVF.js";
import "./chunk-QRJFHPMB.js";
import "./chunk-G6REFQRQ.js";
import "./chunk-Z2DWZ5IF.js";
import {
  w
} from "./chunk-A3J7W53Y.js";
import "./chunk-HLF5XJSV.js";
import {
  g,
  r as r2
} from "./chunk-L6D73M4D.js";
import "./chunk-H6RIEXAG.js";
import "./chunk-6YWQXXBX.js";
import "./chunk-DRBJFCLQ.js";
import "./chunk-7O7KFKCG.js";
import "./chunk-E2X3OBBC.js";
import "./chunk-X7VTUWCX.js";
import "./chunk-QS62R4CH.js";
import {
  f
} from "./chunk-VU6O6TFT.js";
import {
  m
} from "./chunk-GD4XDYZL.js";
import {
  a4 as a,
  h
} from "./chunk-33ECLFFF.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import "./chunk-L6CCOEVE.js";
import "./chunk-GRW2QIBT.js";
import "./chunk-R2PAF6JT.js";
import "./chunk-6WE7SNQY.js";
import "./chunk-PKLD5YJF.js";
import "./chunk-XKQWTZMW.js";
import "./chunk-A4OFG7JM.js";

// node_modules/@arcgis/core/rest/networks/support/ValidateNetworkTopologyParameters.js
var n;
var c = n = class extends f {
  static from(t) {
    return h(n, t);
  }
  constructor(t) {
    super(t), this.gdbVersion = null, this.sessionID = null, this.validationType = null, this.validateArea = null, this.validationSet = null, this.outSpatialReference = null;
  }
  writeOutSR(t, o, e) {
    if (null != t) {
      const { wkid: r3, latestWkid: s, wkt: i, wkt2: p } = t;
      o[e] = JSON.stringify({ wkid: r3 ?? void 0, latestWkid: s ?? void 0, wkt: i ?? void 0, wkt2: p ?? void 0 });
    }
  }
};
r([m({ type: String, json: { write: true } })], c.prototype, "gdbVersion", void 0), r([m({ type: String, json: { write: true } })], c.prototype, "sessionID", void 0), r([m({ type: a2.apiValues, json: { type: a2.jsonValues, read: a2.read, write: a2.write } })], c.prototype, "validationType", void 0), r([m({ type: w, json: { write: true } })], c.prototype, "validateArea", void 0), r([m({ type: [Object], json: { write: true } })], c.prototype, "validationSet", void 0), r([m({ type: g, json: { write: { allowNull: true, target: "outSR" } } })], c.prototype, "outSpatialReference", void 0), r([r2("outSpatialReference")], c.prototype, "writeOutSR", null), c = n = r([a("esri.rest.networks.support.ValidateNetworkTopologyParameters")], c);
var d = c;
export {
  d as default
};
//# sourceMappingURL=ValidateNetworkTopologyParameters-UPFQ3VZ5.js.map
