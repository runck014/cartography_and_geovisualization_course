import {
  c,
  i,
  m,
  n,
  q
} from "./chunk-ATEWWVHG.js";
import {
  B,
  Ge,
  _,
  q as q2
} from "./chunk-6D5XULXX.js";

// node_modules/@arcgis/core/support/popupUtils.js
function p({ displayField: t, editFieldsInfo: n2, fields: i2, objectIdField: o, title: s }, r) {
  if (!i2) return null;
  const l = F({ editFieldsInfo: n2, fields: i2, objectIdField: o }, r);
  if (!l.length) return null;
  const a = I({ titleBase: s, fields: i2, displayField: t }), p2 = j();
  return new q({ title: a, content: p2, fieldInfos: l });
}
function c2(e) {
  var _a;
  const { title: t, graphic: n2 } = e ?? {}, { attributes: i2, sourceLayer: o } = n2 ?? {}, s = o && "displayField" in o ? o.displayField : null, r = s ? i2 == null ? void 0 : i2[s] : null, l = (_a = n2 == null ? void 0 : n2.getObjectId()) == null ? void 0 : _a.toString();
  return t || r || l || "";
}
var d = (e, t) => t.visibleFieldNames ? t.visibleFieldNames.has(e.name) : B(e, t);
function f({ fields: e, ignoreFieldTypes: t, sortDisabled: n2 }) {
  const i2 = e;
  return t && (e = e.filter((e2) => !t.includes(e2.type))), e === i2 && (e = e.slice()), true !== n2 && e.sort(m2), e;
}
function m2(e, t) {
  return "oid" === e.type ? -1 : "oid" === t.type ? 1 : v(e) ? -1 : v(t) ? 1 : (e.alias || e.name).toLocaleLowerCase().localeCompare((t.alias || t.name).toLocaleLowerCase());
}
function F(e, n2) {
  const i2 = n2 == null ? void 0 : n2.visibleFieldNames;
  return f({ fields: e.fields ?? [], ignoreFieldTypes: (n2 == null ? void 0 : n2.ignoreFieldTypes) || S, sortDisabled: n2 == null ? void 0 : n2.sortDisabled }).map((n3) => new n({ fieldName: n3.name, isEditable: q2(n3, e), label: n3.alias, format: y(n3), visible: d(n3, { ...e, visibleFieldNames: i2 }) }));
}
function y(e) {
  switch (e.type) {
    case "small-integer":
    case "integer":
    case "single":
      return new m({ digitSeparator: true, places: 0 });
    case "double":
      return new m({ digitSeparator: true, places: 2 });
    case "string":
      return Ge(e.name) ? new m({ digitSeparator: true, places: 0 }) : void 0;
    default:
      return;
  }
}
function j() {
  return [new c(), new i()];
}
function I(e) {
  const t = _(e), { titleBase: n2 } = e;
  return t ? `${n2}: {${t.trim()}}` : n2 ?? "";
}
function v(e) {
  var _a;
  if ("name" === (e.name && e.name.toLowerCase())) return true;
  const t = (_a = e.alias) == null ? void 0 : _a.toLowerCase();
  return "name" === t;
}
var S = ["geometry", "blob", "raster", "guid", "xml"];

export {
  p,
  c2 as c
};
//# sourceMappingURL=chunk-7ZA6GWGF.js.map
