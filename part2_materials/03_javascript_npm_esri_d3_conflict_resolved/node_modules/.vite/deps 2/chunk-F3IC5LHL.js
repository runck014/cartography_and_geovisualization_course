// node_modules/@arcgis/core/layers/support/infoFor3D.js
var t = [["binary", "application/octet-stream", "bin", ""]];
function n(t2, n2) {
  return null != C(n2.name, (t2 == null ? void 0 : t2.supportedFormats) ?? []);
}
function r(t2, n2) {
  if (!t2) return false;
  const r2 = c(n2, t2.supportedFormats ?? []);
  return null != r2 && t2.editFormats.includes(r2);
}
function u(t2, n2) {
  return L(b(t2, n2));
}
function i(t2, n2) {
  return L(C(t2, n2));
}
function s(t2, n2) {
  return g(w(t2, n2));
}
function c(t2, n2) {
  return i(t2.name, n2) ?? u(t2.type, n2);
}
function p(t2, n2, r2) {
  return u(t2, r2) ?? i(n2, r2);
}
function a({ supportedFormats: t2 }) {
  return p("model/gltf-binary", "glb", t2);
}
function f(t2) {
  const n2 = a(t2);
  return null != n2 && t2.editFormats.includes(n2);
}
function d({ supportedFormats: t2 }) {
  return p("model/gltf+json", "gltf", t2);
}
function l({ supportedFormats: t2 }) {
  return p("application/esri3do-SR_world", "wld", t2);
}
function m({ supportedFormats: t2 }) {
  return p("application/esri3do-SR_prj", "prj", t2);
}
function F(n2) {
  return [...t, ...n2];
}
function w(t2, n2) {
  return F(n2).find((n3) => L(n3) === t2);
}
function b(t2, n2) {
  const r2 = t2.toLowerCase();
  return F(n2).find((t3) => g(t3) === r2);
}
function C(t2, n2) {
  const r2 = t2.toLowerCase();
  return F(n2).find((t3) => j(t3).some((t4) => r2.endsWith(t4)));
}
function L(t2) {
  return t2 == null ? void 0 : t2[0];
}
function g(t2) {
  return t2 == null ? void 0 : t2[1].toLowerCase();
}
function j(t2) {
  return (t2 == null ? void 0 : t2[2].split(",").map((t3) => t3.toLowerCase())) ?? [];
}
function M(t2) {
  var _a;
  return (_a = t2.tables) == null ? void 0 : _a.find((t3) => "assetMaps" === t3.role);
}

export {
  n,
  r,
  u,
  s,
  c,
  p,
  a,
  f,
  d,
  l,
  m,
  M
};
//# sourceMappingURL=chunk-F3IC5LHL.js.map
