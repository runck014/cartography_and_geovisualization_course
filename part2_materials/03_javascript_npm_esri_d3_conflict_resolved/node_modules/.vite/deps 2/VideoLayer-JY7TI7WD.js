import {
  l as l2
} from "./chunk-HOPPBFCJ.js";
import {
  w as w2
} from "./chunk-VMQKPMJK.js";
import {
  e as e3,
  t as t3
} from "./chunk-NW7VXBHZ.js";
import {
  e,
  o as o2
} from "./chunk-UFFVFTYV.js";
import {
  i as i2,
  u
} from "./chunk-D6FJTDNK.js";
import {
  N,
  P as P2,
  c,
  q
} from "./chunk-RENLZYKC.js";
import {
  A
} from "./chunk-3GYJQZ7U.js";
import {
  e as e2
} from "./chunk-JU4Z6UVP.js";
import {
  l
} from "./chunk-YMJZWW2N.js";
import "./chunk-7Q4JSL7R.js";
import "./chunk-VBJTBJYL.js";
import {
  t as t2
} from "./chunk-ES2OYM5K.js";
import {
  y
} from "./chunk-OPBXQTOC.js";
import "./chunk-DKMSVKV3.js";
import "./chunk-YIIXBP6I.js";
import {
  S
} from "./chunk-LN6VH2LB.js";
import "./chunk-GZFJKWTS.js";
import {
  i
} from "./chunk-M5RSIRGD.js";
import "./chunk-SMFCDOAJ.js";
import {
  f as f2
} from "./chunk-2HEBE37N.js";
import "./chunk-5A4G4OVM.js";
import "./chunk-MGMVRMXQ.js";
import "./chunk-GNWAZIVF.js";
import "./chunk-2TEGRXBS.js";
import "./chunk-44C2A72D.js";
import "./chunk-YVSEBNS4.js";
import "./chunk-GGCWKF4X.js";
import "./chunk-6D5XULXX.js";
import "./chunk-445IB4DS.js";
import "./chunk-Y2XCZQML.js";
import "./chunk-SW4DFX7N.js";
import "./chunk-2PK57UYA.js";
import "./chunk-F26LCWNQ.js";
import {
  n as n2,
  r as r4
} from "./chunk-6Y2LNRVP.js";
import {
  d as d2,
  v2
} from "./chunk-VNRDIGVF.js";
import "./chunk-QRJFHPMB.js";
import "./chunk-G6REFQRQ.js";
import "./chunk-Z2DWZ5IF.js";
import {
  d as d3
} from "./chunk-TDZ623HP.js";
import "./chunk-UN4ISSP7.js";
import "./chunk-E2RPCJOE.js";
import {
  P,
  d,
  v
} from "./chunk-TKY5RBM3.js";
import "./chunk-NHJGPXZH.js";
import "./chunk-JS7R723S.js";
import "./chunk-SIQNRYEG.js";
import "./chunk-TTDEVHSF.js";
import "./chunk-QSRFVAIF.js";
import "./chunk-X6JBJVM2.js";
import "./chunk-Q7TEBZSN.js";
import "./chunk-CY5MS6DC.js";
import "./chunk-C6FFJ4QS.js";
import "./chunk-Q4Q32WYV.js";
import {
  j2 as j,
  w
} from "./chunk-A3J7W53Y.js";
import {
  o
} from "./chunk-HLF5XJSV.js";
import {
  g,
  r as r2
} from "./chunk-L6D73M4D.js";
import "./chunk-P5H5PJSC.js";
import "./chunk-H6RIEXAG.js";
import {
  n as n3
} from "./chunk-Y6AYXNMP.js";
import {
  r as r3
} from "./chunk-6YWQXXBX.js";
import {
  t
} from "./chunk-DRBJFCLQ.js";
import "./chunk-7O7KFKCG.js";
import "./chunk-E2X3OBBC.js";
import {
  U,
  m as m2
} from "./chunk-X7VTUWCX.js";
import "./chunk-QS62R4CH.js";
import {
  f
} from "./chunk-VU6O6TFT.js";
import {
  b2 as b,
  m
} from "./chunk-GD4XDYZL.js";
import {
  a4 as a
} from "./chunk-33ECLFFF.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import "./chunk-L6CCOEVE.js";
import "./chunk-GRW2QIBT.js";
import "./chunk-R2PAF6JT.js";
import "./chunk-6WE7SNQY.js";
import {
  n2 as n,
  s2 as s
} from "./chunk-PKLD5YJF.js";
import "./chunk-XKQWTZMW.js";
import "./chunk-A4OFG7JM.js";

// node_modules/@arcgis/core/layers/support/PlaybackInfo.js
var s2 = class extends i(f) {
  constructor(o4) {
    super(o4), this.framerate = null, this.containerFormat = null, this.gop = null, this.aspectRatio = null, this.klv = null;
  }
};
r([m({ type: String })], s2.prototype, "framerate", void 0), r([m({ type: String })], s2.prototype, "containerFormat", void 0), r([m({ type: Number })], s2.prototype, "gop", void 0), r([m({ type: String })], s2.prototype, "aspectRatio", void 0), r([m({ type: Object })], s2.prototype, "klv", void 0), s2 = r([a("esri.layers.support.PlaybackInfo")], s2);
var a2 = s2;

// node_modules/@arcgis/core/layers/support/TelemetryData.js
var l3 = class extends i(f) {
  constructor(o4) {
    super(o4), this.frameCenter = null, this.frameOutline = null, this.lineOfSight = null, this.sensorLocation = null, this.sensorTrail = null;
  }
};
r([m({ type: j })], l3.prototype, "frameCenter", void 0), r([m({ type: v2 })], l3.prototype, "frameOutline", void 0), r([m({ type: d2 })], l3.prototype, "lineOfSight", void 0), r([m({ type: j })], l3.prototype, "sensorLocation", void 0), r([m({ type: d2 })], l3.prototype, "sensorTrail", void 0), l3 = r([a("esri.layers.support.TelemetryData")], l3);
var n4 = l3;

// node_modules/@arcgis/core/layers/support/VideoFrame.js
var l4 = class extends b {
  constructor() {
    super(...arguments), this.sourcePoint = null, this.mapPoint = null;
  }
};
function m3(o4) {
  return null != (o4 == null ? void 0 : o4.sourcePoint) && null != o4.mapPoint;
}
r([m()], l4.prototype, "sourcePoint", void 0), r([m({ type: j })], l4.prototype, "mapPoint", void 0), l4 = r([a("esri.layers.support.VideoFrame.ControlPoint")], l4);
var a3 = class extends i(f) {
  constructor(o4) {
    super(o4), this.frame = null, this.controlPoints = null;
  }
  readControlPoints(o4) {
    return o4.map((o5) => ({ sourcePoint: { x: o5.frameX, y: o5.frameY }, mapPoint: new j(o5.point) }));
  }
  writeControlPoints(o4, r5) {
    null != o4 && m3(o4[0]) && (r5.controlPoints = o4.map((o5) => {
      const r6 = o5.sourcePoint, t4 = o5.mapPoint;
      return { frameX: r6.x, frameY: r6.y, point: t4.toJSON() };
    }));
  }
};
r([m({ type: String })], a3.prototype, "frame", void 0), r([m({ type: [l4], json: { write: { allowNull: false, isRequired: true } } })], a3.prototype, "controlPoints", void 0), r([o("controlPoints")], a3.prototype, "readControlPoints", null), r([r2("controlPoints")], a3.prototype, "writeControlPoints", null), a3 = r([a("esri.layers.support.VideoFrame")], a3);
var u2 = a3;

// node_modules/@arcgis/core/core/XHRAdapter.js
var s3 = class extends EventTarget {
  constructor() {
    super(...arguments), this._readyState = 0, this._responseType = "", this.timeout = 0, this._withCredentials = false, this.onabort = null, this.onerror = null, this.onload = null, this.onloadend = null, this.onloadstart = null, this.onprogress = null, this.ontimeout = null, this.onreadystatechange = null, this.UNSENT = 0, this.OPENED = 1, this.HEADERS_RECEIVED = 2, this.LOADING = 3, this.DONE = 4, this._abortController = null, this._error = null, this._options = {}, this._response = null, this._sendFlag = false, this._url = "";
  }
  get readyState() {
    return this._readyState;
  }
  get response() {
    return "" === this.responseType || "text" === this.responseType ? this.responseText : this.readyState !== this.DONE || this._error || !this._response ? null : this._response.data;
  }
  get responseText() {
    var _a2;
    return "" !== this.responseType && "text" !== this.responseType && this._throwDOMException(), this.readyState !== this.DONE ? "" : this._response ? this._response.data : null != ((_a2 = this._error) == null ? void 0 : _a2.raw) ? "string" == typeof this._error.raw ? this._error.raw : JSON.stringify(this._error.raw) : "";
  }
  get responseType() {
    return this._responseType;
  }
  set responseType(t4) {
    ("document" !== t4 || globalThis instanceof Window) && (this.readyState !== this.LOADING && this.readyState !== this.DONE || this._throwDOMException(), this._responseType = t4);
  }
  get responseURL() {
    var _a2;
    return ((_a2 = this._response || this._error) == null ? void 0 : _a2.url) ?? "";
  }
  get responseXML() {
    var _a2;
    return "" !== this.responseType && "document" !== this.responseType && this._throwDOMException(), this.readyState !== this.DONE ? null : ((_a2 = this._response) == null ? void 0 : _a2.data) ?? null;
  }
  get status() {
    var _a2;
    return ((_a2 = this._response || this._error) == null ? void 0 : _a2.httpStatus) ?? 0;
  }
  get statusText() {
    return "";
  }
  get upload() {
    return console.warn("upload not implemented"), null;
  }
  get withCredentials() {
    return this._withCredentials;
  }
  set withCredentials(t4) {
    this.readyState !== this.UNSENT && this.readyState !== this.OPENED && this._throwDOMException(), this._withCredentials = t4;
  }
  abort() {
    var _a2;
    this.readyState === this.OPENED && this._sendFlag || this.readyState === this.HEADERS_RECEIVED || this.readyState === this.LOADING ? (this._sendFlag = false, this._error = null, this._response = null, (_a2 = this._abortController) == null ? void 0 : _a2.abort(), this._updateReadyState(this.DONE), this._dispatchProgressEvent("abort"), this._dispatchProgressEvent("loadend")) : this.readyState === this.DONE && this._updateReadyState(this.UNSENT);
  }
  getAllResponseHeaders() {
    var _a2, _b;
    let t4 = "";
    const e9 = (_b = (_a2 = this._response || this._error) == null ? void 0 : _a2.getAllHeaders) == null ? void 0 : _b.call(_a2);
    if (e9) for (const [s5, r5] of e9) t4 += `${s5}: ${r5}\r
`;
    return t4;
  }
  getResponseHeader(t4) {
    var _a2, _b;
    return ((_b = (_a2 = this._response || this._error) == null ? void 0 : _a2.getHeader) == null ? void 0 : _b.call(_a2, t4)) ?? null;
  }
  open(t4, e9) {
    switch (this._sendFlag = false, this._options = {}, t4) {
      case "GET":
        this._options.method = "auto";
        break;
      case "POST":
        this._options.method = "post";
        break;
      case "HEAD":
        this._options.method = "head";
        break;
      case "DELETE":
        this._options.method = "delete";
        break;
      case "PUT":
        this._options.method = "put";
    }
    this._url = e9, this._error = null, this._response = null, this._abortController = new AbortController(), this._updateReadyState(this.OPENED);
  }
  overrideMimeType(t4) {
    throw new Error("overrideMimeType not implemented");
  }
  send(s5) {
    var _a2;
    (this.readyState !== this.OPENED || this._sendFlag) && this._throwDOMException(), this._sendFlag = true, this._updateReadyState(this.LOADING), this._dispatchProgressEvent("loadstart");
    const r5 = this._options;
    s5 instanceof URLSearchParams ? r5.body = s5.toString() : r5.body = s5, r5.responseType = "" === this.responseType ? "text" : "arraybuffer" === this.responseType ? "array-buffer" : this.responseType, r5.signal = (_a2 = this._abortController) == null ? void 0 : _a2.signal, this.timeout && (r5.timeout = this.timeout), this.withCredentials && (r5.withCredentials = true), U(this._url, r5).then((t4) => {
      this._response = t4, this._updateReadyState(this.DONE), this._dispatchProgressEvent("load");
    }).catch((t4) => {
      this._sendFlag && (this._error = t4.details, this._updateReadyState(this.DONE), m2(t4) ? this._dispatchProgressEvent("timeout") : "AbortError" === t4.name ? this._dispatchProgressEvent("abort") : this._dispatchProgressEvent("error"));
    }).finally(() => {
      this._sendFlag && this._dispatchProgressEvent("loadend");
    });
  }
  setRequestHeader(t4, e9) {
    var _a2;
    (this.readyState !== this.OPENED || this._sendFlag) && this._throwDOMException(), (_a2 = this._options).headers ?? (_a2.headers = {}), this._options.headers[t4] = e9;
  }
  _dispatchProgressEvent(t4) {
    var _a2;
    const e9 = new ProgressEvent(t4, { loaded: 0, total: 0 });
    this.dispatchEvent(e9), (_a2 = this[`on${t4}`]) == null ? void 0 : _a2.call(this, e9);
  }
  _throwDOMException() {
    throw new DOMException("", "InvalidStateError");
  }
  _updateReadyState(t4) {
    var _a2;
    if (this._readyState !== t4 && (this._readyState = t4, t4 !== this.UNSENT)) {
      const t5 = new Event("readystatechange");
      this.dispatchEvent(t5), (_a2 = this.onreadystatechange) == null ? void 0 : _a2.call(this, t5);
    }
  }
};
s3.UNSENT = 0, s3.OPENED = 1, s3.HEADERS_RECEIVED = 2, s3.LOADING = 3, s3.DONE = 4;

// node_modules/@arcgis/core/layers/support/VideoTimeExtent.js
var n5 = class extends i(f) {
  constructor(t4) {
    super(t4), this.duration = null, this.end = null, this.start = null, this.timezone = "UTC";
  }
  readEnd(t4, r5) {
    return null != r5.end ? new Date(r5.end) : null;
  }
  writeEnd(t4, r5) {
    r5.end = t4 ? t4.getTime() : null;
  }
  readStart(t4, r5) {
    return null != r5.start ? new Date(r5.start) : null;
  }
  writeStart(t4, r5) {
    r5.start = t4 ? t4.getTime() : null;
  }
};
r([m({ type: Number, json: { write: { allowNull: true } } })], n5.prototype, "duration", void 0), r([m({ type: Date, json: { write: { allowNull: true } } })], n5.prototype, "end", void 0), r([o("end")], n5.prototype, "readEnd", null), r([r2("end")], n5.prototype, "writeEnd", null), r([m({ type: Date, json: { write: { allowNull: true } } })], n5.prototype, "start", void 0), r([o("start")], n5.prototype, "readStart", null), r([r2("start")], n5.prototype, "writeStart", null), r([m({ type: String })], n5.prototype, "timezone", void 0), n5 = r([a("esri.layers.support.VideoTimeExtent")], n5);
var a4 = n5;

// node_modules/@arcgis/core/layers/video/videoUtils.js
var o3 = "application/x-mpegURL";
var a5 = "video/mp4";
var u3 = { UASDatalinkLocalSet: 1e4, PrecisionTimeStamp: 10002, MissionId: 10003, PlatformTailNumber: 10004, PlatformHeadingAngle: 10005, PlatformPitchAngle: 10006, PlatformRollAngle: 10007, PlatformTrueAirspeed: 10008, PlatformIndicatedAirspeed: 10009, PlatformDesignation: 10010, ImageSourceSensor: 10011, ImageCoordinateSystem: 10012, SensorLatitude: 10013, SensorLongitude: 10014, SensorTrueAltitude: 10015, SensorHorizontalFOV: 10016, SensorVerticalFOV: 10017, SensorAzimuthAngle: 10018, SensorElevationAngle: 10019, SensorRollAngle: 10020, PlatformSlantRange: 10021, TargetWidth: 10022, FrameCenterLatitude: 10023, FrameCenterLongitude: 10024, FrameCenterElevation: 10025, OffsetCorner1Latitude: 10026, OffsetCorner1Longitude: 10027, OffsetCorner2Latitude: 10028, OffsetCorner2Longitude: 10029, OffsetCorner3Latitude: 10030, OffsetCorner3Longitude: 10031, OffsetCorner4Latitude: 10032, OffsetCorner4Longitude: 10033, TargetLocationLatitude: 10040, TargetLocationLongitude: 10041, TargetLocationElevation: 10042, TargetTrackGateWidth: 10043, TargetTrackGateHeight: 10044, TargetErrorEstimateHorizontal: 10045, TargetErrorEstimateLateral: 10046, GenericFlagData: 10047, PlatformGroundSpeed: 10056, PlatformGroundRange: 10057, PlatformRemainingFuel: 10058, PlatformCallSign: 10059, SensorFOVName: 10063, PlatformMagneticHeading: 10064, LDSVersionNumber: 10065, AlternatePlatformName: 10070, EventStartTimeUTC: 10072, VMTIDataSet: 10074, SensorEllipsoidHeight: 10075, OperationalMode: 10077, CornerLatitudePoint1: 10082, CornerLongitudePoint1: 10083, CornerLatitudePoint2: 10084, CornerLongitudePoint2: 10085, CornerLatitudePoint3: 10086, CornerLongitudePoint3: 10087, CornerLatitudePoint4: 10088, CornerLongitudePoint4: 10089, SARMotionImageryMetadata: 10095, SecurityClassification: 20001, SecurityClassifyingAuthority: 20002, SecurityClassifyingCountry: 20003, SecuritySCI: 20004, SecurityCaveats: 20005, SecurityReleaseInstructions: 20006, SecurityLDSVersion: 20022, EsriVideoWidth: 90001, EsriVideoHeight: 90002, EsriFrameCenterLatitude: 90050, EsriFrameCenterLongitude: 90051, EsriCornerLatitudePt1: 90052, EsriCornerLongitudePt1: 90053, EsriCornerLatitudePt2: 90054, EsriCornerLongitudePt2: 90055, EsriCornerLatitudePt3: 90056, EsriCornerLongitudePt3: 90057, EsriCornerLatitudePt4: 90058, EsriCornerLongitudePt4: 90059, EsriFrameOutline: 90060, EsriSensorPosition: 90061, EsriHorizonPixelPack: 90063, EsriGroundControlPoints: 90064 };
function s4(e9) {
  const { duration: t4, end: r5, start: n6, timezone: o4 = "UTC" } = e9 || {};
  return "number" != typeof t4 ? null : new a4({ duration: t4 || null, end: "number" == typeof r5 ? new Date(r5) : null, start: "number" == typeof n6 ? new Date(n6) : null, timezone: o4 });
}
function l5(e9, t4) {
  const r5 = [...t4], n6 = r5.findIndex((t5) => t5.equals(e9));
  return n6 > -1 && r5.splice(n6), r5.push(e9), r5;
}
function d4(e9) {
  if (!(e9 == null ? void 0 : e9.size)) return new n4();
  const t4 = p(e9), r5 = L(e9), i3 = E(e9), o4 = v3(t4, r5);
  return new n4({ frameCenter: r5, frameOutline: i3, lineOfSight: o4, sensorLocation: t4 });
}
function g2(e9) {
  var _a2;
  if (!(e9 == null ? void 0 : e9.size)) return null;
  return ((_a2 = e9.get(u3.EsriGroundControlPoints)) == null ? void 0 : _a2.value) ?? null ?? null;
}
function f3(e9) {
  var _a2;
  return (e9 == null ? void 0 : e9.size) ? ((_a2 = e9.get(u3.EsriHorizonPixelPack)) == null ? void 0 : _a2.value) ?? null : null;
}
function L(e9) {
  return P3(e9) ?? c2(e9);
}
function C(e9) {
  if (!e9) return o3;
  let t4 = "";
  const r5 = new RegExp(/\.(\w{3,4})(?:$|\?)/i), n6 = e9 ? e9.match(r5) : [];
  if (!(n6 == null ? void 0 : n6.length)) return o3;
  t4 = n6[0];
  return "mp4" === t4.toLowerCase().replaceAll(".", "") ? a5 : o3;
}
function m4(e9) {
  const t4 = e9 == null ? void 0 : e9.layers;
  return (t4 == null ? void 0 : t4.length) ? t4.map((e10) => ({ layerId: e10.id, posterUrl: e10.poster, sourceType: e10.serviceType, title: e10.name, type: e10.type || "Video Layer" })) : [];
}
function P3(t4) {
  return t4 && t4.has(u3.EsriFrameCenterLatitude) && t4.has(u3.EsriFrameCenterLongitude) ? new j({ x: t4.get(u3.EsriFrameCenterLongitude).value, y: t4.get(u3.EsriFrameCenterLatitude).value, z: t4.get(u3.FrameCenterElevation).value }) : null;
}
function c2(t4) {
  var _a2, _b, _c2;
  return t4 && t4.has(u3.FrameCenterLatitude) && t4.has(u3.FrameCenterLongitude) ? new j({ x: (_a2 = t4.get(u3.FrameCenterLongitude)) == null ? void 0 : _a2.value, y: (_b = t4.get(u3.FrameCenterLatitude)) == null ? void 0 : _b.value, z: (_c2 = t4.get(u3.FrameCenterElevation)) == null ? void 0 : _c2.value }) : null;
}
function E(e9) {
  var _a2;
  if (!e9) return null;
  const r5 = (_a2 = e9.get(u3.EsriFrameOutline)) == null ? void 0 : _a2.value;
  return r5 ? v2.fromJSON(r5.geometry) : S2(e9) ?? h(e9);
}
function S2(e9) {
  var _a2, _b, _c2, _d2, _e2, _f, _g2, _h2;
  if (!(e9.has(u3.EsriCornerLatitudePt1) && e9.has(u3.EsriCornerLongitudePt1) && e9.has(u3.EsriCornerLatitudePt2) && e9.has(u3.EsriCornerLongitudePt2) && e9.has(u3.EsriCornerLatitudePt3) && e9.has(u3.EsriCornerLongitudePt3) && e9.has(u3.EsriCornerLatitudePt4) && e9.has(u3.EsriCornerLongitudePt4))) return null;
  const r5 = [(_a2 = e9.get(u3.EsriCornerLongitudePt1)) == null ? void 0 : _a2.value, (_b = e9.get(u3.EsriCornerLatitudePt1)) == null ? void 0 : _b.value], n6 = [(_c2 = e9.get(u3.EsriCornerLongitudePt2)) == null ? void 0 : _c2.value, (_d2 = e9.get(u3.EsriCornerLatitudePt2)) == null ? void 0 : _d2.value], i3 = [(_e2 = e9.get(u3.EsriCornerLongitudePt3)) == null ? void 0 : _e2.value, (_f = e9.get(u3.EsriCornerLatitudePt3)) == null ? void 0 : _f.value], o4 = [(_g2 = e9.get(u3.EsriCornerLongitudePt4)) == null ? void 0 : _g2.value, (_h2 = e9.get(u3.EsriCornerLatitudePt4)) == null ? void 0 : _h2.value];
  return new v2({ rings: [[r5, n6, i3, o4]] });
}
function h(e9) {
  var _a2, _b, _c2, _d2, _e2, _f, _g2, _h2, _i2, _j;
  if (!(e9.has(u3.OffsetCorner1Latitude) && e9.has(u3.OffsetCorner1Longitude) && e9.has(u3.OffsetCorner2Latitude) && e9.has(u3.OffsetCorner2Longitude) && e9.has(u3.OffsetCorner3Latitude) && e9.has(u3.OffsetCorner3Longitude) && e9.has(u3.OffsetCorner4Latitude) && e9.has(u3.OffsetCorner4Longitude) && e9.has(u3.FrameCenterLatitude) && e9.has(u3.FrameCenterLongitude))) return null;
  const r5 = (_a2 = e9.get(u3.FrameCenterLatitude)) == null ? void 0 : _a2.value, n6 = (_b = e9.get(u3.FrameCenterLongitude)) == null ? void 0 : _b.value, i3 = r5 + ((_c2 = e9.get(u3.OffsetCorner1Latitude)) == null ? void 0 : _c2.value), o4 = n6 + ((_d2 = e9.get(u3.OffsetCorner1Longitude)) == null ? void 0 : _d2.value), a6 = r5 + ((_e2 = e9.get(u3.OffsetCorner2Latitude)) == null ? void 0 : _e2.value), s5 = n6 + ((_f = e9.get(u3.OffsetCorner2Longitude)) == null ? void 0 : _f.value), l6 = r5 + ((_g2 = e9.get(u3.OffsetCorner3Latitude)) == null ? void 0 : _g2.value), d5 = n6 + ((_h2 = e9.get(u3.OffsetCorner3Longitude)) == null ? void 0 : _h2.value), g4 = r5 + ((_i2 = e9.get(u3.OffsetCorner4Latitude)) == null ? void 0 : _i2.value), f5 = n6 + ((_j = e9.get(u3.OffsetCorner4Longitude)) == null ? void 0 : _j.value);
  return new v2({ rings: [[[o4, i3], [s5, a6], [d5, l6], [f5, g4]]] });
}
function v3(e9, t4) {
  if (!e9 || !t4) return null;
  const n6 = [e9.x, e9.y, e9.z ?? 0], i3 = [t4.x, t4.y, t4.z ?? 0];
  return new d2({ paths: [[n6, i3]] });
}
function p(t4) {
  var _a2, _b, _c2, _d2;
  if (!(t4 == null ? void 0 : t4.size)) return null;
  if (t4.has(u3.EsriSensorPosition)) {
    const r5 = (_a2 = t4.get(u3.EsriSensorPosition)) == null ? void 0 : _a2.value;
    if (r5) return j.fromJSON(r5.geometry);
  }
  return t4.has(u3.SensorLongitude) && t4.has(u3.SensorLatitude) && t4.has(u3.SensorTrueAltitude) ? new j({ x: (_b = t4.get(u3.SensorLongitude)) == null ? void 0 : _b.value, y: (_c2 = t4.get(u3.SensorLatitude)) == null ? void 0 : _c2.value, z: (_d2 = t4.get(u3.SensorTrueAltitude)) == null ? void 0 : _d2.value }) : null;
}

// node_modules/@arcgis/core/layers/video/VideoCameraSensorModel.js
var M = Math.PI / 180;
var V = class extends b {
  constructor(t4) {
    super(), this.averageElevation = 0, this.imageHeight = 0, this.imageWidth = 0, this.metadataSupportsTransforms = false, this.platformHeadingAngle = 0, this.platformPitchAngle = 0, this.platformRollAngle = 0, this.sensorHeadingAngle = 0, this.sensorAltitude = 0, this.sensorHorizontalFieldOfView = 0, this.sensorLatitude = 0, this.sensorLongitude = 0, this.sensorPitchAngle = 0, this.sensorRollAngle = 0, this.sensorVerticalFieldOfView = 0, this.vttMetadata = /* @__PURE__ */ new Map(), this._createMat3FromValues = (t5) => {
      const e10 = t5[0], o4 = t5[1], s5 = t5[2];
      return t3(e10[0], o4[0], s5[0], e10[1], o4[1], s5[1], e10[2], o4[2], s5[2]);
    }, this._multiplyMat3 = (t5, e10) => {
      const o4 = e3();
      return i2(o4, t5, e10), o4;
    }, this._transposeMat3 = (t5) => {
      const e10 = e3();
      return u(e10, t5), e10;
    }, this._calculateCameraFovForward = () => this._createMat3FromValues([[0, 0, 1], [Math.tan(0.5 * this.sensorHorizontalFieldOfView * M), 0, 0], [0, Math.tan(0.5 * this.sensorVerticalFieldOfView * M), 0]]), this._calculateCameraFovReverse = () => this._createMat3FromValues([[0, 1 / Math.tan(0.5 * this.sensorHorizontalFieldOfView * M), 0], [0, 0, 1 / Math.tan(0.5 * this.sensorVerticalFieldOfView * M)], [1, 0, 0]]), this._calculateCameraLook = () => this._getRotationMatrixZYX(this.sensorHeadingAngle * M, this.sensorPitchAngle * M, this.sensorRollAngle * M), this._calculateImageDimensionsForward = () => this._createMat3FromValues([[2 / this.imageWidth, 0, -1], [0, -2 / this.imageHeight, -1], [0, 0, 1]]), this._calculateImageDimensionsReverse = () => this._createMat3FromValues([[this.imageWidth / 2, 0, this.imageWidth / 2], [0, -this.imageHeight / 2, -this.imageHeight / 2], [0, 0, 1]]), this._calculatePlatformPositionMatrix = () => {
      const t5 = Math.sin(this.sensorLatitude * M), e10 = Math.cos(this.sensorLatitude * M), o4 = Math.sin(this.sensorLongitude * M), s5 = Math.cos(this.sensorLongitude * M);
      return this._createMat3FromValues([[-t5 * s5, -o4, -e10 * s5], [-t5 * o4, s5, -e10 * o4], [e10, 0, -t5]]);
    }, this._calculatePlatformOrientation = () => this._getRotationMatrixZYX(this.platformHeadingAngle * M, this.platformPitchAngle * M, this.platformRollAngle * M), this._extractValues = (t5) => {
      var _a2, _b, _c2, _d2, _e2, _f, _g2, _h2, _i2, _j, _k, _l2, _m2, _n2, _o2;
      this.imageWidth = (_a2 = t5.get(u3.EsriVideoWidth)) == null ? void 0 : _a2.value, this.imageHeight = (_b = t5.get(u3.EsriVideoHeight)) == null ? void 0 : _b.value;
      const e10 = (_c2 = t5.get(u3.SensorEllipsoidHeight)) == null ? void 0 : _c2.value;
      this.sensorAltitude = e10 ?? ((_d2 = t5.get(u3.SensorTrueAltitude)) == null ? void 0 : _d2.value), this.sensorLatitude = (_e2 = t5.get(u3.SensorLatitude)) == null ? void 0 : _e2.value, this.sensorLongitude = (_f = t5.get(u3.SensorLongitude)) == null ? void 0 : _f.value, this.sensorHeadingAngle = (_g2 = t5.get(u3.SensorAzimuthAngle)) == null ? void 0 : _g2.value, this.sensorPitchAngle = (_h2 = t5.get(u3.SensorElevationAngle)) == null ? void 0 : _h2.value, this.sensorRollAngle = (_i2 = t5.get(u3.SensorRollAngle)) == null ? void 0 : _i2.value, this.sensorHorizontalFieldOfView = (_j = t5.get(u3.SensorHorizontalFOV)) == null ? void 0 : _j.value, this.sensorVerticalFieldOfView = (_k = t5.get(u3.SensorVerticalFOV)) == null ? void 0 : _k.value, this.platformHeadingAngle = (_l2 = t5.get(u3.PlatformHeadingAngle)) == null ? void 0 : _l2.value, this.platformPitchAngle = (_m2 = t5.get(u3.PlatformPitchAngle)) == null ? void 0 : _m2.value, this.platformRollAngle = (_n2 = t5.get(u3.PlatformRollAngle)) == null ? void 0 : _n2.value, this.averageElevation = ((_o2 = t5.get(u3.FrameCenterElevation)) == null ? void 0 : _o2.value) || 0;
    }, this._getRotationMatrixZYX = (t5, e10, o4) => {
      const s5 = Math.cos(t5), i3 = Math.sin(t5), a6 = Math.cos(e10), r5 = Math.sin(e10), l6 = Math.cos(o4), n6 = Math.sin(o4);
      return this._createMat3FromValues([[s5 * a6, s5 * r5 * n6 - l6 * i3, i3 * n6 + s5 * l6 * r5], [a6 * i3, s5 * l6 + i3 * r5 * n6, l6 * i3 * r5 - s5 * n6], [-r5, a6 * n6, a6 * l6]]);
    }, this._initCameraSensor = () => {
      const t5 = this._calculateCameraFovForward(), e10 = this._calculateCameraFovReverse(), o4 = this._calculateCameraLook(), s5 = this._calculateImageDimensionsForward(), i3 = this._calculateImageDimensionsReverse(), a6 = this._calculatePlatformPositionMatrix(), r5 = this._calculatePlatformOrientation(), l6 = this._multiplyMat3(this._multiplyMat3(a6, r5), o4);
      this._imageToEarthTransform = this._multiplyMat3(this._multiplyMat3(l6, t5), s5);
      const n6 = this._multiplyMat3(i3, e10);
      this._earthToImageTransform = this._multiplyMat3(n6, this._transposeMat3(l6)), this._platformPositionEcef = this._projectPointToECEF(this.sensorLongitude, this.sensorLatitude, this.sensorAltitude || this.averageElevation);
    }, this._metadataSupportsTransforms = (t5) => {
      var _a2, _b, _c2, _d2, _e2, _f, _g2, _h2, _i2, _j, _k, _l2, _m2, _n2;
      if (!(t5 == null ? void 0 : t5.size)) return false;
      const e10 = ((_a2 = t5.get(u3.EsriVideoWidth)) == null ? void 0 : _a2.value) ?? 0, o4 = ((_b = t5.get(u3.EsriVideoHeight)) == null ? void 0 : _b.value) ?? 0;
      if (e10 <= 0 || o4 <= 0) return false;
      const s5 = (_c2 = t5.get(u3.SensorEllipsoidHeight)) == null ? void 0 : _c2.value, i3 = (_d2 = t5.get(u3.SensorTrueAltitude)) == null ? void 0 : _d2.value, a6 = (_e2 = t5.get(u3.SensorLatitude)) == null ? void 0 : _e2.value, r5 = (_f = t5.get(u3.SensorLongitude)) == null ? void 0 : _f.value;
      if (null == s5 && null == i3 || null == a6 || null == r5) return false;
      const l6 = (_g2 = t5.get(u3.PlatformHeadingAngle)) == null ? void 0 : _g2.value, n6 = (_h2 = t5.get(u3.PlatformPitchAngle)) == null ? void 0 : _h2.value, h2 = (_i2 = t5.get(u3.PlatformRollAngle)) == null ? void 0 : _i2.value;
      if (null == l6 || null == n6 || null == h2) return false;
      const m5 = (_j = t5.get(u3.SensorHorizontalFOV)) == null ? void 0 : _j.value, g4 = (_k = t5.get(u3.SensorVerticalFOV)) == null ? void 0 : _k.value;
      if (null == m5 || null == g4) return false;
      const u4 = (_l2 = t5.get(u3.SensorAzimuthAngle)) == null ? void 0 : _l2.value, c3 = (_m2 = t5.get(u3.SensorElevationAngle)) == null ? void 0 : _m2.value, p2 = (_n2 = t5.get(u3.SensorRollAngle)) == null ? void 0 : _n2.value;
      return null != u4 && null != c3 && null != p2;
    }, this._projectPointToECEF = (t5, e10, o4) => {
      const s5 = [];
      return n3([t5, e10, o4], g.WGS84, 0, s5, w2, 0), new j({ x: s5[0], y: s5[1], z: s5[2], spatialReference: w2 });
    }, this._projectImageVectorToEllipsoid = (t5, e10) => {
      const o4 = t.semiMajorAxis + e10, s5 = t.semiMinorAxis + e10, i3 = s5 / o4, a6 = o4 / s5, { x: n6, y: h2, z: u4 } = this._platformPositionEcef, c3 = u4 ?? this.averageElevation, p2 = r4(n6, h2, a6 * c3), d5 = P2(t5, t5), f5 = P2(t5, p2), v5 = P2(p2, p2) - o4 * o4, A3 = (-f5 - Math.sqrt(f5 * f5 - d5 * v5)) / d5;
      if (A3 < 0) return [NaN, NaN, NaN];
      const M3 = n2();
      return q(M3, p2, t5, A3), M3[2] = M3[2] * i3, M3;
    };
    const e9 = t4 == null ? void 0 : t4.videoMetadata;
    this._set("metadataSupportsTransforms", this._metadataSupportsTransforms(e9)), this.metadataSupportsTransforms && (this._extractValues(e9), this._initCameraSensor());
  }
  transformGeoToImage(t4, e9, o4) {
    const s5 = this._platformPositionEcef;
    if (!s5) return [0, 0];
    const { x: i3, y: a6, z: n6 } = s5, h2 = r4(i3, a6, n6), m5 = this._projectPointToECEF(t4, e9, o4 || this.averageElevation), g4 = n2(), p2 = r4(m5.x, m5.y, m5.z);
    c(g4, p2, h2), N(g4, g4, this._earthToImageTransform);
    const d5 = g4[0], f5 = g4[1], v5 = g4[2];
    let _2 = r4(NaN, NaN, NaN);
    return isNaN(v5) || (_2 = r4(d5 / v5, f5 / v5, v5 / v5)), [_2[0], _2[1]];
  }
  transformImageToGeo(t4, e9) {
    const o4 = r4(t4, e9, 1), s5 = n2();
    N(s5, o4, this._imageToEarthTransform);
    const i3 = this._projectImageVectorToEllipsoid(s5, this.averageElevation);
    let a6;
    if (!isNaN(i3[0])) {
      const t5 = [];
      n3([i3[0], i3[1], i3[2]], w2, 0, t5, g.WGS84, 0), a6 = new j({ x: t5[0], y: t5[1], z: t5[2], spatialReference: g.WGS84 });
    }
    return a6;
  }
};
r([m()], V.prototype, "averageElevation", void 0), r([m()], V.prototype, "imageHeight", void 0), r([m()], V.prototype, "imageWidth", void 0), r([m({ readOnly: true })], V.prototype, "metadataSupportsTransforms", void 0), r([m()], V.prototype, "platformHeadingAngle", void 0), r([m()], V.prototype, "platformPitchAngle", void 0), r([m()], V.prototype, "platformRollAngle", void 0), r([m()], V.prototype, "sensorHeadingAngle", void 0), r([m()], V.prototype, "sensorAltitude", void 0), r([m()], V.prototype, "sensorHorizontalFieldOfView", void 0), r([m()], V.prototype, "sensorLatitude", void 0), r([m()], V.prototype, "sensorLongitude", void 0), r([m()], V.prototype, "sensorPitchAngle", void 0), r([m()], V.prototype, "sensorRollAngle", void 0), r([m()], V.prototype, "sensorVerticalFieldOfView", void 0), r([m()], V.prototype, "vttMetadata", void 0), V = r([a("esri.layers.video.VideoCameraSensorModel")], V);
var y2 = V;

// node_modules/@arcgis/core/layers/video/VideoController.js
var g3;
var f4;
function y3() {
  return f4 ? g3 : (f4 = 1, e9 = "undefined" != typeof window ? window : void 0 !== e ? e : "undefined" != typeof self ? self : {}, g3 = e9);
  var e9;
}
var _ = o2(y3());
var b2;
var v4;
var T;
var S3;
var E2;
var w3;
var C2;
var k;
var I;
var x;
var A2;
var D;
var P4;
var L2;
var O;
var N2;
var R;
var M2;
var U2;
var B;
var F;
var q2;
var j2;
var $;
var H;
var V2;
function z() {
  if (v4) return b2;
  v4 = 1;
  var e9 = Array.prototype.slice;
  function t4(t5, i3) {
    "length" in t5 || (t5 = [t5]), t5 = e9.call(t5);
    for (; t5.length; ) {
      var s5 = t5.shift(), n6 = i3(s5);
      if (n6) return n6;
      s5.childNodes && s5.childNodes.length && (t5 = e9.call(s5.childNodes).concat(t5));
    }
  }
  return b2 = t4;
}
function W() {
  if (S3) return T;
  function e9(t4, i3) {
    if (!(this instanceof e9)) return new e9(t4, i3);
    this.data = t4, this.nodeValue = t4, this.length = t4.length, this.ownerDocument = i3 || null;
  }
  return S3 = 1, T = e9, e9.prototype.nodeType = 8, e9.prototype.nodeName = "#comment", e9.prototype.toString = function() {
    return "[object Comment]";
  }, T;
}
function G() {
  if (w3) return E2;
  function e9(t4, i3) {
    if (!(this instanceof e9)) return new e9(t4);
    this.data = t4 || "", this.length = this.data.length, this.ownerDocument = i3 || null;
  }
  return w3 = 1, E2 = e9, e9.prototype.type = "DOMTextNode", e9.prototype.nodeType = 3, e9.prototype.nodeName = "#text", e9.prototype.toString = function() {
    return this.data;
  }, e9.prototype.replaceData = function(e10, t4, i3) {
    var s5 = this.data, n6 = s5.substring(0, e10), r5 = s5.substring(e10 + t4, s5.length);
    this.data = n6 + i3 + r5, this.length = this.data.length;
  }, E2;
}
function X() {
  if (k) return C2;
  function e9(e10) {
    var t4 = this, i3 = e10.type;
    e10.target || (e10.target = t4), t4.listeners || (t4.listeners = {});
    var s5 = t4.listeners[i3];
    if (s5) return s5.forEach(function(i4) {
      e10.currentTarget = t4, "function" == typeof i4 ? i4(e10) : i4.handleEvent(e10);
    });
    t4.parentNode && t4.parentNode.dispatchEvent(e10);
  }
  return k = 1, C2 = e9;
}
function K() {
  if (x) return I;
  function e9(e10, t4) {
    var i3 = this;
    i3.listeners || (i3.listeners = {}), i3.listeners[e10] || (i3.listeners[e10] = []), -1 === i3.listeners[e10].indexOf(t4) && i3.listeners[e10].push(t4);
  }
  return x = 1, I = e9;
}
function Y() {
  if (D) return A2;
  function e9(e10, t4) {
    var i3 = this;
    if (i3.listeners && i3.listeners[e10]) {
      var s5 = i3.listeners[e10], n6 = s5.indexOf(t4);
      -1 !== n6 && s5.splice(n6, 1);
    }
  }
  return D = 1, A2 = e9;
}
function Q() {
  if (L2) return P4;
  L2 = 1;
  var e9 = ["area", "base", "br", "col", "embed", "hr", "img", "input", "keygen", "link", "menuitem", "meta", "param", "source", "track", "wbr"];
  function t4(e10) {
    switch (e10.nodeType) {
      case 3:
        return l6(e10.data);
      case 8:
        return "<!--" + e10.data + "-->";
      default:
        return i3(e10);
    }
  }
  function i3(i4) {
    var s6 = [], n7 = i4.tagName;
    return "http://www.w3.org/1999/xhtml" === i4.namespaceURI && (n7 = n7.toLowerCase()), s6.push("<" + n7 + o4(i4) + r5(i4)), e9.indexOf(n7) > -1 ? s6.push(" />") : (s6.push(">"), i4.childNodes.length ? s6.push.apply(s6, i4.childNodes.map(t4)) : i4.textContent || i4.innerText ? s6.push(l6(i4.textContent || i4.innerText)) : i4.innerHTML && s6.push(i4.innerHTML), s6.push("</" + n7 + ">")), s6.join("");
  }
  function s5(e10, t5) {
    var i4 = typeof e10[t5];
    return "style" === t5 && Object.keys(e10.style).length > 0 || e10.hasOwnProperty(t5) && ("string" === i4 || "boolean" === i4 || "number" === i4) && "nodeName" !== t5 && "className" !== t5 && "tagName" !== t5 && "textContent" !== t5 && "innerText" !== t5 && "namespaceURI" !== t5 && "innerHTML" !== t5;
  }
  function n6(e10) {
    if ("string" == typeof e10) return e10;
    var t5 = "";
    return Object.keys(e10).forEach(function(i4) {
      var s6 = e10[i4];
      i4 = i4.replace(/[A-Z]/g, function(e11) {
        return "-" + e11.toLowerCase();
      }), t5 += i4 + ":" + s6 + ";";
    }), t5;
  }
  function r5(e10) {
    var t5 = e10.dataset, i4 = [];
    for (var s6 in t5) i4.push({ name: "data-" + s6, value: t5[s6] });
    return i4.length ? a6(i4) : "";
  }
  function a6(e10) {
    var t5 = [];
    return e10.forEach(function(e11) {
      var i4 = e11.name, s6 = e11.value;
      "style" === i4 && (s6 = n6(s6)), t5.push(i4 + '="' + h2(s6) + '"');
    }), t5.length ? " " + t5.join(" ") : "";
  }
  function o4(e10) {
    var t5 = [];
    for (var i4 in e10) s5(e10, i4) && t5.push({ name: i4, value: e10[i4] });
    for (var n7 in e10._attributes) for (var r6 in e10._attributes[n7]) {
      var o5 = e10._attributes[n7][r6], l7 = (o5.prefix ? o5.prefix + ":" : "") + r6;
      t5.push({ name: l7, value: o5.value });
    }
    return e10.className && t5.push({ name: "class", value: e10.className }), t5.length ? a6(t5) : "";
  }
  function l6(e10) {
    var t5 = "";
    return "string" == typeof e10 ? t5 = e10 : e10 && (t5 = e10.toString()), t5.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
  }
  function h2(e10) {
    return l6(e10).replace(/"/g, "&quot;");
  }
  return P4 = t4;
}
function J() {
  if (N2) return O;
  N2 = 1;
  var e9 = z(), t4 = X(), i3 = K(), s5 = Y(), n6 = Q(), r5 = "http://www.w3.org/1999/xhtml";
  function a6(e10, t5, i4) {
    if (!(this instanceof a6)) return new a6(e10);
    var s6 = void 0 === i4 ? r5 : i4 || null;
    this.tagName = s6 === r5 ? String(e10).toUpperCase() : e10, this.nodeName = this.tagName, this.className = "", this.dataset = {}, this.childNodes = [], this.parentNode = null, this.style = {}, this.ownerDocument = t5 || null, this.namespaceURI = s6, this._attributes = {}, "INPUT" === this.tagName && (this.type = "text");
  }
  return O = a6, a6.prototype.type = "DOMElement", a6.prototype.nodeType = 1, a6.prototype.appendChild = function(e10) {
    return e10.parentNode && e10.parentNode.removeChild(e10), this.childNodes.push(e10), e10.parentNode = this, e10;
  }, a6.prototype.replaceChild = function(e10, t5) {
    e10.parentNode && e10.parentNode.removeChild(e10);
    var i4 = this.childNodes.indexOf(t5);
    return t5.parentNode = null, this.childNodes[i4] = e10, e10.parentNode = this, t5;
  }, a6.prototype.removeChild = function(e10) {
    var t5 = this.childNodes.indexOf(e10);
    return this.childNodes.splice(t5, 1), e10.parentNode = null, e10;
  }, a6.prototype.insertBefore = function(e10, t5) {
    e10.parentNode && e10.parentNode.removeChild(e10);
    var i4 = null == t5 ? -1 : this.childNodes.indexOf(t5);
    return i4 > -1 ? this.childNodes.splice(i4, 0, e10) : this.childNodes.push(e10), e10.parentNode = this, e10;
  }, a6.prototype.setAttributeNS = function(e10, t5, i4) {
    var s6 = null, n7 = t5, r6 = t5.indexOf(":");
    (r6 > -1 && (s6 = t5.substr(0, r6), n7 = t5.substr(r6 + 1)), "INPUT" === this.tagName && "type" === t5) ? this.type = i4 : (this._attributes[e10] || (this._attributes[e10] = {}))[n7] = { value: i4, prefix: s6 };
  }, a6.prototype.getAttributeNS = function(e10, t5) {
    var i4 = this._attributes[e10], s6 = i4 && i4[t5] && i4[t5].value;
    return "INPUT" === this.tagName && "type" === t5 ? this.type : "string" != typeof s6 ? null : s6;
  }, a6.prototype.removeAttributeNS = function(e10, t5) {
    var i4 = this._attributes[e10];
    i4 && delete i4[t5];
  }, a6.prototype.hasAttributeNS = function(e10, t5) {
    var i4 = this._attributes[e10];
    return !!i4 && t5 in i4;
  }, a6.prototype.setAttribute = function(e10, t5) {
    return this.setAttributeNS(null, e10, t5);
  }, a6.prototype.getAttribute = function(e10) {
    return this.getAttributeNS(null, e10);
  }, a6.prototype.removeAttribute = function(e10) {
    return this.removeAttributeNS(null, e10);
  }, a6.prototype.hasAttribute = function(e10) {
    return this.hasAttributeNS(null, e10);
  }, a6.prototype.removeEventListener = s5, a6.prototype.addEventListener = i3, a6.prototype.dispatchEvent = t4, a6.prototype.focus = function() {
  }, a6.prototype.toString = function() {
    return n6(this);
  }, a6.prototype.getElementsByClassName = function(t5) {
    var i4 = t5.split(" "), s6 = [];
    return e9(this, function(e10) {
      if (1 === e10.nodeType) {
        var t6 = (e10.className || "").split(" ");
        i4.every(function(e11) {
          return -1 !== t6.indexOf(e11);
        }) && s6.push(e10);
      }
    }), s6;
  }, a6.prototype.getElementsByTagName = function(t5) {
    t5 = t5.toLowerCase();
    var i4 = [];
    return e9(this.childNodes, function(e10) {
      1 !== e10.nodeType || "*" !== t5 && e10.tagName.toLowerCase() !== t5 || i4.push(e10);
    }), i4;
  }, a6.prototype.contains = function(t5) {
    return e9(this, function(e10) {
      return t5 === e10;
    }) || false;
  }, O;
}
function Z() {
  if (M2) return R;
  M2 = 1;
  var e9 = J();
  function t4(e10) {
    if (!(this instanceof t4)) return new t4();
    this.childNodes = [], this.parentNode = null, this.ownerDocument = e10 || null;
  }
  return R = t4, t4.prototype.type = "DocumentFragment", t4.prototype.nodeType = 11, t4.prototype.nodeName = "#document-fragment", t4.prototype.appendChild = e9.prototype.appendChild, t4.prototype.replaceChild = e9.prototype.replaceChild, t4.prototype.removeChild = e9.prototype.removeChild, t4.prototype.toString = function() {
    return this.childNodes.map(function(e10) {
      return String(e10);
    }).join("");
  }, R;
}
function ee() {
  if (B) return U2;
  function e9(e10) {
  }
  return B = 1, U2 = e9, e9.prototype.initEvent = function(e10, t4, i3) {
    this.type = e10, this.bubbles = t4, this.cancelable = i3;
  }, e9.prototype.preventDefault = function() {
  }, U2;
}
function te() {
  if (q2) return F;
  q2 = 1;
  var e9 = z(), t4 = W(), i3 = G(), s5 = J(), n6 = Z(), r5 = ee(), a6 = X(), o4 = K(), l6 = Y();
  function h2() {
    if (!(this instanceof h2)) return new h2();
    this.head = this.createElement("head"), this.body = this.createElement("body"), this.documentElement = this.createElement("html"), this.documentElement.appendChild(this.head), this.documentElement.appendChild(this.body), this.childNodes = [this.documentElement], this.nodeType = 9;
  }
  F = h2;
  var u4 = h2.prototype;
  return u4.createTextNode = function(e10) {
    return new i3(e10, this);
  }, u4.createElementNS = function(e10, t5) {
    var i4 = null === e10 ? null : String(e10);
    return new s5(t5, this, i4);
  }, u4.createElement = function(e10) {
    return new s5(e10, this);
  }, u4.createDocumentFragment = function() {
    return new n6(this);
  }, u4.createEvent = function(e10) {
    return new r5(e10);
  }, u4.createComment = function(e10) {
    return new t4(e10, this);
  }, u4.getElementById = function(t5) {
    return t5 = String(t5), e9(this.childNodes, function(e10) {
      if (String(e10.id) === t5) return e10;
    }) || null;
  }, u4.getElementsByClassName = s5.prototype.getElementsByClassName, u4.getElementsByTagName = s5.prototype.getElementsByTagName, u4.contains = s5.prototype.contains, u4.removeEventListener = l6, u4.addEventListener = o4, u4.dispatchEvent = a6, F;
}
function ie() {
  if ($) return j2;
  $ = 1;
  var e9 = te();
  return j2 = new e9();
}
function se() {
  if (V2) return H;
  V2 = 1;
  var e9, t4 = void 0 !== e ? e : "undefined" != typeof window ? window : {}, i3 = ie();
  return "undefined" != typeof document ? e9 = document : (e9 = t4["__GLOBAL_DOCUMENT_CACHE@4"]) || (e9 = t4["__GLOBAL_DOCUMENT_CACHE@4"] = i3), H = e9;
}
var ne = o2(se());
var re;
var ae;
var oe;
var le;
var he;
var ue;
var de;
var ce;
var pe;
var me;
var ge = { exports: {} };
var fe = { exports: {} };
function ye() {
  return re || (re = 1, function(e9) {
    function t4() {
      return e9.exports = t4 = Object.assign ? Object.assign.bind() : function(e10) {
        for (var t5 = 1; t5 < arguments.length; t5++) {
          var i3 = arguments[t5];
          for (var s5 in i3) ({}).hasOwnProperty.call(i3, s5) && (e10[s5] = i3[s5]);
        }
        return e10;
      }, e9.exports.__esModule = true, e9.exports.default = e9.exports, t4.apply(null, arguments);
    }
    e9.exports = t4, e9.exports.__esModule = true, e9.exports.default = e9.exports;
  }(fe)), fe.exports;
}
function _e() {
  if (oe) return ae;
  oe = 1, ae = t4;
  var e9 = Object.prototype.toString;
  function t4(t5) {
    if (!t5) return false;
    var i3 = e9.call(t5);
    return "[object Function]" === i3 || "function" == typeof t5 && "[object RegExp]" !== i3 || "undefined" != typeof window && (t5 === window.setTimeout || t5 === window.alert || t5 === window.confirm || t5 === window.prompt);
  }
  return ae;
}
function be() {
  if (he) return le;
  function e9(e10, i4) {
    var s5 = "undefined" != typeof Symbol && e10[Symbol.iterator] || e10["@@iterator"];
    if (s5) return (s5 = s5.call(e10)).next.bind(s5);
    if (Array.isArray(e10) || (s5 = t4(e10)) || i4) {
      s5 && (e10 = s5);
      var n6 = 0;
      return function() {
        return n6 >= e10.length ? { done: true } : { done: false, value: e10[n6++] };
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function t4(e10, t5) {
    if (e10) {
      if ("string" == typeof e10) return i3(e10, t5);
      var s5 = Object.prototype.toString.call(e10).slice(8, -1);
      return "Object" === s5 && e10.constructor && (s5 = e10.constructor.name), "Map" === s5 || "Set" === s5 ? Array.from(e10) : "Arguments" === s5 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s5) ? i3(e10, t5) : void 0;
    }
  }
  function i3(e10, t5) {
    (null == t5 || t5 > e10.length) && (t5 = e10.length);
    for (var i4 = 0, s5 = new Array(t5); i4 < t5; i4++) s5[i4] = e10[i4];
    return s5;
  }
  return he = 1, le = function() {
    function t5() {
      this.typeToInterceptorsMap_ = /* @__PURE__ */ new Map(), this.enabled_ = false;
    }
    var i4 = t5.prototype;
    return i4.getIsEnabled = function() {
      return this.enabled_;
    }, i4.enable = function() {
      this.enabled_ = true;
    }, i4.disable = function() {
      this.enabled_ = false;
    }, i4.reset = function() {
      this.typeToInterceptorsMap_ = /* @__PURE__ */ new Map(), this.enabled_ = false;
    }, i4.addInterceptor = function(e10, t6) {
      this.typeToInterceptorsMap_.has(e10) || this.typeToInterceptorsMap_.set(e10, /* @__PURE__ */ new Set());
      var i5 = this.typeToInterceptorsMap_.get(e10);
      return !i5.has(t6) && (i5.add(t6), true);
    }, i4.removeInterceptor = function(e10, t6) {
      var i5 = this.typeToInterceptorsMap_.get(e10);
      return !(!i5 || !i5.has(t6)) && (i5.delete(t6), true);
    }, i4.clearInterceptorsByType = function(e10) {
      return !!this.typeToInterceptorsMap_.get(e10) && (this.typeToInterceptorsMap_.delete(e10), this.typeToInterceptorsMap_.set(e10, /* @__PURE__ */ new Set()), true);
    }, i4.clear = function() {
      return !!this.typeToInterceptorsMap_.size && (this.typeToInterceptorsMap_ = /* @__PURE__ */ new Map(), true);
    }, i4.getForType = function(e10) {
      return this.typeToInterceptorsMap_.get(e10) || /* @__PURE__ */ new Set();
    }, i4.execute = function(t6, i5) {
      for (var s5, n6 = e9(this.getForType(t6)); !(s5 = n6()).done; ) {
        var r5 = s5.value;
        try {
          i5 = r5(i5);
        } catch (a6) {
        }
      }
      return i5;
    }, t5;
  }();
}
function ve() {
  if (de) return ue;
  de = 1;
  var e9 = function() {
    function e10() {
      this.maxAttempts_ = 1, this.delayFactor_ = 0.1, this.fuzzFactor_ = 0.1, this.initialDelay_ = 1e3, this.enabled_ = false;
    }
    var i3 = e10.prototype;
    return i3.getIsEnabled = function() {
      return this.enabled_;
    }, i3.enable = function() {
      this.enabled_ = true;
    }, i3.disable = function() {
      this.enabled_ = false;
    }, i3.reset = function() {
      this.maxAttempts_ = 1, this.delayFactor_ = 0.1, this.fuzzFactor_ = 0.1, this.initialDelay_ = 1e3, this.enabled_ = false;
    }, i3.getMaxAttempts = function() {
      return this.maxAttempts_;
    }, i3.setMaxAttempts = function(e11) {
      this.maxAttempts_ = e11;
    }, i3.getDelayFactor = function() {
      return this.delayFactor_;
    }, i3.setDelayFactor = function(e11) {
      this.delayFactor_ = e11;
    }, i3.getFuzzFactor = function() {
      return this.fuzzFactor_;
    }, i3.setFuzzFactor = function(e11) {
      this.fuzzFactor_ = e11;
    }, i3.getInitialDelay = function() {
      return this.initialDelay_;
    }, i3.setInitialDelay = function(e11) {
      this.initialDelay_ = e11;
    }, i3.createRetry = function(e11) {
      var i4 = void 0 === e11 ? {} : e11, s5 = i4.maxAttempts, n6 = i4.delayFactor, r5 = i4.fuzzFactor, a6 = i4.initialDelay;
      return new t4({ maxAttempts: s5 || this.maxAttempts_, delayFactor: n6 || this.delayFactor_, fuzzFactor: r5 || this.fuzzFactor_, initialDelay: a6 || this.initialDelay_ });
    }, e10;
  }(), t4 = function() {
    function e10(e11) {
      this.maxAttempts_ = e11.maxAttempts, this.delayFactor_ = e11.delayFactor, this.fuzzFactor_ = e11.fuzzFactor, this.currentDelay_ = e11.initialDelay, this.currentAttempt_ = 1;
    }
    var t5 = e10.prototype;
    return t5.moveToNextAttempt = function() {
      this.currentAttempt_++;
      var e11 = this.currentDelay_ * this.delayFactor_;
      this.currentDelay_ = this.currentDelay_ + e11;
    }, t5.shouldRetry = function() {
      return this.currentAttempt_ < this.maxAttempts_;
    }, t5.getCurrentDelay = function() {
      return this.currentDelay_;
    }, t5.getCurrentMinPossibleDelay = function() {
      return (1 - this.fuzzFactor_) * this.currentDelay_;
    }, t5.getCurrentMaxPossibleDelay = function() {
      return (1 + this.fuzzFactor_) * this.currentDelay_;
    }, t5.getCurrentFuzzedDelay = function() {
      var e11 = this.getCurrentMinPossibleDelay(), t6 = this.getCurrentMaxPossibleDelay();
      return e11 + Math.random() * (t6 - e11);
    }, e10;
  }();
  return ue = e9;
}
function Te() {
  if (pe) return ce;
  pe = 1;
  var e9 = y3();
  function t4(e10) {
    return void 0 === e10 && (e10 = ""), e10.toLowerCase().split(";").reduce(function(e11, t5) {
      var i3 = t5.split("="), s5 = i3[0], n6 = i3[1];
      return "charset" === s5.trim() ? n6.trim() : e11;
    }, "utf-8");
  }
  return ce = function(i3, s5) {
    return void 0 === s5 && (s5 = false), function(n6, r5, a6) {
      if (n6) i3(n6);
      else if (r5.statusCode >= 400 && r5.statusCode <= 599) {
        var o4 = a6;
        if (s5) if (e9.TextDecoder) {
          var l6 = t4(r5.headers && r5.headers["content-type"]);
          try {
            o4 = new TextDecoder(l6).decode(a6);
          } catch (h2) {
          }
        } else o4 = String.fromCharCode.apply(null, new Uint8Array(a6));
        i3({ cause: o4 });
      } else i3(null, a6);
    };
  };
}
function Se() {
  if (me) return ge.exports;
  me = 1;
  var e9 = y3(), t4 = ye(), i3 = _e(), s5 = be(), n6 = ve();
  h2.httpHandler = Te(), h2.requestInterceptorsStorage = new s5(), h2.responseInterceptorsStorage = new s5(), h2.retryManager = new n6();
  var r5 = function(e10) {
    var t5 = {};
    return e10 ? (e10.trim().split("\n").forEach(function(e11) {
      var i4 = e11.indexOf(":"), s6 = e11.slice(0, i4).trim().toLowerCase(), n7 = e11.slice(i4 + 1).trim();
      void 0 === t5[s6] ? t5[s6] = n7 : Array.isArray(t5[s6]) ? t5[s6].push(n7) : t5[s6] = [t5[s6], n7];
    }), t5) : t5;
  };
  function a6(e10, t5) {
    for (var i4 = 0; i4 < e10.length; i4++) t5(e10[i4]);
  }
  function o4(e10) {
    for (var t5 in e10) if (e10.hasOwnProperty(t5)) return false;
    return true;
  }
  function l6(e10, s6, n7) {
    var r6 = e10;
    return i3(s6) ? (n7 = s6, "string" == typeof e10 && (r6 = { uri: e10 })) : r6 = t4({}, s6, { uri: e10 }), r6.callback = n7, r6;
  }
  function h2(e10, t5, i4) {
    return u4(t5 = l6(e10, t5, i4));
  }
  function u4(e10) {
    if (void 0 === e10.callback) throw new Error("callback argument missing");
    if (e10.requestType && h2.requestInterceptorsStorage.getIsEnabled()) {
      var t5 = { uri: e10.uri || e10.url, headers: e10.headers || {}, body: e10.body, metadata: e10.metadata || {}, retry: e10.retry, timeout: e10.timeout }, i4 = h2.requestInterceptorsStorage.execute(e10.requestType, t5);
      e10.uri = i4.uri, e10.headers = i4.headers, e10.body = i4.body, e10.metadata = i4.metadata, e10.retry = i4.retry, e10.timeout = i4.timeout;
    }
    var s6 = false, n7 = function(t6, i5, n8) {
      s6 || (s6 = true, e10.callback(t6, i5, n8));
    };
    function a7() {
      4 !== f5.readyState || h2.responseInterceptorsStorage.getIsEnabled() || setTimeout(p2, 0);
    }
    function l7() {
      var e11 = void 0;
      if (e11 = f5.response ? f5.response : f5.responseText || d5(f5), E4) try {
        e11 = JSON.parse(e11);
      } catch (t6) {
      }
      return e11;
    }
    function c4(t6) {
      if (clearTimeout(y4), clearTimeout(e10.retryTimeout), t6 instanceof Error || (t6 = new Error("" + (t6 || "Unknown XMLHttpRequest Error"))), t6.statusCode = 0, g4 || !h2.retryManager.getIsEnabled() || !e10.retry || !e10.retry.shouldRetry()) {
        if (e10.requestType && h2.responseInterceptorsStorage.getIsEnabled()) {
          var i5 = { headers: w5.headers || {}, body: w5.body, responseUrl: f5.responseURL, responseType: f5.responseType }, s7 = h2.responseInterceptorsStorage.execute(e10.requestType, i5);
          w5.body = s7.body, w5.headers = s7.headers;
        }
        return n7(t6, w5);
      }
      e10.retryTimeout = setTimeout(function() {
        e10.retry.moveToNextAttempt(), e10.xhr = f5, u4(e10);
      }, e10.retry.getCurrentFuzzedDelay());
    }
    function p2() {
      if (!g4) {
        var t6;
        clearTimeout(y4), clearTimeout(e10.retryTimeout), t6 = e10.useXDR && void 0 === f5.status ? 200 : 1223 === f5.status ? 204 : f5.status;
        var i5 = w5, s7 = null;
        if (0 !== t6 ? (i5 = { body: l7(), statusCode: t6, method: b3, headers: {}, url: _2, rawRequest: f5 }, f5.getAllResponseHeaders && (i5.headers = r5(f5.getAllResponseHeaders()))) : s7 = new Error("Internal XMLHttpRequest Error"), e10.requestType && h2.responseInterceptorsStorage.getIsEnabled()) {
          var a8 = { headers: i5.headers || {}, body: i5.body, responseUrl: f5.responseURL, responseType: f5.responseType }, o5 = h2.responseInterceptorsStorage.execute(e10.requestType, a8);
          i5.body = o5.body, i5.headers = o5.headers;
        }
        return n7(s7, i5, i5.body);
      }
    }
    var m5, g4, f5 = e10.xhr || null;
    f5 || (f5 = e10.cors || e10.useXDR ? new h2.XDomainRequest() : new h2.XMLHttpRequest());
    var y4, _2 = f5.url = e10.uri || e10.url, b3 = f5.method = e10.method || "GET", v5 = e10.body || e10.data, T2 = f5.headers = e10.headers || {}, S4 = !!e10.sync, E4 = false, w5 = { body: void 0, headers: {}, statusCode: 0, method: b3, url: _2, rawRequest: f5 };
    if ("json" in e10 && false !== e10.json && (E4 = true, T2.accept || T2.Accept || (T2.Accept = "application/json"), "GET" !== b3 && "HEAD" !== b3 && (T2["content-type"] || T2["Content-Type"] || (T2["Content-Type"] = "application/json"), v5 = JSON.stringify(true === e10.json ? v5 : e10.json))), f5.onreadystatechange = a7, f5.onload = p2, f5.onerror = c4, f5.onprogress = function() {
    }, f5.onabort = function() {
      g4 = true, clearTimeout(e10.retryTimeout);
    }, f5.ontimeout = c4, f5.open(b3, _2, !S4, e10.username, e10.password), S4 || (f5.withCredentials = !!e10.withCredentials), !S4 && e10.timeout > 0 && (y4 = setTimeout(function() {
      if (!g4) {
        g4 = true, f5.abort("timeout");
        var e11 = new Error("XMLHttpRequest timeout");
        e11.code = "ETIMEDOUT", c4(e11);
      }
    }, e10.timeout)), f5.setRequestHeader) for (m5 in T2) T2.hasOwnProperty(m5) && f5.setRequestHeader(m5, T2[m5]);
    else if (e10.headers && !o4(e10.headers)) throw new Error("Headers cannot be set on an XDomainRequest object");
    return "responseType" in e10 && (f5.responseType = e10.responseType), "beforeSend" in e10 && "function" == typeof e10.beforeSend && e10.beforeSend(f5), f5.send(v5 || null), f5;
  }
  function d5(e10) {
    try {
      if ("document" === e10.responseType) return e10.responseXML;
      var t5 = e10.responseXML && "parsererror" === e10.responseXML.documentElement.nodeName;
      if ("" === e10.responseType && !t5) return e10.responseXML;
    } catch (i4) {
    }
    return null;
  }
  function c3() {
  }
  return ge.exports = h2, ge.exports.default = h2, h2.XMLHttpRequest = e9.XMLHttpRequest || c3, h2.XDomainRequest = "withCredentials" in new h2.XMLHttpRequest() ? h2.XMLHttpRequest : e9.XDomainRequest, a6(["get", "put", "post", "patch", "head", "delete"], function(e10) {
    h2["delete" === e10 ? "del" : e10] = function(t5, i4, s6) {
      return (i4 = l6(t5, i4, s6)).method = e10.toUpperCase(), u4(i4);
    };
  }), ge.exports;
}
var Ee = o2(Se());
var we;
var Ce;
var ke;
var Ie;
var xe;
var Ae;
var De;
var Pe = { exports: {} };
function Le() {
  if (Ce) return we;
  Ce = 1;
  var e9 = se(), t4 = Object.create || /* @__PURE__ */ function() {
    function e10() {
    }
    return function(t5) {
      if (1 !== arguments.length) throw new Error("Object.create shim only accepts one parameter.");
      return e10.prototype = t5, new e10();
    };
  }();
  function i3(e10, t5) {
    this.name = "ParsingError", this.code = e10.code, this.message = t5 || e10.message;
  }
  function s5(e10) {
    function t5(e11, t6, i5, s6) {
      return 3600 * (0 | e11) + 60 * (0 | t6) + (0 | i5) + (0 | s6) / 1e3;
    }
    var i4 = e10.match(/^(\d+):(\d{1,2})(:\d{1,2})?\.(\d{3})/);
    return i4 ? i4[3] ? t5(i4[1], i4[2], i4[3].replace(":", ""), i4[4]) : i4[1] > 59 ? t5(i4[1], i4[2], 0, i4[4]) : t5(0, i4[1], i4[2], i4[4]) : null;
  }
  function n6() {
    this.values = t4(null);
  }
  function r5(e10, t5, i4, s6) {
    var n7 = s6 ? e10.split(s6) : [e10];
    for (var r6 in n7) if ("string" == typeof n7[r6]) {
      var a7 = n7[r6].split(i4);
      if (2 === a7.length) t5(a7[0].trim(), a7[1].trim());
    }
  }
  function a6(e10, t5, a7) {
    var o5 = e10;
    function l7() {
      var t6 = s5(e10);
      if (null === t6) throw new i3(i3.Errors.BadTimeStamp, "Malformed timestamp: " + o5);
      return e10 = e10.replace(/^[^\sa-zA-Z-]+/, ""), t6;
    }
    function h3(e11, t6) {
      var i4 = new n6();
      r5(e11, function(e12, t7) {
        switch (e12) {
          case "region":
            for (var s6 = a7.length - 1; s6 >= 0; s6--) if (a7[s6].id === t7) {
              i4.set(e12, a7[s6].region);
              break;
            }
            break;
          case "vertical":
            i4.alt(e12, t7, ["rl", "lr"]);
            break;
          case "line":
            var n7 = t7.split(","), r6 = n7[0];
            i4.integer(e12, r6), i4.percent(e12, r6) && i4.set("snapToLines", false), i4.alt(e12, r6, ["auto"]), 2 === n7.length && i4.alt("lineAlign", n7[1], ["start", "center", "end"]);
            break;
          case "position":
            n7 = t7.split(","), i4.percent(e12, n7[0]), 2 === n7.length && i4.alt("positionAlign", n7[1], ["start", "center", "end"]);
            break;
          case "size":
            i4.percent(e12, t7);
            break;
          case "align":
            i4.alt(e12, t7, ["start", "center", "end", "left", "right"]);
        }
      }, /:/, /\s/), t6.region = i4.get("region", null), t6.vertical = i4.get("vertical", "");
      try {
        t6.line = i4.get("line", "auto");
      } catch (s6) {
      }
      t6.lineAlign = i4.get("lineAlign", "start"), t6.snapToLines = i4.get("snapToLines", true), t6.size = i4.get("size", 100);
      try {
        t6.align = i4.get("align", "center");
      } catch (s6) {
        t6.align = i4.get("align", "middle");
      }
      try {
        t6.position = i4.get("position", "auto");
      } catch (s6) {
        t6.position = i4.get("position", { start: 0, left: 0, center: 50, middle: 50, end: 100, right: 100 }, t6.align);
      }
      t6.positionAlign = i4.get("positionAlign", { start: "start", left: "start", center: "center", middle: "center", end: "end", right: "end" }, t6.align);
    }
    function u5() {
      e10 = e10.replace(/^\s+/, "");
    }
    if (u5(), t5.startTime = l7(), u5(), "-->" !== e10.substr(0, 3)) throw new i3(i3.Errors.BadTimeStamp, "Malformed time stamp (time stamps must be separated by '-->'): " + o5);
    e10 = e10.substr(3), u5(), t5.endTime = l7(), u5(), h3(e10, t5);
  }
  i3.prototype = t4(Error.prototype), i3.prototype.constructor = i3, i3.Errors = { BadSignature: { code: 0, message: "Malformed WebVTT signature." }, BadTimeStamp: { code: 1, message: "Malformed time stamp." } }, n6.prototype = { set: function(e10, t5) {
    this.get(e10) || "" === t5 || (this.values[e10] = t5);
  }, get: function(e10, t5, i4) {
    return i4 ? this.has(e10) ? this.values[e10] : t5[i4] : this.has(e10) ? this.values[e10] : t5;
  }, has: function(e10) {
    return e10 in this.values;
  }, alt: function(e10, t5, i4) {
    for (var s6 = 0; s6 < i4.length; ++s6) if (t5 === i4[s6]) {
      this.set(e10, t5);
      break;
    }
  }, integer: function(e10, t5) {
    /^-?\d+$/.test(t5) && this.set(e10, parseInt(t5, 10));
  }, percent: function(e10, t5) {
    return !!(t5.match(/^([\d]{1,3})(\.[\d]*)?%$/) && (t5 = parseFloat(t5)) >= 0 && t5 <= 100) && (this.set(e10, t5), true);
  } };
  var o4 = e9.createElement && e9.createElement("textarea"), l6 = { c: "span", i: "i", b: "b", u: "u", ruby: "ruby", rt: "rt", v: "span", lang: "span" }, h2 = { white: "rgba(255,255,255,1)", lime: "rgba(0,255,0,1)", cyan: "rgba(0,255,255,1)", red: "rgba(255,0,0,1)", yellow: "rgba(255,255,0,1)", magenta: "rgba(255,0,255,1)", blue: "rgba(0,0,255,1)", black: "rgba(0,0,0,1)" }, u4 = { v: "title", lang: "lang" }, d5 = { rt: "ruby" };
  function c3(e10, t5) {
    function i4() {
      if (!t5) return null;
      function e11(e12) {
        return t5 = t5.substr(e12.length), e12;
      }
      var i5 = t5.match(/^([^<]*)(<[^>]*>?)?/);
      return e11(i5[1] ? i5[1] : i5[2]);
    }
    function n7(e11) {
      return o4.innerHTML = e11, e11 = o4.textContent, o4.textContent = "", e11;
    }
    function r6(e11, t6) {
      return !d5[t6.localName] || d5[t6.localName] === e11.localName;
    }
    function a7(t6, i5) {
      var s6 = l6[t6];
      if (!s6) return null;
      var n8 = e10.document.createElement(s6), r7 = u4[t6];
      return r7 && i5 && (n8[r7] = i5.trim()), n8;
    }
    for (var c4, p3 = e10.document.createElement("div"), m6 = p3, g5 = []; null !== (c4 = i4()); ) if ("<" !== c4[0]) m6.appendChild(e10.document.createTextNode(n7(c4)));
    else {
      if ("/" === c4[1]) {
        g5.length && g5[g5.length - 1] === c4.substr(2).replace(">", "") && (g5.pop(), m6 = m6.parentNode);
        continue;
      }
      var f6, y5 = s5(c4.substr(1, c4.length - 2));
      if (y5) {
        f6 = e10.document.createProcessingInstruction("timestamp", y5), m6.appendChild(f6);
        continue;
      }
      var _3 = c4.match(/^<([^.\s/0-9>]+)(\.[^\s\\>]+)?([^>\\]+)?(\\?)>?$/);
      if (!_3) continue;
      if (!(f6 = a7(_3[1], _3[3]))) continue;
      if (!r6(m6, f6)) continue;
      if (_3[2]) {
        var b4 = _3[2].split(".");
        b4.forEach(function(e11) {
          var t6 = /^bg_/.test(e11), i5 = t6 ? e11.slice(3) : e11;
          if (h2.hasOwnProperty(i5)) {
            var s6 = t6 ? "background-color" : "color", n8 = h2[i5];
            f6.style[s6] = n8;
          }
        }), f6.className = b4.join(" ");
      }
      g5.push(_3[1]), m6.appendChild(f6), m6 = f6;
    }
    return p3;
  }
  var p2 = [[1470, 1470], [1472, 1472], [1475, 1475], [1478, 1478], [1488, 1514], [1520, 1524], [1544, 1544], [1547, 1547], [1549, 1549], [1563, 1563], [1566, 1610], [1645, 1647], [1649, 1749], [1765, 1766], [1774, 1775], [1786, 1805], [1807, 1808], [1810, 1839], [1869, 1957], [1969, 1969], [1984, 2026], [2036, 2037], [2042, 2042], [2048, 2069], [2074, 2074], [2084, 2084], [2088, 2088], [2096, 2110], [2112, 2136], [2142, 2142], [2208, 2208], [2210, 2220], [8207, 8207], [64285, 64285], [64287, 64296], [64298, 64310], [64312, 64316], [64318, 64318], [64320, 64321], [64323, 64324], [64326, 64449], [64467, 64829], [64848, 64911], [64914, 64967], [65008, 65020], [65136, 65140], [65142, 65276], [67584, 67589], [67592, 67592], [67594, 67637], [67639, 67640], [67644, 67644], [67647, 67669], [67671, 67679], [67840, 67867], [67872, 67897], [67903, 67903], [67968, 68023], [68030, 68031], [68096, 68096], [68112, 68115], [68117, 68119], [68121, 68147], [68160, 68167], [68176, 68184], [68192, 68223], [68352, 68405], [68416, 68437], [68440, 68466], [68472, 68479], [68608, 68680], [126464, 126467], [126469, 126495], [126497, 126498], [126500, 126500], [126503, 126503], [126505, 126514], [126516, 126519], [126521, 126521], [126523, 126523], [126530, 126530], [126535, 126535], [126537, 126537], [126539, 126539], [126541, 126543], [126545, 126546], [126548, 126548], [126551, 126551], [126553, 126553], [126555, 126555], [126557, 126557], [126559, 126559], [126561, 126562], [126564, 126564], [126567, 126570], [126572, 126578], [126580, 126583], [126585, 126588], [126590, 126590], [126592, 126601], [126603, 126619], [126625, 126627], [126629, 126633], [126635, 126651], [1114109, 1114109]];
  function m5(e10) {
    for (var t5 = 0; t5 < p2.length; t5++) {
      var i4 = p2[t5];
      if (e10 >= i4[0] && e10 <= i4[1]) return true;
    }
    return false;
  }
  function g4(e10) {
    var t5 = [], i4 = "";
    if (!e10 || !e10.childNodes) return "ltr";
    function s6(e11, t6) {
      for (var i5 = t6.childNodes.length - 1; i5 >= 0; i5--) e11.push(t6.childNodes[i5]);
    }
    function n7(e11) {
      if (!e11 || !e11.length) return null;
      var t6 = e11.pop(), i5 = t6.textContent || t6.innerText;
      if (i5) {
        var r7 = i5.match(/^.*(\n|\r)/);
        return r7 ? (e11.length = 0, r7[0]) : i5;
      }
      return "ruby" === t6.tagName ? n7(e11) : t6.childNodes ? (s6(e11, t6), n7(e11)) : void 0;
    }
    for (s6(t5, e10); i4 = n7(t5); ) for (var r6 = 0; r6 < i4.length; r6++) if (m5(i4.charCodeAt(r6))) return "rtl";
    return "ltr";
  }
  function f5(e10) {
    if ("number" == typeof e10.line && (e10.snapToLines || e10.line >= 0 && e10.line <= 100)) return e10.line;
    if (!e10.track || !e10.track.textTrackList || !e10.track.textTrackList.mediaElement) return -1;
    for (var t5 = e10.track, i4 = t5.textTrackList, s6 = 0, n7 = 0; n7 < i4.length && i4[n7] !== t5; n7++) "showing" === i4[n7].mode && s6++;
    return -1 * ++s6;
  }
  function y4() {
  }
  function _2(e10, t5, i4) {
    y4.call(this), this.cue = t5, this.cueDiv = c3(e10, t5.text);
    var s6 = { color: "rgba(255, 255, 255, 1)", backgroundColor: "rgba(0, 0, 0, 0.8)", position: "relative", left: 0, right: 0, top: 0, bottom: 0, display: "inline", writingMode: "" === t5.vertical ? "horizontal-tb" : "lr" === t5.vertical ? "vertical-lr" : "vertical-rl", unicodeBidi: "plaintext" };
    this.applyStyles(s6, this.cueDiv), this.div = e10.document.createElement("div"), s6 = { direction: g4(this.cueDiv), writingMode: "" === t5.vertical ? "horizontal-tb" : "lr" === t5.vertical ? "vertical-lr" : "vertical-rl", unicodeBidi: "plaintext", textAlign: "middle" === t5.align ? "center" : t5.align, font: i4.font, whiteSpace: "pre-line", position: "absolute" }, this.applyStyles(s6), this.div.appendChild(this.cueDiv);
    var n7 = 0;
    switch (t5.positionAlign) {
      case "start":
      case "line-left":
        n7 = t5.position;
        break;
      case "center":
        n7 = t5.position - t5.size / 2;
        break;
      case "end":
      case "line-right":
        n7 = t5.position - t5.size;
    }
    "" === t5.vertical ? this.applyStyles({ left: this.formatStyle(n7, "%"), width: this.formatStyle(t5.size, "%") }) : this.applyStyles({ top: this.formatStyle(n7, "%"), height: this.formatStyle(t5.size, "%") }), this.move = function(e11) {
      this.applyStyles({ top: this.formatStyle(e11.top, "px"), bottom: this.formatStyle(e11.bottom, "px"), left: this.formatStyle(e11.left, "px"), right: this.formatStyle(e11.right, "px"), height: this.formatStyle(e11.height, "px"), width: this.formatStyle(e11.width, "px") });
    };
  }
  function b3(e10) {
    var t5, i4, s6, n7;
    if (e10.div) {
      i4 = e10.div.offsetHeight, s6 = e10.div.offsetWidth, n7 = e10.div.offsetTop;
      var r6 = (r6 = e10.div.childNodes) && (r6 = r6[0]) && r6.getClientRects && r6.getClientRects();
      e10 = e10.div.getBoundingClientRect(), t5 = r6 ? Math.max(r6[0] && r6[0].height || 0, e10.height / r6.length) : 0;
    }
    this.left = e10.left, this.right = e10.right, this.top = e10.top || n7, this.height = e10.height || i4, this.bottom = e10.bottom || n7 + (e10.height || i4), this.width = e10.width || s6, this.lineHeight = void 0 !== t5 ? t5 : e10.lineHeight;
  }
  function v5(e10, t5, i4, s6) {
    function n7(e11, t6) {
      for (var n8, r7 = new b3(e11), a8 = 1, o6 = 0; o6 < t6.length; o6++) {
        for (; e11.overlapsOppositeAxis(i4, t6[o6]) || e11.within(i4) && e11.overlapsAny(s6); ) e11.move(t6[o6]);
        if (e11.within(i4)) return e11;
        var l8 = e11.intersectPercentage(i4);
        a8 > l8 && (n8 = new b3(e11), a8 = l8), e11 = new b3(r7);
      }
      return n8 || r7;
    }
    var r6 = new b3(t5), a7 = t5.cue, o5 = f5(a7), l7 = [];
    if (a7.snapToLines) {
      var h3;
      switch (a7.vertical) {
        case "":
          l7 = ["+y", "-y"], h3 = "height";
          break;
        case "rl":
          l7 = ["+x", "-x"], h3 = "width";
          break;
        case "lr":
          l7 = ["-x", "+x"], h3 = "width";
      }
      var u5 = r6.lineHeight, d6 = u5 * Math.round(o5), c4 = i4[h3] + u5, p3 = l7[0];
      Math.abs(d6) > c4 && (d6 = d6 < 0 ? -1 : 1, d6 *= Math.ceil(c4 / u5) * u5), o5 < 0 && (d6 += "" === a7.vertical ? i4.height : i4.width, l7 = l7.reverse()), r6.move(p3, d6);
    } else {
      var m6 = r6.lineHeight / i4.height * 100;
      switch (a7.lineAlign) {
        case "center":
          o5 -= m6 / 2;
          break;
        case "end":
          o5 -= m6;
      }
      switch (a7.vertical) {
        case "":
          t5.applyStyles({ top: t5.formatStyle(o5, "%") });
          break;
        case "rl":
          t5.applyStyles({ left: t5.formatStyle(o5, "%") });
          break;
        case "lr":
          t5.applyStyles({ right: t5.formatStyle(o5, "%") });
      }
      l7 = ["+y", "-x", "+x", "-y"], r6 = new b3(t5);
    }
    var g5 = n7(r6, l7);
    t5.move(g5.toCSSCompatValues(i4));
  }
  function T2() {
  }
  y4.prototype.applyStyles = function(e10, t5) {
    for (var i4 in t5 = t5 || this.div, e10) e10.hasOwnProperty(i4) && (t5.style[i4] = e10[i4]);
  }, y4.prototype.formatStyle = function(e10, t5) {
    return 0 === e10 ? 0 : e10 + t5;
  }, _2.prototype = t4(y4.prototype), _2.prototype.constructor = _2, b3.prototype.move = function(e10, t5) {
    switch (t5 = void 0 !== t5 ? t5 : this.lineHeight, e10) {
      case "+x":
        this.left += t5, this.right += t5;
        break;
      case "-x":
        this.left -= t5, this.right -= t5;
        break;
      case "+y":
        this.top += t5, this.bottom += t5;
        break;
      case "-y":
        this.top -= t5, this.bottom -= t5;
    }
  }, b3.prototype.overlaps = function(e10) {
    return this.left < e10.right && this.right > e10.left && this.top < e10.bottom && this.bottom > e10.top;
  }, b3.prototype.overlapsAny = function(e10) {
    for (var t5 = 0; t5 < e10.length; t5++) if (this.overlaps(e10[t5])) return true;
    return false;
  }, b3.prototype.within = function(e10) {
    return this.top >= e10.top && this.bottom <= e10.bottom && this.left >= e10.left && this.right <= e10.right;
  }, b3.prototype.overlapsOppositeAxis = function(e10, t5) {
    switch (t5) {
      case "+x":
        return this.left < e10.left;
      case "-x":
        return this.right > e10.right;
      case "+y":
        return this.top < e10.top;
      case "-y":
        return this.bottom > e10.bottom;
    }
  }, b3.prototype.intersectPercentage = function(e10) {
    return Math.max(0, Math.min(this.right, e10.right) - Math.max(this.left, e10.left)) * Math.max(0, Math.min(this.bottom, e10.bottom) - Math.max(this.top, e10.top)) / (this.height * this.width);
  }, b3.prototype.toCSSCompatValues = function(e10) {
    return { top: this.top - e10.top, bottom: e10.bottom - this.bottom, left: this.left - e10.left, right: e10.right - this.right, height: this.height, width: this.width };
  }, b3.getSimpleBoxPosition = function(e10) {
    var t5 = e10.div ? e10.div.offsetHeight : e10.tagName ? e10.offsetHeight : 0, i4 = e10.div ? e10.div.offsetWidth : e10.tagName ? e10.offsetWidth : 0, s6 = e10.div ? e10.div.offsetTop : e10.tagName ? e10.offsetTop : 0;
    return { left: (e10 = e10.div ? e10.div.getBoundingClientRect() : e10.tagName ? e10.getBoundingClientRect() : e10).left, right: e10.right, top: e10.top || s6, height: e10.height || t5, bottom: e10.bottom || s6 + (e10.height || t5), width: e10.width || i4 };
  }, T2.StringDecoder = function() {
    return { decode: function(e10) {
      if (!e10) return "";
      if ("string" != typeof e10) throw new Error("Error - expected string data.");
      return decodeURIComponent(encodeURIComponent(e10));
    } };
  }, T2.convertCueToDOMTree = function(e10, t5) {
    return e10 && t5 ? c3(e10, t5) : null;
  };
  var S4 = 0.05, E4 = "sans-serif", w5 = "1.5%";
  return T2.processCues = function(e10, t5, i4) {
    if (!e10 || !t5 || !i4) return null;
    for (; i4.firstChild; ) i4.removeChild(i4.firstChild);
    var s6 = e10.document.createElement("div");
    function n7(e11) {
      for (var t6 = 0; t6 < e11.length; t6++) if (e11[t6].hasBeenReset || !e11[t6].displayState) return true;
      return false;
    }
    if (s6.style.position = "absolute", s6.style.left = "0", s6.style.right = "0", s6.style.top = "0", s6.style.bottom = "0", s6.style.margin = w5, i4.appendChild(s6), n7(t5)) {
      var r6 = [], a7 = b3.getSimpleBoxPosition(s6), o5 = { font: Math.round(a7.height * S4 * 100) / 100 + "px " + E4 };
      !function() {
        for (var i5, n8, l8 = 0; l8 < t5.length; l8++) n8 = t5[l8], i5 = new _2(e10, n8, o5), s6.appendChild(i5.div), v5(e10, i5, a7, r6), n8.displayState = i5.div, r6.push(b3.getSimpleBoxPosition(i5));
      }();
    } else for (var l7 = 0; l7 < t5.length; l7++) s6.appendChild(t5[l7].displayState);
  }, T2.Parser = function(e10, t5, i4) {
    i4 || (i4 = t5, t5 = {}), t5 || (t5 = {}), this.window = e10, this.vttjs = t5, this.state = "INITIAL", this.buffer = "", this.decoder = i4 || new TextDecoder("utf8"), this.regionList = [];
  }, T2.Parser.prototype = { reportOrThrowError: function(e10) {
    if (!(e10 instanceof i3)) throw e10;
    this.onparsingerror && this.onparsingerror(e10);
  }, parse: function(e10) {
    var t5 = this;
    function o5() {
      for (var e11 = t5.buffer, i4 = 0; i4 < e11.length && "\r" !== e11[i4] && "\n" !== e11[i4]; ) ++i4;
      var s6 = e11.substr(0, i4);
      return "\r" === e11[i4] && ++i4, "\n" === e11[i4] && ++i4, t5.buffer = e11.substr(i4), s6;
    }
    function l7(e11) {
      var i4 = new n6();
      if (r5(e11, function(e12, t6) {
        switch (e12) {
          case "id":
            i4.set(e12, t6);
            break;
          case "width":
            i4.percent(e12, t6);
            break;
          case "lines":
            i4.integer(e12, t6);
            break;
          case "regionanchor":
          case "viewportanchor":
            var s7 = t6.split(",");
            if (2 !== s7.length) break;
            var r6 = new n6();
            if (r6.percent("x", s7[0]), r6.percent("y", s7[1]), !r6.has("x") || !r6.has("y")) break;
            i4.set(e12 + "X", r6.get("x")), i4.set(e12 + "Y", r6.get("y"));
            break;
          case "scroll":
            i4.alt(e12, t6, ["up"]);
        }
      }, /=/, /\s/), i4.has("id")) {
        var s6 = new (t5.vttjs.VTTRegion || t5.window.VTTRegion)();
        s6.width = i4.get("width", 100), s6.lines = i4.get("lines", 3), s6.regionAnchorX = i4.get("regionanchorX", 0), s6.regionAnchorY = i4.get("regionanchorY", 100), s6.viewportAnchorX = i4.get("viewportanchorX", 0), s6.viewportAnchorY = i4.get("viewportanchorY", 100), s6.scroll = i4.get("scroll", ""), t5.onregion && t5.onregion(s6), t5.regionList.push({ id: i4.get("id"), region: s6 });
      }
    }
    function h3(e11) {
      var i4 = new n6();
      r5(e11, function(e12, t6) {
        switch (e12) {
          case "MPEGT":
            i4.integer(e12 + "S", t6);
            break;
          case "LOCA":
            i4.set(e12 + "L", s5(t6));
        }
      }, /[^\d]:/, /,/), t5.ontimestampmap && t5.ontimestampmap({ MPEGTS: i4.get("MPEGTS"), LOCAL: i4.get("LOCAL") });
    }
    function u5(e11) {
      e11.match(/X-TIMESTAMP-MAP/) ? r5(e11, function(e12, t6) {
        if ("X-TIMESTAMP-MAP" === e12) h3(t6);
      }, /=/) : r5(e11, function(e12, t6) {
        if ("Region" === e12) l7(t6);
      }, /:/);
    }
    e10 && (t5.buffer += t5.decoder.decode(e10, { stream: true }));
    try {
      var d6;
      if ("INITIAL" === t5.state) {
        if (!/\r\n|\n/.test(t5.buffer)) return this;
        var c4 = (d6 = o5()).match(/^WEBVTT([ \t].*)?$/);
        if (!c4 || !c4[0]) throw new i3(i3.Errors.BadSignature);
        t5.state = "HEADER";
      }
      for (var p3 = false; t5.buffer; ) {
        if (!/\r\n|\n/.test(t5.buffer)) return this;
        switch (p3 ? p3 = false : d6 = o5(), t5.state) {
          case "HEADER":
            /:/.test(d6) ? u5(d6) : d6 || (t5.state = "ID");
            continue;
          case "NOTE":
            d6 || (t5.state = "ID");
            continue;
          case "ID":
            if (/^NOTE($|[ \t])/.test(d6)) {
              t5.state = "NOTE";
              break;
            }
            if (!d6) continue;
            t5.cue = new (t5.vttjs.VTTCue || t5.window.VTTCue)(0, 0, "");
            try {
              t5.cue.align = "center";
            } catch (g5) {
              t5.cue.align = "middle";
            }
            if (t5.state = "CUE", -1 === d6.indexOf("-->")) {
              t5.cue.id = d6;
              continue;
            }
          case "CUE":
            try {
              a6(d6, t5.cue, t5.regionList);
            } catch (g5) {
              t5.reportOrThrowError(g5), t5.cue = null, t5.state = "BADCUE";
              continue;
            }
            t5.state = "CUETEXT";
            continue;
          case "CUETEXT":
            var m6 = -1 !== d6.indexOf("-->");
            if (!d6 || m6 && (p3 = true)) {
              t5.oncue && t5.oncue(t5.cue), t5.cue = null, t5.state = "ID";
              continue;
            }
            t5.cue.text && (t5.cue.text += "\n"), t5.cue.text += d6.replace(/\u2028/g, "\n").replace(/u2029/g, "\n");
            continue;
          case "BADCUE":
            d6 || (t5.state = "ID");
            continue;
        }
      }
    } catch (g5) {
      t5.reportOrThrowError(g5), "CUETEXT" === t5.state && t5.cue && t5.oncue && t5.oncue(t5.cue), t5.cue = null, t5.state = "INITIAL" === t5.state ? "BADWEBVTT" : "BADCUE";
    }
    return this;
  }, flush: function() {
    var e10 = this;
    try {
      if (e10.buffer += e10.decoder.decode(), (e10.cue || "HEADER" === e10.state) && (e10.buffer += "\n\n", e10.parse()), "INITIAL" === e10.state) throw new i3(i3.Errors.BadSignature);
    } catch (t5) {
      e10.reportOrThrowError(t5);
    }
    return e10.onflush && e10.onflush(), this;
  } }, we = T2;
}
function Oe() {
  if (Ie) return ke;
  Ie = 1;
  var e9 = "auto", t4 = { "": 1, lr: 1, rl: 1 }, i3 = { start: 1, center: 1, end: 1, left: 1, right: 1, auto: 1, "line-left": 1, "line-right": 1 };
  function s5(e10) {
    return "string" == typeof e10 && (!!t4[e10.toLowerCase()] && e10.toLowerCase());
  }
  function n6(e10) {
    return "string" == typeof e10 && (!!i3[e10.toLowerCase()] && e10.toLowerCase());
  }
  function r5(t5, i4, r6) {
    this.hasBeenReset = false;
    var a6 = "", o4 = false, l6 = t5, h2 = i4, u4 = r6, d5 = null, c3 = "", p2 = true, m5 = "auto", g4 = "start", f5 = "auto", y4 = "auto", _2 = 100, b3 = "center";
    Object.defineProperties(this, { id: { enumerable: true, get: function() {
      return a6;
    }, set: function(e10) {
      a6 = "" + e10;
    } }, pauseOnExit: { enumerable: true, get: function() {
      return o4;
    }, set: function(e10) {
      o4 = !!e10;
    } }, startTime: { enumerable: true, get: function() {
      return l6;
    }, set: function(e10) {
      if ("number" != typeof e10) throw new TypeError("Start time must be set to a number.");
      l6 = e10, this.hasBeenReset = true;
    } }, endTime: { enumerable: true, get: function() {
      return h2;
    }, set: function(e10) {
      if ("number" != typeof e10) throw new TypeError("End time must be set to a number.");
      h2 = e10, this.hasBeenReset = true;
    } }, text: { enumerable: true, get: function() {
      return u4;
    }, set: function(e10) {
      u4 = "" + e10, this.hasBeenReset = true;
    } }, region: { enumerable: true, get: function() {
      return d5;
    }, set: function(e10) {
      d5 = e10, this.hasBeenReset = true;
    } }, vertical: { enumerable: true, get: function() {
      return c3;
    }, set: function(e10) {
      var t6 = s5(e10);
      if (false === t6) throw new SyntaxError("Vertical: an invalid or illegal direction string was specified.");
      c3 = t6, this.hasBeenReset = true;
    } }, snapToLines: { enumerable: true, get: function() {
      return p2;
    }, set: function(e10) {
      p2 = !!e10, this.hasBeenReset = true;
    } }, line: { enumerable: true, get: function() {
      return m5;
    }, set: function(t6) {
      if ("number" != typeof t6 && t6 !== e9) throw new SyntaxError("Line: an invalid number or illegal string was specified.");
      m5 = t6, this.hasBeenReset = true;
    } }, lineAlign: { enumerable: true, get: function() {
      return g4;
    }, set: function(e10) {
      var t6 = n6(e10);
      t6 ? (g4 = t6, this.hasBeenReset = true) : console.warn("lineAlign: an invalid or illegal string was specified.");
    } }, position: { enumerable: true, get: function() {
      return f5;
    }, set: function(e10) {
      if (e10 < 0 || e10 > 100) throw new Error("Position must be between 0 and 100.");
      f5 = e10, this.hasBeenReset = true;
    } }, positionAlign: { enumerable: true, get: function() {
      return y4;
    }, set: function(e10) {
      var t6 = n6(e10);
      t6 ? (y4 = t6, this.hasBeenReset = true) : console.warn("positionAlign: an invalid or illegal string was specified.");
    } }, size: { enumerable: true, get: function() {
      return _2;
    }, set: function(e10) {
      if (e10 < 0 || e10 > 100) throw new Error("Size must be between 0 and 100.");
      _2 = e10, this.hasBeenReset = true;
    } }, align: { enumerable: true, get: function() {
      return b3;
    }, set: function(e10) {
      var t6 = n6(e10);
      if (!t6) throw new SyntaxError("align: an invalid or illegal alignment string was specified.");
      b3 = t6, this.hasBeenReset = true;
    } } }), this.displayState = void 0;
  }
  return r5.prototype.getCueAsHTML = function() {
    return WebVTT.convertCueToDOMTree(window, this.text);
  }, ke = r5;
}
function Ne() {
  if (Ae) return xe;
  Ae = 1;
  var e9 = { "": true, up: true };
  function t4(t5) {
    return "string" == typeof t5 && (!!e9[t5.toLowerCase()] && t5.toLowerCase());
  }
  function i3(e10) {
    return "number" == typeof e10 && e10 >= 0 && e10 <= 100;
  }
  function s5() {
    var e10 = 100, s6 = 3, n6 = 0, r5 = 100, a6 = 0, o4 = 100, l6 = "";
    Object.defineProperties(this, { width: { enumerable: true, get: function() {
      return e10;
    }, set: function(t5) {
      if (!i3(t5)) throw new Error("Width must be between 0 and 100.");
      e10 = t5;
    } }, lines: { enumerable: true, get: function() {
      return s6;
    }, set: function(e11) {
      if ("number" != typeof e11) throw new TypeError("Lines must be set to a number.");
      s6 = e11;
    } }, regionAnchorY: { enumerable: true, get: function() {
      return r5;
    }, set: function(e11) {
      if (!i3(e11)) throw new Error("RegionAnchorX must be between 0 and 100.");
      r5 = e11;
    } }, regionAnchorX: { enumerable: true, get: function() {
      return n6;
    }, set: function(e11) {
      if (!i3(e11)) throw new Error("RegionAnchorY must be between 0 and 100.");
      n6 = e11;
    } }, viewportAnchorY: { enumerable: true, get: function() {
      return o4;
    }, set: function(e11) {
      if (!i3(e11)) throw new Error("ViewportAnchorY must be between 0 and 100.");
      o4 = e11;
    } }, viewportAnchorX: { enumerable: true, get: function() {
      return a6;
    }, set: function(e11) {
      if (!i3(e11)) throw new Error("ViewportAnchorX must be between 0 and 100.");
      a6 = e11;
    } }, scroll: { enumerable: true, get: function() {
      return l6;
    }, set: function(e11) {
      var i4 = t4(e11);
      false === i4 ? console.warn("Scroll: an invalid or illegal string was specified.") : l6 = i4;
    } } });
  }
  return xe = s5;
}
function Re() {
  if (De) return Pe.exports;
  De = 1;
  var e9 = y3(), t4 = Pe.exports = { WebVTT: Le(), VTTCue: Oe(), VTTRegion: Ne() };
  e9.vttjs = t4, e9.WebVTT = t4.WebVTT;
  var i3 = t4.VTTCue, s5 = t4.VTTRegion, n6 = e9.VTTCue, r5 = e9.VTTRegion;
  return t4.shim = function() {
    e9.VTTCue = i3, e9.VTTRegion = s5;
  }, t4.restore = function() {
    e9.VTTCue = n6, e9.VTTRegion = r5;
  }, e9.VTTCue || t4.shim(), Pe.exports;
}
var Me = o2(Re());
function Ue() {
  return Ue = Object.assign ? Object.assign.bind() : function(e9) {
    for (var t4 = 1; t4 < arguments.length; t4++) {
      var i3 = arguments[t4];
      for (var s5 in i3) ({}).hasOwnProperty.call(i3, s5) && (e9[s5] = i3[s5]);
    }
    return e9;
  }, Ue.apply(null, arguments);
}
var Be = "https://example.com";
var Fe = function(e9, t4) {
  if (/^[a-z]+:/i.test(t4)) return t4;
  /^data:/.test(e9) && (e9 = _.location && _.location.href || "");
  var i3 = /^\/\//.test(e9), s5 = !_.location && !/\/\//i.test(e9);
  e9 = new _.URL(e9, _.location || Be);
  var n6 = new URL(t4, e9);
  return s5 ? n6.href.slice(Be.length) : i3 ? n6.href.slice(n6.protocol.length) : n6.href;
};
var qe = function() {
  function e9() {
    this.listeners = {};
  }
  var t4 = e9.prototype;
  return t4.on = function(e10, t5) {
    this.listeners[e10] || (this.listeners[e10] = []), this.listeners[e10].push(t5);
  }, t4.off = function(e10, t5) {
    if (!this.listeners[e10]) return false;
    var i3 = this.listeners[e10].indexOf(t5);
    return this.listeners[e10] = this.listeners[e10].slice(0), this.listeners[e10].splice(i3, 1), i3 > -1;
  }, t4.trigger = function(e10) {
    var t5 = this.listeners[e10];
    if (t5) if (2 === arguments.length) for (var i3 = t5.length, s5 = 0; s5 < i3; ++s5) t5[s5].call(this, arguments[1]);
    else for (var n6 = Array.prototype.slice.call(arguments, 1), r5 = t5.length, a6 = 0; a6 < r5; ++a6) t5[a6].apply(this, n6);
  }, t4.dispose = function() {
    this.listeners = {};
  }, t4.pipe = function(e10) {
    this.on("data", function(t5) {
      e10.push(t5);
    });
  }, e9;
}();
var je = function(e9) {
  return _.atob ? _.atob(e9) : Buffer.from(e9, "base64").toString("binary");
};
function $e(e9) {
  for (var t4 = je(e9), i3 = new Uint8Array(t4.length), s5 = 0; s5 < t4.length; s5++) i3[s5] = t4.charCodeAt(s5);
  return i3;
}
var He = class extends qe {
  constructor() {
    super(), this.buffer = "";
  }
  push(e9) {
    let t4;
    for (this.buffer += e9, t4 = this.buffer.indexOf("\n"); t4 > -1; t4 = this.buffer.indexOf("\n")) this.trigger("data", this.buffer.substring(0, t4)), this.buffer = this.buffer.substring(t4 + 1);
  }
};
var Ve = String.fromCharCode(9);
var ze = function(e9) {
  const t4 = /([0-9.]*)?@?([0-9.]*)?/.exec(e9 || ""), i3 = {};
  return t4[1] && (i3.length = parseInt(t4[1], 10)), t4[2] && (i3.offset = parseInt(t4[2], 10)), i3;
};
var We = function() {
  return new RegExp('(?:^|,)((?:[^=]*)=(?:"[^"]*"|[^,]*))');
};
var Ge = function(e9) {
  const t4 = {};
  if (!e9) return t4;
  const i3 = e9.split(We());
  let s5, n6 = i3.length;
  for (; n6--; ) "" !== i3[n6] && (s5 = /([^=]*)=(.*)/.exec(i3[n6]).slice(1), s5[0] = s5[0].replace(/^\s+|\s+$/g, ""), s5[1] = s5[1].replace(/^\s+|\s+$/g, ""), s5[1] = s5[1].replace(/^['"](.*)['"]$/g, "$1"), t4[s5[0]] = s5[1]);
  return t4;
};
var Xe = (e9) => {
  const t4 = e9.split("x"), i3 = {};
  return t4[0] && (i3.width = parseInt(t4[0], 10)), t4[1] && (i3.height = parseInt(t4[1], 10)), i3;
};
var Ke = class extends qe {
  constructor() {
    super(), this.customParsers = [], this.tagMappers = [];
  }
  push(e9) {
    let t4, i3;
    if (0 === (e9 = e9.trim()).length) return;
    if ("#" !== e9[0]) return void this.trigger("data", { type: "uri", uri: e9 });
    this.tagMappers.reduce((t5, i4) => {
      const s5 = i4(e9);
      return s5 === e9 ? t5 : t5.concat([s5]);
    }, [e9]).forEach((e10) => {
      for (let t5 = 0; t5 < this.customParsers.length; t5++) if (this.customParsers[t5].call(this, e10)) return;
      if (0 === e10.indexOf("#EXT")) if (e10 = e10.replace("\r", ""), t4 = /^#EXTM3U/.exec(e10), t4) this.trigger("data", { type: "tag", tagType: "m3u" });
      else {
        if (t4 = /^#EXTINF:([0-9\.]*)?,?(.*)?$/.exec(e10), t4) return i3 = { type: "tag", tagType: "inf" }, t4[1] && (i3.duration = parseFloat(t4[1])), t4[2] && (i3.title = t4[2]), void this.trigger("data", i3);
        if (t4 = /^#EXT-X-TARGETDURATION:([0-9.]*)?/.exec(e10), t4) return i3 = { type: "tag", tagType: "targetduration" }, t4[1] && (i3.duration = parseInt(t4[1], 10)), void this.trigger("data", i3);
        if (t4 = /^#EXT-X-VERSION:([0-9.]*)?/.exec(e10), t4) return i3 = { type: "tag", tagType: "version" }, t4[1] && (i3.version = parseInt(t4[1], 10)), void this.trigger("data", i3);
        if (t4 = /^#EXT-X-MEDIA-SEQUENCE:(\-?[0-9.]*)?/.exec(e10), t4) return i3 = { type: "tag", tagType: "media-sequence" }, t4[1] && (i3.number = parseInt(t4[1], 10)), void this.trigger("data", i3);
        if (t4 = /^#EXT-X-DISCONTINUITY-SEQUENCE:(\-?[0-9.]*)?/.exec(e10), t4) return i3 = { type: "tag", tagType: "discontinuity-sequence" }, t4[1] && (i3.number = parseInt(t4[1], 10)), void this.trigger("data", i3);
        if (t4 = /^#EXT-X-PLAYLIST-TYPE:(.*)?$/.exec(e10), t4) return i3 = { type: "tag", tagType: "playlist-type" }, t4[1] && (i3.playlistType = t4[1]), void this.trigger("data", i3);
        if (t4 = /^#EXT-X-BYTERANGE:(.*)?$/.exec(e10), t4) return i3 = Ue(ze(t4[1]), { type: "tag", tagType: "byterange" }), void this.trigger("data", i3);
        if (t4 = /^#EXT-X-ALLOW-CACHE:(YES|NO)?/.exec(e10), t4) return i3 = { type: "tag", tagType: "allow-cache" }, t4[1] && (i3.allowed = !/NO/.test(t4[1])), void this.trigger("data", i3);
        if (t4 = /^#EXT-X-MAP:(.*)$/.exec(e10), t4) {
          if (i3 = { type: "tag", tagType: "map" }, t4[1]) {
            const e11 = Ge(t4[1]);
            e11.URI && (i3.uri = e11.URI), e11.BYTERANGE && (i3.byterange = ze(e11.BYTERANGE));
          }
          this.trigger("data", i3);
        } else {
          if (t4 = /^#EXT-X-STREAM-INF:(.*)$/.exec(e10), t4) return i3 = { type: "tag", tagType: "stream-inf" }, t4[1] && (i3.attributes = Ge(t4[1]), i3.attributes.RESOLUTION && (i3.attributes.RESOLUTION = Xe(i3.attributes.RESOLUTION)), i3.attributes.BANDWIDTH && (i3.attributes.BANDWIDTH = parseInt(i3.attributes.BANDWIDTH, 10)), i3.attributes["FRAME-RATE"] && (i3.attributes["FRAME-RATE"] = parseFloat(i3.attributes["FRAME-RATE"])), i3.attributes["PROGRAM-ID"] && (i3.attributes["PROGRAM-ID"] = parseInt(i3.attributes["PROGRAM-ID"], 10))), void this.trigger("data", i3);
          if (t4 = /^#EXT-X-MEDIA:(.*)$/.exec(e10), t4) return i3 = { type: "tag", tagType: "media" }, t4[1] && (i3.attributes = Ge(t4[1])), void this.trigger("data", i3);
          if (t4 = /^#EXT-X-ENDLIST/.exec(e10), t4) this.trigger("data", { type: "tag", tagType: "endlist" });
          else if (t4 = /^#EXT-X-DISCONTINUITY/.exec(e10), t4) this.trigger("data", { type: "tag", tagType: "discontinuity" });
          else {
            if (t4 = /^#EXT-X-PROGRAM-DATE-TIME:(.*)$/.exec(e10), t4) return i3 = { type: "tag", tagType: "program-date-time" }, t4[1] && (i3.dateTimeString = t4[1], i3.dateTimeObject = new Date(t4[1])), void this.trigger("data", i3);
            if (t4 = /^#EXT-X-KEY:(.*)$/.exec(e10), t4) return i3 = { type: "tag", tagType: "key" }, t4[1] && (i3.attributes = Ge(t4[1]), i3.attributes.IV && ("0x" === i3.attributes.IV.substring(0, 2).toLowerCase() && (i3.attributes.IV = i3.attributes.IV.substring(2)), i3.attributes.IV = i3.attributes.IV.match(/.{8}/g), i3.attributes.IV[0] = parseInt(i3.attributes.IV[0], 16), i3.attributes.IV[1] = parseInt(i3.attributes.IV[1], 16), i3.attributes.IV[2] = parseInt(i3.attributes.IV[2], 16), i3.attributes.IV[3] = parseInt(i3.attributes.IV[3], 16), i3.attributes.IV = new Uint32Array(i3.attributes.IV))), void this.trigger("data", i3);
            if (t4 = /^#EXT-X-START:(.*)$/.exec(e10), t4) return i3 = { type: "tag", tagType: "start" }, t4[1] && (i3.attributes = Ge(t4[1]), i3.attributes["TIME-OFFSET"] = parseFloat(i3.attributes["TIME-OFFSET"]), i3.attributes.PRECISE = /YES/.test(i3.attributes.PRECISE)), void this.trigger("data", i3);
            if (t4 = /^#EXT-X-CUE-OUT-CONT:(.*)?$/.exec(e10), t4) return i3 = { type: "tag", tagType: "cue-out-cont" }, t4[1] ? i3.data = t4[1] : i3.data = "", void this.trigger("data", i3);
            if (t4 = /^#EXT-X-CUE-OUT:(.*)?$/.exec(e10), t4) return i3 = { type: "tag", tagType: "cue-out" }, t4[1] ? i3.data = t4[1] : i3.data = "", void this.trigger("data", i3);
            if (t4 = /^#EXT-X-CUE-IN:?(.*)?$/.exec(e10), t4) return i3 = { type: "tag", tagType: "cue-in" }, t4[1] ? i3.data = t4[1] : i3.data = "", void this.trigger("data", i3);
            if (t4 = /^#EXT-X-SKIP:(.*)$/.exec(e10), t4 && t4[1]) return i3 = { type: "tag", tagType: "skip" }, i3.attributes = Ge(t4[1]), i3.attributes.hasOwnProperty("SKIPPED-SEGMENTS") && (i3.attributes["SKIPPED-SEGMENTS"] = parseInt(i3.attributes["SKIPPED-SEGMENTS"], 10)), i3.attributes.hasOwnProperty("RECENTLY-REMOVED-DATERANGES") && (i3.attributes["RECENTLY-REMOVED-DATERANGES"] = i3.attributes["RECENTLY-REMOVED-DATERANGES"].split(Ve)), void this.trigger("data", i3);
            if (t4 = /^#EXT-X-PART:(.*)$/.exec(e10), t4 && t4[1]) return i3 = { type: "tag", tagType: "part" }, i3.attributes = Ge(t4[1]), ["DURATION"].forEach(function(e11) {
              i3.attributes.hasOwnProperty(e11) && (i3.attributes[e11] = parseFloat(i3.attributes[e11]));
            }), ["INDEPENDENT", "GAP"].forEach(function(e11) {
              i3.attributes.hasOwnProperty(e11) && (i3.attributes[e11] = /YES/.test(i3.attributes[e11]));
            }), i3.attributes.hasOwnProperty("BYTERANGE") && (i3.attributes.byterange = ze(i3.attributes.BYTERANGE)), void this.trigger("data", i3);
            if (t4 = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(e10), t4 && t4[1]) return i3 = { type: "tag", tagType: "server-control" }, i3.attributes = Ge(t4[1]), ["CAN-SKIP-UNTIL", "PART-HOLD-BACK", "HOLD-BACK"].forEach(function(e11) {
              i3.attributes.hasOwnProperty(e11) && (i3.attributes[e11] = parseFloat(i3.attributes[e11]));
            }), ["CAN-SKIP-DATERANGES", "CAN-BLOCK-RELOAD"].forEach(function(e11) {
              i3.attributes.hasOwnProperty(e11) && (i3.attributes[e11] = /YES/.test(i3.attributes[e11]));
            }), void this.trigger("data", i3);
            if (t4 = /^#EXT-X-PART-INF:(.*)$/.exec(e10), t4 && t4[1]) return i3 = { type: "tag", tagType: "part-inf" }, i3.attributes = Ge(t4[1]), ["PART-TARGET"].forEach(function(e11) {
              i3.attributes.hasOwnProperty(e11) && (i3.attributes[e11] = parseFloat(i3.attributes[e11]));
            }), void this.trigger("data", i3);
            if (t4 = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(e10), t4 && t4[1]) return i3 = { type: "tag", tagType: "preload-hint" }, i3.attributes = Ge(t4[1]), ["BYTERANGE-START", "BYTERANGE-LENGTH"].forEach(function(e11) {
              if (i3.attributes.hasOwnProperty(e11)) {
                i3.attributes[e11] = parseInt(i3.attributes[e11], 10);
                const t5 = "BYTERANGE-LENGTH" === e11 ? "length" : "offset";
                i3.attributes.byterange = i3.attributes.byterange || {}, i3.attributes.byterange[t5] = i3.attributes[e11], delete i3.attributes[e11];
              }
            }), void this.trigger("data", i3);
            if (t4 = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(e10), t4 && t4[1]) return i3 = { type: "tag", tagType: "rendition-report" }, i3.attributes = Ge(t4[1]), ["LAST-MSN", "LAST-PART"].forEach(function(e11) {
              i3.attributes.hasOwnProperty(e11) && (i3.attributes[e11] = parseInt(i3.attributes[e11], 10));
            }), void this.trigger("data", i3);
            if (t4 = /^#EXT-X-DATERANGE:(.*)$/.exec(e10), t4 && t4[1]) {
              i3 = { type: "tag", tagType: "daterange" }, i3.attributes = Ge(t4[1]), ["ID", "CLASS"].forEach(function(e12) {
                i3.attributes.hasOwnProperty(e12) && (i3.attributes[e12] = String(i3.attributes[e12]));
              }), ["START-DATE", "END-DATE"].forEach(function(e12) {
                i3.attributes.hasOwnProperty(e12) && (i3.attributes[e12] = new Date(i3.attributes[e12]));
              }), ["DURATION", "PLANNED-DURATION"].forEach(function(e12) {
                i3.attributes.hasOwnProperty(e12) && (i3.attributes[e12] = parseFloat(i3.attributes[e12]));
              }), ["END-ON-NEXT"].forEach(function(e12) {
                i3.attributes.hasOwnProperty(e12) && (i3.attributes[e12] = /YES/i.test(i3.attributes[e12]));
              }), ["SCTE35-CMD", " SCTE35-OUT", "SCTE35-IN"].forEach(function(e12) {
                i3.attributes.hasOwnProperty(e12) && (i3.attributes[e12] = i3.attributes[e12].toString(16));
              });
              const e11 = /^X-([A-Z]+-)+[A-Z]+$/;
              for (const t5 in i3.attributes) {
                if (!e11.test(t5)) continue;
                const s5 = /[0-9A-Fa-f]{6}/g.test(i3.attributes[t5]), n6 = /^\d+(\.\d+)?$/.test(i3.attributes[t5]);
                i3.attributes[t5] = s5 ? i3.attributes[t5].toString(16) : n6 ? parseFloat(i3.attributes[t5]) : String(i3.attributes[t5]);
              }
              this.trigger("data", i3);
            } else if (t4 = /^#EXT-X-INDEPENDENT-SEGMENTS/.exec(e10), t4) this.trigger("data", { type: "tag", tagType: "independent-segments" });
            else if (t4 = /^#EXT-X-I-FRAMES-ONLY/.exec(e10), t4) this.trigger("data", { type: "tag", tagType: "i-frames-only" });
            else {
              if (t4 = /^#EXT-X-CONTENT-STEERING:(.*)$/.exec(e10), t4) return i3 = { type: "tag", tagType: "content-steering" }, i3.attributes = Ge(t4[1]), void this.trigger("data", i3);
              if (t4 = /^#EXT-X-I-FRAME-STREAM-INF:(.*)$/.exec(e10), t4) return i3 = { type: "tag", tagType: "i-frame-playlist" }, i3.attributes = Ge(t4[1]), i3.attributes.URI && (i3.uri = i3.attributes.URI), i3.attributes.BANDWIDTH && (i3.attributes.BANDWIDTH = parseInt(i3.attributes.BANDWIDTH, 10)), i3.attributes.RESOLUTION && (i3.attributes.RESOLUTION = Xe(i3.attributes.RESOLUTION)), i3.attributes["AVERAGE-BANDWIDTH"] && (i3.attributes["AVERAGE-BANDWIDTH"] = parseInt(i3.attributes["AVERAGE-BANDWIDTH"], 10)), i3.attributes["FRAME-RATE"] && (i3.attributes["FRAME-RATE"] = parseFloat(i3.attributes["FRAME-RATE"])), void this.trigger("data", i3);
              if (t4 = /^#EXT-X-DEFINE:(.*)$/.exec(e10), t4) return i3 = { type: "tag", tagType: "define" }, i3.attributes = Ge(t4[1]), void this.trigger("data", i3);
              this.trigger("data", { type: "tag", data: e10.slice(4) });
            }
          }
        }
      }
      else this.trigger("data", { type: "comment", text: e10.slice(1) });
    });
  }
  addParser({ expression: e9, customType: t4, dataParser: i3, segment: s5 }) {
    "function" != typeof i3 && (i3 = (e10) => e10), this.customParsers.push((n6) => {
      if (e9.exec(n6)) return this.trigger("data", { type: "custom", data: i3(n6), customType: t4, segment: s5 }), true;
    });
  }
  addTagMapper({ expression: e9, map: t4 }) {
    const i3 = (i4) => e9.test(i4) ? t4(i4) : i4;
    this.tagMappers.push(i3);
  }
};
var Ye = (e9) => e9.toLowerCase().replace(/-(\w)/g, (e10) => e10[1].toUpperCase());
var Qe = function(e9) {
  const t4 = {};
  return Object.keys(e9).forEach(function(i3) {
    t4[Ye(i3)] = e9[i3];
  }), t4;
};
var Je = function(e9) {
  const { serverControl: t4, targetDuration: i3, partTargetDuration: s5 } = e9;
  if (!t4) return;
  const n6 = "#EXT-X-SERVER-CONTROL", r5 = "holdBack", a6 = "partHoldBack", o4 = i3 && 3 * i3, l6 = s5 && 2 * s5;
  i3 && !t4.hasOwnProperty(r5) && (t4[r5] = o4, this.trigger("info", { message: `${n6} defaulting HOLD-BACK to targetDuration * 3 (${o4}).` })), o4 && t4[r5] < o4 && (this.trigger("warn", { message: `${n6} clamping HOLD-BACK (${t4[r5]}) to targetDuration * 3 (${o4})` }), t4[r5] = o4), s5 && !t4.hasOwnProperty(a6) && (t4[a6] = 3 * s5, this.trigger("info", { message: `${n6} defaulting PART-HOLD-BACK to partTargetDuration * 3 (${t4[a6]}).` })), s5 && t4[a6] < l6 && (this.trigger("warn", { message: `${n6} clamping PART-HOLD-BACK (${t4[a6]}) to partTargetDuration * 2 (${l6}).` }), t4[a6] = l6);
};
var Ze = class extends qe {
  constructor(e9 = {}) {
    super(), this.lineStream = new He(), this.parseStream = new Ke(), this.lineStream.pipe(this.parseStream), this.mainDefinitions = e9.mainDefinitions || {}, this.params = new URL(e9.uri, "https://a.com").searchParams, this.lastProgramDateTime = null;
    const t4 = this, i3 = [];
    let s5, n6, r5 = {}, a6 = false;
    const o4 = function() {
    }, l6 = { AUDIO: {}, VIDEO: {}, "CLOSED-CAPTIONS": {}, SUBTITLES: {} }, h2 = "urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed";
    let u4 = 0;
    this.manifest = { allowCache: true, discontinuityStarts: [], dateRanges: [], iFramePlaylists: [], segments: [] };
    let d5 = 0, c3 = 0;
    const p2 = {};
    this.on("end", () => {
      r5.uri || !r5.parts && !r5.preloadHints || (!r5.map && s5 && (r5.map = s5), !r5.key && n6 && (r5.key = n6), r5.timeline || "number" != typeof u4 || (r5.timeline = u4), this.manifest.preloadSegment = r5);
    }), this.parseStream.on("data", function(e10) {
      let m5, g4;
      if (t4.manifest.definitions) {
        for (const i4 in t4.manifest.definitions) if (e10.uri && (e10.uri = e10.uri.replace(`{$${i4}}`, t4.manifest.definitions[i4])), e10.attributes) for (const s6 in e10.attributes) "string" == typeof e10.attributes[s6] && (e10.attributes[s6] = e10.attributes[s6].replace(`{$${i4}}`, t4.manifest.definitions[i4]));
      }
      ({ tag() {
        ({ version() {
          e10.version && (this.manifest.version = e10.version);
        }, "allow-cache"() {
          this.manifest.allowCache = e10.allowed, "allowed" in e10 || (this.trigger("info", { message: "defaulting allowCache to YES" }), this.manifest.allowCache = true);
        }, byterange() {
          const t5 = {};
          "length" in e10 && (r5.byterange = t5, t5.length = e10.length, "offset" in e10 || (e10.offset = d5)), "offset" in e10 && (r5.byterange = t5, t5.offset = e10.offset), d5 = t5.offset + t5.length;
        }, endlist() {
          this.manifest.endList = true;
        }, inf() {
          "mediaSequence" in this.manifest || (this.manifest.mediaSequence = 0, this.trigger("info", { message: "defaulting media sequence to zero" })), "discontinuitySequence" in this.manifest || (this.manifest.discontinuitySequence = 0, this.trigger("info", { message: "defaulting discontinuity sequence to zero" })), e10.title && (r5.title = e10.title), e10.duration > 0 && (r5.duration = e10.duration), 0 === e10.duration && (r5.duration = 0.01, this.trigger("info", { message: "updating zero segment duration to a small value" })), this.manifest.segments = i3;
        }, key() {
          if (e10.attributes) if ("NONE" !== e10.attributes.METHOD) if (e10.attributes.URI) {
            if ("com.apple.streamingkeydelivery" === e10.attributes.KEYFORMAT) return this.manifest.contentProtection = this.manifest.contentProtection || {}, void (this.manifest.contentProtection["com.apple.fps.1_0"] = { attributes: e10.attributes });
            if ("com.microsoft.playready" === e10.attributes.KEYFORMAT) return this.manifest.contentProtection = this.manifest.contentProtection || {}, void (this.manifest.contentProtection["com.microsoft.playready"] = { uri: e10.attributes.URI });
            if (e10.attributes.KEYFORMAT === h2) {
              return -1 === ["SAMPLE-AES", "SAMPLE-AES-CTR", "SAMPLE-AES-CENC"].indexOf(e10.attributes.METHOD) ? void this.trigger("warn", { message: "invalid key method provided for Widevine" }) : ("SAMPLE-AES-CENC" === e10.attributes.METHOD && this.trigger("warn", { message: "SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead" }), "data:text/plain;base64," !== e10.attributes.URI.substring(0, 23) ? void this.trigger("warn", { message: "invalid key URI provided for Widevine" }) : e10.attributes.KEYID && "0x" === e10.attributes.KEYID.substring(0, 2) ? (this.manifest.contentProtection = this.manifest.contentProtection || {}, void (this.manifest.contentProtection["com.widevine.alpha"] = { attributes: { schemeIdUri: e10.attributes.KEYFORMAT, keyId: e10.attributes.KEYID.substring(2) }, pssh: $e(e10.attributes.URI.split(",")[1]) })) : void this.trigger("warn", { message: "invalid key ID provided for Widevine" }));
            }
            e10.attributes.METHOD || this.trigger("warn", { message: "defaulting key method to AES-128" }), n6 = { method: e10.attributes.METHOD || "AES-128", uri: e10.attributes.URI }, void 0 !== e10.attributes.IV && (n6.iv = e10.attributes.IV);
          } else this.trigger("warn", { message: "ignoring key declaration without URI" });
          else n6 = null;
          else this.trigger("warn", { message: "ignoring key declaration without attribute list" });
        }, "media-sequence"() {
          isFinite(e10.number) ? this.manifest.mediaSequence = e10.number : this.trigger("warn", { message: "ignoring invalid media sequence: " + e10.number });
        }, "discontinuity-sequence"() {
          isFinite(e10.number) ? (this.manifest.discontinuitySequence = e10.number, u4 = e10.number) : this.trigger("warn", { message: "ignoring invalid discontinuity sequence: " + e10.number });
        }, "playlist-type"() {
          /VOD|EVENT/.test(e10.playlistType) ? this.manifest.playlistType = e10.playlistType : this.trigger("warn", { message: "ignoring unknown playlist type: " + e10.playlist });
        }, map() {
          s5 = {}, e10.uri && (s5.uri = e10.uri), e10.byterange && (s5.byterange = e10.byterange), n6 && (s5.key = n6);
        }, "stream-inf"() {
          this.manifest.playlists = i3, this.manifest.mediaGroups = this.manifest.mediaGroups || l6, e10.attributes ? (r5.attributes || (r5.attributes = {}), Ue(r5.attributes, e10.attributes)) : this.trigger("warn", { message: "ignoring empty stream-inf attributes" });
        }, media() {
          if (this.manifest.mediaGroups = this.manifest.mediaGroups || l6, !(e10.attributes && e10.attributes.TYPE && e10.attributes["GROUP-ID"] && e10.attributes.NAME)) return void this.trigger("warn", { message: "ignoring incomplete or missing media group" });
          const t5 = this.manifest.mediaGroups[e10.attributes.TYPE];
          t5[e10.attributes["GROUP-ID"]] = t5[e10.attributes["GROUP-ID"]] || {}, m5 = t5[e10.attributes["GROUP-ID"]], g4 = { default: /yes/i.test(e10.attributes.DEFAULT) }, g4.default ? g4.autoselect = true : g4.autoselect = /yes/i.test(e10.attributes.AUTOSELECT), e10.attributes.LANGUAGE && (g4.language = e10.attributes.LANGUAGE), e10.attributes.URI && (g4.uri = e10.attributes.URI), e10.attributes["INSTREAM-ID"] && (g4.instreamId = e10.attributes["INSTREAM-ID"]), e10.attributes.CHARACTERISTICS && (g4.characteristics = e10.attributes.CHARACTERISTICS), e10.attributes.FORCED && (g4.forced = /yes/i.test(e10.attributes.FORCED)), m5[e10.attributes.NAME] = g4;
        }, discontinuity() {
          u4 += 1, r5.discontinuity = true, this.manifest.discontinuityStarts.push(i3.length);
        }, "program-date-time"() {
          void 0 === this.manifest.dateTimeString && (this.manifest.dateTimeString = e10.dateTimeString, this.manifest.dateTimeObject = e10.dateTimeObject), r5.dateTimeString = e10.dateTimeString, r5.dateTimeObject = e10.dateTimeObject;
          const { lastProgramDateTime: t5 } = this;
          this.lastProgramDateTime = new Date(e10.dateTimeString).getTime(), null === t5 && this.manifest.segments.reduceRight((e11, t6) => (t6.programDateTime = e11 - 1e3 * t6.duration, t6.programDateTime), this.lastProgramDateTime);
        }, targetduration() {
          !isFinite(e10.duration) || e10.duration < 0 ? this.trigger("warn", { message: "ignoring invalid target duration: " + e10.duration }) : (this.manifest.targetDuration = e10.duration, Je.call(this, this.manifest));
        }, start() {
          e10.attributes && !isNaN(e10.attributes["TIME-OFFSET"]) ? this.manifest.start = { timeOffset: e10.attributes["TIME-OFFSET"], precise: e10.attributes.PRECISE } : this.trigger("warn", { message: "ignoring start declaration without appropriate attribute list" });
        }, "cue-out"() {
          r5.cueOut = e10.data;
        }, "cue-out-cont"() {
          r5.cueOutCont = e10.data;
        }, "cue-in"() {
          r5.cueIn = e10.data;
        }, skip() {
          this.manifest.skip = Qe(e10.attributes), this.warnOnMissingAttributes_("#EXT-X-SKIP", e10.attributes, ["SKIPPED-SEGMENTS"]);
        }, part() {
          a6 = true;
          const t5 = this.manifest.segments.length, i4 = Qe(e10.attributes);
          r5.parts = r5.parts || [], r5.parts.push(i4), i4.byterange && (i4.byterange.hasOwnProperty("offset") || (i4.byterange.offset = c3), c3 = i4.byterange.offset + i4.byterange.length);
          const s6 = r5.parts.length - 1;
          this.warnOnMissingAttributes_(`#EXT-X-PART #${s6} for segment #${t5}`, e10.attributes, ["URI", "DURATION"]), this.manifest.renditionReports && this.manifest.renditionReports.forEach((e11, t6) => {
            e11.hasOwnProperty("lastPart") || this.trigger("warn", { message: `#EXT-X-RENDITION-REPORT #${t6} lacks required attribute(s): LAST-PART` });
          });
        }, "server-control"() {
          const t5 = this.manifest.serverControl = Qe(e10.attributes);
          t5.hasOwnProperty("canBlockReload") || (t5.canBlockReload = false, this.trigger("info", { message: "#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false" })), Je.call(this, this.manifest), t5.canSkipDateranges && !t5.hasOwnProperty("canSkipUntil") && this.trigger("warn", { message: "#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set" });
        }, "preload-hint"() {
          const t5 = this.manifest.segments.length, i4 = Qe(e10.attributes), s6 = i4.type && "PART" === i4.type;
          r5.preloadHints = r5.preloadHints || [], r5.preloadHints.push(i4), i4.byterange && (i4.byterange.hasOwnProperty("offset") || (i4.byterange.offset = s6 ? c3 : 0, s6 && (c3 = i4.byterange.offset + i4.byterange.length)));
          const n7 = r5.preloadHints.length - 1;
          if (this.warnOnMissingAttributes_(`#EXT-X-PRELOAD-HINT #${n7} for segment #${t5}`, e10.attributes, ["TYPE", "URI"]), i4.type) for (let e11 = 0; e11 < r5.preloadHints.length - 1; e11++) {
            const s7 = r5.preloadHints[e11];
            s7.type && (s7.type === i4.type && this.trigger("warn", { message: `#EXT-X-PRELOAD-HINT #${n7} for segment #${t5} has the same TYPE ${i4.type} as preload hint #${e11}` }));
          }
        }, "rendition-report"() {
          const t5 = Qe(e10.attributes);
          this.manifest.renditionReports = this.manifest.renditionReports || [], this.manifest.renditionReports.push(t5);
          const i4 = this.manifest.renditionReports.length - 1, s6 = ["LAST-MSN", "URI"];
          a6 && s6.push("LAST-PART"), this.warnOnMissingAttributes_(`#EXT-X-RENDITION-REPORT #${i4}`, e10.attributes, s6);
        }, "part-inf"() {
          this.manifest.partInf = Qe(e10.attributes), this.warnOnMissingAttributes_("#EXT-X-PART-INF", e10.attributes, ["PART-TARGET"]), this.manifest.partInf.partTarget && (this.manifest.partTargetDuration = this.manifest.partInf.partTarget), Je.call(this, this.manifest);
        }, daterange() {
          this.manifest.dateRanges.push(Qe(e10.attributes));
          const t5 = this.manifest.dateRanges.length - 1;
          this.warnOnMissingAttributes_(`#EXT-X-DATERANGE #${t5}`, e10.attributes, ["ID", "START-DATE"]);
          const i4 = this.manifest.dateRanges[t5];
          i4.endDate && i4.startDate && new Date(i4.endDate) < new Date(i4.startDate) && this.trigger("warn", { message: "EXT-X-DATERANGE END-DATE must be equal to or later than the value of the START-DATE" }), i4.duration && i4.duration < 0 && this.trigger("warn", { message: "EXT-X-DATERANGE DURATION must not be negative" }), i4.plannedDuration && i4.plannedDuration < 0 && this.trigger("warn", { message: "EXT-X-DATERANGE PLANNED-DURATION must not be negative" });
          const s6 = !!i4.endOnNext;
          if (s6 && !i4.class && this.trigger("warn", { message: "EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must have a CLASS attribute" }), s6 && (i4.duration || i4.endDate) && this.trigger("warn", { message: "EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must not contain DURATION or END-DATE attributes" }), i4.duration && i4.endDate) {
            const e11 = i4.startDate.getTime() + 1e3 * i4.duration;
            this.manifest.dateRanges[t5].endDate = new Date(e11);
          }
          if (p2[i4.id]) {
            for (const t6 in p2[i4.id]) if (i4[t6] && JSON.stringify(p2[i4.id][t6]) !== JSON.stringify(i4[t6])) {
              this.trigger("warn", { message: "EXT-X-DATERANGE tags with the same ID in a playlist must have the same attributes values" });
              break;
            }
            const e11 = this.manifest.dateRanges.findIndex((e12) => e12.id === i4.id);
            this.manifest.dateRanges[e11] = Ue(this.manifest.dateRanges[e11], i4), p2[i4.id] = Ue(p2[i4.id], i4), this.manifest.dateRanges.pop();
          } else p2[i4.id] = i4;
        }, "independent-segments"() {
          this.manifest.independentSegments = true;
        }, "i-frames-only"() {
          this.manifest.iFramesOnly = true, this.requiredCompatibilityversion(this.manifest.version, 4);
        }, "content-steering"() {
          this.manifest.contentSteering = Qe(e10.attributes), this.warnOnMissingAttributes_("#EXT-X-CONTENT-STEERING", e10.attributes, ["SERVER-URI"]);
        }, define() {
          this.manifest.definitions = this.manifest.definitions || {};
          const t5 = (e11, t6) => {
            e11 in this.manifest.definitions ? this.trigger("error", { message: `EXT-X-DEFINE: Duplicate name ${e11}` }) : this.manifest.definitions[e11] = t6;
          };
          if ("QUERYPARAM" in e10.attributes) {
            if ("NAME" in e10.attributes || "IMPORT" in e10.attributes) return void this.trigger("error", { message: "EXT-X-DEFINE: Invalid attributes" });
            const i4 = this.params.get(e10.attributes.QUERYPARAM);
            return i4 ? void t5(e10.attributes.QUERYPARAM, decodeURIComponent(i4)) : void this.trigger("error", { message: `EXT-X-DEFINE: No query param ${e10.attributes.QUERYPARAM}` });
          }
          return "NAME" in e10.attributes ? "IMPORT" in e10.attributes ? void this.trigger("error", { message: "EXT-X-DEFINE: Invalid attributes" }) : "VALUE" in e10.attributes && "string" == typeof e10.attributes.VALUE ? void t5(e10.attributes.NAME, e10.attributes.VALUE) : void this.trigger("error", { message: `EXT-X-DEFINE: No value for ${e10.attributes.NAME}` }) : "IMPORT" in e10.attributes ? this.mainDefinitions[e10.attributes.IMPORT] ? void t5(e10.attributes.IMPORT, this.mainDefinitions[e10.attributes.IMPORT]) : void this.trigger("error", { message: `EXT-X-DEFINE: No value ${e10.attributes.IMPORT} to import, or IMPORT used on main playlist` }) : void this.trigger("error", { message: "EXT-X-DEFINE: No attribute" });
        }, "i-frame-playlist"() {
          this.manifest.iFramePlaylists.push({ attributes: e10.attributes, uri: e10.uri, timeline: u4 }), this.warnOnMissingAttributes_("#EXT-X-I-FRAME-STREAM-INF", e10.attributes, ["BANDWIDTH", "URI"]);
        } }[e10.tagType] || o4).call(t4);
      }, uri() {
        r5.uri = e10.uri, i3.push(r5), this.manifest.targetDuration && !("duration" in r5) && (this.trigger("warn", { message: "defaulting segment duration to the target duration" }), r5.duration = this.manifest.targetDuration), n6 && (r5.key = n6), r5.timeline = u4, s5 && (r5.map = s5), c3 = 0, null !== this.lastProgramDateTime && (r5.programDateTime = this.lastProgramDateTime, this.lastProgramDateTime += 1e3 * r5.duration), r5 = {};
      }, comment() {
      }, custom() {
        e10.segment ? (r5.custom = r5.custom || {}, r5.custom[e10.customType] = e10.data) : (this.manifest.custom = this.manifest.custom || {}, this.manifest.custom[e10.customType] = e10.data);
      } })[e10.type].call(t4);
    });
  }
  requiredCompatibilityversion(e9, t4) {
    (e9 < t4 || !e9) && this.trigger("warn", { message: `manifest must be at least version ${t4}` });
  }
  warnOnMissingAttributes_(e9, t4, i3) {
    const s5 = [];
    i3.forEach(function(e10) {
      t4.hasOwnProperty(e10) || s5.push(e10);
    }), s5.length && this.trigger("warn", { message: `${e9} lacks required attribute(s): ${s5.join(", ")}` });
  }
  push(e9) {
    this.lineStream.push(e9);
  }
  end() {
    this.lineStream.push("\n"), this.manifest.dateRanges.length && null === this.lastProgramDateTime && this.trigger("warn", { message: "A playlist with EXT-X-DATERANGE tag must contain atleast one EXT-X-PROGRAM-DATE-TIME tag" }), this.lastProgramDateTime = null, this.trigger("end");
  }
  addParser(e9) {
    this.parseStream.addParser(e9);
  }
  addTagMapper(e9) {
    this.parseStream.addTagMapper(e9);
  }
};
var et;
var tt;
var it = { mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/, webm: /^(vp0?[89]|av0?1|opus|vorbis)/, ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/, video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/, audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/, text: /^(stpp.ttml.im1t)/, muxerVideo: /^(avc0?1)/, muxerAudio: /^(mp4a)/, muxerText: /a^/ };
var st = ["video", "audio", "text"];
var nt = ["Video", "Audio", "Text"];
var rt = function(e9) {
  return e9 ? e9.replace(/avc1\.(\d+)\.(\d+)/i, function(e10, t4, i3) {
    return "avc1." + ("00" + Number(t4).toString(16)).slice(-2) + "00" + ("00" + Number(i3).toString(16)).slice(-2);
  }) : e9;
};
var at = function(e9) {
  void 0 === e9 && (e9 = "");
  var t4 = e9.split(","), i3 = [];
  return t4.forEach(function(e10) {
    var t5;
    e10 = e10.trim(), st.forEach(function(s5) {
      var n6 = it[s5].exec(e10.toLowerCase());
      if (n6 && !(n6.length <= 1)) {
        t5 = s5;
        var r5 = e10.substring(0, n6[1].length), a6 = e10.replace(r5, "");
        i3.push({ type: r5, details: a6, mediaType: s5 });
      }
    }), t5 || i3.push({ type: e10, details: "", mediaType: "unknown" });
  }), i3;
};
var ot = function(e9, t4) {
  if (!e9.mediaGroups.AUDIO || !t4) return null;
  var i3 = e9.mediaGroups.AUDIO[t4];
  if (!i3) return null;
  for (var s5 in i3) {
    var n6 = i3[s5];
    if (n6.default && n6.playlists) return at(n6.playlists[0].attributes.CODECS);
  }
  return null;
};
var lt = function(e9) {
  return void 0 === e9 && (e9 = ""), it.audio.test(e9.trim().toLowerCase());
};
var ht = function(e9) {
  return void 0 === e9 && (e9 = ""), it.text.test(e9.trim().toLowerCase());
};
var ut = function(e9) {
  if (e9 && "string" == typeof e9) {
    var t4 = e9.toLowerCase().split(",").map(function(e10) {
      return rt(e10.trim());
    }), i3 = "video";
    1 === t4.length && lt(t4[0]) ? i3 = "audio" : 1 === t4.length && ht(t4[0]) && (i3 = "application");
    var s5 = "mp4";
    return t4.every(function(e10) {
      return it.mp4.test(e10);
    }) ? s5 = "mp4" : t4.every(function(e10) {
      return it.webm.test(e10);
    }) ? s5 = "webm" : t4.every(function(e10) {
      return it.ogg.test(e10);
    }) && (s5 = "ogg"), i3 + "/" + s5 + ';codecs="' + e9 + '"';
  }
};
var dt = function(e9, t4) {
  return void 0 === e9 && (e9 = ""), void 0 === t4 && (t4 = false), _.MediaSource && _.MediaSource.isTypeSupported && _.MediaSource.isTypeSupported(ut(e9)) || t4 && _.ManagedMediaSource && _.ManagedMediaSource.isTypeSupported && _.ManagedMediaSource.isTypeSupported(ut(e9)) || false;
};
var ct = function(e9) {
  return void 0 === e9 && (e9 = ""), e9.toLowerCase().split(",").every(function(e10) {
    e10 = e10.trim();
    for (var t4 = 0; t4 < nt.length; t4++) {
      var i3 = nt[t4];
      if (it["muxer" + i3].test(e10)) return true;
    }
    return false;
  });
};
var pt = "mp4a.40.2";
var mt = "avc1.4d400d";
var gt = /^(audio|video|application)\/(x-|vnd\.apple\.)?mpegurl/i;
var ft = /^application\/dash\+xml/i;
var yt = function(e9) {
  return gt.test(e9) ? "hls" : ft.test(e9) ? "dash" : "application/vnd.videojs.vhs+json" === e9 ? "vhs-json" : null;
};
var _t = function(e9) {
  return e9.toString(2).length;
};
var bt = function(e9) {
  return Math.ceil(_t(e9) / 8);
};
var vt = function(e9) {
  return "function" === ArrayBuffer.isView ? ArrayBuffer.isView(e9) : e9 && e9.buffer instanceof ArrayBuffer;
};
var Tt = function(e9) {
  return vt(e9);
};
var St = function(e9) {
  return e9 instanceof Uint8Array ? e9 : (Array.isArray(e9) || Tt(e9) || e9 instanceof ArrayBuffer || (e9 = "number" != typeof e9 || "number" == typeof e9 && e9 != e9 ? 0 : [e9]), new Uint8Array(e9 && e9.buffer || e9, e9 && e9.byteOffset || 0, e9 && e9.byteLength || 0));
};
var Et = _.BigInt || Number;
var wt = [Et("0x1"), Et("0x100"), Et("0x10000"), Et("0x1000000"), Et("0x100000000"), Et("0x10000000000"), Et("0x1000000000000"), Et("0x100000000000000"), Et("0x10000000000000000")];
et = new Uint16Array([65484]), 255 === (tt = new Uint8Array(et.buffer, et.byteOffset, et.byteLength))[0] || tt[0];
var Ct;
var kt;
var It = function(e9, t4) {
  var i3 = void 0 === t4 ? {} : t4, s5 = i3.signed, n6 = void 0 !== s5 && s5, r5 = i3.le, a6 = void 0 !== r5 && r5;
  e9 = St(e9);
  var o4 = a6 ? "reduce" : "reduceRight", l6 = (e9[o4] ? e9[o4] : Array.prototype[o4]).call(e9, function(t5, i4, s6) {
    var n7 = a6 ? s6 : Math.abs(s6 + 1 - e9.length);
    return t5 + Et(i4) * wt[n7];
  }, Et(0));
  if (n6) {
    var h2 = wt[e9.length] / Et(2) - Et(1);
    (l6 = Et(l6)) > h2 && (l6 -= h2, l6 -= h2, l6 -= Et(2));
  }
  return Number(l6);
};
var xt = function(e9, t4) {
  var i3 = {}.le, s5 = void 0 !== i3 && i3;
  ("bigint" != typeof e9 && "number" != typeof e9 || "number" == typeof e9 && e9 != e9) && (e9 = 0), e9 = Et(e9);
  for (var n6 = bt(e9), r5 = new Uint8Array(new ArrayBuffer(n6)), a6 = 0; a6 < n6; a6++) {
    var o4 = s5 ? a6 : Math.abs(a6 + 1 - r5.length);
    r5[o4] = Number(e9 / wt[a6] & Et(255)), e9 < 0 && (r5[o4] = Math.abs(~r5[o4]), r5[o4] -= 0 === a6 ? 1 : 2);
  }
  return r5;
};
var At = function(e9, t4) {
  if ("string" != typeof e9 && e9 && "function" == typeof e9.toString && (e9 = e9.toString()), "string" != typeof e9) return new Uint8Array();
  t4 || (e9 = unescape(encodeURIComponent(e9)));
  for (var i3 = new Uint8Array(e9.length), s5 = 0; s5 < e9.length; s5++) i3[s5] = e9.charCodeAt(s5);
  return i3;
};
var Dt = function() {
  for (var e9 = arguments.length, t4 = new Array(e9), i3 = 0; i3 < e9; i3++) t4[i3] = arguments[i3];
  if (t4 = t4.filter(function(e10) {
    return e10 && (e10.byteLength || e10.length) && "string" != typeof e10;
  }), t4.length <= 1) return St(t4[0]);
  var s5 = t4.reduce(function(e10, t5, i4) {
    return e10 + (t5.byteLength || t5.length);
  }, 0), n6 = new Uint8Array(s5), r5 = 0;
  return t4.forEach(function(e10) {
    e10 = St(e10), n6.set(e10, r5), r5 += e10.byteLength;
  }), n6;
};
var Pt = function(e9, t4, i3) {
  var s5 = void 0 === i3 ? {} : i3, n6 = s5.offset, r5 = void 0 === n6 ? 0 : n6, a6 = s5.mask, o4 = void 0 === a6 ? [] : a6;
  e9 = St(e9);
  var l6 = (t4 = St(t4)).every ? t4.every : Array.prototype.every;
  return t4.length && e9.length - r5 >= t4.length && l6.call(t4, function(t5, i4) {
    return t5 === (o4[i4] ? o4[i4] & e9[r5 + i4] : e9[r5 + i4]);
  });
};
var Lt = function(e9, t4, i3) {
  t4.forEach(function(t5) {
    for (var s5 in e9.mediaGroups[t5]) for (var n6 in e9.mediaGroups[t5][s5]) {
      var r5 = e9.mediaGroups[t5][s5][n6];
      i3(r5, t5, s5, n6);
    }
  });
};
var Ot = {};
var Nt = {};
var Rt = {};
function Mt() {
  if (Ct) return Rt;
  function e9(e10, t5, i4) {
    if (void 0 === i4 && (i4 = Array.prototype), e10 && "function" == typeof i4.find) return i4.find.call(e10, t5);
    for (var s6 = 0; s6 < e10.length; s6++) if (Object.prototype.hasOwnProperty.call(e10, s6)) {
      var n7 = e10[s6];
      if (t5.call(void 0, n7, s6, e10)) return n7;
    }
  }
  function t4(e10, t5) {
    return void 0 === t5 && (t5 = Object), t5 && "function" == typeof t5.freeze ? t5.freeze(e10) : e10;
  }
  function i3(e10, t5) {
    if (null === e10 || "object" != typeof e10) throw new TypeError("target is not an object");
    for (var i4 in t5) Object.prototype.hasOwnProperty.call(t5, i4) && (e10[i4] = t5[i4]);
    return e10;
  }
  Ct = 1;
  var s5 = t4({ HTML: "text/html", isHTML: function(e10) {
    return e10 === s5.HTML;
  }, XML_APPLICATION: "application/xml", XML_TEXT: "text/xml", XML_XHTML_APPLICATION: "application/xhtml+xml", XML_SVG_IMAGE: "image/svg+xml" }), n6 = t4({ HTML: "http://www.w3.org/1999/xhtml", isHTML: function(e10) {
    return e10 === n6.HTML;
  }, SVG: "http://www.w3.org/2000/svg", XML: "http://www.w3.org/XML/1998/namespace", XMLNS: "http://www.w3.org/2000/xmlns/" });
  return Rt.assign = i3, Rt.find = e9, Rt.freeze = t4, Rt.MIME_TYPE = s5, Rt.NAMESPACE = n6, Rt;
}
function Ut() {
  if (kt) return Nt;
  kt = 1;
  var e9 = Mt(), t4 = e9.find, i3 = e9.NAMESPACE;
  function s5(e10) {
    return "" !== e10;
  }
  function n6(e10) {
    return e10 ? e10.split(/[\t\n\f\r ]+/).filter(s5) : [];
  }
  function r5(e10, t5) {
    return e10.hasOwnProperty(t5) || (e10[t5] = true), e10;
  }
  function a6(e10) {
    if (!e10) return [];
    var t5 = n6(e10);
    return Object.keys(t5.reduce(r5, {}));
  }
  function o4(e10) {
    return function(t5) {
      return e10 && -1 !== e10.indexOf(t5);
    };
  }
  function l6(e10, t5) {
    for (var i4 in e10) Object.prototype.hasOwnProperty.call(e10, i4) && (t5[i4] = e10[i4]);
  }
  function h2(e10, t5) {
    var i4 = e10.prototype;
    if (!(i4 instanceof t5)) {
      let s6 = function() {
      };
      s6.prototype = t5.prototype, l6(i4, s6 = new s6()), e10.prototype = i4 = s6;
    }
    i4.constructor != e10 && ("function" != typeof e10 && console.error("unknown Class:" + e10), i4.constructor = e10);
  }
  var u4 = {}, d5 = u4.ELEMENT_NODE = 1, c3 = u4.ATTRIBUTE_NODE = 2, p2 = u4.TEXT_NODE = 3, m5 = u4.CDATA_SECTION_NODE = 4, g4 = u4.ENTITY_REFERENCE_NODE = 5, f5 = u4.ENTITY_NODE = 6, y4 = u4.PROCESSING_INSTRUCTION_NODE = 7, _2 = u4.COMMENT_NODE = 8, b3 = u4.DOCUMENT_NODE = 9, v5 = u4.DOCUMENT_TYPE_NODE = 10, T2 = u4.DOCUMENT_FRAGMENT_NODE = 11, S4 = u4.NOTATION_NODE = 12, E4 = {}, w5 = {};
  E4.INDEX_SIZE_ERR = (w5[1] = "Index size error", 1), E4.DOMSTRING_SIZE_ERR = (w5[2] = "DOMString size error", 2);
  var C3 = E4.HIERARCHY_REQUEST_ERR = (w5[3] = "Hierarchy request error", 3);
  E4.WRONG_DOCUMENT_ERR = (w5[4] = "Wrong document", 4), E4.INVALID_CHARACTER_ERR = (w5[5] = "Invalid character", 5), E4.NO_DATA_ALLOWED_ERR = (w5[6] = "No data allowed", 6), E4.NO_MODIFICATION_ALLOWED_ERR = (w5[7] = "No modification allowed", 7);
  var k2 = E4.NOT_FOUND_ERR = (w5[8] = "Not found", 8);
  E4.NOT_SUPPORTED_ERR = (w5[9] = "Not supported", 9);
  var I2 = E4.INUSE_ATTRIBUTE_ERR = (w5[10] = "Attribute in use", 10);
  function x2(e10, t5) {
    if (t5 instanceof Error) var i4 = t5;
    else i4 = this, Error.call(this, w5[e10]), this.message = w5[e10], Error.captureStackTrace && Error.captureStackTrace(this, x2);
    return i4.code = e10, t5 && (this.message = this.message + ": " + t5), i4;
  }
  function A3() {
  }
  function D2(e10, t5) {
    this._node = e10, this._refresh = t5, P5(this);
  }
  function P5(e10) {
    var t5 = e10._node._inc || e10._node.ownerDocument._inc;
    if (e10._inc !== t5) {
      var i4 = e10._refresh(e10._node);
      if (Se2(e10, "length", i4.length), !e10.$$length || i4.length < e10.$$length) for (var s6 = i4.length; s6 in e10; s6++) Object.prototype.hasOwnProperty.call(e10, s6) && delete e10[s6];
      l6(i4, e10), e10._inc = t5;
    }
  }
  function L3() {
  }
  function O2(e10, t5) {
    for (var i4 = e10.length; i4--; ) if (e10[i4] === t5) return i4;
  }
  function N3(e10, t5, i4, s6) {
    if (s6 ? t5[O2(t5, s6)] = i4 : t5[t5.length++] = i4, e10) {
      i4.ownerElement = e10;
      var n7 = e10.ownerDocument;
      n7 && (s6 && $2(n7, e10, s6), j3(n7, e10, i4));
    }
  }
  function R2(e10, t5, i4) {
    var s6 = O2(t5, i4);
    if (!(s6 >= 0)) throw new x2(k2, new Error(e10.tagName + "@" + i4));
    for (var n7 = t5.length - 1; s6 < n7; ) t5[s6] = t5[++s6];
    if (t5.length = n7, e10) {
      var r6 = e10.ownerDocument;
      r6 && ($2(r6, e10, i4), i4.ownerElement = null);
    }
  }
  function M3() {
  }
  function U3() {
  }
  function B2(e10) {
    return ("<" == e10 ? "&lt;" : ">" == e10 && "&gt;") || "&" == e10 && "&amp;" || '"' == e10 && "&quot;" || "&#" + e10.charCodeAt() + ";";
  }
  function F2(e10, t5) {
    if (t5(e10)) return true;
    if (e10 = e10.firstChild) do {
      if (F2(e10, t5)) return true;
    } while (e10 = e10.nextSibling);
  }
  function q3() {
    this.ownerDocument = this;
  }
  function j3(e10, t5, s6) {
    e10 && e10._inc++, s6.namespaceURI === i3.XMLNS && (t5._nsMap[s6.prefix ? s6.localName : ""] = s6.value);
  }
  function $2(e10, t5, s6, n7) {
    e10 && e10._inc++, s6.namespaceURI === i3.XMLNS && delete t5._nsMap[s6.prefix ? s6.localName : ""];
  }
  function H2(e10, t5, i4) {
    if (e10 && e10._inc) {
      e10._inc++;
      var s6 = t5.childNodes;
      if (i4) s6[s6.length++] = i4;
      else {
        for (var n7 = t5.firstChild, r6 = 0; n7; ) s6[r6++] = n7, n7 = n7.nextSibling;
        s6.length = r6, delete s6[s6.length];
      }
    }
  }
  function V3(e10, t5) {
    var i4 = t5.previousSibling, s6 = t5.nextSibling;
    return i4 ? i4.nextSibling = s6 : e10.firstChild = s6, s6 ? s6.previousSibling = i4 : e10.lastChild = i4, t5.parentNode = null, t5.previousSibling = null, t5.nextSibling = null, H2(e10.ownerDocument, e10), t5;
  }
  function z2(e10) {
    return e10 && (e10.nodeType === U3.DOCUMENT_NODE || e10.nodeType === U3.DOCUMENT_FRAGMENT_NODE || e10.nodeType === U3.ELEMENT_NODE);
  }
  function W2(e10) {
    return e10 && (X2(e10) || K2(e10) || G2(e10) || e10.nodeType === U3.DOCUMENT_FRAGMENT_NODE || e10.nodeType === U3.COMMENT_NODE || e10.nodeType === U3.PROCESSING_INSTRUCTION_NODE);
  }
  function G2(e10) {
    return e10 && e10.nodeType === U3.DOCUMENT_TYPE_NODE;
  }
  function X2(e10) {
    return e10 && e10.nodeType === U3.ELEMENT_NODE;
  }
  function K2(e10) {
    return e10 && e10.nodeType === U3.TEXT_NODE;
  }
  function Y2(e10, i4) {
    var s6 = e10.childNodes || [];
    if (t4(s6, X2) || G2(i4)) return false;
    var n7 = t4(s6, G2);
    return !(i4 && n7 && s6.indexOf(n7) > s6.indexOf(i4));
  }
  function Q2(e10, i4) {
    var s6 = e10.childNodes || [];
    function n7(e11) {
      return X2(e11) && e11 !== i4;
    }
    if (t4(s6, n7)) return false;
    var r6 = t4(s6, G2);
    return !(i4 && r6 && s6.indexOf(r6) > s6.indexOf(i4));
  }
  function J2(e10, t5, i4) {
    if (!z2(e10)) throw new x2(C3, "Unexpected parent node type " + e10.nodeType);
    if (i4 && i4.parentNode !== e10) throw new x2(k2, "child not in parent");
    if (!W2(t5) || G2(t5) && e10.nodeType !== U3.DOCUMENT_NODE) throw new x2(C3, "Unexpected node type " + t5.nodeType + " for parent node type " + e10.nodeType);
  }
  function Z2(e10, i4, s6) {
    var n7 = e10.childNodes || [], r6 = i4.childNodes || [];
    if (i4.nodeType === U3.DOCUMENT_FRAGMENT_NODE) {
      var a7 = r6.filter(X2);
      if (a7.length > 1 || t4(r6, K2)) throw new x2(C3, "More than one element or text in fragment");
      if (1 === a7.length && !Y2(e10, s6)) throw new x2(C3, "Element in fragment can not be inserted before doctype");
    }
    if (X2(i4) && !Y2(e10, s6)) throw new x2(C3, "Only one element can be added and only after doctype");
    if (G2(i4)) {
      if (t4(n7, G2)) throw new x2(C3, "Only one doctype is allowed");
      var o5 = t4(n7, X2);
      if (s6 && n7.indexOf(o5) < n7.indexOf(s6)) throw new x2(C3, "Doctype can only be inserted before an element");
      if (!s6 && o5) throw new x2(C3, "Doctype can not be appended since element is present");
    }
  }
  function ee2(e10, i4, s6) {
    var n7 = e10.childNodes || [], r6 = i4.childNodes || [];
    if (i4.nodeType === U3.DOCUMENT_FRAGMENT_NODE) {
      var a7 = r6.filter(X2);
      if (a7.length > 1 || t4(r6, K2)) throw new x2(C3, "More than one element or text in fragment");
      if (1 === a7.length && !Q2(e10, s6)) throw new x2(C3, "Element in fragment can not be inserted before doctype");
    }
    if (X2(i4) && !Q2(e10, s6)) throw new x2(C3, "Only one element can be added and only after doctype");
    if (G2(i4)) {
      let l7 = function(e11) {
        return G2(e11) && e11 !== s6;
      };
      if (t4(n7, l7)) throw new x2(C3, "Only one doctype is allowed");
      var o5 = t4(n7, X2);
      if (s6 && n7.indexOf(o5) < n7.indexOf(s6)) throw new x2(C3, "Doctype can only be inserted before an element");
    }
  }
  function te2(e10, t5, i4, s6) {
    J2(e10, t5, i4), e10.nodeType === U3.DOCUMENT_NODE && (s6 || Z2)(e10, t5, i4);
    var n7 = t5.parentNode;
    if (n7 && n7.removeChild(t5), t5.nodeType === T2) {
      var r6 = t5.firstChild;
      if (null == r6) return t5;
      var a7 = t5.lastChild;
    } else r6 = a7 = t5;
    var o5 = i4 ? i4.previousSibling : e10.lastChild;
    r6.previousSibling = o5, a7.nextSibling = i4, o5 ? o5.nextSibling = r6 : e10.firstChild = r6, null == i4 ? e10.lastChild = a7 : i4.previousSibling = a7;
    do {
      r6.parentNode = e10;
    } while (r6 !== a7 && (r6 = r6.nextSibling));
    return H2(e10.ownerDocument || e10, e10), t5.nodeType == T2 && (t5.firstChild = t5.lastChild = null), t5;
  }
  function ie2(e10, t5) {
    return t5.parentNode && t5.parentNode.removeChild(t5), t5.parentNode = e10, t5.previousSibling = e10.lastChild, t5.nextSibling = null, t5.previousSibling ? t5.previousSibling.nextSibling = t5 : e10.firstChild = t5, e10.lastChild = t5, H2(e10.ownerDocument, e10, t5), t5;
  }
  function se2() {
    this._nsMap = {};
  }
  function ne2() {
  }
  function re2() {
  }
  function ae2() {
  }
  function oe2() {
  }
  function le2() {
  }
  function he2() {
  }
  function ue2() {
  }
  function de2() {
  }
  function ce2() {
  }
  function pe2() {
  }
  function me2() {
  }
  function ge2() {
  }
  function fe2(e10, t5) {
    var i4 = [], s6 = 9 == this.nodeType && this.documentElement || this, n7 = s6.prefix, r6 = s6.namespaceURI;
    if (r6 && null == n7 && null == (n7 = s6.lookupPrefix(r6))) var a7 = [{ namespace: r6, prefix: null }];
    return be2(this, i4, e10, t5, a7), i4.join("");
  }
  function ye2(e10, t5, s6) {
    var n7 = e10.prefix || "", r6 = e10.namespaceURI;
    if (!r6) return false;
    if ("xml" === n7 && r6 === i3.XML || r6 === i3.XMLNS) return false;
    for (var a7 = s6.length; a7--; ) {
      var o5 = s6[a7];
      if (o5.prefix === n7) return o5.namespace !== r6;
    }
    return true;
  }
  function _e2(e10, t5, i4) {
    e10.push(" ", t5, '="', i4.replace(/[<>&"\t\n\r]/g, B2), '"');
  }
  function be2(e10, t5, s6, n7, r6) {
    if (r6 || (r6 = []), n7) {
      if (!(e10 = n7(e10))) return;
      if ("string" == typeof e10) return void t5.push(e10);
    }
    switch (e10.nodeType) {
      case d5:
        var a7 = e10.attributes, o5 = a7.length, l7 = e10.firstChild, h3 = e10.tagName, u5 = h3;
        if (!(s6 = i3.isHTML(e10.namespaceURI) || s6) && !e10.prefix && e10.namespaceURI) {
          for (var f6, S5 = 0; S5 < a7.length; S5++) if ("xmlns" === a7.item(S5).name) {
            f6 = a7.item(S5).value;
            break;
          }
          if (!f6) for (var E5 = r6.length - 1; E5 >= 0; E5--) {
            if ("" === (w6 = r6[E5]).prefix && w6.namespace === e10.namespaceURI) {
              f6 = w6.namespace;
              break;
            }
          }
          if (f6 !== e10.namespaceURI) for (E5 = r6.length - 1; E5 >= 0; E5--) {
            var w6;
            if ((w6 = r6[E5]).namespace === e10.namespaceURI) {
              w6.prefix && (u5 = w6.prefix + ":" + h3);
              break;
            }
          }
        }
        t5.push("<", u5);
        for (var C4 = 0; C4 < o5; C4++) {
          "xmlns" == (k3 = a7.item(C4)).prefix ? r6.push({ prefix: k3.localName, namespace: k3.value }) : "xmlns" == k3.nodeName && r6.push({ prefix: "", namespace: k3.value });
        }
        for (C4 = 0; C4 < o5; C4++) {
          var k3, I3, x3;
          if (ye2(k3 = a7.item(C4), s6, r6)) _e2(t5, (I3 = k3.prefix || "") ? "xmlns:" + I3 : "xmlns", x3 = k3.namespaceURI), r6.push({ prefix: I3, namespace: x3 });
          be2(k3, t5, s6, n7, r6);
        }
        if (h3 === u5 && ye2(e10, s6, r6)) _e2(t5, (I3 = e10.prefix || "") ? "xmlns:" + I3 : "xmlns", x3 = e10.namespaceURI), r6.push({ prefix: I3, namespace: x3 });
        if (l7 || s6 && !/^(?:meta|link|img|br|hr|input)$/i.test(h3)) {
          if (t5.push(">"), s6 && /^script$/i.test(h3)) for (; l7; ) l7.data ? t5.push(l7.data) : be2(l7, t5, s6, n7, r6.slice()), l7 = l7.nextSibling;
          else for (; l7; ) be2(l7, t5, s6, n7, r6.slice()), l7 = l7.nextSibling;
          t5.push("</", u5, ">");
        } else t5.push("/>");
        return;
      case b3:
      case T2:
        for (l7 = e10.firstChild; l7; ) be2(l7, t5, s6, n7, r6.slice()), l7 = l7.nextSibling;
        return;
      case c3:
        return _e2(t5, e10.name, e10.value);
      case p2:
        return t5.push(e10.data.replace(/[<&>]/g, B2));
      case m5:
        return t5.push("<![CDATA[", e10.data, "]]>");
      case _2:
        return t5.push("<!--", e10.data, "-->");
      case v5:
        var A4 = e10.publicId, D3 = e10.systemId;
        if (t5.push("<!DOCTYPE ", e10.name), A4) t5.push(" PUBLIC ", A4), D3 && "." != D3 && t5.push(" ", D3), t5.push(">");
        else if (D3 && "." != D3) t5.push(" SYSTEM ", D3, ">");
        else {
          var P6 = e10.internalSubset;
          P6 && t5.push(" [", P6, "]"), t5.push(">");
        }
        return;
      case y4:
        return t5.push("<?", e10.target, " ", e10.data, "?>");
      case g4:
        return t5.push("&", e10.nodeName, ";");
      default:
        t5.push("??", e10.nodeName);
    }
  }
  function ve2(e10, t5, i4) {
    var s6;
    switch (t5.nodeType) {
      case d5:
        (s6 = t5.cloneNode(false)).ownerDocument = e10;
      case T2:
        break;
      case c3:
        i4 = true;
    }
    if (s6 || (s6 = t5.cloneNode(false)), s6.ownerDocument = e10, s6.parentNode = null, i4) for (var n7 = t5.firstChild; n7; ) s6.appendChild(ve2(e10, n7, i4)), n7 = n7.nextSibling;
    return s6;
  }
  function Te2(e10, t5, i4) {
    var s6 = new t5.constructor();
    for (var n7 in t5) if (Object.prototype.hasOwnProperty.call(t5, n7)) {
      var r6 = t5[n7];
      "object" != typeof r6 && r6 != s6[n7] && (s6[n7] = r6);
    }
    switch (t5.childNodes && (s6.childNodes = new A3()), s6.ownerDocument = e10, s6.nodeType) {
      case d5:
        var a7 = t5.attributes, o5 = s6.attributes = new L3(), l7 = a7.length;
        o5._ownerElement = s6;
        for (var h3 = 0; h3 < l7; h3++) s6.setAttributeNode(Te2(e10, a7.item(h3), true));
        break;
      case c3:
        i4 = true;
    }
    if (i4) for (var u5 = t5.firstChild; u5; ) s6.appendChild(Te2(e10, u5, i4)), u5 = u5.nextSibling;
    return s6;
  }
  function Se2(e10, t5, i4) {
    e10[t5] = i4;
  }
  E4.INVALID_STATE_ERR = (w5[11] = "Invalid state", 11), E4.SYNTAX_ERR = (w5[12] = "Syntax error", 12), E4.INVALID_MODIFICATION_ERR = (w5[13] = "Invalid modification", 13), E4.NAMESPACE_ERR = (w5[14] = "Invalid namespace", 14), E4.INVALID_ACCESS_ERR = (w5[15] = "Invalid access", 15), x2.prototype = Error.prototype, l6(E4, x2), A3.prototype = { length: 0, item: function(e10) {
    return e10 >= 0 && e10 < this.length ? this[e10] : null;
  }, toString: function(e10, t5) {
    for (var i4 = [], s6 = 0; s6 < this.length; s6++) be2(this[s6], i4, e10, t5);
    return i4.join("");
  }, filter: function(e10) {
    return Array.prototype.filter.call(this, e10);
  }, indexOf: function(e10) {
    return Array.prototype.indexOf.call(this, e10);
  } }, D2.prototype.item = function(e10) {
    return P5(this), this[e10] || null;
  }, h2(D2, A3), L3.prototype = { length: 0, item: A3.prototype.item, getNamedItem: function(e10) {
    for (var t5 = this.length; t5--; ) {
      var i4 = this[t5];
      if (i4.nodeName == e10) return i4;
    }
  }, setNamedItem: function(e10) {
    var t5 = e10.ownerElement;
    if (t5 && t5 != this._ownerElement) throw new x2(I2);
    var i4 = this.getNamedItem(e10.nodeName);
    return N3(this._ownerElement, this, e10, i4), i4;
  }, setNamedItemNS: function(e10) {
    var t5, i4 = e10.ownerElement;
    if (i4 && i4 != this._ownerElement) throw new x2(I2);
    return t5 = this.getNamedItemNS(e10.namespaceURI, e10.localName), N3(this._ownerElement, this, e10, t5), t5;
  }, removeNamedItem: function(e10) {
    var t5 = this.getNamedItem(e10);
    return R2(this._ownerElement, this, t5), t5;
  }, removeNamedItemNS: function(e10, t5) {
    var i4 = this.getNamedItemNS(e10, t5);
    return R2(this._ownerElement, this, i4), i4;
  }, getNamedItemNS: function(e10, t5) {
    for (var i4 = this.length; i4--; ) {
      var s6 = this[i4];
      if (s6.localName == t5 && s6.namespaceURI == e10) return s6;
    }
    return null;
  } }, M3.prototype = { hasFeature: function(e10, t5) {
    return true;
  }, createDocument: function(e10, t5, i4) {
    var s6 = new q3();
    if (s6.implementation = this, s6.childNodes = new A3(), s6.doctype = i4 || null, i4 && s6.appendChild(i4), t5) {
      var n7 = s6.createElementNS(e10, t5);
      s6.appendChild(n7);
    }
    return s6;
  }, createDocumentType: function(e10, t5, i4) {
    var s6 = new he2();
    return s6.name = e10, s6.nodeName = e10, s6.publicId = t5 || "", s6.systemId = i4 || "", s6;
  } }, U3.prototype = { firstChild: null, lastChild: null, previousSibling: null, nextSibling: null, attributes: null, parentNode: null, childNodes: null, ownerDocument: null, nodeValue: null, namespaceURI: null, prefix: null, localName: null, insertBefore: function(e10, t5) {
    return te2(this, e10, t5);
  }, replaceChild: function(e10, t5) {
    te2(this, e10, t5, ee2), t5 && this.removeChild(t5);
  }, removeChild: function(e10) {
    return V3(this, e10);
  }, appendChild: function(e10) {
    return this.insertBefore(e10, null);
  }, hasChildNodes: function() {
    return null != this.firstChild;
  }, cloneNode: function(e10) {
    return Te2(this.ownerDocument || this, this, e10);
  }, normalize: function() {
    for (var e10 = this.firstChild; e10; ) {
      var t5 = e10.nextSibling;
      t5 && t5.nodeType == p2 && e10.nodeType == p2 ? (this.removeChild(t5), e10.appendData(t5.data)) : (e10.normalize(), e10 = t5);
    }
  }, isSupported: function(e10, t5) {
    return this.ownerDocument.implementation.hasFeature(e10, t5);
  }, hasAttributes: function() {
    return this.attributes.length > 0;
  }, lookupPrefix: function(e10) {
    for (var t5 = this; t5; ) {
      var i4 = t5._nsMap;
      if (i4) {
        for (var s6 in i4) if (Object.prototype.hasOwnProperty.call(i4, s6) && i4[s6] === e10) return s6;
      }
      t5 = t5.nodeType == c3 ? t5.ownerDocument : t5.parentNode;
    }
    return null;
  }, lookupNamespaceURI: function(e10) {
    for (var t5 = this; t5; ) {
      var i4 = t5._nsMap;
      if (i4 && Object.prototype.hasOwnProperty.call(i4, e10)) return i4[e10];
      t5 = t5.nodeType == c3 ? t5.ownerDocument : t5.parentNode;
    }
    return null;
  }, isDefaultNamespace: function(e10) {
    return null == this.lookupPrefix(e10);
  } }, l6(u4, U3), l6(u4, U3.prototype), q3.prototype = { nodeName: "#document", nodeType: b3, doctype: null, documentElement: null, _inc: 1, insertBefore: function(e10, t5) {
    if (e10.nodeType == T2) {
      for (var i4 = e10.firstChild; i4; ) {
        var s6 = i4.nextSibling;
        this.insertBefore(i4, t5), i4 = s6;
      }
      return e10;
    }
    return te2(this, e10, t5), e10.ownerDocument = this, null === this.documentElement && e10.nodeType === d5 && (this.documentElement = e10), e10;
  }, removeChild: function(e10) {
    return this.documentElement == e10 && (this.documentElement = null), V3(this, e10);
  }, replaceChild: function(e10, t5) {
    te2(this, e10, t5, ee2), e10.ownerDocument = this, t5 && this.removeChild(t5), X2(e10) && (this.documentElement = e10);
  }, importNode: function(e10, t5) {
    return ve2(this, e10, t5);
  }, getElementById: function(e10) {
    var t5 = null;
    return F2(this.documentElement, function(i4) {
      if (i4.nodeType == d5 && i4.getAttribute("id") == e10) return t5 = i4, true;
    }), t5;
  }, getElementsByClassName: function(e10) {
    var t5 = a6(e10);
    return new D2(this, function(i4) {
      var s6 = [];
      return t5.length > 0 && F2(i4.documentElement, function(n7) {
        if (n7 !== i4 && n7.nodeType === d5) {
          var r6 = n7.getAttribute("class");
          if (r6) {
            var l7 = e10 === r6;
            if (!l7) {
              var h3 = a6(r6);
              l7 = t5.every(o4(h3));
            }
            l7 && s6.push(n7);
          }
        }
      }), s6;
    });
  }, createElement: function(e10) {
    var t5 = new se2();
    return t5.ownerDocument = this, t5.nodeName = e10, t5.tagName = e10, t5.localName = e10, t5.childNodes = new A3(), (t5.attributes = new L3())._ownerElement = t5, t5;
  }, createDocumentFragment: function() {
    var e10 = new pe2();
    return e10.ownerDocument = this, e10.childNodes = new A3(), e10;
  }, createTextNode: function(e10) {
    var t5 = new ae2();
    return t5.ownerDocument = this, t5.appendData(e10), t5;
  }, createComment: function(e10) {
    var t5 = new oe2();
    return t5.ownerDocument = this, t5.appendData(e10), t5;
  }, createCDATASection: function(e10) {
    var t5 = new le2();
    return t5.ownerDocument = this, t5.appendData(e10), t5;
  }, createProcessingInstruction: function(e10, t5) {
    var i4 = new me2();
    return i4.ownerDocument = this, i4.tagName = i4.nodeName = i4.target = e10, i4.nodeValue = i4.data = t5, i4;
  }, createAttribute: function(e10) {
    var t5 = new ne2();
    return t5.ownerDocument = this, t5.name = e10, t5.nodeName = e10, t5.localName = e10, t5.specified = true, t5;
  }, createEntityReference: function(e10) {
    var t5 = new ce2();
    return t5.ownerDocument = this, t5.nodeName = e10, t5;
  }, createElementNS: function(e10, t5) {
    var i4 = new se2(), s6 = t5.split(":"), n7 = i4.attributes = new L3();
    return i4.childNodes = new A3(), i4.ownerDocument = this, i4.nodeName = t5, i4.tagName = t5, i4.namespaceURI = e10, 2 == s6.length ? (i4.prefix = s6[0], i4.localName = s6[1]) : i4.localName = t5, n7._ownerElement = i4, i4;
  }, createAttributeNS: function(e10, t5) {
    var i4 = new ne2(), s6 = t5.split(":");
    return i4.ownerDocument = this, i4.nodeName = t5, i4.name = t5, i4.namespaceURI = e10, i4.specified = true, 2 == s6.length ? (i4.prefix = s6[0], i4.localName = s6[1]) : i4.localName = t5, i4;
  } }, h2(q3, U3), se2.prototype = { nodeType: d5, hasAttribute: function(e10) {
    return null != this.getAttributeNode(e10);
  }, getAttribute: function(e10) {
    var t5 = this.getAttributeNode(e10);
    return t5 && t5.value || "";
  }, getAttributeNode: function(e10) {
    return this.attributes.getNamedItem(e10);
  }, setAttribute: function(e10, t5) {
    var i4 = this.ownerDocument.createAttribute(e10);
    i4.value = i4.nodeValue = "" + t5, this.setAttributeNode(i4);
  }, removeAttribute: function(e10) {
    var t5 = this.getAttributeNode(e10);
    t5 && this.removeAttributeNode(t5);
  }, appendChild: function(e10) {
    return e10.nodeType === T2 ? this.insertBefore(e10, null) : ie2(this, e10);
  }, setAttributeNode: function(e10) {
    return this.attributes.setNamedItem(e10);
  }, setAttributeNodeNS: function(e10) {
    return this.attributes.setNamedItemNS(e10);
  }, removeAttributeNode: function(e10) {
    return this.attributes.removeNamedItem(e10.nodeName);
  }, removeAttributeNS: function(e10, t5) {
    var i4 = this.getAttributeNodeNS(e10, t5);
    i4 && this.removeAttributeNode(i4);
  }, hasAttributeNS: function(e10, t5) {
    return null != this.getAttributeNodeNS(e10, t5);
  }, getAttributeNS: function(e10, t5) {
    var i4 = this.getAttributeNodeNS(e10, t5);
    return i4 && i4.value || "";
  }, setAttributeNS: function(e10, t5, i4) {
    var s6 = this.ownerDocument.createAttributeNS(e10, t5);
    s6.value = s6.nodeValue = "" + i4, this.setAttributeNode(s6);
  }, getAttributeNodeNS: function(e10, t5) {
    return this.attributes.getNamedItemNS(e10, t5);
  }, getElementsByTagName: function(e10) {
    return new D2(this, function(t5) {
      var i4 = [];
      return F2(t5, function(s6) {
        s6 === t5 || s6.nodeType != d5 || "*" !== e10 && s6.tagName != e10 || i4.push(s6);
      }), i4;
    });
  }, getElementsByTagNameNS: function(e10, t5) {
    return new D2(this, function(i4) {
      var s6 = [];
      return F2(i4, function(n7) {
        n7 === i4 || n7.nodeType !== d5 || "*" !== e10 && n7.namespaceURI !== e10 || "*" !== t5 && n7.localName != t5 || s6.push(n7);
      }), s6;
    });
  } }, q3.prototype.getElementsByTagName = se2.prototype.getElementsByTagName, q3.prototype.getElementsByTagNameNS = se2.prototype.getElementsByTagNameNS, h2(se2, U3), ne2.prototype.nodeType = c3, h2(ne2, U3), re2.prototype = { data: "", substringData: function(e10, t5) {
    return this.data.substring(e10, e10 + t5);
  }, appendData: function(e10) {
    e10 = this.data + e10, this.nodeValue = this.data = e10, this.length = e10.length;
  }, insertData: function(e10, t5) {
    this.replaceData(e10, 0, t5);
  }, appendChild: function(e10) {
    throw new Error(w5[C3]);
  }, deleteData: function(e10, t5) {
    this.replaceData(e10, t5, "");
  }, replaceData: function(e10, t5, i4) {
    i4 = this.data.substring(0, e10) + i4 + this.data.substring(e10 + t5), this.nodeValue = this.data = i4, this.length = i4.length;
  } }, h2(re2, U3), ae2.prototype = { nodeName: "#text", nodeType: p2, splitText: function(e10) {
    var t5 = this.data, i4 = t5.substring(e10);
    t5 = t5.substring(0, e10), this.data = this.nodeValue = t5, this.length = t5.length;
    var s6 = this.ownerDocument.createTextNode(i4);
    return this.parentNode && this.parentNode.insertBefore(s6, this.nextSibling), s6;
  } }, h2(ae2, re2), oe2.prototype = { nodeName: "#comment", nodeType: _2 }, h2(oe2, re2), le2.prototype = { nodeName: "#cdata-section", nodeType: m5 }, h2(le2, re2), he2.prototype.nodeType = v5, h2(he2, U3), ue2.prototype.nodeType = S4, h2(ue2, U3), de2.prototype.nodeType = f5, h2(de2, U3), ce2.prototype.nodeType = g4, h2(ce2, U3), pe2.prototype.nodeName = "#document-fragment", pe2.prototype.nodeType = T2, h2(pe2, U3), me2.prototype.nodeType = y4, h2(me2, U3), ge2.prototype.serializeToString = function(e10, t5, i4) {
    return fe2.call(e10, t5, i4);
  }, U3.prototype.toString = fe2;
  try {
    if (Object.defineProperty) {
      let we2 = function(e10) {
        switch (e10.nodeType) {
          case d5:
          case T2:
            var t5 = [];
            for (e10 = e10.firstChild; e10; ) 7 !== e10.nodeType && 8 !== e10.nodeType && t5.push(we2(e10)), e10 = e10.nextSibling;
            return t5.join("");
          default:
            return e10.nodeValue;
        }
      };
      Object.defineProperty(D2.prototype, "length", { get: function() {
        return P5(this), this.$$length;
      } }), Object.defineProperty(U3.prototype, "textContent", { get: function() {
        return we2(this);
      }, set: function(e10) {
        switch (this.nodeType) {
          case d5:
          case T2:
            for (; this.firstChild; ) this.removeChild(this.firstChild);
            (e10 || String(e10)) && this.appendChild(this.ownerDocument.createTextNode(e10));
            break;
          default:
            this.data = e10, this.value = e10, this.nodeValue = e10;
        }
      } }), Se2 = function(e10, t5, i4) {
        e10["$$" + t5] = i4;
      };
    }
  } catch (Ee2) {
  }
  return Nt.DocumentType = he2, Nt.DOMException = x2, Nt.DOMImplementation = M3, Nt.Element = se2, Nt.Node = U3, Nt.NodeList = A3, Nt.XMLSerializer = ge2, Nt;
}
var Bt;
var Ft = {};
var qt = {};
function jt() {
  return Bt || (Bt = 1, e9 = qt, t4 = Mt().freeze, e9.XML_ENTITIES = t4({ amp: "&", apos: "'", gt: ">", lt: "<", quot: '"' }), e9.HTML_ENTITIES = t4({ Aacute: "Á", aacute: "á", Abreve: "Ă", abreve: "ă", ac: "∾", acd: "∿", acE: "∾̳", Acirc: "Â", acirc: "â", acute: "´", Acy: "А", acy: "а", AElig: "Æ", aelig: "æ", af: "⁡", Afr: "𝔄", afr: "𝔞", Agrave: "À", agrave: "à", alefsym: "ℵ", aleph: "ℵ", Alpha: "Α", alpha: "α", Amacr: "Ā", amacr: "ā", amalg: "⨿", AMP: "&", amp: "&", And: "⩓", and: "∧", andand: "⩕", andd: "⩜", andslope: "⩘", andv: "⩚", ang: "∠", ange: "⦤", angle: "∠", angmsd: "∡", angmsdaa: "⦨", angmsdab: "⦩", angmsdac: "⦪", angmsdad: "⦫", angmsdae: "⦬", angmsdaf: "⦭", angmsdag: "⦮", angmsdah: "⦯", angrt: "∟", angrtvb: "⊾", angrtvbd: "⦝", angsph: "∢", angst: "Å", angzarr: "⍼", Aogon: "Ą", aogon: "ą", Aopf: "𝔸", aopf: "𝕒", ap: "≈", apacir: "⩯", apE: "⩰", ape: "≊", apid: "≋", apos: "'", ApplyFunction: "⁡", approx: "≈", approxeq: "≊", Aring: "Å", aring: "å", Ascr: "𝒜", ascr: "𝒶", Assign: "≔", ast: "*", asymp: "≈", asympeq: "≍", Atilde: "Ã", atilde: "ã", Auml: "Ä", auml: "ä", awconint: "∳", awint: "⨑", backcong: "≌", backepsilon: "϶", backprime: "‵", backsim: "∽", backsimeq: "⋍", Backslash: "∖", Barv: "⫧", barvee: "⊽", Barwed: "⌆", barwed: "⌅", barwedge: "⌅", bbrk: "⎵", bbrktbrk: "⎶", bcong: "≌", Bcy: "Б", bcy: "б", bdquo: "„", becaus: "∵", Because: "∵", because: "∵", bemptyv: "⦰", bepsi: "϶", bernou: "ℬ", Bernoullis: "ℬ", Beta: "Β", beta: "β", beth: "ℶ", between: "≬", Bfr: "𝔅", bfr: "𝔟", bigcap: "⋂", bigcirc: "◯", bigcup: "⋃", bigodot: "⨀", bigoplus: "⨁", bigotimes: "⨂", bigsqcup: "⨆", bigstar: "★", bigtriangledown: "▽", bigtriangleup: "△", biguplus: "⨄", bigvee: "⋁", bigwedge: "⋀", bkarow: "⤍", blacklozenge: "⧫", blacksquare: "▪", blacktriangle: "▴", blacktriangledown: "▾", blacktriangleleft: "◂", blacktriangleright: "▸", blank: "␣", blk12: "▒", blk14: "░", blk34: "▓", block: "█", bne: "=⃥", bnequiv: "≡⃥", bNot: "⫭", bnot: "⌐", Bopf: "𝔹", bopf: "𝕓", bot: "⊥", bottom: "⊥", bowtie: "⋈", boxbox: "⧉", boxDL: "╗", boxDl: "╖", boxdL: "╕", boxdl: "┐", boxDR: "╔", boxDr: "╓", boxdR: "╒", boxdr: "┌", boxH: "═", boxh: "─", boxHD: "╦", boxHd: "╤", boxhD: "╥", boxhd: "┬", boxHU: "╩", boxHu: "╧", boxhU: "╨", boxhu: "┴", boxminus: "⊟", boxplus: "⊞", boxtimes: "⊠", boxUL: "╝", boxUl: "╜", boxuL: "╛", boxul: "┘", boxUR: "╚", boxUr: "╙", boxuR: "╘", boxur: "└", boxV: "║", boxv: "│", boxVH: "╬", boxVh: "╫", boxvH: "╪", boxvh: "┼", boxVL: "╣", boxVl: "╢", boxvL: "╡", boxvl: "┤", boxVR: "╠", boxVr: "╟", boxvR: "╞", boxvr: "├", bprime: "‵", Breve: "˘", breve: "˘", brvbar: "¦", Bscr: "ℬ", bscr: "𝒷", bsemi: "⁏", bsim: "∽", bsime: "⋍", bsol: "\\", bsolb: "⧅", bsolhsub: "⟈", bull: "•", bullet: "•", bump: "≎", bumpE: "⪮", bumpe: "≏", Bumpeq: "≎", bumpeq: "≏", Cacute: "Ć", cacute: "ć", Cap: "⋒", cap: "∩", capand: "⩄", capbrcup: "⩉", capcap: "⩋", capcup: "⩇", capdot: "⩀", CapitalDifferentialD: "ⅅ", caps: "∩︀", caret: "⁁", caron: "ˇ", Cayleys: "ℭ", ccaps: "⩍", Ccaron: "Č", ccaron: "č", Ccedil: "Ç", ccedil: "ç", Ccirc: "Ĉ", ccirc: "ĉ", Cconint: "∰", ccups: "⩌", ccupssm: "⩐", Cdot: "Ċ", cdot: "ċ", cedil: "¸", Cedilla: "¸", cemptyv: "⦲", cent: "¢", CenterDot: "·", centerdot: "·", Cfr: "ℭ", cfr: "𝔠", CHcy: "Ч", chcy: "ч", check: "✓", checkmark: "✓", Chi: "Χ", chi: "χ", cir: "○", circ: "ˆ", circeq: "≗", circlearrowleft: "↺", circlearrowright: "↻", circledast: "⊛", circledcirc: "⊚", circleddash: "⊝", CircleDot: "⊙", circledR: "®", circledS: "Ⓢ", CircleMinus: "⊖", CirclePlus: "⊕", CircleTimes: "⊗", cirE: "⧃", cire: "≗", cirfnint: "⨐", cirmid: "⫯", cirscir: "⧂", ClockwiseContourIntegral: "∲", CloseCurlyDoubleQuote: "”", CloseCurlyQuote: "’", clubs: "♣", clubsuit: "♣", Colon: "∷", colon: ":", Colone: "⩴", colone: "≔", coloneq: "≔", comma: ",", commat: "@", comp: "∁", compfn: "∘", complement: "∁", complexes: "ℂ", cong: "≅", congdot: "⩭", Congruent: "≡", Conint: "∯", conint: "∮", ContourIntegral: "∮", Copf: "ℂ", copf: "𝕔", coprod: "∐", Coproduct: "∐", COPY: "©", copy: "©", copysr: "℗", CounterClockwiseContourIntegral: "∳", crarr: "↵", Cross: "⨯", cross: "✗", Cscr: "𝒞", cscr: "𝒸", csub: "⫏", csube: "⫑", csup: "⫐", csupe: "⫒", ctdot: "⋯", cudarrl: "⤸", cudarrr: "⤵", cuepr: "⋞", cuesc: "⋟", cularr: "↶", cularrp: "⤽", Cup: "⋓", cup: "∪", cupbrcap: "⩈", CupCap: "≍", cupcap: "⩆", cupcup: "⩊", cupdot: "⊍", cupor: "⩅", cups: "∪︀", curarr: "↷", curarrm: "⤼", curlyeqprec: "⋞", curlyeqsucc: "⋟", curlyvee: "⋎", curlywedge: "⋏", curren: "¤", curvearrowleft: "↶", curvearrowright: "↷", cuvee: "⋎", cuwed: "⋏", cwconint: "∲", cwint: "∱", cylcty: "⌭", Dagger: "‡", dagger: "†", daleth: "ℸ", Darr: "↡", dArr: "⇓", darr: "↓", dash: "‐", Dashv: "⫤", dashv: "⊣", dbkarow: "⤏", dblac: "˝", Dcaron: "Ď", dcaron: "ď", Dcy: "Д", dcy: "д", DD: "ⅅ", dd: "ⅆ", ddagger: "‡", ddarr: "⇊", DDotrahd: "⤑", ddotseq: "⩷", deg: "°", Del: "∇", Delta: "Δ", delta: "δ", demptyv: "⦱", dfisht: "⥿", Dfr: "𝔇", dfr: "𝔡", dHar: "⥥", dharl: "⇃", dharr: "⇂", DiacriticalAcute: "´", DiacriticalDot: "˙", DiacriticalDoubleAcute: "˝", DiacriticalGrave: "`", DiacriticalTilde: "˜", diam: "⋄", Diamond: "⋄", diamond: "⋄", diamondsuit: "♦", diams: "♦", die: "¨", DifferentialD: "ⅆ", digamma: "ϝ", disin: "⋲", div: "÷", divide: "÷", divideontimes: "⋇", divonx: "⋇", DJcy: "Ђ", djcy: "ђ", dlcorn: "⌞", dlcrop: "⌍", dollar: "$", Dopf: "𝔻", dopf: "𝕕", Dot: "¨", dot: "˙", DotDot: "⃜", doteq: "≐", doteqdot: "≑", DotEqual: "≐", dotminus: "∸", dotplus: "∔", dotsquare: "⊡", doublebarwedge: "⌆", DoubleContourIntegral: "∯", DoubleDot: "¨", DoubleDownArrow: "⇓", DoubleLeftArrow: "⇐", DoubleLeftRightArrow: "⇔", DoubleLeftTee: "⫤", DoubleLongLeftArrow: "⟸", DoubleLongLeftRightArrow: "⟺", DoubleLongRightArrow: "⟹", DoubleRightArrow: "⇒", DoubleRightTee: "⊨", DoubleUpArrow: "⇑", DoubleUpDownArrow: "⇕", DoubleVerticalBar: "∥", DownArrow: "↓", Downarrow: "⇓", downarrow: "↓", DownArrowBar: "⤓", DownArrowUpArrow: "⇵", DownBreve: "̑", downdownarrows: "⇊", downharpoonleft: "⇃", downharpoonright: "⇂", DownLeftRightVector: "⥐", DownLeftTeeVector: "⥞", DownLeftVector: "↽", DownLeftVectorBar: "⥖", DownRightTeeVector: "⥟", DownRightVector: "⇁", DownRightVectorBar: "⥗", DownTee: "⊤", DownTeeArrow: "↧", drbkarow: "⤐", drcorn: "⌟", drcrop: "⌌", Dscr: "𝒟", dscr: "𝒹", DScy: "Ѕ", dscy: "ѕ", dsol: "⧶", Dstrok: "Đ", dstrok: "đ", dtdot: "⋱", dtri: "▿", dtrif: "▾", duarr: "⇵", duhar: "⥯", dwangle: "⦦", DZcy: "Џ", dzcy: "џ", dzigrarr: "⟿", Eacute: "É", eacute: "é", easter: "⩮", Ecaron: "Ě", ecaron: "ě", ecir: "≖", Ecirc: "Ê", ecirc: "ê", ecolon: "≕", Ecy: "Э", ecy: "э", eDDot: "⩷", Edot: "Ė", eDot: "≑", edot: "ė", ee: "ⅇ", efDot: "≒", Efr: "𝔈", efr: "𝔢", eg: "⪚", Egrave: "È", egrave: "è", egs: "⪖", egsdot: "⪘", el: "⪙", Element: "∈", elinters: "⏧", ell: "ℓ", els: "⪕", elsdot: "⪗", Emacr: "Ē", emacr: "ē", empty: "∅", emptyset: "∅", EmptySmallSquare: "◻", emptyv: "∅", EmptyVerySmallSquare: "▫", emsp: " ", emsp13: " ", emsp14: " ", ENG: "Ŋ", eng: "ŋ", ensp: " ", Eogon: "Ę", eogon: "ę", Eopf: "𝔼", eopf: "𝕖", epar: "⋕", eparsl: "⧣", eplus: "⩱", epsi: "ε", Epsilon: "Ε", epsilon: "ε", epsiv: "ϵ", eqcirc: "≖", eqcolon: "≕", eqsim: "≂", eqslantgtr: "⪖", eqslantless: "⪕", Equal: "⩵", equals: "=", EqualTilde: "≂", equest: "≟", Equilibrium: "⇌", equiv: "≡", equivDD: "⩸", eqvparsl: "⧥", erarr: "⥱", erDot: "≓", Escr: "ℰ", escr: "ℯ", esdot: "≐", Esim: "⩳", esim: "≂", Eta: "Η", eta: "η", ETH: "Ð", eth: "ð", Euml: "Ë", euml: "ë", euro: "€", excl: "!", exist: "∃", Exists: "∃", expectation: "ℰ", ExponentialE: "ⅇ", exponentiale: "ⅇ", fallingdotseq: "≒", Fcy: "Ф", fcy: "ф", female: "♀", ffilig: "ﬃ", fflig: "ﬀ", ffllig: "ﬄ", Ffr: "𝔉", ffr: "𝔣", filig: "ﬁ", FilledSmallSquare: "◼", FilledVerySmallSquare: "▪", fjlig: "fj", flat: "♭", fllig: "ﬂ", fltns: "▱", fnof: "ƒ", Fopf: "𝔽", fopf: "𝕗", ForAll: "∀", forall: "∀", fork: "⋔", forkv: "⫙", Fouriertrf: "ℱ", fpartint: "⨍", frac12: "½", frac13: "⅓", frac14: "¼", frac15: "⅕", frac16: "⅙", frac18: "⅛", frac23: "⅔", frac25: "⅖", frac34: "¾", frac35: "⅗", frac38: "⅜", frac45: "⅘", frac56: "⅚", frac58: "⅝", frac78: "⅞", frasl: "⁄", frown: "⌢", Fscr: "ℱ", fscr: "𝒻", gacute: "ǵ", Gamma: "Γ", gamma: "γ", Gammad: "Ϝ", gammad: "ϝ", gap: "⪆", Gbreve: "Ğ", gbreve: "ğ", Gcedil: "Ģ", Gcirc: "Ĝ", gcirc: "ĝ", Gcy: "Г", gcy: "г", Gdot: "Ġ", gdot: "ġ", gE: "≧", ge: "≥", gEl: "⪌", gel: "⋛", geq: "≥", geqq: "≧", geqslant: "⩾", ges: "⩾", gescc: "⪩", gesdot: "⪀", gesdoto: "⪂", gesdotol: "⪄", gesl: "⋛︀", gesles: "⪔", Gfr: "𝔊", gfr: "𝔤", Gg: "⋙", gg: "≫", ggg: "⋙", gimel: "ℷ", GJcy: "Ѓ", gjcy: "ѓ", gl: "≷", gla: "⪥", glE: "⪒", glj: "⪤", gnap: "⪊", gnapprox: "⪊", gnE: "≩", gne: "⪈", gneq: "⪈", gneqq: "≩", gnsim: "⋧", Gopf: "𝔾", gopf: "𝕘", grave: "`", GreaterEqual: "≥", GreaterEqualLess: "⋛", GreaterFullEqual: "≧", GreaterGreater: "⪢", GreaterLess: "≷", GreaterSlantEqual: "⩾", GreaterTilde: "≳", Gscr: "𝒢", gscr: "ℊ", gsim: "≳", gsime: "⪎", gsiml: "⪐", Gt: "≫", GT: ">", gt: ">", gtcc: "⪧", gtcir: "⩺", gtdot: "⋗", gtlPar: "⦕", gtquest: "⩼", gtrapprox: "⪆", gtrarr: "⥸", gtrdot: "⋗", gtreqless: "⋛", gtreqqless: "⪌", gtrless: "≷", gtrsim: "≳", gvertneqq: "≩︀", gvnE: "≩︀", Hacek: "ˇ", hairsp: " ", half: "½", hamilt: "ℋ", HARDcy: "Ъ", hardcy: "ъ", hArr: "⇔", harr: "↔", harrcir: "⥈", harrw: "↭", Hat: "^", hbar: "ℏ", Hcirc: "Ĥ", hcirc: "ĥ", hearts: "♥", heartsuit: "♥", hellip: "…", hercon: "⊹", Hfr: "ℌ", hfr: "𝔥", HilbertSpace: "ℋ", hksearow: "⤥", hkswarow: "⤦", hoarr: "⇿", homtht: "∻", hookleftarrow: "↩", hookrightarrow: "↪", Hopf: "ℍ", hopf: "𝕙", horbar: "―", HorizontalLine: "─", Hscr: "ℋ", hscr: "𝒽", hslash: "ℏ", Hstrok: "Ħ", hstrok: "ħ", HumpDownHump: "≎", HumpEqual: "≏", hybull: "⁃", hyphen: "‐", Iacute: "Í", iacute: "í", ic: "⁣", Icirc: "Î", icirc: "î", Icy: "И", icy: "и", Idot: "İ", IEcy: "Е", iecy: "е", iexcl: "¡", iff: "⇔", Ifr: "ℑ", ifr: "𝔦", Igrave: "Ì", igrave: "ì", ii: "ⅈ", iiiint: "⨌", iiint: "∭", iinfin: "⧜", iiota: "℩", IJlig: "Ĳ", ijlig: "ĳ", Im: "ℑ", Imacr: "Ī", imacr: "ī", image: "ℑ", ImaginaryI: "ⅈ", imagline: "ℐ", imagpart: "ℑ", imath: "ı", imof: "⊷", imped: "Ƶ", Implies: "⇒", in: "∈", incare: "℅", infin: "∞", infintie: "⧝", inodot: "ı", Int: "∬", int: "∫", intcal: "⊺", integers: "ℤ", Integral: "∫", intercal: "⊺", Intersection: "⋂", intlarhk: "⨗", intprod: "⨼", InvisibleComma: "⁣", InvisibleTimes: "⁢", IOcy: "Ё", iocy: "ё", Iogon: "Į", iogon: "į", Iopf: "𝕀", iopf: "𝕚", Iota: "Ι", iota: "ι", iprod: "⨼", iquest: "¿", Iscr: "ℐ", iscr: "𝒾", isin: "∈", isindot: "⋵", isinE: "⋹", isins: "⋴", isinsv: "⋳", isinv: "∈", it: "⁢", Itilde: "Ĩ", itilde: "ĩ", Iukcy: "І", iukcy: "і", Iuml: "Ï", iuml: "ï", Jcirc: "Ĵ", jcirc: "ĵ", Jcy: "Й", jcy: "й", Jfr: "𝔍", jfr: "𝔧", jmath: "ȷ", Jopf: "𝕁", jopf: "𝕛", Jscr: "𝒥", jscr: "𝒿", Jsercy: "Ј", jsercy: "ј", Jukcy: "Є", jukcy: "є", Kappa: "Κ", kappa: "κ", kappav: "ϰ", Kcedil: "Ķ", kcedil: "ķ", Kcy: "К", kcy: "к", Kfr: "𝔎", kfr: "𝔨", kgreen: "ĸ", KHcy: "Х", khcy: "х", KJcy: "Ќ", kjcy: "ќ", Kopf: "𝕂", kopf: "𝕜", Kscr: "𝒦", kscr: "𝓀", lAarr: "⇚", Lacute: "Ĺ", lacute: "ĺ", laemptyv: "⦴", lagran: "ℒ", Lambda: "Λ", lambda: "λ", Lang: "⟪", lang: "⟨", langd: "⦑", langle: "⟨", lap: "⪅", Laplacetrf: "ℒ", laquo: "«", Larr: "↞", lArr: "⇐", larr: "←", larrb: "⇤", larrbfs: "⤟", larrfs: "⤝", larrhk: "↩", larrlp: "↫", larrpl: "⤹", larrsim: "⥳", larrtl: "↢", lat: "⪫", lAtail: "⤛", latail: "⤙", late: "⪭", lates: "⪭︀", lBarr: "⤎", lbarr: "⤌", lbbrk: "❲", lbrace: "{", lbrack: "[", lbrke: "⦋", lbrksld: "⦏", lbrkslu: "⦍", Lcaron: "Ľ", lcaron: "ľ", Lcedil: "Ļ", lcedil: "ļ", lceil: "⌈", lcub: "{", Lcy: "Л", lcy: "л", ldca: "⤶", ldquo: "“", ldquor: "„", ldrdhar: "⥧", ldrushar: "⥋", ldsh: "↲", lE: "≦", le: "≤", LeftAngleBracket: "⟨", LeftArrow: "←", Leftarrow: "⇐", leftarrow: "←", LeftArrowBar: "⇤", LeftArrowRightArrow: "⇆", leftarrowtail: "↢", LeftCeiling: "⌈", LeftDoubleBracket: "⟦", LeftDownTeeVector: "⥡", LeftDownVector: "⇃", LeftDownVectorBar: "⥙", LeftFloor: "⌊", leftharpoondown: "↽", leftharpoonup: "↼", leftleftarrows: "⇇", LeftRightArrow: "↔", Leftrightarrow: "⇔", leftrightarrow: "↔", leftrightarrows: "⇆", leftrightharpoons: "⇋", leftrightsquigarrow: "↭", LeftRightVector: "⥎", LeftTee: "⊣", LeftTeeArrow: "↤", LeftTeeVector: "⥚", leftthreetimes: "⋋", LeftTriangle: "⊲", LeftTriangleBar: "⧏", LeftTriangleEqual: "⊴", LeftUpDownVector: "⥑", LeftUpTeeVector: "⥠", LeftUpVector: "↿", LeftUpVectorBar: "⥘", LeftVector: "↼", LeftVectorBar: "⥒", lEg: "⪋", leg: "⋚", leq: "≤", leqq: "≦", leqslant: "⩽", les: "⩽", lescc: "⪨", lesdot: "⩿", lesdoto: "⪁", lesdotor: "⪃", lesg: "⋚︀", lesges: "⪓", lessapprox: "⪅", lessdot: "⋖", lesseqgtr: "⋚", lesseqqgtr: "⪋", LessEqualGreater: "⋚", LessFullEqual: "≦", LessGreater: "≶", lessgtr: "≶", LessLess: "⪡", lesssim: "≲", LessSlantEqual: "⩽", LessTilde: "≲", lfisht: "⥼", lfloor: "⌊", Lfr: "𝔏", lfr: "𝔩", lg: "≶", lgE: "⪑", lHar: "⥢", lhard: "↽", lharu: "↼", lharul: "⥪", lhblk: "▄", LJcy: "Љ", ljcy: "љ", Ll: "⋘", ll: "≪", llarr: "⇇", llcorner: "⌞", Lleftarrow: "⇚", llhard: "⥫", lltri: "◺", Lmidot: "Ŀ", lmidot: "ŀ", lmoust: "⎰", lmoustache: "⎰", lnap: "⪉", lnapprox: "⪉", lnE: "≨", lne: "⪇", lneq: "⪇", lneqq: "≨", lnsim: "⋦", loang: "⟬", loarr: "⇽", lobrk: "⟦", LongLeftArrow: "⟵", Longleftarrow: "⟸", longleftarrow: "⟵", LongLeftRightArrow: "⟷", Longleftrightarrow: "⟺", longleftrightarrow: "⟷", longmapsto: "⟼", LongRightArrow: "⟶", Longrightarrow: "⟹", longrightarrow: "⟶", looparrowleft: "↫", looparrowright: "↬", lopar: "⦅", Lopf: "𝕃", lopf: "𝕝", loplus: "⨭", lotimes: "⨴", lowast: "∗", lowbar: "_", LowerLeftArrow: "↙", LowerRightArrow: "↘", loz: "◊", lozenge: "◊", lozf: "⧫", lpar: "(", lparlt: "⦓", lrarr: "⇆", lrcorner: "⌟", lrhar: "⇋", lrhard: "⥭", lrm: "‎", lrtri: "⊿", lsaquo: "‹", Lscr: "ℒ", lscr: "𝓁", Lsh: "↰", lsh: "↰", lsim: "≲", lsime: "⪍", lsimg: "⪏", lsqb: "[", lsquo: "‘", lsquor: "‚", Lstrok: "Ł", lstrok: "ł", Lt: "≪", LT: "<", lt: "<", ltcc: "⪦", ltcir: "⩹", ltdot: "⋖", lthree: "⋋", ltimes: "⋉", ltlarr: "⥶", ltquest: "⩻", ltri: "◃", ltrie: "⊴", ltrif: "◂", ltrPar: "⦖", lurdshar: "⥊", luruhar: "⥦", lvertneqq: "≨︀", lvnE: "≨︀", macr: "¯", male: "♂", malt: "✠", maltese: "✠", Map: "⤅", map: "↦", mapsto: "↦", mapstodown: "↧", mapstoleft: "↤", mapstoup: "↥", marker: "▮", mcomma: "⨩", Mcy: "М", mcy: "м", mdash: "—", mDDot: "∺", measuredangle: "∡", MediumSpace: " ", Mellintrf: "ℳ", Mfr: "𝔐", mfr: "𝔪", mho: "℧", micro: "µ", mid: "∣", midast: "*", midcir: "⫰", middot: "·", minus: "−", minusb: "⊟", minusd: "∸", minusdu: "⨪", MinusPlus: "∓", mlcp: "⫛", mldr: "…", mnplus: "∓", models: "⊧", Mopf: "𝕄", mopf: "𝕞", mp: "∓", Mscr: "ℳ", mscr: "𝓂", mstpos: "∾", Mu: "Μ", mu: "μ", multimap: "⊸", mumap: "⊸", nabla: "∇", Nacute: "Ń", nacute: "ń", nang: "∠⃒", nap: "≉", napE: "⩰̸", napid: "≋̸", napos: "ŉ", napprox: "≉", natur: "♮", natural: "♮", naturals: "ℕ", nbsp: " ", nbump: "≎̸", nbumpe: "≏̸", ncap: "⩃", Ncaron: "Ň", ncaron: "ň", Ncedil: "Ņ", ncedil: "ņ", ncong: "≇", ncongdot: "⩭̸", ncup: "⩂", Ncy: "Н", ncy: "н", ndash: "–", ne: "≠", nearhk: "⤤", neArr: "⇗", nearr: "↗", nearrow: "↗", nedot: "≐̸", NegativeMediumSpace: "​", NegativeThickSpace: "​", NegativeThinSpace: "​", NegativeVeryThinSpace: "​", nequiv: "≢", nesear: "⤨", nesim: "≂̸", NestedGreaterGreater: "≫", NestedLessLess: "≪", NewLine: "\n", nexist: "∄", nexists: "∄", Nfr: "𝔑", nfr: "𝔫", ngE: "≧̸", nge: "≱", ngeq: "≱", ngeqq: "≧̸", ngeqslant: "⩾̸", nges: "⩾̸", nGg: "⋙̸", ngsim: "≵", nGt: "≫⃒", ngt: "≯", ngtr: "≯", nGtv: "≫̸", nhArr: "⇎", nharr: "↮", nhpar: "⫲", ni: "∋", nis: "⋼", nisd: "⋺", niv: "∋", NJcy: "Њ", njcy: "њ", nlArr: "⇍", nlarr: "↚", nldr: "‥", nlE: "≦̸", nle: "≰", nLeftarrow: "⇍", nleftarrow: "↚", nLeftrightarrow: "⇎", nleftrightarrow: "↮", nleq: "≰", nleqq: "≦̸", nleqslant: "⩽̸", nles: "⩽̸", nless: "≮", nLl: "⋘̸", nlsim: "≴", nLt: "≪⃒", nlt: "≮", nltri: "⋪", nltrie: "⋬", nLtv: "≪̸", nmid: "∤", NoBreak: "⁠", NonBreakingSpace: " ", Nopf: "ℕ", nopf: "𝕟", Not: "⫬", not: "¬", NotCongruent: "≢", NotCupCap: "≭", NotDoubleVerticalBar: "∦", NotElement: "∉", NotEqual: "≠", NotEqualTilde: "≂̸", NotExists: "∄", NotGreater: "≯", NotGreaterEqual: "≱", NotGreaterFullEqual: "≧̸", NotGreaterGreater: "≫̸", NotGreaterLess: "≹", NotGreaterSlantEqual: "⩾̸", NotGreaterTilde: "≵", NotHumpDownHump: "≎̸", NotHumpEqual: "≏̸", notin: "∉", notindot: "⋵̸", notinE: "⋹̸", notinva: "∉", notinvb: "⋷", notinvc: "⋶", NotLeftTriangle: "⋪", NotLeftTriangleBar: "⧏̸", NotLeftTriangleEqual: "⋬", NotLess: "≮", NotLessEqual: "≰", NotLessGreater: "≸", NotLessLess: "≪̸", NotLessSlantEqual: "⩽̸", NotLessTilde: "≴", NotNestedGreaterGreater: "⪢̸", NotNestedLessLess: "⪡̸", notni: "∌", notniva: "∌", notnivb: "⋾", notnivc: "⋽", NotPrecedes: "⊀", NotPrecedesEqual: "⪯̸", NotPrecedesSlantEqual: "⋠", NotReverseElement: "∌", NotRightTriangle: "⋫", NotRightTriangleBar: "⧐̸", NotRightTriangleEqual: "⋭", NotSquareSubset: "⊏̸", NotSquareSubsetEqual: "⋢", NotSquareSuperset: "⊐̸", NotSquareSupersetEqual: "⋣", NotSubset: "⊂⃒", NotSubsetEqual: "⊈", NotSucceeds: "⊁", NotSucceedsEqual: "⪰̸", NotSucceedsSlantEqual: "⋡", NotSucceedsTilde: "≿̸", NotSuperset: "⊃⃒", NotSupersetEqual: "⊉", NotTilde: "≁", NotTildeEqual: "≄", NotTildeFullEqual: "≇", NotTildeTilde: "≉", NotVerticalBar: "∤", npar: "∦", nparallel: "∦", nparsl: "⫽⃥", npart: "∂̸", npolint: "⨔", npr: "⊀", nprcue: "⋠", npre: "⪯̸", nprec: "⊀", npreceq: "⪯̸", nrArr: "⇏", nrarr: "↛", nrarrc: "⤳̸", nrarrw: "↝̸", nRightarrow: "⇏", nrightarrow: "↛", nrtri: "⋫", nrtrie: "⋭", nsc: "⊁", nsccue: "⋡", nsce: "⪰̸", Nscr: "𝒩", nscr: "𝓃", nshortmid: "∤", nshortparallel: "∦", nsim: "≁", nsime: "≄", nsimeq: "≄", nsmid: "∤", nspar: "∦", nsqsube: "⋢", nsqsupe: "⋣", nsub: "⊄", nsubE: "⫅̸", nsube: "⊈", nsubset: "⊂⃒", nsubseteq: "⊈", nsubseteqq: "⫅̸", nsucc: "⊁", nsucceq: "⪰̸", nsup: "⊅", nsupE: "⫆̸", nsupe: "⊉", nsupset: "⊃⃒", nsupseteq: "⊉", nsupseteqq: "⫆̸", ntgl: "≹", Ntilde: "Ñ", ntilde: "ñ", ntlg: "≸", ntriangleleft: "⋪", ntrianglelefteq: "⋬", ntriangleright: "⋫", ntrianglerighteq: "⋭", Nu: "Ν", nu: "ν", num: "#", numero: "№", numsp: " ", nvap: "≍⃒", nVDash: "⊯", nVdash: "⊮", nvDash: "⊭", nvdash: "⊬", nvge: "≥⃒", nvgt: ">⃒", nvHarr: "⤄", nvinfin: "⧞", nvlArr: "⤂", nvle: "≤⃒", nvlt: "<⃒", nvltrie: "⊴⃒", nvrArr: "⤃", nvrtrie: "⊵⃒", nvsim: "∼⃒", nwarhk: "⤣", nwArr: "⇖", nwarr: "↖", nwarrow: "↖", nwnear: "⤧", Oacute: "Ó", oacute: "ó", oast: "⊛", ocir: "⊚", Ocirc: "Ô", ocirc: "ô", Ocy: "О", ocy: "о", odash: "⊝", Odblac: "Ő", odblac: "ő", odiv: "⨸", odot: "⊙", odsold: "⦼", OElig: "Œ", oelig: "œ", ofcir: "⦿", Ofr: "𝔒", ofr: "𝔬", ogon: "˛", Ograve: "Ò", ograve: "ò", ogt: "⧁", ohbar: "⦵", ohm: "Ω", oint: "∮", olarr: "↺", olcir: "⦾", olcross: "⦻", oline: "‾", olt: "⧀", Omacr: "Ō", omacr: "ō", Omega: "Ω", omega: "ω", Omicron: "Ο", omicron: "ο", omid: "⦶", ominus: "⊖", Oopf: "𝕆", oopf: "𝕠", opar: "⦷", OpenCurlyDoubleQuote: "“", OpenCurlyQuote: "‘", operp: "⦹", oplus: "⊕", Or: "⩔", or: "∨", orarr: "↻", ord: "⩝", order: "ℴ", orderof: "ℴ", ordf: "ª", ordm: "º", origof: "⊶", oror: "⩖", orslope: "⩗", orv: "⩛", oS: "Ⓢ", Oscr: "𝒪", oscr: "ℴ", Oslash: "Ø", oslash: "ø", osol: "⊘", Otilde: "Õ", otilde: "õ", Otimes: "⨷", otimes: "⊗", otimesas: "⨶", Ouml: "Ö", ouml: "ö", ovbar: "⌽", OverBar: "‾", OverBrace: "⏞", OverBracket: "⎴", OverParenthesis: "⏜", par: "∥", para: "¶", parallel: "∥", parsim: "⫳", parsl: "⫽", part: "∂", PartialD: "∂", Pcy: "П", pcy: "п", percnt: "%", period: ".", permil: "‰", perp: "⊥", pertenk: "‱", Pfr: "𝔓", pfr: "𝔭", Phi: "Φ", phi: "φ", phiv: "ϕ", phmmat: "ℳ", phone: "☎", Pi: "Π", pi: "π", pitchfork: "⋔", piv: "ϖ", planck: "ℏ", planckh: "ℎ", plankv: "ℏ", plus: "+", plusacir: "⨣", plusb: "⊞", pluscir: "⨢", plusdo: "∔", plusdu: "⨥", pluse: "⩲", PlusMinus: "±", plusmn: "±", plussim: "⨦", plustwo: "⨧", pm: "±", Poincareplane: "ℌ", pointint: "⨕", Popf: "ℙ", popf: "𝕡", pound: "£", Pr: "⪻", pr: "≺", prap: "⪷", prcue: "≼", prE: "⪳", pre: "⪯", prec: "≺", precapprox: "⪷", preccurlyeq: "≼", Precedes: "≺", PrecedesEqual: "⪯", PrecedesSlantEqual: "≼", PrecedesTilde: "≾", preceq: "⪯", precnapprox: "⪹", precneqq: "⪵", precnsim: "⋨", precsim: "≾", Prime: "″", prime: "′", primes: "ℙ", prnap: "⪹", prnE: "⪵", prnsim: "⋨", prod: "∏", Product: "∏", profalar: "⌮", profline: "⌒", profsurf: "⌓", prop: "∝", Proportion: "∷", Proportional: "∝", propto: "∝", prsim: "≾", prurel: "⊰", Pscr: "𝒫", pscr: "𝓅", Psi: "Ψ", psi: "ψ", puncsp: " ", Qfr: "𝔔", qfr: "𝔮", qint: "⨌", Qopf: "ℚ", qopf: "𝕢", qprime: "⁗", Qscr: "𝒬", qscr: "𝓆", quaternions: "ℍ", quatint: "⨖", quest: "?", questeq: "≟", QUOT: '"', quot: '"', rAarr: "⇛", race: "∽̱", Racute: "Ŕ", racute: "ŕ", radic: "√", raemptyv: "⦳", Rang: "⟫", rang: "⟩", rangd: "⦒", range: "⦥", rangle: "⟩", raquo: "»", Rarr: "↠", rArr: "⇒", rarr: "→", rarrap: "⥵", rarrb: "⇥", rarrbfs: "⤠", rarrc: "⤳", rarrfs: "⤞", rarrhk: "↪", rarrlp: "↬", rarrpl: "⥅", rarrsim: "⥴", Rarrtl: "⤖", rarrtl: "↣", rarrw: "↝", rAtail: "⤜", ratail: "⤚", ratio: "∶", rationals: "ℚ", RBarr: "⤐", rBarr: "⤏", rbarr: "⤍", rbbrk: "❳", rbrace: "}", rbrack: "]", rbrke: "⦌", rbrksld: "⦎", rbrkslu: "⦐", Rcaron: "Ř", rcaron: "ř", Rcedil: "Ŗ", rcedil: "ŗ", rceil: "⌉", rcub: "}", Rcy: "Р", rcy: "р", rdca: "⤷", rdldhar: "⥩", rdquo: "”", rdquor: "”", rdsh: "↳", Re: "ℜ", real: "ℜ", realine: "ℛ", realpart: "ℜ", reals: "ℝ", rect: "▭", REG: "®", reg: "®", ReverseElement: "∋", ReverseEquilibrium: "⇋", ReverseUpEquilibrium: "⥯", rfisht: "⥽", rfloor: "⌋", Rfr: "ℜ", rfr: "𝔯", rHar: "⥤", rhard: "⇁", rharu: "⇀", rharul: "⥬", Rho: "Ρ", rho: "ρ", rhov: "ϱ", RightAngleBracket: "⟩", RightArrow: "→", Rightarrow: "⇒", rightarrow: "→", RightArrowBar: "⇥", RightArrowLeftArrow: "⇄", rightarrowtail: "↣", RightCeiling: "⌉", RightDoubleBracket: "⟧", RightDownTeeVector: "⥝", RightDownVector: "⇂", RightDownVectorBar: "⥕", RightFloor: "⌋", rightharpoondown: "⇁", rightharpoonup: "⇀", rightleftarrows: "⇄", rightleftharpoons: "⇌", rightrightarrows: "⇉", rightsquigarrow: "↝", RightTee: "⊢", RightTeeArrow: "↦", RightTeeVector: "⥛", rightthreetimes: "⋌", RightTriangle: "⊳", RightTriangleBar: "⧐", RightTriangleEqual: "⊵", RightUpDownVector: "⥏", RightUpTeeVector: "⥜", RightUpVector: "↾", RightUpVectorBar: "⥔", RightVector: "⇀", RightVectorBar: "⥓", ring: "˚", risingdotseq: "≓", rlarr: "⇄", rlhar: "⇌", rlm: "‏", rmoust: "⎱", rmoustache: "⎱", rnmid: "⫮", roang: "⟭", roarr: "⇾", robrk: "⟧", ropar: "⦆", Ropf: "ℝ", ropf: "𝕣", roplus: "⨮", rotimes: "⨵", RoundImplies: "⥰", rpar: ")", rpargt: "⦔", rppolint: "⨒", rrarr: "⇉", Rrightarrow: "⇛", rsaquo: "›", Rscr: "ℛ", rscr: "𝓇", Rsh: "↱", rsh: "↱", rsqb: "]", rsquo: "’", rsquor: "’", rthree: "⋌", rtimes: "⋊", rtri: "▹", rtrie: "⊵", rtrif: "▸", rtriltri: "⧎", RuleDelayed: "⧴", ruluhar: "⥨", rx: "℞", Sacute: "Ś", sacute: "ś", sbquo: "‚", Sc: "⪼", sc: "≻", scap: "⪸", Scaron: "Š", scaron: "š", sccue: "≽", scE: "⪴", sce: "⪰", Scedil: "Ş", scedil: "ş", Scirc: "Ŝ", scirc: "ŝ", scnap: "⪺", scnE: "⪶", scnsim: "⋩", scpolint: "⨓", scsim: "≿", Scy: "С", scy: "с", sdot: "⋅", sdotb: "⊡", sdote: "⩦", searhk: "⤥", seArr: "⇘", searr: "↘", searrow: "↘", sect: "§", semi: ";", seswar: "⤩", setminus: "∖", setmn: "∖", sext: "✶", Sfr: "𝔖", sfr: "𝔰", sfrown: "⌢", sharp: "♯", SHCHcy: "Щ", shchcy: "щ", SHcy: "Ш", shcy: "ш", ShortDownArrow: "↓", ShortLeftArrow: "←", shortmid: "∣", shortparallel: "∥", ShortRightArrow: "→", ShortUpArrow: "↑", shy: "­", Sigma: "Σ", sigma: "σ", sigmaf: "ς", sigmav: "ς", sim: "∼", simdot: "⩪", sime: "≃", simeq: "≃", simg: "⪞", simgE: "⪠", siml: "⪝", simlE: "⪟", simne: "≆", simplus: "⨤", simrarr: "⥲", slarr: "←", SmallCircle: "∘", smallsetminus: "∖", smashp: "⨳", smeparsl: "⧤", smid: "∣", smile: "⌣", smt: "⪪", smte: "⪬", smtes: "⪬︀", SOFTcy: "Ь", softcy: "ь", sol: "/", solb: "⧄", solbar: "⌿", Sopf: "𝕊", sopf: "𝕤", spades: "♠", spadesuit: "♠", spar: "∥", sqcap: "⊓", sqcaps: "⊓︀", sqcup: "⊔", sqcups: "⊔︀", Sqrt: "√", sqsub: "⊏", sqsube: "⊑", sqsubset: "⊏", sqsubseteq: "⊑", sqsup: "⊐", sqsupe: "⊒", sqsupset: "⊐", sqsupseteq: "⊒", squ: "□", Square: "□", square: "□", SquareIntersection: "⊓", SquareSubset: "⊏", SquareSubsetEqual: "⊑", SquareSuperset: "⊐", SquareSupersetEqual: "⊒", SquareUnion: "⊔", squarf: "▪", squf: "▪", srarr: "→", Sscr: "𝒮", sscr: "𝓈", ssetmn: "∖", ssmile: "⌣", sstarf: "⋆", Star: "⋆", star: "☆", starf: "★", straightepsilon: "ϵ", straightphi: "ϕ", strns: "¯", Sub: "⋐", sub: "⊂", subdot: "⪽", subE: "⫅", sube: "⊆", subedot: "⫃", submult: "⫁", subnE: "⫋", subne: "⊊", subplus: "⪿", subrarr: "⥹", Subset: "⋐", subset: "⊂", subseteq: "⊆", subseteqq: "⫅", SubsetEqual: "⊆", subsetneq: "⊊", subsetneqq: "⫋", subsim: "⫇", subsub: "⫕", subsup: "⫓", succ: "≻", succapprox: "⪸", succcurlyeq: "≽", Succeeds: "≻", SucceedsEqual: "⪰", SucceedsSlantEqual: "≽", SucceedsTilde: "≿", succeq: "⪰", succnapprox: "⪺", succneqq: "⪶", succnsim: "⋩", succsim: "≿", SuchThat: "∋", Sum: "∑", sum: "∑", sung: "♪", Sup: "⋑", sup: "⊃", sup1: "¹", sup2: "²", sup3: "³", supdot: "⪾", supdsub: "⫘", supE: "⫆", supe: "⊇", supedot: "⫄", Superset: "⊃", SupersetEqual: "⊇", suphsol: "⟉", suphsub: "⫗", suplarr: "⥻", supmult: "⫂", supnE: "⫌", supne: "⊋", supplus: "⫀", Supset: "⋑", supset: "⊃", supseteq: "⊇", supseteqq: "⫆", supsetneq: "⊋", supsetneqq: "⫌", supsim: "⫈", supsub: "⫔", supsup: "⫖", swarhk: "⤦", swArr: "⇙", swarr: "↙", swarrow: "↙", swnwar: "⤪", szlig: "ß", Tab: "	", target: "⌖", Tau: "Τ", tau: "τ", tbrk: "⎴", Tcaron: "Ť", tcaron: "ť", Tcedil: "Ţ", tcedil: "ţ", Tcy: "Т", tcy: "т", tdot: "⃛", telrec: "⌕", Tfr: "𝔗", tfr: "𝔱", there4: "∴", Therefore: "∴", therefore: "∴", Theta: "Θ", theta: "θ", thetasym: "ϑ", thetav: "ϑ", thickapprox: "≈", thicksim: "∼", ThickSpace: "  ", thinsp: " ", ThinSpace: " ", thkap: "≈", thksim: "∼", THORN: "Þ", thorn: "þ", Tilde: "∼", tilde: "˜", TildeEqual: "≃", TildeFullEqual: "≅", TildeTilde: "≈", times: "×", timesb: "⊠", timesbar: "⨱", timesd: "⨰", tint: "∭", toea: "⤨", top: "⊤", topbot: "⌶", topcir: "⫱", Topf: "𝕋", topf: "𝕥", topfork: "⫚", tosa: "⤩", tprime: "‴", TRADE: "™", trade: "™", triangle: "▵", triangledown: "▿", triangleleft: "◃", trianglelefteq: "⊴", triangleq: "≜", triangleright: "▹", trianglerighteq: "⊵", tridot: "◬", trie: "≜", triminus: "⨺", TripleDot: "⃛", triplus: "⨹", trisb: "⧍", tritime: "⨻", trpezium: "⏢", Tscr: "𝒯", tscr: "𝓉", TScy: "Ц", tscy: "ц", TSHcy: "Ћ", tshcy: "ћ", Tstrok: "Ŧ", tstrok: "ŧ", twixt: "≬", twoheadleftarrow: "↞", twoheadrightarrow: "↠", Uacute: "Ú", uacute: "ú", Uarr: "↟", uArr: "⇑", uarr: "↑", Uarrocir: "⥉", Ubrcy: "Ў", ubrcy: "ў", Ubreve: "Ŭ", ubreve: "ŭ", Ucirc: "Û", ucirc: "û", Ucy: "У", ucy: "у", udarr: "⇅", Udblac: "Ű", udblac: "ű", udhar: "⥮", ufisht: "⥾", Ufr: "𝔘", ufr: "𝔲", Ugrave: "Ù", ugrave: "ù", uHar: "⥣", uharl: "↿", uharr: "↾", uhblk: "▀", ulcorn: "⌜", ulcorner: "⌜", ulcrop: "⌏", ultri: "◸", Umacr: "Ū", umacr: "ū", uml: "¨", UnderBar: "_", UnderBrace: "⏟", UnderBracket: "⎵", UnderParenthesis: "⏝", Union: "⋃", UnionPlus: "⊎", Uogon: "Ų", uogon: "ų", Uopf: "𝕌", uopf: "𝕦", UpArrow: "↑", Uparrow: "⇑", uparrow: "↑", UpArrowBar: "⤒", UpArrowDownArrow: "⇅", UpDownArrow: "↕", Updownarrow: "⇕", updownarrow: "↕", UpEquilibrium: "⥮", upharpoonleft: "↿", upharpoonright: "↾", uplus: "⊎", UpperLeftArrow: "↖", UpperRightArrow: "↗", Upsi: "ϒ", upsi: "υ", upsih: "ϒ", Upsilon: "Υ", upsilon: "υ", UpTee: "⊥", UpTeeArrow: "↥", upuparrows: "⇈", urcorn: "⌝", urcorner: "⌝", urcrop: "⌎", Uring: "Ů", uring: "ů", urtri: "◹", Uscr: "𝒰", uscr: "𝓊", utdot: "⋰", Utilde: "Ũ", utilde: "ũ", utri: "▵", utrif: "▴", uuarr: "⇈", Uuml: "Ü", uuml: "ü", uwangle: "⦧", vangrt: "⦜", varepsilon: "ϵ", varkappa: "ϰ", varnothing: "∅", varphi: "ϕ", varpi: "ϖ", varpropto: "∝", vArr: "⇕", varr: "↕", varrho: "ϱ", varsigma: "ς", varsubsetneq: "⊊︀", varsubsetneqq: "⫋︀", varsupsetneq: "⊋︀", varsupsetneqq: "⫌︀", vartheta: "ϑ", vartriangleleft: "⊲", vartriangleright: "⊳", Vbar: "⫫", vBar: "⫨", vBarv: "⫩", Vcy: "В", vcy: "в", VDash: "⊫", Vdash: "⊩", vDash: "⊨", vdash: "⊢", Vdashl: "⫦", Vee: "⋁", vee: "∨", veebar: "⊻", veeeq: "≚", vellip: "⋮", Verbar: "‖", verbar: "|", Vert: "‖", vert: "|", VerticalBar: "∣", VerticalLine: "|", VerticalSeparator: "❘", VerticalTilde: "≀", VeryThinSpace: " ", Vfr: "𝔙", vfr: "𝔳", vltri: "⊲", vnsub: "⊂⃒", vnsup: "⊃⃒", Vopf: "𝕍", vopf: "𝕧", vprop: "∝", vrtri: "⊳", Vscr: "𝒱", vscr: "𝓋", vsubnE: "⫋︀", vsubne: "⊊︀", vsupnE: "⫌︀", vsupne: "⊋︀", Vvdash: "⊪", vzigzag: "⦚", Wcirc: "Ŵ", wcirc: "ŵ", wedbar: "⩟", Wedge: "⋀", wedge: "∧", wedgeq: "≙", weierp: "℘", Wfr: "𝔚", wfr: "𝔴", Wopf: "𝕎", wopf: "𝕨", wp: "℘", wr: "≀", wreath: "≀", Wscr: "𝒲", wscr: "𝓌", xcap: "⋂", xcirc: "◯", xcup: "⋃", xdtri: "▽", Xfr: "𝔛", xfr: "𝔵", xhArr: "⟺", xharr: "⟷", Xi: "Ξ", xi: "ξ", xlArr: "⟸", xlarr: "⟵", xmap: "⟼", xnis: "⋻", xodot: "⨀", Xopf: "𝕏", xopf: "𝕩", xoplus: "⨁", xotime: "⨂", xrArr: "⟹", xrarr: "⟶", Xscr: "𝒳", xscr: "𝓍", xsqcup: "⨆", xuplus: "⨄", xutri: "△", xvee: "⋁", xwedge: "⋀", Yacute: "Ý", yacute: "ý", YAcy: "Я", yacy: "я", Ycirc: "Ŷ", ycirc: "ŷ", Ycy: "Ы", ycy: "ы", yen: "¥", Yfr: "𝔜", yfr: "𝔶", YIcy: "Ї", yicy: "ї", Yopf: "𝕐", yopf: "𝕪", Yscr: "𝒴", yscr: "𝓎", YUcy: "Ю", yucy: "ю", Yuml: "Ÿ", yuml: "ÿ", Zacute: "Ź", zacute: "ź", Zcaron: "Ž", zcaron: "ž", Zcy: "З", zcy: "з", Zdot: "Ż", zdot: "ż", zeetrf: "ℨ", ZeroWidthSpace: "​", Zeta: "Ζ", zeta: "ζ", Zfr: "ℨ", zfr: "𝔷", ZHcy: "Ж", zhcy: "ж", zigrarr: "⇝", Zopf: "ℤ", zopf: "𝕫", Zscr: "𝒵", zscr: "𝓏", zwj: "‍", zwnj: "‌" }), e9.entityMap = e9.HTML_ENTITIES), qt;
  var e9, t4;
}
var $t;
var Ht;
var Vt;
var zt = {};
function Wt() {
  if ($t) return zt;
  $t = 1;
  var e9 = Mt().NAMESPACE, t4 = /[A-Z_a-z\xC0-\xD6\xD8-\xF6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/, i3 = new RegExp("[\\-\\.0-9" + t4.source.slice(1, -1) + "\\u00B7\\u0300-\\u036F\\u203F-\\u2040]"), s5 = new RegExp("^" + t4.source + i3.source + "*(?::" + t4.source + i3.source + "*)?$"), n6 = 0, r5 = 1, a6 = 2, o4 = 3, l6 = 4, h2 = 5, u4 = 6, d5 = 7;
  function c3(e10, t5) {
    this.message = e10, this.locator = t5, Error.captureStackTrace && Error.captureStackTrace(this, c3);
  }
  function p2() {
  }
  function m5(t5, i4, s6, n7, r6) {
    function a7(e10) {
      if (e10 > 65535) {
        var t6 = 55296 + ((e10 -= 65536) >> 10), i5 = 56320 + (1023 & e10);
        return String.fromCharCode(t6, i5);
      }
      return String.fromCharCode(e10);
    }
    function o5(e10) {
      var t6 = e10.slice(1, -1);
      return Object.hasOwnProperty.call(s6, t6) ? s6[t6] : "#" === t6.charAt(0) ? a7(parseInt(t6.substr(1).replace("x", "0x"))) : (r6.error("entity not found:" + e10), e10);
    }
    function l7(e10) {
      if (e10 > C3) {
        var i5 = t5.substring(C3, e10).replace(/&#?\w+;/g, o5);
        m6 && h3(C3), n7.characters(i5, 0, e10 - C3), C3 = e10;
      }
    }
    function h3(e10, i5) {
      for (; e10 >= d6 && (i5 = p3.exec(t5)); ) u5 = i5.index, d6 = u5 + i5[0].length, m6.lineNumber++;
      m6.columnNumber = e10 - u5 + 1;
    }
    for (var u5 = 0, d6 = 0, p3 = /.*(?:\r\n?|\n)|.*$/g, m6 = n7.locator, v6 = [{ currentNSMap: i4 }], w6 = {}, C3 = 0; ; ) {
      try {
        var k2 = t5.indexOf("<", C3);
        if (k2 < 0) {
          if (!t5.substr(C3).match(/^\s*$/)) {
            var I2 = n7.doc, x2 = I2.createTextNode(t5.substr(C3));
            I2.appendChild(x2), n7.currentElement = x2;
          }
          return;
        }
        switch (k2 > C3 && l7(k2), t5.charAt(k2 + 1)) {
          case "/":
            var A3 = t5.indexOf(">", k2 + 3), D2 = t5.substring(k2 + 2, A3).replace(/[ \t\n\r]+$/g, ""), P5 = v6.pop();
            A3 < 0 ? (D2 = t5.substring(k2 + 2).replace(/[\s<].*/, ""), r6.error("end tag name: " + D2 + " is not complete:" + P5.tagName), A3 = k2 + 1 + D2.length) : D2.match(/\s</) && (D2 = D2.replace(/[\s<].*/, ""), r6.error("end tag name: " + D2 + " maybe not complete"), A3 = k2 + 1 + D2.length);
            var L3 = P5.localNSMap, O2 = P5.tagName == D2;
            if (O2 || P5.tagName && P5.tagName.toLowerCase() == D2.toLowerCase()) {
              if (n7.endElement(P5.uri, P5.localName, D2), L3) for (var N3 in L3) Object.prototype.hasOwnProperty.call(L3, N3) && n7.endPrefixMapping(N3);
              O2 || r6.fatalError("end tag name: " + D2 + " is not match the current start tagName:" + P5.tagName);
            } else v6.push(P5);
            A3++;
            break;
          case "?":
            m6 && h3(k2), A3 = S4(t5, k2, n7);
            break;
          case "!":
            m6 && h3(k2), A3 = T2(t5, k2, n7, r6);
            break;
          default:
            m6 && h3(k2);
            var R2 = new E4(), M3 = v6[v6.length - 1].currentNSMap, U3 = (A3 = f5(t5, k2, R2, M3, o5, r6), R2.length);
            if (!R2.closed && b3(t5, A3, R2.tagName, w6) && (R2.closed = true, s6.nbsp || r6.warning("unclosed xml attribute")), m6 && U3) {
              for (var B2 = g4(m6, {}), F2 = 0; F2 < U3; F2++) {
                var q3 = R2[F2];
                h3(q3.offset), q3.locator = g4(m6, {});
              }
              n7.locator = B2, y4(R2, n7, M3) && v6.push(R2), n7.locator = m6;
            } else y4(R2, n7, M3) && v6.push(R2);
            e9.isHTML(R2.uri) && !R2.closed ? A3 = _2(t5, A3, R2.tagName, o5, n7) : A3++;
        }
      } catch (j3) {
        if (j3 instanceof c3) throw j3;
        r6.error("element parse error: " + j3), A3 = -1;
      }
      A3 > C3 ? C3 = A3 : l7(Math.max(k2, C3) + 1);
    }
  }
  function g4(e10, t5) {
    return t5.lineNumber = e10.lineNumber, t5.columnNumber = e10.columnNumber, t5;
  }
  function f5(t5, i4, s6, c4, p3, m6) {
    function g5(e10, t6, i5) {
      s6.attributeNames.hasOwnProperty(e10) && m6.fatalError("Attribute " + e10 + " redefined"), s6.addValue(e10, t6.replace(/[\t\n\r]/g, " ").replace(/&#?\w+;/g, p3), i5);
    }
    for (var f6, y5 = ++i4, _3 = n6; ; ) {
      var b4 = t5.charAt(y5);
      switch (b4) {
        case "=":
          if (_3 === r5) f6 = t5.slice(i4, y5), _3 = o4;
          else {
            if (_3 !== a6) throw new Error("attribute equal must after attrName");
            _3 = o4;
          }
          break;
        case "'":
        case '"':
          if (_3 === o4 || _3 === r5) {
            if (_3 === r5 && (m6.warning('attribute value must after "="'), f6 = t5.slice(i4, y5)), i4 = y5 + 1, !((y5 = t5.indexOf(b4, i4)) > 0)) throw new Error("attribute value no end '" + b4 + "' match");
            g5(f6, v6 = t5.slice(i4, y5), i4 - 1), _3 = h2;
          } else {
            if (_3 != l6) throw new Error('attribute value must after "="');
            g5(f6, v6 = t5.slice(i4, y5), i4), m6.warning('attribute "' + f6 + '" missed start quot(' + b4 + ")!!"), i4 = y5 + 1, _3 = h2;
          }
          break;
        case "/":
          switch (_3) {
            case n6:
              s6.setTagName(t5.slice(i4, y5));
            case h2:
            case u4:
            case d5:
              _3 = d5, s6.closed = true;
            case l6:
            case r5:
              break;
            case a6:
              s6.closed = true;
              break;
            default:
              throw new Error("attribute invalid close char('/')");
          }
          break;
        case "":
          return m6.error("unexpected end of input"), _3 == n6 && s6.setTagName(t5.slice(i4, y5)), y5;
        case ">":
          switch (_3) {
            case n6:
              s6.setTagName(t5.slice(i4, y5));
            case h2:
            case u4:
            case d5:
              break;
            case l6:
            case r5:
              "/" === (v6 = t5.slice(i4, y5)).slice(-1) && (s6.closed = true, v6 = v6.slice(0, -1));
            case a6:
              _3 === a6 && (v6 = f6), _3 == l6 ? (m6.warning('attribute "' + v6 + '" missed quot(")!'), g5(f6, v6, i4)) : (e9.isHTML(c4[""]) && v6.match(/^(?:disabled|checked|selected)$/i) || m6.warning('attribute "' + v6 + '" missed value!! "' + v6 + '" instead!!'), g5(v6, v6, i4));
              break;
            case o4:
              throw new Error("attribute value missed!!");
          }
          return y5;
        case "":
          b4 = " ";
        default:
          if (b4 <= " ") switch (_3) {
            case n6:
              s6.setTagName(t5.slice(i4, y5)), _3 = u4;
              break;
            case r5:
              f6 = t5.slice(i4, y5), _3 = a6;
              break;
            case l6:
              var v6 = t5.slice(i4, y5);
              m6.warning('attribute "' + v6 + '" missed quot(")!!'), g5(f6, v6, i4);
            case h2:
              _3 = u4;
          }
          else switch (_3) {
            case a6:
              s6.tagName, e9.isHTML(c4[""]) && f6.match(/^(?:disabled|checked|selected)$/i) || m6.warning('attribute "' + f6 + '" missed value!! "' + f6 + '" instead2!!'), g5(f6, f6, i4), i4 = y5, _3 = r5;
              break;
            case h2:
              m6.warning('attribute space is required"' + f6 + '"!!');
            case u4:
              _3 = r5, i4 = y5;
              break;
            case o4:
              _3 = l6, i4 = y5;
              break;
            case d5:
              throw new Error("elements closed character '/' and '>' must be connected to");
          }
      }
      y5++;
    }
  }
  function y4(t5, i4, s6) {
    for (var n7 = t5.tagName, r6 = null, a7 = t5.length; a7--; ) {
      var o5 = t5[a7], l7 = o5.qName, h3 = o5.value;
      if ((p3 = l7.indexOf(":")) > 0) var u5 = o5.prefix = l7.slice(0, p3), d6 = l7.slice(p3 + 1), c4 = "xmlns" === u5 && d6;
      else d6 = l7, u5 = null, c4 = "xmlns" === l7 && "";
      o5.localName = d6, false !== c4 && (null == r6 && (r6 = {}, v5(s6, s6 = {})), s6[c4] = r6[c4] = h3, o5.uri = e9.XMLNS, i4.startPrefixMapping(c4, h3));
    }
    for (a7 = t5.length; a7--; ) {
      (u5 = (o5 = t5[a7]).prefix) && ("xml" === u5 && (o5.uri = e9.XML), "xmlns" !== u5 && (o5.uri = s6[u5 || ""]));
    }
    var p3;
    (p3 = n7.indexOf(":")) > 0 ? (u5 = t5.prefix = n7.slice(0, p3), d6 = t5.localName = n7.slice(p3 + 1)) : (u5 = null, d6 = t5.localName = n7);
    var m6 = t5.uri = s6[u5 || ""];
    if (i4.startElement(m6, d6, n7, t5), !t5.closed) return t5.currentNSMap = s6, t5.localNSMap = r6, true;
    if (i4.endElement(m6, d6, n7), r6) for (u5 in r6) Object.prototype.hasOwnProperty.call(r6, u5) && i4.endPrefixMapping(u5);
  }
  function _2(e10, t5, i4, s6, n7) {
    if (/^(?:script|textarea)$/i.test(i4)) {
      var r6 = e10.indexOf("</" + i4 + ">", t5), a7 = e10.substring(t5 + 1, r6);
      if (/[&<]/.test(a7)) return /^script$/i.test(i4) ? (n7.characters(a7, 0, a7.length), r6) : (a7 = a7.replace(/&#?\w+;/g, s6), n7.characters(a7, 0, a7.length), r6);
    }
    return t5 + 1;
  }
  function b3(e10, t5, i4, s6) {
    var n7 = s6[i4];
    return null == n7 && ((n7 = e10.lastIndexOf("</" + i4 + ">")) < t5 && (n7 = e10.lastIndexOf("</" + i4)), s6[i4] = n7), n7 < t5;
  }
  function v5(e10, t5) {
    for (var i4 in e10) Object.prototype.hasOwnProperty.call(e10, i4) && (t5[i4] = e10[i4]);
  }
  function T2(e10, t5, i4, s6) {
    if ("-" === e10.charAt(t5 + 2)) return "-" === e10.charAt(t5 + 3) ? (n7 = e10.indexOf("-->", t5 + 4)) > t5 ? (i4.comment(e10, t5 + 4, n7 - t5 - 4), n7 + 3) : (s6.error("Unclosed comment"), -1) : -1;
    if ("CDATA[" == e10.substr(t5 + 3, 6)) {
      var n7 = e10.indexOf("]]>", t5 + 9);
      return i4.startCDATA(), i4.characters(e10, t5 + 9, n7 - t5 - 9), i4.endCDATA(), n7 + 3;
    }
    var r6 = w5(e10, t5), a7 = r6.length;
    if (a7 > 1 && /!doctype/i.test(r6[0][0])) {
      var o5 = r6[1][0], l7 = false, h3 = false;
      a7 > 3 && (/^public$/i.test(r6[2][0]) ? (l7 = r6[3][0], h3 = a7 > 4 && r6[4][0]) : /^system$/i.test(r6[2][0]) && (h3 = r6[3][0]));
      var u5 = r6[a7 - 1];
      return i4.startDTD(o5, l7, h3), i4.endDTD(), u5.index + u5[0].length;
    }
    return -1;
  }
  function S4(e10, t5, i4) {
    var s6 = e10.indexOf("?>", t5);
    if (s6) {
      var n7 = e10.substring(t5, s6).match(/^<\?(\S*)\s*([\s\S]*?)\s*$/);
      return n7 ? (n7[0].length, i4.processingInstruction(n7[1], n7[2]), s6 + 2) : -1;
    }
    return -1;
  }
  function E4() {
    this.attributeNames = {};
  }
  function w5(e10, t5) {
    var i4, s6 = [], n7 = /'[^']+'|"[^"]+"|[^\s<>\/=]+=?|(\/?\s*>|<)/g;
    for (n7.lastIndex = t5, n7.exec(e10); i4 = n7.exec(e10); ) if (s6.push(i4), i4[1]) return s6;
  }
  return c3.prototype = new Error(), c3.prototype.name = c3.name, p2.prototype = { parse: function(e10, t5, i4) {
    var s6 = this.domBuilder;
    s6.startDocument(), v5(t5, t5 = {}), m5(e10, t5, i4, s6, this.errorHandler), s6.endDocument();
  } }, E4.prototype = { setTagName: function(e10) {
    if (!s5.test(e10)) throw new Error("invalid tagName:" + e10);
    this.tagName = e10;
  }, addValue: function(e10, t5, i4) {
    if (!s5.test(e10)) throw new Error("invalid attribute:" + e10);
    this.attributeNames[e10] = this.length, this[this.length++] = { qName: e10, value: t5, offset: i4 };
  }, length: 0, getLocalName: function(e10) {
    return this[e10].localName;
  }, getLocator: function(e10) {
    return this[e10].locator;
  }, getQName: function(e10) {
    return this[e10].qName;
  }, getURI: function(e10) {
    return this[e10].uri;
  }, getValue: function(e10) {
    return this[e10].value;
  } }, zt.XMLReader = p2, zt.ParseError = c3, zt;
}
function Gt() {
  if (Ht) return Ft;
  Ht = 1;
  var e9 = Mt(), t4 = Ut(), i3 = jt(), s5 = Wt(), n6 = t4.DOMImplementation, r5 = e9.NAMESPACE, a6 = s5.ParseError, o4 = s5.XMLReader;
  function l6(e10) {
    return e10.replace(/\r[\n\u0085]/g, "\n").replace(/[\r\u0085\u2028]/g, "\n");
  }
  function h2(e10) {
    this.options = e10 || { locator: {} };
  }
  function u4(e10, t5, i4) {
    if (!e10) {
      if (t5 instanceof d5) return t5;
      e10 = t5;
    }
    var s6 = {}, n7 = e10 instanceof Function;
    function r6(t6) {
      var r7 = e10[t6];
      !r7 && n7 && (r7 = 2 == e10.length ? function(i5) {
        e10(t6, i5);
      } : e10), s6[t6] = r7 && function(e11) {
        r7("[xmldom " + t6 + "]	" + e11 + p2(i4));
      } || function() {
      };
    }
    return i4 = i4 || {}, r6("warning"), r6("error"), r6("fatalError"), s6;
  }
  function d5() {
    this.cdata = false;
  }
  function c3(e10, t5) {
    t5.lineNumber = e10.lineNumber, t5.columnNumber = e10.columnNumber;
  }
  function p2(e10) {
    if (e10) return "\n@" + (e10.systemId || "") + "#[line:" + e10.lineNumber + ",col:" + e10.columnNumber + "]";
  }
  function m5(e10, t5, i4) {
    return "string" == typeof e10 ? e10.substr(t5, i4) : e10.length >= t5 + i4 || t5 ? new java.lang.String(e10, t5, i4) + "" : e10;
  }
  function g4(e10, t5) {
    e10.currentElement ? e10.currentElement.appendChild(t5) : e10.doc.appendChild(t5);
  }
  return h2.prototype.parseFromString = function(e10, t5) {
    var s6 = this.options, n7 = new o4(), a7 = s6.domBuilder || new d5(), h3 = s6.errorHandler, c4 = s6.locator, p3 = s6.xmlns || {}, m6 = /\/x?html?$/.test(t5), g5 = m6 ? i3.HTML_ENTITIES : i3.XML_ENTITIES;
    c4 && a7.setDocumentLocator(c4), n7.errorHandler = u4(h3, a7, c4), n7.domBuilder = s6.domBuilder || a7, m6 && (p3[""] = r5.HTML), p3.xml = p3.xml || r5.XML;
    var f5 = s6.normalizeLineEndings || l6;
    return e10 && "string" == typeof e10 ? n7.parse(f5(e10), p3, g5) : n7.errorHandler.error("invalid doc source"), a7.doc;
  }, d5.prototype = { startDocument: function() {
    this.doc = new n6().createDocument(null, null, null), this.locator && (this.doc.documentURI = this.locator.systemId);
  }, startElement: function(e10, t5, i4, s6) {
    var n7 = this.doc, r6 = n7.createElementNS(e10, i4 || t5), a7 = s6.length;
    g4(this, r6), this.currentElement = r6, this.locator && c3(this.locator, r6);
    for (var o5 = 0; o5 < a7; o5++) {
      e10 = s6.getURI(o5);
      var l7 = s6.getValue(o5), h3 = (i4 = s6.getQName(o5), n7.createAttributeNS(e10, i4));
      this.locator && c3(s6.getLocator(o5), h3), h3.value = h3.nodeValue = l7, r6.setAttributeNode(h3);
    }
  }, endElement: function(e10, t5, i4) {
    var s6 = this.currentElement;
    s6.tagName, this.currentElement = s6.parentNode;
  }, startPrefixMapping: function(e10, t5) {
  }, endPrefixMapping: function(e10) {
  }, processingInstruction: function(e10, t5) {
    var i4 = this.doc.createProcessingInstruction(e10, t5);
    this.locator && c3(this.locator, i4), g4(this, i4);
  }, ignorableWhitespace: function(e10, t5, i4) {
  }, characters: function(e10, t5, i4) {
    if (e10 = m5.apply(this, arguments)) {
      if (this.cdata) var s6 = this.doc.createCDATASection(e10);
      else s6 = this.doc.createTextNode(e10);
      this.currentElement ? this.currentElement.appendChild(s6) : /^\s*$/.test(e10) && this.doc.appendChild(s6), this.locator && c3(this.locator, s6);
    }
  }, skippedEntity: function(e10) {
  }, endDocument: function() {
    this.doc.normalize();
  }, setDocumentLocator: function(e10) {
    (this.locator = e10) && (e10.lineNumber = 0);
  }, comment: function(e10, t5, i4) {
    e10 = m5.apply(this, arguments);
    var s6 = this.doc.createComment(e10);
    this.locator && c3(this.locator, s6), g4(this, s6);
  }, startCDATA: function() {
    this.cdata = true;
  }, endCDATA: function() {
    this.cdata = false;
  }, startDTD: function(e10, t5, i4) {
    var s6 = this.doc.implementation;
    if (s6 && s6.createDocumentType) {
      var n7 = s6.createDocumentType(e10, t5, i4);
      this.locator && c3(this.locator, n7), g4(this, n7), this.doc.doctype = n7;
    }
  }, warning: function(e10) {
    console.warn("[xmldom warning]	" + e10, p2(this.locator));
  }, error: function(e10) {
    console.error("[xmldom error]	" + e10, p2(this.locator));
  }, fatalError: function(e10) {
    throw new a6(e10, this.locator);
  } }, "endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(/\w+/g, function(e10) {
    d5.prototype[e10] = function() {
      return null;
    };
  }), Ft.__DOMHandler = d5, Ft.normalizeLineEndings = l6, Ft.DOMParser = h2, Ft;
}
function Xt() {
  if (Vt) return Ot;
  Vt = 1;
  var e9 = Ut();
  return Ot.DOMImplementation = e9.DOMImplementation, Ot.XMLSerializer = e9.XMLSerializer, Ot.DOMParser = Gt().DOMParser, Ot;
}
var Kt = Xt();
var Yt = (e9) => !!e9 && "object" == typeof e9;
var Qt = (...e9) => e9.reduce((e10, t4) => ("object" != typeof t4 || Object.keys(t4).forEach((i3) => {
  Array.isArray(e10[i3]) && Array.isArray(t4[i3]) ? e10[i3] = e10[i3].concat(t4[i3]) : Yt(e10[i3]) && Yt(t4[i3]) ? e10[i3] = Qt(e10[i3], t4[i3]) : e10[i3] = t4[i3];
}), e10), {});
var Jt = (e9) => Object.keys(e9).map((t4) => e9[t4]);
var Zt = (e9, t4) => {
  const i3 = [];
  for (let s5 = e9; s5 < t4; s5++) i3.push(s5);
  return i3;
};
var ei = (e9) => e9.reduce((e10, t4) => e10.concat(t4), []);
var ti = (e9) => {
  if (!e9.length) return [];
  const t4 = [];
  for (let i3 = 0; i3 < e9.length; i3++) t4.push(e9[i3]);
  return t4;
};
var ii = (e9, t4) => e9.reduce((e10, i3, s5) => (i3[t4] && e10.push(s5), e10), []);
var si = (e9, t4) => Jt(e9.reduce((e10, i3) => (i3.forEach((i4) => {
  e10[t4(i4)] = i4;
}), e10), {}));
var ni = { INVALID_NUMBER_OF_PERIOD: "INVALID_NUMBER_OF_PERIOD", INVALID_NUMBER_OF_CONTENT_STEERING: "INVALID_NUMBER_OF_CONTENT_STEERING", DASH_EMPTY_MANIFEST: "DASH_EMPTY_MANIFEST", DASH_INVALID_XML: "DASH_INVALID_XML", NO_BASE_URL: "NO_BASE_URL", MISSING_SEGMENT_INFORMATION: "MISSING_SEGMENT_INFORMATION", SEGMENT_TIME_UNSPECIFIED: "SEGMENT_TIME_UNSPECIFIED", UNSUPPORTED_UTC_TIMING_SCHEME: "UNSUPPORTED_UTC_TIMING_SCHEME" };
var ri = ({ baseUrl: e9 = "", source: t4 = "", range: i3 = "", indexRange: s5 = "" }) => {
  const n6 = { uri: t4, resolvedUri: Fe(e9 || "", t4) };
  if (i3 || s5) {
    const e10 = (i3 || s5).split("-");
    let t5, r5 = _.BigInt ? _.BigInt(e10[0]) : parseInt(e10[0], 10), a6 = _.BigInt ? _.BigInt(e10[1]) : parseInt(e10[1], 10);
    r5 < Number.MAX_SAFE_INTEGER && "bigint" == typeof r5 && (r5 = Number(r5)), a6 < Number.MAX_SAFE_INTEGER && "bigint" == typeof a6 && (a6 = Number(a6)), t5 = "bigint" == typeof a6 || "bigint" == typeof r5 ? _.BigInt(a6) - _.BigInt(r5) + _.BigInt(1) : a6 - r5 + 1, "bigint" == typeof t5 && t5 < Number.MAX_SAFE_INTEGER && (t5 = Number(t5)), n6.byterange = { length: t5, offset: r5 };
  }
  return n6;
};
var ai = (e9) => {
  let t4;
  return t4 = "bigint" == typeof e9.offset || "bigint" == typeof e9.length ? _.BigInt(e9.offset) + _.BigInt(e9.length) - _.BigInt(1) : e9.offset + e9.length - 1, `${e9.offset}-${t4}`;
};
var oi = (e9) => (e9 && "number" != typeof e9 && (e9 = parseInt(e9, 10)), isNaN(e9) ? null : e9);
var li = { static(e9) {
  const { duration: t4, timescale: i3 = 1, sourceDuration: s5, periodDuration: n6 } = e9, r5 = oi(e9.endNumber), a6 = t4 / i3;
  return "number" == typeof r5 ? { start: 0, end: r5 } : "number" == typeof n6 ? { start: 0, end: n6 / a6 } : { start: 0, end: s5 / a6 };
}, dynamic(e9) {
  const { NOW: t4, clientOffset: i3, availabilityStartTime: s5, timescale: n6 = 1, duration: r5, periodStart: a6 = 0, minimumUpdatePeriod: o4 = 0, timeShiftBufferDepth: l6 = 1 / 0 } = e9, h2 = oi(e9.endNumber), u4 = (t4 + i3) / 1e3, d5 = s5 + a6, c3 = u4 + o4 - d5, p2 = Math.ceil(c3 * n6 / r5), m5 = Math.floor((u4 - d5 - l6) * n6 / r5), g4 = Math.floor((u4 - d5) * n6 / r5);
  return { start: Math.max(0, m5), end: "number" == typeof h2 ? h2 : Math.min(p2, g4) };
} };
var hi = (e9) => (t4) => {
  const { duration: i3, timescale: s5 = 1, periodStart: n6, startNumber: r5 = 1 } = e9;
  return { number: r5 + t4, duration: i3 / s5, timeline: n6, time: t4 * i3 };
};
var ui = (e9) => {
  const { type: t4, duration: i3, timescale: s5 = 1, periodDuration: n6, sourceDuration: r5 } = e9, { start: a6, end: o4 } = li[t4](e9), l6 = Zt(a6, o4).map(hi(e9));
  if ("static" === t4) {
    const e10 = l6.length - 1, t5 = "number" == typeof n6 ? n6 : r5;
    l6[e10].duration = t5 - i3 / s5 * e10;
  }
  return l6;
};
var di = (e9) => {
  const { baseUrl: t4, initialization: i3 = {}, sourceDuration: s5, indexRange: n6 = "", periodStart: r5, presentationTime: a6, number: o4 = 0, duration: l6 } = e9;
  if (!t4) throw new Error(ni.NO_BASE_URL);
  const h2 = ri({ baseUrl: t4, source: i3.sourceURL, range: i3.range }), u4 = ri({ baseUrl: t4, source: t4, indexRange: n6 });
  if (u4.map = h2, l6) {
    const t5 = ui(e9);
    t5.length && (u4.duration = t5[0].duration, u4.timeline = t5[0].timeline);
  } else s5 && (u4.duration = s5, u4.timeline = r5);
  return u4.presentationTime = a6 || r5, u4.number = o4, [u4];
};
var ci = (e9, t4, i3) => {
  const s5 = e9.sidx.map ? e9.sidx.map : null, n6 = e9.sidx.duration, r5 = e9.timeline || 0, a6 = e9.sidx.byterange, o4 = a6.offset + a6.length, l6 = t4.timescale, h2 = t4.references.filter((e10) => 1 !== e10.referenceType), u4 = [], d5 = e9.endList ? "static" : "dynamic", c3 = e9.sidx.timeline;
  let p2, m5 = c3, g4 = e9.mediaSequence || 0;
  p2 = "bigint" == typeof t4.firstOffset ? _.BigInt(o4) + t4.firstOffset : o4 + t4.firstOffset;
  for (let f5 = 0; f5 < h2.length; f5++) {
    const e10 = t4.references[f5], a7 = e10.referencedSize, o5 = e10.subsegmentDuration;
    let h3;
    h3 = "bigint" == typeof p2 ? p2 + _.BigInt(a7) - _.BigInt(1) : p2 + a7 - 1;
    const y4 = di({ baseUrl: i3, timescale: l6, timeline: r5, periodStart: c3, presentationTime: m5, number: g4, duration: o5, sourceDuration: n6, indexRange: `${p2}-${h3}`, type: d5 })[0];
    s5 && (y4.map = s5), u4.push(y4), p2 += "bigint" == typeof p2 ? _.BigInt(a7) : a7, m5 += o5 / l6, g4++;
  }
  return e9.segments = u4, e9;
};
var pi = ["AUDIO", "SUBTITLES"];
var mi = 1 / 60;
var gi = (e9) => si(e9, ({ timeline: e10 }) => e10).sort((e10, t4) => e10.timeline > t4.timeline ? 1 : -1);
var fi = (e9, t4) => {
  for (let i3 = 0; i3 < e9.length; i3++) if (e9[i3].attributes.NAME === t4) return e9[i3];
  return null;
};
var yi = (e9) => {
  let t4 = [];
  return Lt(e9, pi, (e10, i3, s5, n6) => {
    t4 = t4.concat(e10.playlists || []);
  }), t4;
};
var _i = ({ playlist: e9, mediaSequence: t4 }) => {
  e9.mediaSequence = t4, e9.segments.forEach((t5, i3) => {
    t5.number = e9.mediaSequence + i3;
  });
};
var bi = ({ oldPlaylists: e9, newPlaylists: t4, timelineStarts: i3 }) => {
  t4.forEach((t5) => {
    t5.discontinuitySequence = i3.findIndex(function({ timeline: e10 }) {
      return e10 === t5.timeline;
    });
    const s5 = fi(e9, t5.attributes.NAME);
    if (!s5) return;
    if (t5.sidx) return;
    const n6 = t5.segments[0], r5 = s5.segments.findIndex(function(e10) {
      return Math.abs(e10.presentationTime - n6.presentationTime) < mi;
    });
    if (-1 === r5) return _i({ playlist: t5, mediaSequence: s5.mediaSequence + s5.segments.length }), t5.segments[0].discontinuity = true, t5.discontinuityStarts.unshift(0), void ((!s5.segments.length && t5.timeline > s5.timeline || s5.segments.length && t5.timeline > s5.segments[s5.segments.length - 1].timeline) && t5.discontinuitySequence--);
    s5.segments[r5].discontinuity && !n6.discontinuity && (n6.discontinuity = true, t5.discontinuityStarts.unshift(0), t5.discontinuitySequence--), _i({ playlist: t5, mediaSequence: s5.segments[r5].number });
  });
};
var vi = ({ oldManifest: e9, newManifest: t4 }) => {
  const i3 = e9.playlists.concat(yi(e9)), s5 = t4.playlists.concat(yi(t4));
  return t4.timelineStarts = gi([e9.timelineStarts, t4.timelineStarts]), bi({ oldPlaylists: i3, newPlaylists: s5, timelineStarts: t4.timelineStarts }), t4;
};
var Ti = (e9) => e9 && e9.uri + "-" + ai(e9.byterange);
var Si = (e9) => {
  const t4 = e9.reduce(function(e10, t5) {
    return e10[t5.attributes.baseUrl] || (e10[t5.attributes.baseUrl] = []), e10[t5.attributes.baseUrl].push(t5), e10;
  }, {});
  let i3 = [];
  return Object.values(t4).forEach((e10) => {
    const t5 = Jt(e10.reduce((e11, t6) => {
      const i4 = t6.attributes.id + (t6.attributes.lang || "");
      return e11[i4] ? (t6.segments && (t6.segments[0] && (t6.segments[0].discontinuity = true), e11[i4].segments.push(...t6.segments)), t6.attributes.contentProtection && (e11[i4].attributes.contentProtection = t6.attributes.contentProtection)) : (e11[i4] = t6, e11[i4].attributes.timelineStarts = []), e11[i4].attributes.timelineStarts.push({ start: t6.attributes.periodStart, timeline: t6.attributes.periodStart }), e11;
    }, {}));
    i3 = i3.concat(t5);
  }), i3.map((e10) => (e10.discontinuityStarts = ii(e10.segments || [], "discontinuity"), e10));
};
var Ei = (e9, t4) => {
  const i3 = Ti(e9.sidx), s5 = i3 && t4[i3] && t4[i3].sidx;
  return s5 && ci(e9, s5, e9.sidx.resolvedUri), e9;
};
var wi = (e9, t4 = {}) => {
  if (!Object.keys(t4).length) return e9;
  for (const i3 in e9) e9[i3] = Ei(e9[i3], t4);
  return e9;
};
var Ci = ({ attributes: e9, segments: t4, sidx: i3, mediaSequence: s5, discontinuitySequence: n6, discontinuityStarts: r5 }, a6) => {
  const o4 = { attributes: { NAME: e9.id, BANDWIDTH: e9.bandwidth, CODECS: e9.codecs, "PROGRAM-ID": 1 }, uri: "", endList: "static" === e9.type, timeline: e9.periodStart, resolvedUri: e9.baseUrl || "", targetDuration: e9.duration, discontinuitySequence: n6, discontinuityStarts: r5, timelineStarts: e9.timelineStarts, mediaSequence: s5, segments: t4 };
  return e9.contentProtection && (o4.contentProtection = e9.contentProtection), e9.serviceLocation && (o4.attributes.serviceLocation = e9.serviceLocation), i3 && (o4.sidx = i3), a6 && (o4.attributes.AUDIO = "audio", o4.attributes.SUBTITLES = "subs"), o4;
};
var ki = ({ attributes: e9, segments: t4, mediaSequence: i3, discontinuityStarts: s5, discontinuitySequence: n6 }) => {
  void 0 === t4 && (t4 = [{ uri: e9.baseUrl, timeline: e9.periodStart, resolvedUri: e9.baseUrl || "", duration: e9.sourceDuration, number: 0 }], e9.duration = e9.sourceDuration);
  const r5 = { NAME: e9.id, BANDWIDTH: e9.bandwidth, "PROGRAM-ID": 1 };
  e9.codecs && (r5.CODECS = e9.codecs);
  const a6 = { attributes: r5, uri: "", endList: "static" === e9.type, timeline: e9.periodStart, resolvedUri: e9.baseUrl || "", targetDuration: e9.duration, timelineStarts: e9.timelineStarts, discontinuityStarts: s5, discontinuitySequence: n6, mediaSequence: i3, segments: t4 };
  return e9.serviceLocation && (a6.attributes.serviceLocation = e9.serviceLocation), a6;
};
var Ii = (e9, t4 = {}, i3 = false) => {
  let s5;
  const n6 = e9.reduce((e10, n7) => {
    const r5 = n7.attributes.role && n7.attributes.role.value || "", a6 = n7.attributes.lang || "";
    let o4 = n7.attributes.label || "main";
    if (a6 && !n7.attributes.label) {
      const e11 = r5 ? ` (${r5})` : "";
      o4 = `${n7.attributes.lang}${e11}`;
    }
    e10[o4] || (e10[o4] = { language: a6, autoselect: true, default: "main" === r5, playlists: [], uri: "" });
    const l6 = Ei(Ci(n7, i3), t4);
    return e10[o4].playlists.push(l6), void 0 === s5 && "main" === r5 && (s5 = n7, s5.default = true), e10;
  }, {});
  if (!s5) {
    n6[Object.keys(n6)[0]].default = true;
  }
  return n6;
};
var xi = (e9, t4 = {}) => e9.reduce((e10, i3) => {
  const s5 = i3.attributes.label || i3.attributes.lang || "text", n6 = i3.attributes.lang || "und";
  return e10[s5] || (e10[s5] = { language: n6, default: false, autoselect: false, playlists: [], uri: "" }), e10[s5].playlists.push(Ei(ki(i3), t4)), e10;
}, {});
var Ai = (e9) => e9.reduce((e10, t4) => t4 ? (t4.forEach((t5) => {
  const { channel: i3, language: s5 } = t5;
  e10[s5] = { autoselect: false, default: false, instreamId: i3, language: s5 }, t5.hasOwnProperty("aspectRatio") && (e10[s5].aspectRatio = t5.aspectRatio), t5.hasOwnProperty("easyReader") && (e10[s5].easyReader = t5.easyReader), t5.hasOwnProperty("3D") && (e10[s5]["3D"] = t5["3D"]);
}), e10) : e10, {});
var Di = ({ attributes: e9, segments: t4, sidx: i3, discontinuityStarts: s5 }) => {
  const n6 = { attributes: { NAME: e9.id, AUDIO: "audio", SUBTITLES: "subs", RESOLUTION: { width: e9.width, height: e9.height }, CODECS: e9.codecs, BANDWIDTH: e9.bandwidth, "PROGRAM-ID": 1 }, uri: "", endList: "static" === e9.type, timeline: e9.periodStart, resolvedUri: e9.baseUrl || "", targetDuration: e9.duration, discontinuityStarts: s5, timelineStarts: e9.timelineStarts, segments: t4 };
  return e9.frameRate && (n6.attributes["FRAME-RATE"] = e9.frameRate), e9.contentProtection && (n6.contentProtection = e9.contentProtection), e9.serviceLocation && (n6.attributes.serviceLocation = e9.serviceLocation), i3 && (n6.sidx = i3), n6;
};
var Pi = ({ attributes: e9 }) => "video/mp4" === e9.mimeType || "video/webm" === e9.mimeType || "video" === e9.contentType;
var Li = ({ attributes: e9 }) => "audio/mp4" === e9.mimeType || "audio/webm" === e9.mimeType || "audio" === e9.contentType;
var Oi = ({ attributes: e9 }) => "text/vtt" === e9.mimeType || "text" === e9.contentType;
var Ni = (e9, t4) => {
  e9.forEach((e10) => {
    e10.mediaSequence = 0, e10.discontinuitySequence = t4.findIndex(function({ timeline: t5 }) {
      return t5 === e10.timeline;
    }), e10.segments && e10.segments.forEach((e11, t5) => {
      e11.number = t5;
    });
  });
};
var Ri = (e9) => e9 ? Object.keys(e9).reduce((t4, i3) => {
  const s5 = e9[i3];
  return t4.concat(s5.playlists);
}, []) : [];
var Mi = ({ dashPlaylists: e9, locations: t4, contentSteering: i3, sidxMapping: s5 = {}, previousManifest: n6, eventStream: r5 }) => {
  if (!e9.length) return {};
  const { sourceDuration: a6, type: o4, suggestedPresentationDelay: l6, minimumUpdatePeriod: h2 } = e9[0].attributes, u4 = Si(e9.filter(Pi)).map(Di), d5 = Si(e9.filter(Li)), c3 = Si(e9.filter(Oi)), p2 = e9.map((e10) => e10.attributes.captionServices).filter(Boolean), m5 = { allowCache: true, discontinuityStarts: [], segments: [], endList: true, mediaGroups: { AUDIO: {}, VIDEO: {}, "CLOSED-CAPTIONS": {}, SUBTITLES: {} }, uri: "", duration: a6, playlists: wi(u4, s5) };
  h2 >= 0 && (m5.minimumUpdatePeriod = 1e3 * h2), t4 && (m5.locations = t4), i3 && (m5.contentSteering = i3), "dynamic" === o4 && (m5.suggestedPresentationDelay = l6), r5 && r5.length > 0 && (m5.eventStream = r5);
  const g4 = 0 === m5.playlists.length, f5 = d5.length ? Ii(d5, s5, g4) : null, y4 = c3.length ? xi(c3, s5) : null, _2 = u4.concat(Ri(f5), Ri(y4)), b3 = _2.map(({ timelineStarts: e10 }) => e10);
  return m5.timelineStarts = gi(b3), Ni(_2, m5.timelineStarts), f5 && (m5.mediaGroups.AUDIO.audio = f5), y4 && (m5.mediaGroups.SUBTITLES.subs = y4), p2.length && (m5.mediaGroups["CLOSED-CAPTIONS"].cc = Ai(p2)), n6 ? vi({ oldManifest: n6, newManifest: m5 }) : m5;
};
var Ui = (e9, t4, i3) => {
  const { NOW: s5, clientOffset: n6, availabilityStartTime: r5, timescale: a6 = 1, periodStart: o4 = 0, minimumUpdatePeriod: l6 = 0 } = e9, h2 = (s5 + n6) / 1e3 + l6 - (r5 + o4);
  return Math.ceil((h2 * a6 - t4) / i3);
};
var Bi = (e9, t4) => {
  const { type: i3, minimumUpdatePeriod: s5 = 0, media: n6 = "", sourceDuration: r5, timescale: a6 = 1, startNumber: o4 = 1, periodStart: l6 } = e9, h2 = [];
  let u4 = -1;
  for (let d5 = 0; d5 < t4.length; d5++) {
    const c3 = t4[d5], p2 = c3.d, m5 = c3.r || 0, g4 = c3.t || 0;
    let f5;
    if (u4 < 0 && (u4 = g4), g4 && g4 > u4 && (u4 = g4), m5 < 0) {
      const o5 = d5 + 1;
      f5 = o5 === t4.length ? "dynamic" === i3 && s5 > 0 && n6.indexOf("$Number$") > 0 ? Ui(e9, u4, p2) : (r5 * a6 - u4) / p2 : (t4[o5].t - u4) / p2;
    } else f5 = m5 + 1;
    const y4 = o4 + h2.length + f5;
    let _2 = o4 + h2.length;
    for (; _2 < y4; ) h2.push({ number: _2, duration: p2 / a6, time: u4, timeline: l6 }), u4 += p2, _2++;
  }
  return h2;
};
var Fi = /\$([A-z]*)(?:(%0)([0-9]+)d)?\$/g;
var qi = (e9) => (t4, i3, s5, n6) => {
  if ("$$" === t4) return "$";
  if (void 0 === e9[i3]) return t4;
  const r5 = "" + e9[i3];
  return "RepresentationID" === i3 ? r5 : (n6 = s5 ? parseInt(n6, 10) : 1, r5.length >= n6 ? r5 : `${new Array(n6 - r5.length + 1).join("0")}${r5}`);
};
var ji = (e9, t4) => e9.replace(Fi, qi(t4));
var $i = (e9, t4) => e9.duration || t4 ? e9.duration ? ui(e9) : Bi(e9, t4) : [{ number: e9.startNumber || 1, duration: e9.sourceDuration, time: 0, timeline: e9.periodStart }];
var Hi = (e9, t4) => {
  const i3 = { RepresentationID: e9.id, Bandwidth: e9.bandwidth || 0 }, { initialization: s5 = { sourceURL: "", range: "" } } = e9, n6 = ri({ baseUrl: e9.baseUrl, source: ji(s5.sourceURL, i3), range: s5.range });
  return $i(e9, t4).map((t5) => {
    i3.Number = t5.number, i3.Time = t5.time;
    const s6 = ji(e9.media || "", i3), r5 = e9.timescale || 1, a6 = e9.presentationTimeOffset || 0, o4 = e9.periodStart + (t5.time - a6) / r5;
    return { uri: s6, timeline: t5.timeline, duration: t5.duration, resolvedUri: Fe(e9.baseUrl || "", s6), map: n6, number: t5.number, presentationTime: o4 };
  });
};
var Vi = (e9, t4) => {
  const { baseUrl: i3, initialization: s5 = {} } = e9, n6 = ri({ baseUrl: i3, source: s5.sourceURL, range: s5.range }), r5 = ri({ baseUrl: i3, source: t4.media, range: t4.mediaRange });
  return r5.map = n6, r5;
};
var zi = (e9, t4) => {
  const { duration: i3, segmentUrls: s5 = [], periodStart: n6 } = e9;
  if (!i3 && !t4 || i3 && t4) throw new Error(ni.SEGMENT_TIME_UNSPECIFIED);
  const r5 = s5.map((t5) => Vi(e9, t5));
  let a6;
  i3 && (a6 = ui(e9)), t4 && (a6 = Bi(e9, t4));
  return a6.map((t5, i4) => {
    if (r5[i4]) {
      const s6 = r5[i4], a7 = e9.timescale || 1, o4 = e9.presentationTimeOffset || 0;
      return s6.timeline = t5.timeline, s6.duration = t5.duration, s6.number = t5.number, s6.presentationTime = n6 + (t5.time - o4) / a7, s6;
    }
  }).filter((e10) => e10);
};
var Wi = ({ attributes: e9, segmentInfo: t4 }) => {
  let i3, s5;
  t4.template ? (s5 = Hi, i3 = Qt(e9, t4.template)) : t4.base ? (s5 = di, i3 = Qt(e9, t4.base)) : t4.list && (s5 = zi, i3 = Qt(e9, t4.list));
  const n6 = { attributes: e9 };
  if (!s5) return n6;
  const r5 = s5(i3, t4.segmentTimeline);
  if (i3.duration) {
    const { duration: e10, timescale: t5 = 1 } = i3;
    i3.duration = e10 / t5;
  } else r5.length ? i3.duration = r5.reduce((e10, t5) => Math.max(e10, Math.ceil(t5.duration)), 0) : i3.duration = 0;
  return n6.attributes = i3, n6.segments = r5, t4.base && i3.indexRange && (n6.sidx = r5[0], n6.segments = []), n6;
};
var Gi = (e9) => e9.map(Wi);
var Xi = (e9, t4) => ti(e9.childNodes).filter(({ tagName: e10 }) => e10 === t4);
var Ki = (e9) => e9.textContent.trim();
var Yi = (e9) => parseFloat(e9.split("/").reduce((e10, t4) => e10 / t4));
var Qi = (e9) => {
  const t4 = 31536e3, i3 = 2592e3, s5 = 86400, n6 = 3600, r5 = 60, a6 = /P(?:(\d*)Y)?(?:(\d*)M)?(?:(\d*)D)?(?:T(?:(\d*)H)?(?:(\d*)M)?(?:([\d.]*)S)?)?/.exec(e9);
  if (!a6) return 0;
  const [o4, l6, h2, u4, d5, c3] = a6.slice(1);
  return parseFloat(o4 || 0) * t4 + parseFloat(l6 || 0) * i3 + parseFloat(h2 || 0) * s5 + parseFloat(u4 || 0) * n6 + parseFloat(d5 || 0) * r5 + parseFloat(c3 || 0);
};
var Ji = (e9) => (/^\d+-\d+-\d+T\d+:\d+:\d+(\.\d+)?$/.test(e9) && (e9 += "Z"), Date.parse(e9));
var Zi = { mediaPresentationDuration: (e9) => Qi(e9), availabilityStartTime: (e9) => Ji(e9) / 1e3, minimumUpdatePeriod: (e9) => Qi(e9), suggestedPresentationDelay: (e9) => Qi(e9), type: (e9) => e9, timeShiftBufferDepth: (e9) => Qi(e9), start: (e9) => Qi(e9), width: (e9) => parseInt(e9, 10), height: (e9) => parseInt(e9, 10), bandwidth: (e9) => parseInt(e9, 10), frameRate: (e9) => Yi(e9), startNumber: (e9) => parseInt(e9, 10), timescale: (e9) => parseInt(e9, 10), presentationTimeOffset: (e9) => parseInt(e9, 10), duration(e9) {
  const t4 = parseInt(e9, 10);
  return isNaN(t4) ? Qi(e9) : t4;
}, d: (e9) => parseInt(e9, 10), t: (e9) => parseInt(e9, 10), r: (e9) => parseInt(e9, 10), presentationTime: (e9) => parseInt(e9, 10), DEFAULT: (e9) => e9 };
var es = (e9) => e9 && e9.attributes ? ti(e9.attributes).reduce((e10, t4) => {
  const i3 = Zi[t4.name] || Zi.DEFAULT;
  return e10[t4.name] = i3(t4.value), e10;
}, {}) : {};
var ts = { "urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b": "org.w3.clearkey", "urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed": "com.widevine.alpha", "urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95": "com.microsoft.playready", "urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb": "com.adobe.primetime", "urn:mpeg:dash:mp4protection:2011": "mp4protection" };
var is = (e9, t4) => t4.length ? ei(e9.map(function(e10) {
  return t4.map(function(t5) {
    const i3 = Ki(t5), s5 = Fe(e10.baseUrl, i3), n6 = Qt(es(t5), { baseUrl: s5 });
    return s5 !== i3 && !n6.serviceLocation && e10.serviceLocation && (n6.serviceLocation = e10.serviceLocation), n6;
  });
})) : e9;
var ss = (e9) => {
  const t4 = Xi(e9, "SegmentTemplate")[0], i3 = Xi(e9, "SegmentList")[0], s5 = i3 && Xi(i3, "SegmentURL").map((e10) => Qt({ tag: "SegmentURL" }, es(e10))), n6 = Xi(e9, "SegmentBase")[0], r5 = i3 || t4, a6 = r5 && Xi(r5, "SegmentTimeline")[0], o4 = i3 || n6 || t4, l6 = o4 && Xi(o4, "Initialization")[0], h2 = t4 && es(t4);
  h2 && l6 ? h2.initialization = l6 && es(l6) : h2 && h2.initialization && (h2.initialization = { sourceURL: h2.initialization });
  const u4 = { template: h2, segmentTimeline: a6 && Xi(a6, "S").map((e10) => es(e10)), list: i3 && Qt(es(i3), { segmentUrls: s5, initialization: es(l6) }), base: n6 && Qt(es(n6), { initialization: es(l6) }) };
  return Object.keys(u4).forEach((e10) => {
    u4[e10] || delete u4[e10];
  }), u4;
};
var ns = (e9, t4, i3) => (s5) => {
  const n6 = Xi(s5, "BaseURL"), r5 = is(t4, n6), a6 = Qt(e9, es(s5)), o4 = ss(s5);
  return r5.map((e10) => ({ segmentInfo: Qt(i3, o4), attributes: Qt(a6, e10) }));
};
var rs = (e9) => e9.reduce((e10, t4) => {
  const i3 = es(t4);
  i3.schemeIdUri && (i3.schemeIdUri = i3.schemeIdUri.toLowerCase());
  const s5 = ts[i3.schemeIdUri];
  if (s5) {
    e10[s5] = { attributes: i3 };
    const n6 = Xi(t4, "cenc:pssh")[0];
    if (n6) {
      const t5 = Ki(n6);
      e10[s5].pssh = t5 && $e(t5);
    }
  }
  return e10;
}, {});
var as = (e9) => {
  if ("urn:scte:dash:cc:cea-608:2015" === e9.schemeIdUri) {
    return ("string" != typeof e9.value ? [] : e9.value.split(";")).map((e10) => {
      let t4, i3;
      return i3 = e10, /^CC\d=/.test(e10) ? [t4, i3] = e10.split("=") : /^CC\d$/.test(e10) && (t4 = e10), { channel: t4, language: i3 };
    });
  }
  if ("urn:scte:dash:cc:cea-708:2015" === e9.schemeIdUri) {
    return ("string" != typeof e9.value ? [] : e9.value.split(";")).map((e10) => {
      const t4 = { channel: void 0, language: void 0, aspectRatio: 1, easyReader: 0, "3D": 0 };
      if (/=/.test(e10)) {
        const [i3, s5 = ""] = e10.split("=");
        t4.channel = i3, t4.language = e10, s5.split(",").forEach((e11) => {
          const [i4, s6] = e11.split(":");
          "lang" === i4 ? t4.language = s6 : "er" === i4 ? t4.easyReader = Number(s6) : "war" === i4 ? t4.aspectRatio = Number(s6) : "3D" === i4 && (t4["3D"] = Number(s6));
        });
      } else t4.language = e10;
      return t4.channel && (t4.channel = "SERVICE" + t4.channel), t4;
    });
  }
};
var os = (e9) => ei(Xi(e9.node, "EventStream").map((t4) => {
  const i3 = es(t4), s5 = i3.schemeIdUri;
  return Xi(t4, "Event").map((t5) => {
    const n6 = es(t5), r5 = n6.presentationTime || 0, a6 = i3.timescale || 1, o4 = n6.duration || 0, l6 = r5 / a6 + e9.attributes.start;
    return { schemeIdUri: s5, value: i3.value, id: n6.id, start: l6, end: l6 + o4 / a6, messageData: Ki(t5) || n6.messageData, contentEncoding: i3.contentEncoding, presentationTimeOffset: i3.presentationTimeOffset || 0 };
  });
}));
var ls = (e9, t4, i3) => (s5) => {
  const n6 = es(s5), r5 = is(t4, Xi(s5, "BaseURL")), a6 = Xi(s5, "Role")[0], o4 = { role: es(a6) };
  let l6 = Qt(e9, n6, o4);
  const h2 = Xi(s5, "Accessibility")[0], u4 = as(es(h2));
  u4 && (l6 = Qt(l6, { captionServices: u4 }));
  const d5 = Xi(s5, "Label")[0];
  if (d5 && d5.childNodes.length) {
    const e10 = d5.childNodes[0].nodeValue.trim();
    l6 = Qt(l6, { label: e10 });
  }
  const c3 = rs(Xi(s5, "ContentProtection"));
  Object.keys(c3).length && (l6 = Qt(l6, { contentProtection: c3 }));
  const p2 = ss(s5), m5 = Xi(s5, "Representation"), g4 = Qt(i3, p2);
  return ei(m5.map(ns(l6, r5, g4)));
};
var hs = (e9, t4) => (i3, s5) => {
  const n6 = is(t4, Xi(i3.node, "BaseURL")), r5 = Qt(e9, { periodStart: i3.attributes.start });
  "number" == typeof i3.attributes.duration && (r5.periodDuration = i3.attributes.duration);
  const a6 = Xi(i3.node, "AdaptationSet"), o4 = ss(i3.node);
  return ei(a6.map(ls(r5, n6, o4)));
};
var us = (e9, t4) => {
  if (e9.length > 1 && t4({ type: "warn", message: "The MPD manifest should contain no more than one ContentSteering tag" }), !e9.length) return null;
  const i3 = Qt({ serverURL: Ki(e9[0]) }, es(e9[0]));
  return i3.queryBeforeStart = "true" === i3.queryBeforeStart, i3;
};
var ds = ({ attributes: e9, priorPeriodAttributes: t4, mpdType: i3 }) => "number" == typeof e9.start ? e9.start : t4 && "number" == typeof t4.start && "number" == typeof t4.duration ? t4.start + t4.duration : t4 || "static" !== i3 ? null : 0;
var cs = (e9, t4 = {}) => {
  const { manifestUri: i3 = "", NOW: s5 = Date.now(), clientOffset: n6 = 0, eventHandler: r5 = function() {
  } } = t4, a6 = Xi(e9, "Period");
  if (!a6.length) throw new Error(ni.INVALID_NUMBER_OF_PERIOD);
  const o4 = Xi(e9, "Location"), l6 = es(e9), h2 = is([{ baseUrl: i3 }], Xi(e9, "BaseURL")), u4 = Xi(e9, "ContentSteering");
  l6.type = l6.type || "static", l6.sourceDuration = l6.mediaPresentationDuration || 0, l6.NOW = s5, l6.clientOffset = n6, o4.length && (l6.locations = o4.map(Ki));
  const d5 = [];
  return a6.forEach((e10, t5) => {
    const i4 = es(e10), s6 = d5[t5 - 1];
    i4.start = ds({ attributes: i4, priorPeriodAttributes: s6 ? s6.attributes : null, mpdType: l6.type }), d5.push({ node: e10, attributes: i4 });
  }), { locations: l6.locations, contentSteeringInfo: us(u4, r5), representationInfo: ei(d5.map(hs(l6, h2))), eventStream: ei(d5.map(os)) };
};
var ps = (e9) => {
  if ("" === e9) throw new Error(ni.DASH_EMPTY_MANIFEST);
  const t4 = new Kt.DOMParser();
  let i3, s5;
  try {
    i3 = t4.parseFromString(e9, "application/xml"), s5 = i3 && "MPD" === i3.documentElement.tagName ? i3.documentElement : null;
  } catch (n6) {
  }
  if (!s5 || s5 && s5.getElementsByTagName("parsererror").length > 0) throw new Error(ni.DASH_INVALID_XML);
  return s5;
};
var ms = (e9) => {
  const t4 = Xi(e9, "UTCTiming")[0];
  if (!t4) return null;
  const i3 = es(t4);
  switch (i3.schemeIdUri) {
    case "urn:mpeg:dash:utc:http-head:2014":
    case "urn:mpeg:dash:utc:http-head:2012":
      i3.method = "HEAD";
      break;
    case "urn:mpeg:dash:utc:http-xsdate:2014":
    case "urn:mpeg:dash:utc:http-iso:2014":
    case "urn:mpeg:dash:utc:http-xsdate:2012":
    case "urn:mpeg:dash:utc:http-iso:2012":
      i3.method = "GET";
      break;
    case "urn:mpeg:dash:utc:direct:2014":
    case "urn:mpeg:dash:utc:direct:2012":
      i3.method = "DIRECT", i3.value = Date.parse(i3.value);
      break;
    default:
      throw new Error(ni.UNSUPPORTED_UTC_TIMING_SCHEME);
  }
  return i3;
};
var gs = (e9, t4 = {}) => {
  const i3 = cs(ps(e9), t4), s5 = Gi(i3.representationInfo);
  return Mi({ dashPlaylists: s5, locations: i3.locations, contentSteering: i3.contentSteeringInfo, sidxMapping: t4.sidxMapping, previousManifest: t4.previousManifest, eventStream: i3.eventStream });
};
var fs = (e9) => ms(ps(e9));
var ys;
var _s;
var bs;
var vs;
function Ts() {
  if (_s) return ys;
  _s = 1;
  var e9 = Math.pow(2, 32);
  return ys = { getUint64: function(t4) {
    var i3, s5 = new DataView(t4.buffer, t4.byteOffset, t4.byteLength);
    return s5.getBigUint64 ? (i3 = s5.getBigUint64(0)) < Number.MAX_SAFE_INTEGER ? Number(i3) : i3 : s5.getUint32(0) * e9 + s5.getUint32(4);
  }, MAX_UINT32: e9 };
}
function Ss() {
  if (vs) return bs;
  vs = 1;
  var e9 = Ts().getUint64;
  return bs = function(t4) {
    var i3 = new DataView(t4.buffer, t4.byteOffset, t4.byteLength), s5 = { version: t4[0], flags: new Uint8Array(t4.subarray(1, 4)), references: [], referenceId: i3.getUint32(4), timescale: i3.getUint32(8) }, n6 = 12;
    0 === s5.version ? (s5.earliestPresentationTime = i3.getUint32(n6), s5.firstOffset = i3.getUint32(n6 + 4), n6 += 8) : (s5.earliestPresentationTime = e9(t4.subarray(n6)), s5.firstOffset = e9(t4.subarray(n6 + 8)), n6 += 16), n6 += 2;
    var r5 = i3.getUint16(n6);
    for (n6 += 2; r5 > 0; n6 += 12, r5--) s5.references.push({ referenceType: (128 & t4[n6]) >>> 7, referencedSize: 2147483647 & i3.getUint32(n6), subsegmentDuration: i3.getUint32(n6 + 4), startsWithSap: !!(128 & t4[n6 + 8]), sapType: (112 & t4[n6 + 8]) >>> 4, sapDeltaTime: 268435455 & i3.getUint32(n6 + 8) });
    return s5;
  };
}
var Es = o2(Ss());
var ws = St([73, 68, 51]);
var Cs = function(e9, t4) {
  void 0 === t4 && (t4 = 0);
  var i3 = (e9 = St(e9))[t4 + 5], s5 = e9[t4 + 6] << 21 | e9[t4 + 7] << 14 | e9[t4 + 8] << 7 | e9[t4 + 9];
  return (16 & i3) >> 4 ? s5 + 20 : s5 + 10;
};
var ks = function e4(t4, i3) {
  return void 0 === i3 && (i3 = 0), (t4 = St(t4)).length - i3 < 10 || !Pt(t4, ws, { offset: i3 }) ? i3 : e4(t4, i3 += Cs(t4, i3));
};
var Is = function(e9) {
  return "string" == typeof e9 ? At(e9) : e9;
};
var xs = function(e9) {
  return Array.isArray(e9) ? e9.map(function(e10) {
    return Is(e10);
  }) : [Is(e9)];
};
var As = function e5(t4, i3, s5) {
  void 0 === s5 && (s5 = false), i3 = xs(i3), t4 = St(t4);
  var n6 = [];
  if (!i3.length) return n6;
  for (var r5 = 0; r5 < t4.length; ) {
    var a6 = (t4[r5] << 24 | t4[r5 + 1] << 16 | t4[r5 + 2] << 8 | t4[r5 + 3]) >>> 0, o4 = t4.subarray(r5 + 4, r5 + 8);
    if (0 === a6) break;
    var l6 = r5 + a6;
    if (l6 > t4.length) {
      if (s5) break;
      l6 = t4.length;
    }
    var h2 = t4.subarray(r5 + 8, l6);
    Pt(o4, i3[0]) && (1 === i3.length ? n6.push(h2) : n6.push.apply(n6, e5(h2, i3.slice(1), s5))), r5 = l6;
  }
  return n6;
};
var Ds = { EBML: St([26, 69, 223, 163]), DocType: St([66, 130]), Segment: St([24, 83, 128, 103]), SegmentInfo: St([21, 73, 169, 102]), Tracks: St([22, 84, 174, 107]), Track: St([174]), TrackNumber: St([215]), DefaultDuration: St([35, 227, 131]), TrackEntry: St([174]), TrackType: St([131]), FlagDefault: St([136]), CodecID: St([134]), CodecPrivate: St([99, 162]), VideoTrack: St([224]), AudioTrack: St([225]), Cluster: St([31, 67, 182, 117]), Timestamp: St([231]), TimestampScale: St([42, 215, 177]), BlockGroup: St([160]), BlockDuration: St([155]), Block: St([161]), SimpleBlock: St([163]) };
var Ps = [128, 64, 32, 16, 8, 4, 2, 1];
var Ls = function(e9) {
  for (var t4 = 1, i3 = 0; i3 < Ps.length && !(e9 & Ps[i3]); i3++) t4++;
  return t4;
};
var Os = function(e9, t4, i3, s5) {
  void 0 === i3 && (i3 = true), void 0 === s5 && (s5 = false);
  var n6 = Ls(e9[t4]), r5 = e9.subarray(t4, t4 + n6);
  return i3 && ((r5 = Array.prototype.slice.call(e9, t4, t4 + n6))[0] ^= Ps[n6 - 1]), { length: n6, value: It(r5, { signed: s5 }), bytes: r5 };
};
var Ns = function e6(t4) {
  return "string" == typeof t4 ? t4.match(/.{1,2}/g).map(function(t5) {
    return e6(t5);
  }) : "number" == typeof t4 ? xt(t4) : t4;
};
var Rs = function(e9) {
  return Array.isArray(e9) ? e9.map(function(e10) {
    return Ns(e10);
  }) : [Ns(e9)];
};
var Ms = function e7(t4, i3, s5) {
  if (s5 >= i3.length) return i3.length;
  var n6 = Os(i3, s5, false);
  if (Pt(t4.bytes, n6.bytes)) return s5;
  var r5 = Os(i3, s5 + n6.length);
  return e7(t4, i3, s5 + r5.length + r5.value + n6.length);
};
var Us = function e8(t4, i3) {
  i3 = Rs(i3), t4 = St(t4);
  var s5 = [];
  if (!i3.length) return s5;
  for (var n6 = 0; n6 < t4.length; ) {
    var r5 = Os(t4, n6, false), a6 = Os(t4, n6 + r5.length), o4 = n6 + r5.length + a6.length;
    127 === a6.value && (a6.value = Ms(r5, t4, o4), a6.value !== t4.length && (a6.value -= o4));
    var l6 = o4 + a6.value > t4.length ? t4.length : o4 + a6.value, h2 = t4.subarray(o4, l6);
    Pt(i3[0], r5.bytes) && (1 === i3.length ? s5.push(h2) : s5 = s5.concat(e8(h2, i3.slice(1)))), n6 += r5.length + a6.length + h2.length;
  }
  return s5;
};
var Bs = St([0, 0, 0, 1]);
var Fs = St([0, 0, 1]);
var qs = St([0, 0, 3]);
var js = function(e9) {
  for (var t4 = [], i3 = 1; i3 < e9.length - 2; ) Pt(e9.subarray(i3, i3 + 3), qs) && (t4.push(i3 + 2), i3++), i3++;
  if (0 === t4.length) return e9;
  var s5 = e9.length - t4.length, n6 = new Uint8Array(s5), r5 = 0;
  for (i3 = 0; i3 < s5; r5++, i3++) r5 === t4[0] && (r5++, t4.shift()), n6[i3] = e9[r5];
  return n6;
};
var $s = function(e9, t4, i3, s5) {
  e9 = St(e9), i3 = [].concat(i3);
  for (var n6, r5 = 0, a6 = 0; r5 < e9.length && (a6 < s5 || n6); ) {
    var o4 = void 0;
    if (Pt(e9.subarray(r5), Bs) ? o4 = 4 : Pt(e9.subarray(r5), Fs) && (o4 = 3), o4) {
      if (a6++, n6) return js(e9.subarray(n6, r5));
      var l6 = void 0;
      "h264" === t4 ? l6 = 31 & e9[r5 + o4] : "h265" === t4 && (l6 = e9[r5 + o4] >> 1 & 63), -1 !== i3.indexOf(l6) && (n6 = r5 + o4), r5 += o4 + ("h264" === t4 ? 1 : 2);
    } else r5++;
  }
  return e9.subarray(0, 0);
};
var Hs = function(e9, t4, i3) {
  return $s(e9, "h264", t4, i3);
};
var Vs = function(e9, t4, i3) {
  return $s(e9, "h265", t4, i3);
};
var zs = { webm: St([119, 101, 98, 109]), matroska: St([109, 97, 116, 114, 111, 115, 107, 97]), flac: St([102, 76, 97, 67]), ogg: St([79, 103, 103, 83]), ac3: St([11, 119]), riff: St([82, 73, 70, 70]), avi: St([65, 86, 73]), wav: St([87, 65, 86, 69]), "3gp": St([102, 116, 121, 112, 51, 103]), mp4: St([102, 116, 121, 112]), fmp4: St([115, 116, 121, 112]), mov: St([102, 116, 121, 112, 113, 116]), moov: St([109, 111, 111, 118]), moof: St([109, 111, 111, 102]) };
var Ws = { aac: function(e9) {
  var t4 = ks(e9);
  return Pt(e9, [255, 16], { offset: t4, mask: [255, 22] });
}, mp3: function(e9) {
  var t4 = ks(e9);
  return Pt(e9, [255, 2], { offset: t4, mask: [255, 6] });
}, webm: function(e9) {
  var t4 = Us(e9, [Ds.EBML, Ds.DocType])[0];
  return Pt(t4, zs.webm);
}, mkv: function(e9) {
  var t4 = Us(e9, [Ds.EBML, Ds.DocType])[0];
  return Pt(t4, zs.matroska);
}, mp4: function(e9) {
  return !Ws["3gp"](e9) && !Ws.mov(e9) && (!(!Pt(e9, zs.mp4, { offset: 4 }) && !Pt(e9, zs.fmp4, { offset: 4 })) || (!(!Pt(e9, zs.moof, { offset: 4 }) && !Pt(e9, zs.moov, { offset: 4 })) || void 0));
}, mov: function(e9) {
  return Pt(e9, zs.mov, { offset: 4 });
}, "3gp": function(e9) {
  return Pt(e9, zs["3gp"], { offset: 4 });
}, ac3: function(e9) {
  var t4 = ks(e9);
  return Pt(e9, zs.ac3, { offset: t4 });
}, ts: function(e9) {
  if (e9.length < 189 && e9.length >= 1) return 71 === e9[0];
  for (var t4 = 0; t4 + 188 < e9.length && t4 < 188; ) {
    if (71 === e9[t4] && 71 === e9[t4 + 188]) return true;
    t4 += 1;
  }
  return false;
}, flac: function(e9) {
  var t4 = ks(e9);
  return Pt(e9, zs.flac, { offset: t4 });
}, ogg: function(e9) {
  return Pt(e9, zs.ogg);
}, avi: function(e9) {
  return Pt(e9, zs.riff) && Pt(e9, zs.avi, { offset: 8 });
}, wav: function(e9) {
  return Pt(e9, zs.riff) && Pt(e9, zs.wav, { offset: 8 });
}, h264: function(e9) {
  return Hs(e9, 7, 3).length;
}, h265: function(e9) {
  return Vs(e9, [32, 33], 3).length;
} };
var Gs = Object.keys(Ws).filter(function(e9) {
  return "ts" !== e9 && "h264" !== e9 && "h265" !== e9;
}).concat(["ts", "h264", "h265"]);
Gs.forEach(function(e9) {
  var t4 = Ws[e9];
  Ws[e9] = function(e10) {
    return t4(St(e10));
  };
});
var Xs;
var Ks;
var Ys = Ws;
var Qs = function(e9) {
  e9 = St(e9);
  for (var t4 = 0; t4 < Gs.length; t4++) {
    var i3 = Gs[t4];
    if (Ys[i3](e9)) return i3;
  }
  return "";
};
var Js = function(e9) {
  return As(e9, ["moof"]).length > 0;
};
function Zs() {
  if (Ks) return Xs;
  Ks = 1;
  var e9, t4, i3, s5, n6, r5, a6, o4 = 9e4;
  return n6 = function(t5, i4) {
    return e9(s5(t5, i4));
  }, r5 = function(e10, s6) {
    return t4(i3(e10), s6);
  }, a6 = function(e10, t5, s6) {
    return i3(s6 ? e10 : e10 - t5);
  }, Xs = { ONE_SECOND_IN_TS: o4, secondsToVideoTs: e9 = function(e10) {
    return e10 * o4;
  }, secondsToAudioTs: t4 = function(e10, t5) {
    return e10 * t5;
  }, videoTsToSeconds: i3 = function(e10) {
    return e10 / o4;
  }, audioTsToSeconds: s5 = function(e10, t5) {
    return e10 / t5;
  }, audioTsToVideoTs: n6, videoTsToAudioTs: r5, metadataTsToSeconds: a6 };
}
var en = Zs();
var tn = "8.18.1";
var sn = {};
var nn = function(e9, t4) {
  return sn[e9] = sn[e9] || [], t4 && (sn[e9] = sn[e9].concat(t4)), sn[e9];
};
var rn = function(e9, t4) {
  nn(e9, t4);
};
var an = function(e9, t4) {
  const i3 = nn(e9).indexOf(t4);
  return !(i3 <= -1) && (sn[e9] = sn[e9].slice(), sn[e9].splice(i3, 1), true);
};
var on = function(e9, t4) {
  nn(e9, [].concat(t4).map((t5) => {
    const i3 = (...s5) => (an(e9, i3), t5(...s5));
    return i3;
  }));
};
var ln = { prefixed: true };
var hn = [["requestFullscreen", "exitFullscreen", "fullscreenElement", "fullscreenEnabled", "fullscreenchange", "fullscreenerror", "fullscreen"], ["webkitRequestFullscreen", "webkitExitFullscreen", "webkitFullscreenElement", "webkitFullscreenEnabled", "webkitfullscreenchange", "webkitfullscreenerror", "-webkit-full-screen"]];
var un = hn[0];
var dn;
for (let Eg = 0; Eg < hn.length; Eg++) if (hn[Eg][1] in ne) {
  dn = hn[Eg];
  break;
}
if (dn) {
  for (let e9 = 0; e9 < dn.length; e9++) ln[un[e9]] = dn[e9];
  ln.prefixed = dn[0] !== un[0];
}
var cn = [];
var pn = (e9, t4, i3) => (s5, n6, r5) => {
  const a6 = t4.levels[n6], o4 = new RegExp(`^(${a6})$`);
  let l6 = e9;
  if ("log" !== s5 && r5.unshift(s5.toUpperCase() + ":"), i3 && (l6 = `%c${e9}`, r5.unshift(i3)), r5.unshift(l6 + ":"), cn) {
    cn.push([].concat(r5));
    const e10 = cn.length - 1e3;
    cn.splice(0, e10 > 0 ? e10 : 0);
  }
  if (!_.console) return;
  let h2 = _.console[s5];
  h2 || "debug" !== s5 || (h2 = _.console.info || _.console.log), h2 && a6 && o4.test(s5) && h2[Array.isArray(r5) ? "apply" : "call"](_.console, r5);
};
function mn(e9, t4 = ":", i3 = "") {
  let s5, n6 = "info";
  function r5(...e10) {
    s5("log", n6, e10);
  }
  return s5 = pn(e9, r5, i3), r5.createLogger = (s6, n7, r6) => {
    const a6 = void 0 !== n7 ? n7 : t4;
    return mn(`${e9} ${a6} ${s6}`, a6, void 0 !== r6 ? r6 : i3);
  }, r5.createNewLogger = (e10, t5, i4) => mn(e10, t5, i4), r5.levels = { all: "debug|log|warn|error", off: "", debug: "debug|log|warn|error", info: "log|warn|error", warn: "warn|error", error: "error", DEFAULT: n6 }, r5.level = (e10) => {
    if ("string" == typeof e10) {
      if (!r5.levels.hasOwnProperty(e10)) throw new Error(`"${e10}" in not a valid log level`);
      n6 = e10;
    }
    return n6;
  }, r5.history = () => cn ? [].concat(cn) : [], r5.history.filter = (e10) => (cn || []).filter((t5) => new RegExp(`.*${e10}.*`).test(t5[0])), r5.history.clear = () => {
    cn && (cn.length = 0);
  }, r5.history.disable = () => {
    null !== cn && (cn.length = 0, cn = null);
  }, r5.history.enable = () => {
    null === cn && (cn = []);
  }, r5.error = (...e10) => s5("error", n6, e10), r5.warn = (...e10) => s5("warn", n6, e10), r5.debug = (...e10) => s5("debug", n6, e10), r5;
}
var gn = mn("VIDEOJS");
var fn = gn.createLogger;
var yn = Object.prototype.toString;
var _n = function(e9) {
  return Tn(e9) ? Object.keys(e9) : [];
};
function bn(e9, t4) {
  _n(e9).forEach((i3) => t4(e9[i3], i3));
}
function vn(e9, t4, i3 = 0) {
  return _n(e9).reduce((i4, s5) => t4(i4, e9[s5], s5), i3);
}
function Tn(e9) {
  return !!e9 && "object" == typeof e9;
}
function Sn(e9) {
  return Tn(e9) && "[object Object]" === yn.call(e9) && e9.constructor === Object;
}
function En(...e9) {
  const t4 = {};
  return e9.forEach((e10) => {
    e10 && bn(e10, (e11, i3) => {
      Sn(e11) ? (Sn(t4[i3]) || (t4[i3] = {}), t4[i3] = En(t4[i3], e11)) : t4[i3] = e11;
    });
  }), t4;
}
function wn(e9 = {}) {
  const t4 = [];
  for (const i3 in e9) if (e9.hasOwnProperty(i3)) {
    const s5 = e9[i3];
    t4.push(s5);
  }
  return t4;
}
function Cn(e9, t4, i3, s5 = true) {
  const n6 = (i4) => Object.defineProperty(e9, t4, { value: i4, enumerable: true, writable: true }), r5 = { configurable: true, enumerable: true, get() {
    const e10 = i3();
    return n6(e10), e10;
  } };
  return s5 && (r5.set = n6), Object.defineProperty(e9, t4, r5);
}
var kn = Object.freeze({ __proto__: null, each: bn, reduce: vn, isObject: Tn, isPlain: Sn, merge: En, values: wn, defineLazyProperty: Cn });
var In;
var xn = false;
var An = null;
var Dn = false;
var Pn = false;
var Ln = false;
var On = false;
var Nn = false;
var Rn = null;
var Mn = null;
var Un = Boolean(_.cast && _.cast.framework && _.cast.framework.CastReceiverContext);
var Bn = null;
var Fn = false;
var qn = false;
var jn = false;
var $n = false;
var Hn = false;
var Vn = false;
var zn = false;
var Wn = Boolean(Zn() && ("ontouchstart" in _ || _.navigator.maxTouchPoints || _.DocumentTouch && _.document instanceof _.DocumentTouch));
var Gn = _.navigator && _.navigator.userAgentData;
if (Gn && Gn.platform && Gn.brands && (Dn = "Android" === Gn.platform, Ln = Boolean(Gn.brands.find((e9) => "Microsoft Edge" === e9.brand)), On = Boolean(Gn.brands.find((e9) => "Chromium" === e9.brand)), Nn = !Ln && On, Rn = Mn = (Gn.brands.find((e9) => "Chromium" === e9.brand) || {}).version || null, qn = "Windows" === Gn.platform), !On) {
  const e9 = _.navigator && _.navigator.userAgent || "";
  xn = /iPod/i.test(e9), An = function() {
    const t4 = e9.match(/OS (\d+)_/i);
    return t4 && t4[1] ? t4[1] : null;
  }(), Dn = /Android/i.test(e9), In = function() {
    const t4 = e9.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i);
    if (!t4) return null;
    const i3 = t4[1] && parseFloat(t4[1]), s5 = t4[2] && parseFloat(t4[2]);
    return i3 && s5 ? parseFloat(t4[1] + "." + t4[2]) : i3 || null;
  }(), Pn = /Firefox/i.test(e9), Ln = /Edg/i.test(e9), On = /Chrome/i.test(e9) || /CriOS/i.test(e9), Nn = !Ln && On, Rn = Mn = function() {
    const t4 = e9.match(/(Chrome|CriOS)\/(\d+)/);
    return t4 && t4[2] ? parseFloat(t4[2]) : null;
  }(), Bn = function() {
    const t4 = /MSIE\s(\d+)\.\d/.exec(e9);
    let i3 = t4 && parseFloat(t4[1]);
    return !i3 && /Trident\/7.0/i.test(e9) && /rv:11.0/.test(e9) && (i3 = 11), i3;
  }(), Hn = /Tizen/i.test(e9), Vn = /Web0S/i.test(e9), zn = Hn || Vn, Fn = /Safari/i.test(e9) && !Nn && !Dn && !Ln && !zn, qn = /Windows/i.test(e9), jn = /iPad/i.test(e9) || Fn && Wn && !/iPhone/i.test(e9), $n = /iPhone/i.test(e9) && !jn;
}
var Xn = $n || jn || xn;
var Kn = (Fn || Xn) && !Nn;
var Yn = Object.freeze({ __proto__: null, get IS_IPOD() {
  return xn;
}, get IOS_VERSION() {
  return An;
}, get IS_ANDROID() {
  return Dn;
}, get ANDROID_VERSION() {
  return In;
}, get IS_FIREFOX() {
  return Pn;
}, get IS_EDGE() {
  return Ln;
}, get IS_CHROMIUM() {
  return On;
}, get IS_CHROME() {
  return Nn;
}, get CHROMIUM_VERSION() {
  return Rn;
}, get CHROME_VERSION() {
  return Mn;
}, IS_CHROMECAST_RECEIVER: Un, get IE_VERSION() {
  return Bn;
}, get IS_SAFARI() {
  return Fn;
}, get IS_WINDOWS() {
  return qn;
}, get IS_IPAD() {
  return jn;
}, get IS_IPHONE() {
  return $n;
}, get IS_TIZEN() {
  return Hn;
}, get IS_WEBOS() {
  return Vn;
}, get IS_SMART_TV() {
  return zn;
}, TOUCH_ENABLED: Wn, IS_IOS: Xn, IS_ANY_SAFARI: Kn });
function Qn(e9) {
  return "string" == typeof e9 && Boolean(e9.trim());
}
function Jn(e9) {
  if (e9.indexOf(" ") >= 0) throw new Error("class has illegal whitespace characters");
}
function Zn() {
  return ne === _.document;
}
function er(e9) {
  return Tn(e9) && 1 === e9.nodeType;
}
function tr() {
  try {
    return _.parent !== _.self;
  } catch (e9) {
    return true;
  }
}
function ir(e9) {
  return function(t4, i3) {
    if (!Qn(t4)) return ne[e9](null);
    Qn(i3) && (i3 = ne.querySelector(i3));
    const s5 = er(i3) ? i3 : ne;
    return s5[e9] && s5[e9](t4);
  };
}
function sr(e9 = "div", t4 = {}, i3 = {}, s5) {
  const n6 = ne.createElement(e9);
  return Object.getOwnPropertyNames(t4).forEach(function(e10) {
    const i4 = t4[e10];
    "textContent" === e10 ? nr(n6, i4) : n6[e10] === i4 && "tabIndex" !== e10 || (n6[e10] = i4);
  }), Object.getOwnPropertyNames(i3).forEach(function(e10) {
    n6.setAttribute(e10, i3[e10]);
  }), s5 && Er(n6, s5), n6;
}
function nr(e9, t4) {
  return void 0 === e9.textContent ? e9.innerText = t4 : e9.textContent = t4, e9;
}
function rr(e9, t4) {
  t4.firstChild ? t4.insertBefore(e9, t4.firstChild) : t4.appendChild(e9);
}
function ar(e9, t4) {
  return Jn(t4), e9.classList.contains(t4);
}
function or(e9, ...t4) {
  return e9.classList.add(...t4.reduce((e10, t5) => e10.concat(t5.split(/\s+/)), [])), e9;
}
function lr(e9, ...t4) {
  return e9 ? (e9.classList.remove(...t4.reduce((e10, t5) => e10.concat(t5.split(/\s+/)), [])), e9) : (gn.warn("removeClass was called with an element that doesn't exist"), null);
}
function hr(e9, t4, i3) {
  return "function" == typeof i3 && (i3 = i3(e9, t4)), "boolean" != typeof i3 && (i3 = void 0), t4.split(/\s+/).forEach((t5) => e9.classList.toggle(t5, i3)), e9;
}
function ur(e9, t4) {
  Object.getOwnPropertyNames(t4).forEach(function(i3) {
    const s5 = t4[i3];
    null == s5 || false === s5 ? e9.removeAttribute(i3) : e9.setAttribute(i3, true === s5 ? "" : s5);
  });
}
function dr(e9) {
  const t4 = {}, i3 = ["autoplay", "controls", "playsinline", "loop", "muted", "default", "defaultMuted"];
  if (e9 && e9.attributes && e9.attributes.length > 0) {
    const s5 = e9.attributes;
    for (let e10 = s5.length - 1; e10 >= 0; e10--) {
      const n6 = s5[e10].name;
      let r5 = s5[e10].value;
      i3.includes(n6) && (r5 = null !== r5), t4[n6] = r5;
    }
  }
  return t4;
}
function cr(e9, t4) {
  return e9.getAttribute(t4);
}
function pr(e9, t4, i3) {
  e9.setAttribute(t4, i3);
}
function mr(e9, t4) {
  e9.removeAttribute(t4);
}
function gr() {
  ne.body.focus(), ne.onselectstart = function() {
    return false;
  };
}
function fr() {
  ne.onselectstart = function() {
    return true;
  };
}
function yr(e9) {
  if (e9 && e9.getBoundingClientRect && e9.parentNode) {
    const t4 = e9.getBoundingClientRect(), i3 = {};
    return ["bottom", "height", "left", "right", "top", "width"].forEach((e10) => {
      void 0 !== t4[e10] && (i3[e10] = t4[e10]);
    }), i3.height || (i3.height = parseFloat(xr(e9, "height"))), i3.width || (i3.width = parseFloat(xr(e9, "width"))), i3;
  }
}
function _r(e9) {
  if (!e9 || e9 && !e9.offsetParent) return { left: 0, top: 0, width: 0, height: 0 };
  const t4 = e9.offsetWidth, i3 = e9.offsetHeight;
  let s5 = 0, n6 = 0;
  for (; e9.offsetParent && e9 !== ne[ln.fullscreenElement]; ) s5 += e9.offsetLeft, n6 += e9.offsetTop, e9 = e9.offsetParent;
  return { left: s5, top: n6, width: t4, height: i3 };
}
function br(e9, t4) {
  const i3 = { x: 0, y: 0 };
  if (Xn) {
    let t5 = e9;
    for (; t5 && "html" !== t5.nodeName.toLowerCase(); ) {
      const e10 = xr(t5, "transform");
      if (/^matrix/.test(e10)) {
        const t6 = e10.slice(7, -1).split(/,\s/).map(Number);
        i3.x += t6[4], i3.y += t6[5];
      } else if (/^matrix3d/.test(e10)) {
        const t6 = e10.slice(9, -1).split(/,\s/).map(Number);
        i3.x += t6[12], i3.y += t6[13];
      }
      if (t5.assignedSlot && t5.assignedSlot.parentElement && _.WebKitCSSMatrix) {
        const e11 = _.getComputedStyle(t5.assignedSlot.parentElement).transform, s6 = new _.WebKitCSSMatrix(e11);
        i3.x += s6.m41, i3.y += s6.m42;
      }
      t5 = t5.parentNode || t5.host;
    }
  }
  const s5 = {}, n6 = _r(t4.target), r5 = _r(e9), a6 = r5.width, o4 = r5.height;
  let l6 = t4.offsetY - (r5.top - n6.top), h2 = t4.offsetX - (r5.left - n6.left);
  return t4.changedTouches && (h2 = t4.changedTouches[0].pageX - r5.left, l6 = t4.changedTouches[0].pageY + r5.top, Xn && (h2 -= i3.x, l6 -= i3.y)), s5.y = 1 - Math.max(0, Math.min(1, l6 / o4)), s5.x = Math.max(0, Math.min(1, h2 / a6)), s5;
}
function vr(e9) {
  return Tn(e9) && 3 === e9.nodeType;
}
function Tr(e9) {
  for (; e9.firstChild; ) e9.removeChild(e9.firstChild);
  return e9;
}
function Sr(e9) {
  return "function" == typeof e9 && (e9 = e9()), (Array.isArray(e9) ? e9 : [e9]).map((e10) => ("function" == typeof e10 && (e10 = e10()), er(e10) || vr(e10) ? e10 : "string" == typeof e10 && /\S/.test(e10) ? ne.createTextNode(e10) : void 0)).filter((e10) => e10);
}
function Er(e9, t4) {
  return Sr(t4).forEach((t5) => e9.appendChild(t5)), e9;
}
function wr(e9, t4) {
  return Er(Tr(e9), t4);
}
function Cr(e9) {
  return void 0 === e9.button && void 0 === e9.buttons || (0 === e9.button && void 0 === e9.buttons || ("mouseup" === e9.type && 0 === e9.button && 0 === e9.buttons || ("mousedown" === e9.type && 0 === e9.button && 0 === e9.buttons || 0 === e9.button && 1 === e9.buttons)));
}
var kr = ir("querySelector");
var Ir = ir("querySelectorAll");
function xr(e9, t4) {
  if (!e9 || !t4) return "";
  if ("function" == typeof _.getComputedStyle) {
    let s5;
    try {
      s5 = _.getComputedStyle(e9);
    } catch (i3) {
      return "";
    }
    return s5 ? s5.getPropertyValue(t4) || s5[t4] : "";
  }
  return "";
}
function Ar(e9) {
  [...ne.styleSheets].forEach((t4) => {
    try {
      const i3 = [...t4.cssRules].map((e10) => e10.cssText).join(""), s5 = ne.createElement("style");
      s5.textContent = i3, e9.document.head.appendChild(s5);
    } catch (i3) {
      const s5 = ne.createElement("link");
      s5.rel = "stylesheet", s5.type = t4.type, s5.media = t4.media.mediaText, s5.href = t4.href, e9.document.head.appendChild(s5);
    }
  });
}
var Dr = Object.freeze({ __proto__: null, isReal: Zn, isEl: er, isInFrame: tr, createEl: sr, textContent: nr, prependTo: rr, hasClass: ar, addClass: or, removeClass: lr, toggleClass: hr, setAttributes: ur, getAttributes: dr, getAttribute: cr, setAttribute: pr, removeAttribute: mr, blockTextSelection: gr, unblockTextSelection: fr, getBoundingClientRect: yr, findPosition: _r, getPointerPosition: br, isTextNode: vr, emptyEl: Tr, normalizeContent: Sr, appendContent: Er, insertContent: wr, isSingleLeftClick: Cr, $: kr, $$: Ir, computedStyle: xr, copyStyleSheetsToWindow: Ar });
var Pr;
var Lr = false;
var Or = function() {
  if (false === Pr.options.autoSetup) return;
  const e9 = Array.prototype.slice.call(ne.getElementsByTagName("video")), t4 = Array.prototype.slice.call(ne.getElementsByTagName("audio")), i3 = Array.prototype.slice.call(ne.getElementsByTagName("video-js")), s5 = e9.concat(t4, i3);
  if (s5 && s5.length > 0) for (let n6 = 0, r5 = s5.length; n6 < r5; n6++) {
    const e10 = s5[n6];
    if (!e10 || !e10.getAttribute) {
      Nr(1);
      break;
    }
    if (void 0 === e10.player) {
      null !== e10.getAttribute("data-setup") && Pr(e10);
    }
  }
  else Lr || Nr(1);
};
function Nr(e9, t4) {
  Zn() && (t4 && (Pr = t4), _.setTimeout(Or, e9));
}
function Rr() {
  Lr = true, _.removeEventListener("load", Rr);
}
Zn() && ("complete" === ne.readyState ? Rr() : _.addEventListener("load", Rr));
var Mr = function(e9) {
  const t4 = ne.createElement("style");
  return t4.className = e9, t4;
};
var Ur = function(e9, t4) {
  e9.styleSheet ? e9.styleSheet.cssText = t4 : e9.textContent = t4;
};
var Br = /* @__PURE__ */ new WeakMap();
var Fr;
var qr = 3;
function jr() {
  return qr++;
}
function $r(e9, t4) {
  if (!Br.has(e9)) return;
  const i3 = Br.get(e9);
  0 === i3.handlers[t4].length && (delete i3.handlers[t4], e9.removeEventListener ? e9.removeEventListener(t4, i3.dispatcher, false) : e9.detachEvent && e9.detachEvent("on" + t4, i3.dispatcher)), Object.getOwnPropertyNames(i3.handlers).length <= 0 && (delete i3.handlers, delete i3.dispatcher, delete i3.disabled), 0 === Object.getOwnPropertyNames(i3).length && Br.delete(e9);
}
function Hr(e9, t4, i3, s5) {
  i3.forEach(function(i4) {
    e9(t4, i4, s5);
  });
}
function Vr(e9) {
  if (e9.fixed_) return e9;
  function t4() {
    return true;
  }
  function i3() {
    return false;
  }
  if (!e9 || !e9.isPropagationStopped || !e9.isImmediatePropagationStopped) {
    const s5 = e9 || _.event;
    e9 = {};
    const n6 = ["layerX", "layerY", "keyLocation", "path", "webkitMovementX", "webkitMovementY", "mozPressure", "mozInputSource"];
    for (const t5 in s5) n6.includes(t5) || "returnValue" === t5 && s5.preventDefault || (e9[t5] = s5[t5]);
    if (e9.target || (e9.target = e9.srcElement || ne), e9.relatedTarget || (e9.relatedTarget = e9.fromElement === e9.target ? e9.toElement : e9.fromElement), e9.preventDefault = function() {
      s5.preventDefault && s5.preventDefault(), e9.returnValue = false, s5.returnValue = false, e9.defaultPrevented = true;
    }, e9.defaultPrevented = false, e9.stopPropagation = function() {
      s5.stopPropagation && s5.stopPropagation(), e9.cancelBubble = true, s5.cancelBubble = true, e9.isPropagationStopped = t4;
    }, e9.isPropagationStopped = i3, e9.stopImmediatePropagation = function() {
      s5.stopImmediatePropagation && s5.stopImmediatePropagation(), e9.isImmediatePropagationStopped = t4, e9.stopPropagation();
    }, e9.isImmediatePropagationStopped = i3, null !== e9.clientX && void 0 !== e9.clientX) {
      const t5 = ne.documentElement, i4 = ne.body;
      e9.pageX = e9.clientX + (t5 && t5.scrollLeft || i4 && i4.scrollLeft || 0) - (t5 && t5.clientLeft || i4 && i4.clientLeft || 0), e9.pageY = e9.clientY + (t5 && t5.scrollTop || i4 && i4.scrollTop || 0) - (t5 && t5.clientTop || i4 && i4.clientTop || 0);
    }
    e9.which = e9.charCode || e9.keyCode, null !== e9.button && void 0 !== e9.button && (e9.button = 1 & e9.button ? 0 : 4 & e9.button ? 1 : 2 & e9.button ? 2 : 0);
  }
  return e9.fixed_ = true, e9;
}
var zr = function() {
  if ("boolean" != typeof Fr) {
    Fr = false;
    try {
      const e9 = Object.defineProperty({}, "passive", { get() {
        Fr = true;
      } });
      _.addEventListener("test", null, e9), _.removeEventListener("test", null, e9);
    } catch (e9) {
    }
  }
  return Fr;
};
var Wr = ["touchstart", "touchmove"];
function Gr(e9, t4, i3) {
  if (Array.isArray(t4)) return Hr(Gr, e9, t4, i3);
  Br.has(e9) || Br.set(e9, {});
  const s5 = Br.get(e9);
  if (s5.handlers || (s5.handlers = {}), s5.handlers[t4] || (s5.handlers[t4] = []), i3.guid || (i3.guid = jr()), s5.handlers[t4].push(i3), s5.dispatcher || (s5.disabled = false, s5.dispatcher = function(t5, i4) {
    if (s5.disabled) return;
    t5 = Vr(t5);
    const n6 = s5.handlers[t5.type];
    if (n6) {
      const s6 = n6.slice(0);
      for (let n7 = 0, a6 = s6.length; n7 < a6 && !t5.isImmediatePropagationStopped(); n7++) try {
        s6[n7].call(e9, t5, i4);
      } catch (r5) {
        gn.error(r5);
      }
    }
  }), 1 === s5.handlers[t4].length) if (e9.addEventListener) {
    let i4 = false;
    zr() && Wr.indexOf(t4) > -1 && (i4 = { passive: true }), e9.addEventListener(t4, s5.dispatcher, i4);
  } else e9.attachEvent && e9.attachEvent("on" + t4, s5.dispatcher);
}
function Xr(e9, t4, i3) {
  if (!Br.has(e9)) return;
  const s5 = Br.get(e9);
  if (!s5.handlers) return;
  if (Array.isArray(t4)) return Hr(Xr, e9, t4, i3);
  const n6 = function(e10, t5) {
    s5.handlers[t5] = [], $r(e10, t5);
  };
  if (void 0 === t4) {
    for (const t5 in s5.handlers) Object.prototype.hasOwnProperty.call(s5.handlers || {}, t5) && n6(e9, t5);
    return;
  }
  const r5 = s5.handlers[t4];
  if (r5) if (i3) {
    if (i3.guid) for (let e10 = 0; e10 < r5.length; e10++) r5[e10].guid === i3.guid && r5.splice(e10--, 1);
    $r(e9, t4);
  } else n6(e9, t4);
}
function Kr(e9, t4, i3) {
  const s5 = Br.has(e9) ? Br.get(e9) : {}, n6 = e9.parentNode || e9.ownerDocument;
  if ("string" == typeof t4 ? t4 = { type: t4, target: e9 } : t4.target || (t4.target = e9), t4 = Vr(t4), s5.dispatcher && s5.dispatcher.call(e9, t4, i3), n6 && !t4.isPropagationStopped() && true === t4.bubbles) Kr.call(null, n6, t4, i3);
  else if (!n6 && !t4.defaultPrevented && t4.target && t4.target[t4.type]) {
    Br.has(t4.target) || Br.set(t4.target, {});
    const e10 = Br.get(t4.target);
    t4.target[t4.type] && (e10.disabled = true, "function" == typeof t4.target[t4.type] && t4.target[t4.type](), e10.disabled = false);
  }
  return !t4.defaultPrevented;
}
function Yr(e9, t4, i3) {
  if (Array.isArray(t4)) return Hr(Yr, e9, t4, i3);
  const s5 = function() {
    Xr(e9, t4, s5), i3.apply(this, arguments);
  };
  s5.guid = i3.guid = i3.guid || jr(), Gr(e9, t4, s5);
}
function Qr(e9, t4, i3) {
  const s5 = function() {
    Xr(e9, t4, s5), i3.apply(this, arguments);
  };
  s5.guid = i3.guid = i3.guid || jr(), Gr(e9, t4, s5);
}
var Jr = Object.freeze({ __proto__: null, fixEvent: Vr, on: Gr, off: Xr, trigger: Kr, one: Yr, any: Qr });
var Zr = 30;
var ea = function(e9, t4, i3) {
  t4.guid || (t4.guid = jr());
  const s5 = t4.bind(e9);
  return s5.guid = i3 ? i3 + "_" + t4.guid : t4.guid, s5;
};
var ta = function(e9, t4) {
  let i3 = _.performance.now();
  return function(...s5) {
    const n6 = _.performance.now();
    n6 - i3 >= t4 && (e9(...s5), i3 = n6);
  };
};
var ia = function(e9, t4, i3, s5 = _) {
  let n6;
  const r5 = () => {
    s5.clearTimeout(n6), n6 = null;
  }, a6 = function() {
    const r6 = this, a7 = arguments;
    let o4 = function() {
      n6 = null, o4 = null, i3 || e9.apply(r6, a7);
    };
    !n6 && i3 && e9.apply(r6, a7), s5.clearTimeout(n6), n6 = s5.setTimeout(o4, t4);
  };
  return a6.cancel = r5, a6;
};
var sa = Object.freeze({ __proto__: null, UPDATE_REFRESH_INTERVAL: Zr, bind_: ea, throttle: ta, debounce: ia });
var na;
var ra = class {
  on(e9, t4) {
    const i3 = this.addEventListener;
    this.addEventListener = () => {
    }, Gr(this, e9, t4), this.addEventListener = i3;
  }
  off(e9, t4) {
    Xr(this, e9, t4);
  }
  one(e9, t4) {
    const i3 = this.addEventListener;
    this.addEventListener = () => {
    }, Yr(this, e9, t4), this.addEventListener = i3;
  }
  any(e9, t4) {
    const i3 = this.addEventListener;
    this.addEventListener = () => {
    }, Qr(this, e9, t4), this.addEventListener = i3;
  }
  trigger(e9) {
    const t4 = e9.type || e9;
    "string" == typeof e9 && (e9 = { type: t4 }), e9 = Vr(e9), this.allowedEvents_[t4] && this["on" + t4] && this["on" + t4](e9), Kr(this, e9);
  }
  queueTrigger(e9) {
    na || (na = /* @__PURE__ */ new Map());
    const t4 = e9.type || e9;
    let i3 = na.get(this);
    i3 || (i3 = /* @__PURE__ */ new Map(), na.set(this, i3));
    const s5 = i3.get(t4);
    i3.delete(t4), _.clearTimeout(s5);
    const n6 = _.setTimeout(() => {
      i3.delete(t4), 0 === i3.size && (i3 = null, na.delete(this)), this.trigger(e9);
    }, 0);
    i3.set(t4, n6);
  }
};
ra.prototype.allowedEvents_ = {}, ra.prototype.addEventListener = ra.prototype.on, ra.prototype.removeEventListener = ra.prototype.off, ra.prototype.dispatchEvent = ra.prototype.trigger;
var aa = (e9) => "function" == typeof e9.name ? e9.name() : "string" == typeof e9.name ? e9.name : e9.name_ ? e9.name_ : e9.constructor && e9.constructor.name ? e9.constructor.name : typeof e9;
var oa = (e9) => e9 instanceof ra || !!e9.eventBusEl_ && ["on", "one", "off", "trigger"].every((t4) => "function" == typeof e9[t4]);
var la = (e9, t4) => {
  oa(e9) ? t4() : (e9.eventedCallbacks || (e9.eventedCallbacks = []), e9.eventedCallbacks.push(t4));
};
var ha = (e9) => "string" == typeof e9 && /\S/.test(e9) || Array.isArray(e9) && !!e9.length;
var ua = (e9, t4, i3) => {
  if (!e9 || !e9.nodeName && !oa(e9)) throw new Error(`Invalid target for ${aa(t4)}#${i3}; must be a DOM node or evented object.`);
};
var da = (e9, t4, i3) => {
  if (!ha(e9)) throw new Error(`Invalid event type for ${aa(t4)}#${i3}; must be a non-empty string or array.`);
};
var ca = (e9, t4, i3) => {
  if ("function" != typeof e9) throw new Error(`Invalid listener for ${aa(t4)}#${i3}; must be a function.`);
};
var pa = (e9, t4, i3) => {
  const s5 = t4.length < 3 || t4[0] === e9 || t4[0] === e9.eventBusEl_;
  let n6, r5, a6;
  return s5 ? (n6 = e9.eventBusEl_, t4.length >= 3 && t4.shift(), [r5, a6] = t4) : (n6 = t4[0], r5 = t4[1], a6 = t4[2]), ua(n6, e9, i3), da(r5, e9, i3), ca(a6, e9, i3), a6 = ea(e9, a6), { isTargetingSelf: s5, target: n6, type: r5, listener: a6 };
};
var ma = (e9, t4, i3, s5) => {
  ua(e9, e9, t4), e9.nodeName ? Jr[t4](e9, i3, s5) : e9[t4](i3, s5);
};
var ga = { on(...e9) {
  const { isTargetingSelf: t4, target: i3, type: s5, listener: n6 } = pa(this, e9, "on");
  if (ma(i3, "on", s5, n6), !t4) {
    const e10 = () => this.off(i3, s5, n6);
    e10.guid = n6.guid;
    const t5 = () => this.off("dispose", e10);
    t5.guid = n6.guid, ma(this, "on", "dispose", e10), ma(i3, "on", "dispose", t5);
  }
}, one(...e9) {
  const { isTargetingSelf: t4, target: i3, type: s5, listener: n6 } = pa(this, e9, "one");
  if (t4) ma(i3, "one", s5, n6);
  else {
    const e10 = (...t5) => {
      this.off(i3, s5, e10), n6.apply(null, t5);
    };
    e10.guid = n6.guid, ma(i3, "one", s5, e10);
  }
}, any(...e9) {
  const { isTargetingSelf: t4, target: i3, type: s5, listener: n6 } = pa(this, e9, "any");
  if (t4) ma(i3, "any", s5, n6);
  else {
    const e10 = (...t5) => {
      this.off(i3, s5, e10), n6.apply(null, t5);
    };
    e10.guid = n6.guid, ma(i3, "any", s5, e10);
  }
}, off(e9, t4, i3) {
  if (!e9 || ha(e9)) Xr(this.eventBusEl_, e9, t4);
  else {
    const s5 = e9, n6 = t4;
    ua(s5, this, "off"), da(n6, this, "off"), ca(i3, this, "off"), i3 = ea(this, i3), this.off("dispose", i3), s5.nodeName ? (Xr(s5, n6, i3), Xr(s5, "dispose", i3)) : oa(s5) && (s5.off(n6, i3), s5.off("dispose", i3));
  }
}, trigger(e9, t4) {
  ua(this.eventBusEl_, this, "trigger");
  const i3 = e9 && "string" != typeof e9 ? e9.type : e9;
  if (!ha(i3)) throw new Error(`Invalid event type for ${aa(this)}#trigger; must be a non-empty string or object with a type key that has a non-empty value.`);
  return Kr(this.eventBusEl_, e9, t4);
} };
function fa(e9, t4 = {}) {
  const { eventBusKey: i3 } = t4;
  if (i3) {
    if (!e9[i3].nodeName) throw new Error(`The eventBusKey "${i3}" does not refer to an element.`);
    e9.eventBusEl_ = e9[i3];
  } else e9.eventBusEl_ = sr("span", { className: "vjs-event-bus" });
  return Object.assign(e9, ga), e9.eventedCallbacks && e9.eventedCallbacks.forEach((e10) => {
    e10();
  }), e9.on("dispose", () => {
    e9.off(), [e9, e9.el_, e9.eventBusEl_].forEach(function(e10) {
      e10 && Br.has(e10) && Br.delete(e10);
    }), _.setTimeout(() => {
      e9.eventBusEl_ = null;
    }, 0);
  }), e9;
}
var ya = { state: {}, setState(e9) {
  let t4;
  return "function" == typeof e9 && (e9 = e9()), bn(e9, (e10, i3) => {
    this.state[i3] !== e10 && (t4 = t4 || {}, t4[i3] = { from: this.state[i3], to: e10 }), this.state[i3] = e10;
  }), t4 && oa(this) && this.trigger({ changes: t4, type: "statechanged" }), t4;
} };
function _a(e9, t4) {
  return Object.assign(e9, ya), e9.state = Object.assign({}, e9.state, t4), "function" == typeof e9.handleStateChanged && oa(e9) && e9.on("statechanged", e9.handleStateChanged), e9;
}
var ba = function(e9) {
  return "string" != typeof e9 ? e9 : e9.replace(/./, (e10) => e10.toLowerCase());
};
var va = function(e9) {
  return "string" != typeof e9 ? e9 : e9.replace(/./, (e10) => e10.toUpperCase());
};
var Ta = function(e9, t4) {
  return va(e9) === va(t4);
};
var Sa = Object.freeze({ __proto__: null, toLowerCase: ba, toTitleCase: va, titleCaseEquals: Ta });
var Ea = class _Ea {
  constructor(e9, t4, i3) {
    if (!e9 && this.play ? this.player_ = e9 = this : this.player_ = e9, this.isDisposed_ = false, this.parentComponent_ = null, this.options_ = En({}, this.options_), t4 = this.options_ = En(this.options_, t4), this.id_ = t4.id || t4.el && t4.el.id, !this.id_) {
      const t5 = e9 && e9.id && e9.id() || "no_player";
      this.id_ = `${t5}_component_${jr()}`;
    }
    this.name_ = t4.name || null, t4.el ? this.el_ = t4.el : false !== t4.createEl && (this.el_ = this.createEl()), t4.className && this.el_ && t4.className.split(" ").forEach((e10) => this.addClass(e10)), ["on", "off", "one", "any", "trigger"].forEach((e10) => {
      this[e10] = void 0;
    }), false !== t4.evented && (fa(this, { eventBusKey: this.el_ ? "el_" : null }), this.handleLanguagechange = this.handleLanguagechange.bind(this), this.on(this.player_, "languagechange", this.handleLanguagechange)), _a(this, this.constructor.defaultState), this.children_ = [], this.childIndex_ = {}, this.childNameIndex_ = {}, this.setTimeoutIds_ = /* @__PURE__ */ new Set(), this.setIntervalIds_ = /* @__PURE__ */ new Set(), this.rafIds_ = /* @__PURE__ */ new Set(), this.namedRafs_ = /* @__PURE__ */ new Map(), this.clearingTimersOnDispose_ = false, false !== t4.initChildren && this.initChildren(), this.ready(i3), false !== t4.reportTouchActivity && this.enableTouchActivity();
  }
  dispose(e9 = {}) {
    if (!this.isDisposed_) {
      if (this.readyQueue_ && (this.readyQueue_.length = 0), this.trigger({ type: "dispose", bubbles: false }), this.isDisposed_ = true, this.children_) for (let e10 = this.children_.length - 1; e10 >= 0; e10--) this.children_[e10].dispose && this.children_[e10].dispose();
      this.children_ = null, this.childIndex_ = null, this.childNameIndex_ = null, this.parentComponent_ = null, this.el_ && (this.el_.parentNode && (e9.restoreEl ? this.el_.parentNode.replaceChild(e9.restoreEl, this.el_) : this.el_.parentNode.removeChild(this.el_)), this.el_ = null), this.player_ = null;
    }
  }
  isDisposed() {
    return Boolean(this.isDisposed_);
  }
  player() {
    return this.player_;
  }
  options(e9) {
    return e9 ? (this.options_ = En(this.options_, e9), this.options_) : this.options_;
  }
  el() {
    return this.el_;
  }
  createEl(e9, t4, i3) {
    return sr(e9, t4, i3);
  }
  localize(e9, t4, i3 = e9) {
    const s5 = this.player_.language && this.player_.language(), n6 = this.player_.languages && this.player_.languages(), r5 = n6 && n6[s5], a6 = s5 && s5.split("-")[0], o4 = n6 && n6[a6];
    let l6 = i3;
    return r5 && r5[e9] ? l6 = r5[e9] : o4 && o4[e9] && (l6 = o4[e9]), t4 && (l6 = l6.replace(/\{(\d+)\}/g, function(e10, i4) {
      const s6 = t4[i4 - 1];
      let n7 = s6;
      return void 0 === s6 && (n7 = e10), n7;
    })), l6;
  }
  handleLanguagechange() {
  }
  contentEl() {
    return this.contentEl_ || this.el_;
  }
  id() {
    return this.id_;
  }
  name() {
    return this.name_;
  }
  children() {
    return this.children_;
  }
  getChildById(e9) {
    return this.childIndex_[e9];
  }
  getChild(e9) {
    if (e9) return this.childNameIndex_[e9];
  }
  getDescendant(...e9) {
    e9 = e9.reduce((e10, t5) => e10.concat(t5), []);
    let t4 = this;
    for (let i3 = 0; i3 < e9.length; i3++) if (t4 = t4.getChild(e9[i3]), !t4 || !t4.getChild) return;
    return t4;
  }
  setIcon(e9, t4 = this.el()) {
    if (!this.player_.options_.experimentalSvgIcons) return;
    const i3 = "http://www.w3.org/2000/svg", s5 = sr("span", { className: "vjs-icon-placeholder vjs-svg-icon" }, { "aria-hidden": "true" }), n6 = ne.createElementNS(i3, "svg");
    n6.setAttributeNS(null, "viewBox", "0 0 512 512");
    const r5 = ne.createElementNS(i3, "use");
    return n6.appendChild(r5), r5.setAttributeNS(null, "href", `#vjs-icon-${e9}`), s5.appendChild(n6), this.iconIsSet_ ? t4.replaceChild(s5, t4.querySelector(".vjs-icon-placeholder")) : t4.appendChild(s5), this.iconIsSet_ = true, s5;
  }
  addChild(e9, t4 = {}, i3 = this.children_.length) {
    let s5, n6;
    if ("string" == typeof e9) {
      n6 = va(e9);
      const i4 = t4.componentClass || n6;
      t4.name = n6;
      const r5 = _Ea.getComponent(i4);
      if (!r5) throw new Error(`Component ${i4} does not exist`);
      if ("function" != typeof r5) return null;
      s5 = new r5(this.player_ || this, t4);
    } else s5 = e9;
    if (s5.parentComponent_ && s5.parentComponent_.removeChild(s5), this.children_.splice(i3, 0, s5), s5.parentComponent_ = this, "function" == typeof s5.id && (this.childIndex_[s5.id()] = s5), n6 = n6 || s5.name && va(s5.name()), n6 && (this.childNameIndex_[n6] = s5, this.childNameIndex_[ba(n6)] = s5), "function" == typeof s5.el && s5.el()) {
      let e10 = null;
      this.children_[i3 + 1] && (this.children_[i3 + 1].el_ ? e10 = this.children_[i3 + 1].el_ : er(this.children_[i3 + 1]) && (e10 = this.children_[i3 + 1])), this.contentEl().insertBefore(s5.el(), e10);
    }
    return s5;
  }
  removeChild(e9) {
    if ("string" == typeof e9 && (e9 = this.getChild(e9)), !e9 || !this.children_) return;
    let t4 = false;
    for (let s5 = this.children_.length - 1; s5 >= 0; s5--) if (this.children_[s5] === e9) {
      t4 = true, this.children_.splice(s5, 1);
      break;
    }
    if (!t4) return;
    e9.parentComponent_ = null, this.childIndex_[e9.id()] = null, this.childNameIndex_[va(e9.name())] = null, this.childNameIndex_[ba(e9.name())] = null;
    const i3 = e9.el();
    i3 && i3.parentNode === this.contentEl() && this.contentEl().removeChild(e9.el());
  }
  initChildren() {
    const e9 = this.options_.children;
    if (e9) {
      const t4 = this.options_, i3 = (e10) => {
        const i4 = e10.name;
        let s6 = e10.opts;
        if (void 0 !== t4[i4] && (s6 = t4[i4]), false === s6) return;
        true === s6 && (s6 = {}), s6.playerOptions = this.options_.playerOptions;
        const n7 = this.addChild(i4, s6);
        n7 && (this[i4] = n7);
      };
      let s5;
      const n6 = _Ea.getComponent("Tech");
      s5 = Array.isArray(e9) ? e9 : Object.keys(e9), s5.concat(Object.keys(this.options_).filter(function(e10) {
        return !s5.some(function(t5) {
          return "string" == typeof t5 ? e10 === t5 : e10 === t5.name;
        });
      })).map((t5) => {
        let i4, s6;
        return "string" == typeof t5 ? (i4 = t5, s6 = e9[i4] || this.options_[i4] || {}) : (i4 = t5.name, s6 = t5), { name: i4, opts: s6 };
      }).filter((e10) => {
        const t5 = _Ea.getComponent(e10.opts.componentClass || va(e10.name));
        return t5 && !n6.isTech(t5);
      }).forEach(i3);
    }
  }
  buildCSSClass() {
    return "";
  }
  ready(e9, t4 = false) {
    if (e9) return this.isReady_ ? void (t4 ? e9.call(this) : this.setTimeout(e9, 1)) : (this.readyQueue_ = this.readyQueue_ || [], void this.readyQueue_.push(e9));
  }
  triggerReady() {
    this.isReady_ = true, this.setTimeout(function() {
      const e9 = this.readyQueue_;
      this.readyQueue_ = [], e9 && e9.length > 0 && e9.forEach(function(e10) {
        e10.call(this);
      }, this), this.trigger("ready");
    }, 1);
  }
  $(e9, t4) {
    return kr(e9, t4 || this.contentEl());
  }
  $$(e9, t4) {
    return Ir(e9, t4 || this.contentEl());
  }
  hasClass(e9) {
    return ar(this.el_, e9);
  }
  addClass(...e9) {
    or(this.el_, ...e9);
  }
  removeClass(...e9) {
    lr(this.el_, ...e9);
  }
  toggleClass(e9, t4) {
    hr(this.el_, e9, t4);
  }
  show() {
    this.removeClass("vjs-hidden");
  }
  hide() {
    this.addClass("vjs-hidden");
  }
  lockShowing() {
    this.addClass("vjs-lock-showing");
  }
  unlockShowing() {
    this.removeClass("vjs-lock-showing");
  }
  getAttribute(e9) {
    return cr(this.el_, e9);
  }
  setAttribute(e9, t4) {
    pr(this.el_, e9, t4);
  }
  removeAttribute(e9) {
    mr(this.el_, e9);
  }
  width(e9, t4) {
    return this.dimension("width", e9, t4);
  }
  height(e9, t4) {
    return this.dimension("height", e9, t4);
  }
  dimensions(e9, t4) {
    this.width(e9, true), this.height(t4);
  }
  dimension(e9, t4, i3) {
    if (void 0 !== t4) return null !== t4 && t4 == t4 || (t4 = 0), -1 !== ("" + t4).indexOf("%") || -1 !== ("" + t4).indexOf("px") ? this.el_.style[e9] = t4 : this.el_.style[e9] = "auto" === t4 ? "" : t4 + "px", void (i3 || this.trigger("componentresize"));
    if (!this.el_) return 0;
    const s5 = this.el_.style[e9], n6 = s5.indexOf("px");
    return -1 !== n6 ? parseInt(s5.slice(0, n6), 10) : parseInt(this.el_["offset" + va(e9)], 10);
  }
  currentDimension(e9) {
    let t4 = 0;
    if ("width" !== e9 && "height" !== e9) throw new Error("currentDimension only accepts width or height value");
    if (t4 = xr(this.el_, e9), t4 = parseFloat(t4), 0 === t4 || isNaN(t4)) {
      const i3 = `offset${va(e9)}`;
      t4 = this.el_[i3];
    }
    return t4;
  }
  currentDimensions() {
    return { width: this.currentDimension("width"), height: this.currentDimension("height") };
  }
  currentWidth() {
    return this.currentDimension("width");
  }
  currentHeight() {
    return this.currentDimension("height");
  }
  getPositions() {
    const e9 = this.el_.getBoundingClientRect();
    return { boundingClientRect: { x: e9.x, y: e9.y, width: e9.width, height: e9.height, top: e9.top, right: e9.right, bottom: e9.bottom, left: e9.left }, center: { x: e9.left + e9.width / 2, y: e9.top + e9.height / 2, width: 0, height: 0, top: e9.top + e9.height / 2, right: e9.left + e9.width / 2, bottom: e9.top + e9.height / 2, left: e9.left + e9.width / 2 } };
  }
  focus() {
    this.el_.focus();
  }
  blur() {
    this.el_.blur();
  }
  handleKeyDown(e9) {
    this.player_ && ("Tab" === e9.key || this.player_.options_.playerOptions.spatialNavigation && this.player_.options_.playerOptions.spatialNavigation.enabled || e9.stopPropagation(), this.player_.handleKeyDown(e9));
  }
  handleKeyPress(e9) {
    this.handleKeyDown(e9);
  }
  emitTapEvents() {
    let e9 = 0, t4 = null;
    const i3 = 10, s5 = 200;
    let n6;
    this.on("touchstart", function(i4) {
      1 === i4.touches.length && (t4 = { pageX: i4.touches[0].pageX, pageY: i4.touches[0].pageY }, e9 = _.performance.now(), n6 = true);
    }), this.on("touchmove", function(e10) {
      if (e10.touches.length > 1) n6 = false;
      else if (t4) {
        const s6 = e10.touches[0].pageX - t4.pageX, r6 = e10.touches[0].pageY - t4.pageY;
        Math.sqrt(s6 * s6 + r6 * r6) > i3 && (n6 = false);
      }
    });
    const r5 = function() {
      n6 = false;
    };
    this.on("touchleave", r5), this.on("touchcancel", r5), this.on("touchend", function(i4) {
      if (t4 = null, true === n6) {
        _.performance.now() - e9 < s5 && (i4.preventDefault(), this.trigger("tap"));
      }
    });
  }
  enableTouchActivity() {
    if (!this.player() || !this.player().reportUserActivity) return;
    const e9 = ea(this.player(), this.player().reportUserActivity);
    let t4;
    this.on("touchstart", function() {
      e9(), this.clearInterval(t4), t4 = this.setInterval(e9, 250);
    });
    const i3 = function(i4) {
      e9(), this.clearInterval(t4);
    };
    this.on("touchmove", e9), this.on("touchend", i3), this.on("touchcancel", i3);
  }
  setTimeout(e9, t4) {
    var i3;
    return e9 = ea(this, e9), this.clearTimersOnDispose_(), i3 = _.setTimeout(() => {
      this.setTimeoutIds_.has(i3) && this.setTimeoutIds_.delete(i3), e9();
    }, t4), this.setTimeoutIds_.add(i3), i3;
  }
  clearTimeout(e9) {
    return this.setTimeoutIds_.has(e9) && (this.setTimeoutIds_.delete(e9), _.clearTimeout(e9)), e9;
  }
  setInterval(e9, t4) {
    e9 = ea(this, e9), this.clearTimersOnDispose_();
    const i3 = _.setInterval(e9, t4);
    return this.setIntervalIds_.add(i3), i3;
  }
  clearInterval(e9) {
    return this.setIntervalIds_.has(e9) && (this.setIntervalIds_.delete(e9), _.clearInterval(e9)), e9;
  }
  requestAnimationFrame(e9) {
    var t4;
    return this.clearTimersOnDispose_(), e9 = ea(this, e9), t4 = _.requestAnimationFrame(() => {
      this.rafIds_.has(t4) && this.rafIds_.delete(t4), e9();
    }), this.rafIds_.add(t4), t4;
  }
  requestNamedAnimationFrame(e9, t4) {
    this.namedRafs_.has(e9) && this.cancelNamedAnimationFrame(e9), this.clearTimersOnDispose_(), t4 = ea(this, t4);
    const i3 = this.requestAnimationFrame(() => {
      t4(), this.namedRafs_.has(e9) && this.namedRafs_.delete(e9);
    });
    return this.namedRafs_.set(e9, i3), e9;
  }
  cancelNamedAnimationFrame(e9) {
    this.namedRafs_.has(e9) && (this.cancelAnimationFrame(this.namedRafs_.get(e9)), this.namedRafs_.delete(e9));
  }
  cancelAnimationFrame(e9) {
    return this.rafIds_.has(e9) && (this.rafIds_.delete(e9), _.cancelAnimationFrame(e9)), e9;
  }
  clearTimersOnDispose_() {
    this.clearingTimersOnDispose_ || (this.clearingTimersOnDispose_ = true, this.one("dispose", () => {
      [["namedRafs_", "cancelNamedAnimationFrame"], ["rafIds_", "cancelAnimationFrame"], ["setTimeoutIds_", "clearTimeout"], ["setIntervalIds_", "clearInterval"]].forEach(([e9, t4]) => {
        this[e9].forEach((e10, i3) => this[t4](i3));
      }), this.clearingTimersOnDispose_ = false;
    }));
  }
  getIsDisabled() {
    return Boolean(this.el_.disabled);
  }
  getIsExpresslyInert() {
    return this.el_.inert && !this.el_.ownerDocument.documentElement.inert;
  }
  getIsFocusable(e9) {
    return (e9 || this.el_).tabIndex >= 0 && !(this.getIsDisabled() || this.getIsExpresslyInert());
  }
  getIsAvailableToBeFocused(e9) {
    function t4(e10) {
      const t5 = _.getComputedStyle(e10, null), i4 = t5.getPropertyValue("visibility");
      return "none" !== t5.getPropertyValue("display") && !["hidden", "collapse"].includes(i4);
    }
    function i3(e10) {
      return !!t4(e10.parentElement) && !(!t4(e10) || "0" === e10.style.opacity || "0px" === _.getComputedStyle(e10).height || "0px" === _.getComputedStyle(e10).width);
    }
    function s5(e10) {
      if (e10.offsetWidth + e10.offsetHeight + e10.getBoundingClientRect().height + e10.getBoundingClientRect().width === 0) return false;
      const t5 = { x: e10.getBoundingClientRect().left + e10.offsetWidth / 2, y: e10.getBoundingClientRect().top + e10.offsetHeight / 2 };
      if (t5.x < 0) return false;
      if (t5.x > (ne.documentElement.clientWidth || _.innerWidth)) return false;
      if (t5.y < 0) return false;
      if (t5.y > (ne.documentElement.clientHeight || _.innerHeight)) return false;
      let i4 = ne.elementFromPoint(t5.x, t5.y);
      for (; i4; ) {
        if (i4 === e10) return true;
        if (!i4.parentNode) return false;
        i4 = i4.parentNode;
      }
    }
    return e9 || (e9 = this.el()), !(!s5(e9) || !i3(e9) || e9.parentElement && !(e9.tabIndex >= 0));
  }
  static registerComponent(e9, t4) {
    if ("string" != typeof e9 || !e9) throw new Error(`Illegal component name, "${e9}"; must be a non-empty string.`);
    const i3 = _Ea.getComponent("Tech"), s5 = i3 && i3.isTech(t4), n6 = _Ea === t4 || _Ea.prototype.isPrototypeOf(t4.prototype);
    if (s5 || !n6) {
      let t5;
      throw t5 = s5 ? "techs must be registered using Tech.registerTech()" : "must be a Component subclass", new Error(`Illegal component, "${e9}"; ${t5}.`);
    }
    e9 = va(e9), _Ea.components_ || (_Ea.components_ = {});
    const r5 = _Ea.getComponent("Player");
    if ("Player" === e9 && r5 && r5.players) {
      const e10 = r5.players, t5 = Object.keys(e10);
      if (e10 && t5.length > 0 && t5.map((t6) => e10[t6]).every(Boolean)) throw new Error("Can not register Player component after player has been created.");
    }
    return _Ea.components_[e9] = t4, _Ea.components_[ba(e9)] = t4, t4;
  }
  static getComponent(e9) {
    if (e9 && _Ea.components_) return _Ea.components_[e9];
  }
};
function wa(e9, t4, i3) {
  if ("number" != typeof t4 || t4 < 0 || t4 > i3) throw new Error(`Failed to execute '${e9}' on 'TimeRanges': The index provided (${t4}) is non-numeric or out of bounds (0-${i3}).`);
}
function Ca(e9, t4, i3, s5) {
  return wa(e9, s5, i3.length - 1), i3[s5][t4];
}
function ka(e9) {
  let t4;
  return t4 = void 0 === e9 || 0 === e9.length ? { length: 0, start() {
    throw new Error("This TimeRanges object is empty");
  }, end() {
    throw new Error("This TimeRanges object is empty");
  } } : { length: e9.length, start: Ca.bind(null, "start", 0, e9), end: Ca.bind(null, "end", 1, e9) }, _.Symbol && _.Symbol.iterator && (t4[_.Symbol.iterator] = () => (e9 || []).values()), t4;
}
function Ia(e9, t4) {
  return Array.isArray(e9) ? ka(e9) : void 0 === e9 || void 0 === t4 ? ka() : ka([[e9, t4]]);
}
Ea.registerComponent("Component", Ea);
var xa = function(e9, t4) {
  e9 = e9 < 0 ? 0 : e9;
  let i3 = Math.floor(e9 % 60), s5 = Math.floor(e9 / 60 % 60), n6 = Math.floor(e9 / 3600);
  const r5 = Math.floor(t4 / 60 % 60), a6 = Math.floor(t4 / 3600);
  return (isNaN(e9) || e9 === 1 / 0) && (n6 = s5 = i3 = "-"), n6 = n6 > 0 || a6 > 0 ? n6 + ":" : "", s5 = ((n6 || r5 >= 10) && s5 < 10 ? "0" + s5 : s5) + ":", i3 = i3 < 10 ? "0" + i3 : i3, n6 + s5 + i3;
};
var Aa = xa;
function Da(e9) {
  Aa = e9;
}
function Pa() {
  Aa = xa;
}
function La(e9, t4 = e9) {
  return Aa(e9, t4);
}
var Oa = Object.freeze({ __proto__: null, createTimeRanges: Ia, createTimeRange: Ia, setFormatTime: Da, resetFormatTime: Pa, formatTime: La });
function Na(e9, t4) {
  let i3, s5, n6 = 0;
  if (!t4) return 0;
  e9 && e9.length || (e9 = Ia(0, 0));
  for (let r5 = 0; r5 < e9.length; r5++) i3 = e9.start(r5), s5 = e9.end(r5), s5 > t4 && (s5 = t4), n6 += s5 - i3;
  return n6 / t4;
}
function Ra(e9) {
  if (e9 instanceof Ra) return e9;
  "number" == typeof e9 ? this.code = e9 : "string" == typeof e9 ? this.message = e9 : Tn(e9) && ("number" == typeof e9.code && (this.code = e9.code), Object.assign(this, e9)), this.message || (this.message = Ra.defaultMessages[this.code] || "");
}
function Ma(e9) {
  return null != e9 && "function" == typeof e9.then;
}
function Ua(e9) {
  Ma(e9) && e9.then(null, (e10) => {
  });
}
Ra.prototype.code = 0, Ra.prototype.message = "", Ra.prototype.status = null, Ra.prototype.metadata = null, Ra.errorTypes = ["MEDIA_ERR_CUSTOM", "MEDIA_ERR_ABORTED", "MEDIA_ERR_NETWORK", "MEDIA_ERR_DECODE", "MEDIA_ERR_SRC_NOT_SUPPORTED", "MEDIA_ERR_ENCRYPTED"], Ra.defaultMessages = { 1: "You aborted the media playback", 2: "A network error caused the media download to fail part-way.", 3: "The media playback was aborted due to a corruption problem or because the media used features your browser did not support.", 4: "The media could not be loaded, either because the server or network failed or because the format is not supported.", 5: "The media is encrypted and we do not have the keys to decrypt it." }, Ra.MEDIA_ERR_CUSTOM = 0, Ra.prototype.MEDIA_ERR_CUSTOM = 0, Ra.MEDIA_ERR_ABORTED = 1, Ra.prototype.MEDIA_ERR_ABORTED = 1, Ra.MEDIA_ERR_NETWORK = 2, Ra.prototype.MEDIA_ERR_NETWORK = 2, Ra.MEDIA_ERR_DECODE = 3, Ra.prototype.MEDIA_ERR_DECODE = 3, Ra.MEDIA_ERR_SRC_NOT_SUPPORTED = 4, Ra.prototype.MEDIA_ERR_SRC_NOT_SUPPORTED = 4, Ra.MEDIA_ERR_ENCRYPTED = 5, Ra.prototype.MEDIA_ERR_ENCRYPTED = 5;
var Ba = function(e9) {
  return ["kind", "label", "language", "id", "inBandMetadataTrackDispatchType", "mode", "src"].reduce((t4, i3, s5) => (e9[i3] && (t4[i3] = e9[i3]), t4), { cues: e9.cues && Array.prototype.map.call(e9.cues, function(e10) {
    return { startTime: e10.startTime, endTime: e10.endTime, text: e10.text, id: e10.id };
  }) });
};
var Fa = { textTracksToJson: function(e9) {
  const t4 = e9.$$("track"), i3 = Array.prototype.map.call(t4, (e10) => e10.track);
  return Array.prototype.map.call(t4, function(e10) {
    const t5 = Ba(e10.track);
    return e10.src && (t5.src = e10.src), t5;
  }).concat(Array.prototype.filter.call(e9.textTracks(), function(e10) {
    return -1 === i3.indexOf(e10);
  }).map(Ba));
}, jsonToTextTracks: function(e9, t4) {
  return e9.forEach(function(e10) {
    const i3 = t4.addRemoteTextTrack(e10).track;
    !e10.src && e10.cues && e10.cues.forEach((e11) => i3.addCue(e11));
  }), t4.textTracks();
}, trackToJson_: Ba };
var qa = "vjs-modal-dialog";
var ja = class extends Ea {
  constructor(e9, t4) {
    super(e9, t4), this.handleKeyDown_ = (e10) => this.handleKeyDown(e10), this.close_ = (e10) => this.close(e10), this.opened_ = this.hasBeenOpened_ = this.hasBeenFilled_ = false, this.closeable(!this.options_.uncloseable), this.content(this.options_.content), this.contentEl_ = sr("div", { className: `${qa}-content` }, { role: "document" }), this.descEl_ = sr("p", { className: `${qa}-description vjs-control-text`, id: this.el().getAttribute("aria-describedby") }), nr(this.descEl_, this.description()), this.el_.appendChild(this.descEl_), this.el_.appendChild(this.contentEl_);
  }
  createEl() {
    return super.createEl("div", { className: this.buildCSSClass(), tabIndex: -1 }, { "aria-describedby": `${this.id()}_description`, "aria-hidden": "true", "aria-label": this.label(), role: "dialog", "aria-live": "polite" });
  }
  dispose() {
    this.contentEl_ = null, this.descEl_ = null, this.previouslyActiveEl_ = null, super.dispose();
  }
  buildCSSClass() {
    return `${qa} vjs-hidden ${super.buildCSSClass()}`;
  }
  label() {
    return this.localize(this.options_.label || "Modal Window");
  }
  description() {
    let e9 = this.options_.description || this.localize("This is a modal window.");
    return this.closeable() && (e9 += " " + this.localize("This modal can be closed by pressing the Escape key or activating the close button.")), e9;
  }
  open() {
    if (this.opened_) return void (this.options_.fillAlways && this.fill());
    const e9 = this.player();
    this.trigger("beforemodalopen"), this.opened_ = true, (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) && this.fill(), this.wasPlaying_ = !e9.paused(), this.options_.pauseOnOpen && this.wasPlaying_ && e9.pause(), this.on("keydown", this.handleKeyDown_), this.hadControls_ = e9.controls(), e9.controls(false), this.show(), this.conditionalFocus_(), this.el().setAttribute("aria-hidden", "false"), this.trigger("modalopen"), this.hasBeenOpened_ = true;
  }
  opened(e9) {
    return "boolean" == typeof e9 && this[e9 ? "open" : "close"](), this.opened_;
  }
  close() {
    if (!this.opened_) return;
    const e9 = this.player();
    this.trigger("beforemodalclose"), this.opened_ = false, this.wasPlaying_ && this.options_.pauseOnOpen && e9.play(), this.off("keydown", this.handleKeyDown_), this.hadControls_ && e9.controls(true), this.hide(), this.el().setAttribute("aria-hidden", "true"), this.trigger({ type: "modalclose", bubbles: true }), this.conditionalBlur_(), this.options_.temporary && this.dispose();
  }
  closeable(e9) {
    if ("boolean" == typeof e9) {
      const t4 = this.closeable_ = !!e9;
      let i3 = this.getChild("closeButton");
      if (t4 && !i3) {
        const e10 = this.contentEl_;
        this.contentEl_ = this.el_, i3 = this.addChild("closeButton", { controlText: "Close Modal Dialog" }), this.contentEl_ = e10, this.on(i3, "close", this.close_);
      }
      !t4 && i3 && (this.off(i3, "close", this.close_), this.removeChild(i3), i3.dispose());
    }
    return this.closeable_;
  }
  fill() {
    this.fillWith(this.content());
  }
  fillWith(e9) {
    const t4 = this.contentEl(), i3 = t4.parentNode, s5 = t4.nextSibling;
    this.trigger("beforemodalfill"), this.hasBeenFilled_ = true, i3.removeChild(t4), this.empty(), wr(t4, e9), this.trigger("modalfill"), s5 ? i3.insertBefore(t4, s5) : i3.appendChild(t4);
    const n6 = this.getChild("closeButton");
    n6 && i3.appendChild(n6.el_), this.trigger("aftermodalfill");
  }
  empty() {
    this.trigger("beforemodalempty"), Tr(this.contentEl()), this.trigger("modalempty");
  }
  content(e9) {
    return void 0 !== e9 && (this.content_ = e9), this.content_;
  }
  conditionalFocus_() {
    const e9 = ne.activeElement, t4 = this.player_.el_;
    this.previouslyActiveEl_ = null, (t4.contains(e9) || t4 === e9) && (this.previouslyActiveEl_ = e9, this.focus());
  }
  conditionalBlur_() {
    this.previouslyActiveEl_ && (this.previouslyActiveEl_.focus(), this.previouslyActiveEl_ = null);
  }
  handleKeyDown(e9) {
    if (this.trigger({ type: "modalKeydown", originalEvent: e9, target: this, bubbles: true }), e9.stopPropagation(), "Escape" === e9.key && this.closeable()) return e9.preventDefault(), void this.close();
    if ("Tab" !== e9.key) return;
    const t4 = this.focusableEls_(), i3 = this.el_.querySelector(":focus");
    let s5;
    for (let n6 = 0; n6 < t4.length; n6++) if (i3 === t4[n6]) {
      s5 = n6;
      break;
    }
    ne.activeElement === this.el_ && (s5 = 0), e9.shiftKey && 0 === s5 ? (t4[t4.length - 1].focus(), e9.preventDefault()) : e9.shiftKey || s5 !== t4.length - 1 || (t4[0].focus(), e9.preventDefault());
  }
  focusableEls_() {
    const e9 = this.el_.querySelectorAll("*");
    return Array.prototype.filter.call(e9, (e10) => (e10 instanceof _.HTMLAnchorElement || e10 instanceof _.HTMLAreaElement) && e10.hasAttribute("href") || (e10 instanceof _.HTMLInputElement || e10 instanceof _.HTMLSelectElement || e10 instanceof _.HTMLTextAreaElement || e10 instanceof _.HTMLButtonElement) && !e10.hasAttribute("disabled") || e10 instanceof _.HTMLIFrameElement || e10 instanceof _.HTMLObjectElement || e10 instanceof _.HTMLEmbedElement || e10.hasAttribute("tabindex") && -1 !== e10.getAttribute("tabindex") || e10.hasAttribute("contenteditable"));
  }
};
ja.prototype.options_ = { pauseOnOpen: true, temporary: true }, Ea.registerComponent("ModalDialog", ja);
var $a = class extends ra {
  constructor(e9 = []) {
    super(), this.tracks_ = [], Object.defineProperty(this, "length", { get() {
      return this.tracks_.length;
    } });
    for (let t4 = 0; t4 < e9.length; t4++) this.addTrack(e9[t4]);
  }
  addTrack(e9) {
    const t4 = this.tracks_.length;
    "" + t4 in this || Object.defineProperty(this, t4, { get() {
      return this.tracks_[t4];
    } }), -1 === this.tracks_.indexOf(e9) && (this.tracks_.push(e9), this.trigger({ track: e9, type: "addtrack", target: this })), e9.labelchange_ = () => {
      this.trigger({ track: e9, type: "labelchange", target: this });
    }, oa(e9) && e9.addEventListener("labelchange", e9.labelchange_);
  }
  removeTrack(e9) {
    let t4;
    for (let i3 = 0, s5 = this.length; i3 < s5; i3++) if (this[i3] === e9) {
      t4 = this[i3], t4.off && t4.off(), this.tracks_.splice(i3, 1);
      break;
    }
    t4 && this.trigger({ track: t4, type: "removetrack", target: this });
  }
  getTrackById(e9) {
    let t4 = null;
    for (let i3 = 0, s5 = this.length; i3 < s5; i3++) {
      const s6 = this[i3];
      if (s6.id === e9) {
        t4 = s6;
        break;
      }
    }
    return t4;
  }
};
$a.prototype.allowedEvents_ = { change: "change", addtrack: "addtrack", removetrack: "removetrack", labelchange: "labelchange" };
for (const Eg in $a.prototype.allowedEvents_) $a.prototype["on" + Eg] = null;
var Ha = function(e9, t4) {
  for (let i3 = 0; i3 < e9.length; i3++) Object.keys(e9[i3]).length && t4.id !== e9[i3].id && (e9[i3].enabled = false);
};
var Va = class extends $a {
  constructor(e9 = []) {
    for (let t4 = e9.length - 1; t4 >= 0; t4--) if (e9[t4].enabled) {
      Ha(e9, e9[t4]);
      break;
    }
    super(e9), this.changing_ = false;
  }
  addTrack(e9) {
    e9.enabled && Ha(this, e9), super.addTrack(e9), e9.addEventListener && (e9.enabledChange_ = () => {
      this.changing_ || (this.changing_ = true, Ha(this, e9), this.changing_ = false, this.trigger("change"));
    }, e9.addEventListener("enabledchange", e9.enabledChange_));
  }
  removeTrack(e9) {
    super.removeTrack(e9), e9.removeEventListener && e9.enabledChange_ && (e9.removeEventListener("enabledchange", e9.enabledChange_), e9.enabledChange_ = null);
  }
};
var za = function(e9, t4) {
  for (let i3 = 0; i3 < e9.length; i3++) Object.keys(e9[i3]).length && t4.id !== e9[i3].id && (e9[i3].selected = false);
};
var Wa = class extends $a {
  constructor(e9 = []) {
    for (let t4 = e9.length - 1; t4 >= 0; t4--) if (e9[t4].selected) {
      za(e9, e9[t4]);
      break;
    }
    super(e9), this.changing_ = false, Object.defineProperty(this, "selectedIndex", { get() {
      for (let e10 = 0; e10 < this.length; e10++) if (this[e10].selected) return e10;
      return -1;
    }, set() {
    } });
  }
  addTrack(e9) {
    e9.selected && za(this, e9), super.addTrack(e9), e9.addEventListener && (e9.selectedChange_ = () => {
      this.changing_ || (this.changing_ = true, za(this, e9), this.changing_ = false, this.trigger("change"));
    }, e9.addEventListener("selectedchange", e9.selectedChange_));
  }
  removeTrack(e9) {
    super.removeTrack(e9), e9.removeEventListener && e9.selectedChange_ && (e9.removeEventListener("selectedchange", e9.selectedChange_), e9.selectedChange_ = null);
  }
};
var Ga = class extends $a {
  addTrack(e9) {
    super.addTrack(e9), this.queueChange_ || (this.queueChange_ = () => this.queueTrigger("change")), this.triggerSelectedlanguagechange || (this.triggerSelectedlanguagechange_ = () => this.trigger("selectedlanguagechange")), e9.addEventListener("modechange", this.queueChange_);
    -1 === ["metadata", "chapters"].indexOf(e9.kind) && e9.addEventListener("modechange", this.triggerSelectedlanguagechange_);
  }
  removeTrack(e9) {
    super.removeTrack(e9), e9.removeEventListener && (this.queueChange_ && e9.removeEventListener("modechange", this.queueChange_), this.selectedlanguagechange_ && e9.removeEventListener("modechange", this.triggerSelectedlanguagechange_));
  }
};
var Xa = class {
  constructor(e9 = []) {
    this.trackElements_ = [], Object.defineProperty(this, "length", { get() {
      return this.trackElements_.length;
    } });
    for (let t4 = 0, i3 = e9.length; t4 < i3; t4++) this.addTrackElement_(e9[t4]);
  }
  addTrackElement_(e9) {
    const t4 = this.trackElements_.length;
    "" + t4 in this || Object.defineProperty(this, t4, { get() {
      return this.trackElements_[t4];
    } }), -1 === this.trackElements_.indexOf(e9) && this.trackElements_.push(e9);
  }
  getTrackElementByTrack_(e9) {
    let t4;
    for (let i3 = 0, s5 = this.trackElements_.length; i3 < s5; i3++) if (e9 === this.trackElements_[i3].track) {
      t4 = this.trackElements_[i3];
      break;
    }
    return t4;
  }
  removeTrackElement_(e9) {
    for (let t4 = 0, i3 = this.trackElements_.length; t4 < i3; t4++) if (e9 === this.trackElements_[t4]) {
      this.trackElements_[t4].track && "function" == typeof this.trackElements_[t4].track.off && this.trackElements_[t4].track.off(), "function" == typeof this.trackElements_[t4].off && this.trackElements_[t4].off(), this.trackElements_.splice(t4, 1);
      break;
    }
  }
};
var Ka = class _Ka {
  constructor(e9) {
    _Ka.prototype.setCues_.call(this, e9), Object.defineProperty(this, "length", { get() {
      return this.length_;
    } });
  }
  setCues_(e9) {
    const t4 = this.length || 0;
    let i3 = 0;
    const s5 = e9.length;
    this.cues_ = e9, this.length_ = e9.length;
    const n6 = function(e10) {
      "" + e10 in this || Object.defineProperty(this, "" + e10, { get() {
        return this.cues_[e10];
      } });
    };
    if (t4 < s5) for (i3 = t4; i3 < s5; i3++) n6.call(this, i3);
  }
  getCueById(e9) {
    let t4 = null;
    for (let i3 = 0, s5 = this.length; i3 < s5; i3++) {
      const s6 = this[i3];
      if (s6.id === e9) {
        t4 = s6;
        break;
      }
    }
    return t4;
  }
};
var Ya = { alternative: "alternative", captions: "captions", main: "main", sign: "sign", subtitles: "subtitles", commentary: "commentary" };
var Qa = { alternative: "alternative", descriptions: "descriptions", main: "main", "main-desc": "main-desc", translation: "translation", commentary: "commentary" };
var Ja = { subtitles: "subtitles", captions: "captions", descriptions: "descriptions", chapters: "chapters", metadata: "metadata" };
var Za = { disabled: "disabled", hidden: "hidden", showing: "showing" };
var eo = class extends ra {
  constructor(e9 = {}) {
    super();
    const t4 = { id: e9.id || "vjs_track_" + jr(), kind: e9.kind || "", language: e9.language || "" };
    let i3 = e9.label || "";
    for (const s5 in t4) Object.defineProperty(this, s5, { get: () => t4[s5], set() {
    } });
    Object.defineProperty(this, "label", { get: () => i3, set(e10) {
      e10 !== i3 && (i3 = e10, this.trigger("labelchange"));
    } });
  }
};
var to = function(e9) {
  return new URL(e9, ne.baseURI);
};
var io = function(e9) {
  return new URL(e9, ne.baseURI).href;
};
var so = function(e9) {
  if ("string" == typeof e9) {
    const t4 = /^(\/?)([\s\S]*?)((?:\.{1,2}|[^\/]+?)(\.([^\.\/\?]+)))(?:[\/]*|[\?].*)$/.exec(e9);
    if (t4) return t4.pop().toLowerCase();
  }
  return "";
};
var no = function(e9, t4 = _.location) {
  return to(e9).origin !== t4.origin;
};
var ro = Object.freeze({ __proto__: null, parseUrl: to, getAbsoluteURL: io, getFileExtension: so, isCrossOrigin: no });
var ao = function(e9, t4) {
  const i3 = new _.WebVTT.Parser(_, _.vttjs, _.WebVTT.StringDecoder()), s5 = [];
  i3.oncue = function(e10) {
    t4.addCue(e10);
  }, i3.onparsingerror = function(e10) {
    s5.push(e10);
  }, i3.onflush = function() {
    t4.trigger({ type: "loadeddata", target: t4 });
  }, i3.parse(e9), s5.length > 0 && (_.console && _.console.groupCollapsed && _.console.groupCollapsed(`Text Track parsing errors for ${t4.src}`), s5.forEach((e10) => gn.error(e10)), _.console && _.console.groupEnd && _.console.groupEnd()), i3.flush();
};
var oo = function(e9, t4) {
  const i3 = { uri: e9 }, s5 = no(e9);
  s5 && (i3.cors = s5);
  const n6 = "use-credentials" === t4.tech_.crossOrigin();
  n6 && (i3.withCredentials = n6), Ee(i3, ea(this, function(e10, i4, s6) {
    if (e10) return gn.error(e10, i4);
    t4.loaded_ = true, "function" != typeof _.WebVTT ? t4.tech_ && t4.tech_.any(["vttjsloaded", "vttjserror"], (e11) => {
      if ("vttjserror" !== e11.type) return ao(s6, t4);
      gn.error(`vttjs failed to load, stopping trying to process ${t4.src}`);
    }) : ao(s6, t4);
  }));
};
var lo = class extends eo {
  constructor(e9 = {}) {
    if (!e9.tech) throw new Error("A tech was not provided.");
    const t4 = En(e9, { kind: Ja[e9.kind] || "subtitles", language: e9.language || e9.srclang || "" });
    let i3 = Za[t4.mode] || "disabled";
    const s5 = t4.default;
    "metadata" !== t4.kind && "chapters" !== t4.kind || (i3 = "hidden"), super(t4), this.tech_ = t4.tech, this.cues_ = [], this.activeCues_ = [], this.preload_ = false !== this.tech_.preloadTextTracks;
    const n6 = new Ka(this.cues_), r5 = new Ka(this.activeCues_);
    let a6 = false;
    this.timeupdateHandler = ea(this, function(e10 = {}) {
      this.tech_.isDisposed() || (this.tech_.isReady_ ? (this.activeCues = this.activeCues, a6 && (this.trigger("cuechange"), a6 = false), "timeupdate" !== e10.type && (this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler))) : "timeupdate" !== e10.type && (this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler)));
    });
    const o4 = () => {
      this.stopTracking();
    };
    this.tech_.one("dispose", o4), "disabled" !== i3 && this.startTracking(), Object.defineProperties(this, { default: { get: () => s5, set() {
    } }, mode: { get: () => i3, set(e10) {
      Za[e10] && i3 !== e10 && (i3 = e10, this.preload_ || "disabled" === i3 || 0 !== this.cues.length || oo(this.src, this), this.stopTracking(), "disabled" !== i3 && this.startTracking(), this.trigger("modechange"));
    } }, cues: { get() {
      return this.loaded_ ? n6 : null;
    }, set() {
    } }, activeCues: { get() {
      if (!this.loaded_) return null;
      if (0 === this.cues.length) return r5;
      const e10 = this.tech_.currentTime(), t5 = [];
      for (let i4 = 0, s6 = this.cues.length; i4 < s6; i4++) {
        const s7 = this.cues[i4];
        s7.startTime <= e10 && s7.endTime >= e10 && t5.push(s7);
      }
      if (a6 = false, t5.length !== this.activeCues_.length) a6 = true;
      else for (let i4 = 0; i4 < t5.length; i4++) -1 === this.activeCues_.indexOf(t5[i4]) && (a6 = true);
      return this.activeCues_ = t5, r5.setCues_(this.activeCues_), r5;
    }, set() {
    } } }), t4.src ? (this.src = t4.src, this.preload_ || (this.loaded_ = true), (this.preload_ || "subtitles" !== t4.kind && "captions" !== t4.kind) && oo(this.src, this)) : this.loaded_ = true;
  }
  startTracking() {
    this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler), this.tech_.on("timeupdate", this.timeupdateHandler);
  }
  stopTracking() {
    this.rvf_ && (this.tech_.cancelVideoFrameCallback(this.rvf_), this.rvf_ = void 0), this.tech_.off("timeupdate", this.timeupdateHandler);
  }
  addCue(e9) {
    let t4 = e9;
    if (!("getCueAsHTML" in t4)) {
      t4 = new _.vttjs.VTTCue(e9.startTime, e9.endTime, e9.text);
      for (const i4 in e9) i4 in t4 || (t4[i4] = e9[i4]);
      t4.id = e9.id, t4.originalCue_ = e9;
    }
    const i3 = this.tech_.textTracks();
    for (let s5 = 0; s5 < i3.length; s5++) i3[s5] !== this && i3[s5].removeCue(t4);
    this.cues_.push(t4), this.cues.setCues_(this.cues_);
  }
  removeCue(e9) {
    let t4 = this.cues_.length;
    for (; t4--; ) {
      const i3 = this.cues_[t4];
      if (i3 === e9 || i3.originalCue_ && i3.originalCue_ === e9) {
        this.cues_.splice(t4, 1), this.cues.setCues_(this.cues_);
        break;
      }
    }
  }
};
lo.prototype.allowedEvents_ = { cuechange: "cuechange" };
var ho = class extends eo {
  constructor(e9 = {}) {
    const t4 = En(e9, { kind: Qa[e9.kind] || "" });
    super(t4);
    let i3 = false;
    Object.defineProperty(this, "enabled", { get: () => i3, set(e10) {
      "boolean" == typeof e10 && e10 !== i3 && (i3 = e10, this.trigger("enabledchange"));
    } }), t4.enabled && (this.enabled = t4.enabled), this.loaded_ = true;
  }
};
var uo = class extends eo {
  constructor(e9 = {}) {
    const t4 = En(e9, { kind: Ya[e9.kind] || "" });
    super(t4);
    let i3 = false;
    Object.defineProperty(this, "selected", { get: () => i3, set(e10) {
      "boolean" == typeof e10 && e10 !== i3 && (i3 = e10, this.trigger("selectedchange"));
    } }), t4.selected && (this.selected = t4.selected);
  }
};
var co = class _co extends ra {
  constructor(e9 = {}) {
    let t4;
    super();
    const i3 = new lo(e9);
    this.kind = i3.kind, this.src = i3.src, this.srclang = i3.language, this.label = i3.label, this.default = i3.default, Object.defineProperties(this, { readyState: { get: () => t4 }, track: { get: () => i3 } }), t4 = _co.NONE, i3.addEventListener("loadeddata", () => {
      t4 = _co.LOADED, this.trigger({ type: "load", target: this });
    });
  }
};
co.prototype.allowedEvents_ = { load: "load" }, co.NONE = 0, co.LOADING = 1, co.LOADED = 2, co.ERROR = 3;
var po = { audio: { ListClass: Va, TrackClass: ho, capitalName: "Audio" }, video: { ListClass: Wa, TrackClass: uo, capitalName: "Video" }, text: { ListClass: Ga, TrackClass: lo, capitalName: "Text" } };
Object.keys(po).forEach(function(e9) {
  po[e9].getterName = `${e9}Tracks`, po[e9].privateName = `${e9}Tracks_`;
});
var mo = { remoteText: { ListClass: Ga, TrackClass: lo, capitalName: "RemoteText", getterName: "remoteTextTracks", privateName: "remoteTextTracks_" }, remoteTextEl: { ListClass: Xa, TrackClass: co, capitalName: "RemoteTextTrackEls", getterName: "remoteTextTrackEls", privateName: "remoteTextTrackEls_" } };
var go = Object.assign({}, po, mo);
function fo(e9, t4, i3, s5, n6 = {}) {
  const r5 = e9.textTracks();
  n6.kind = t4, i3 && (n6.label = i3), s5 && (n6.language = s5), n6.tech = e9;
  const a6 = new go.text.TrackClass(n6);
  return r5.addTrack(a6), a6;
}
mo.names = Object.keys(mo), po.names = Object.keys(po), go.names = [].concat(mo.names).concat(po.names);
var yo = class _yo extends Ea {
  constructor(e9 = {}, t4 = function() {
  }) {
    e9.reportTouchActivity = false, super(null, e9, t4), this.onDurationChange_ = (e10) => this.onDurationChange(e10), this.trackProgress_ = (e10) => this.trackProgress(e10), this.trackCurrentTime_ = (e10) => this.trackCurrentTime(e10), this.stopTrackingCurrentTime_ = (e10) => this.stopTrackingCurrentTime(e10), this.disposeSourceHandler_ = (e10) => this.disposeSourceHandler(e10), this.queuedHanders_ = /* @__PURE__ */ new Set(), this.hasStarted_ = false, this.on("playing", function() {
      this.hasStarted_ = true;
    }), this.on("loadstart", function() {
      this.hasStarted_ = false;
    }), go.names.forEach((t5) => {
      const i3 = go[t5];
      e9 && e9[i3.getterName] && (this[i3.privateName] = e9[i3.getterName]);
    }), this.featuresProgressEvents || this.manualProgressOn(), this.featuresTimeupdateEvents || this.manualTimeUpdatesOn(), ["Text", "Audio", "Video"].forEach((t5) => {
      false === e9[`native${t5}Tracks`] && (this[`featuresNative${t5}Tracks`] = false);
    }), false === e9.nativeCaptions || false === e9.nativeTextTracks ? this.featuresNativeTextTracks = false : true !== e9.nativeCaptions && true !== e9.nativeTextTracks || (this.featuresNativeTextTracks = true), this.featuresNativeTextTracks || this.emulateTextTracks(), this.preloadTextTracks = false !== e9.preloadTextTracks, this.autoRemoteTextTracks_ = new go.text.ListClass(), this.initTrackListeners(), e9.nativeControlsForTouch || this.emitTapEvents(), this.constructor && (this.name_ = this.constructor.name || "Unknown Tech");
  }
  triggerSourceset(e9) {
    this.isReady_ || this.one("ready", () => this.setTimeout(() => this.triggerSourceset(e9), 1)), this.trigger({ src: e9, type: "sourceset" });
  }
  manualProgressOn() {
    this.on("durationchange", this.onDurationChange_), this.manualProgress = true, this.one("ready", this.trackProgress_);
  }
  manualProgressOff() {
    this.manualProgress = false, this.stopTrackingProgress(), this.off("durationchange", this.onDurationChange_);
  }
  trackProgress(e9) {
    this.stopTrackingProgress(), this.progressInterval = this.setInterval(ea(this, function() {
      const e10 = this.bufferedPercent();
      this.bufferedPercent_ !== e10 && this.trigger("progress"), this.bufferedPercent_ = e10, 1 === e10 && this.stopTrackingProgress();
    }), 500);
  }
  onDurationChange(e9) {
    this.duration_ = this.duration();
  }
  buffered() {
    return Ia(0, 0);
  }
  bufferedPercent() {
    return Na(this.buffered(), this.duration_);
  }
  stopTrackingProgress() {
    this.clearInterval(this.progressInterval);
  }
  manualTimeUpdatesOn() {
    this.manualTimeUpdates = true, this.on("play", this.trackCurrentTime_), this.on("pause", this.stopTrackingCurrentTime_);
  }
  manualTimeUpdatesOff() {
    this.manualTimeUpdates = false, this.stopTrackingCurrentTime(), this.off("play", this.trackCurrentTime_), this.off("pause", this.stopTrackingCurrentTime_);
  }
  trackCurrentTime() {
    this.currentTimeInterval && this.stopTrackingCurrentTime(), this.currentTimeInterval = this.setInterval(function() {
      this.trigger({ type: "timeupdate", target: this, manuallyTriggered: true });
    }, 250);
  }
  stopTrackingCurrentTime() {
    this.clearInterval(this.currentTimeInterval), this.trigger({ type: "timeupdate", target: this, manuallyTriggered: true });
  }
  dispose() {
    this.clearTracks(po.names), this.manualProgress && this.manualProgressOff(), this.manualTimeUpdates && this.manualTimeUpdatesOff(), super.dispose();
  }
  clearTracks(e9) {
    (e9 = [].concat(e9)).forEach((e10) => {
      const t4 = this[`${e10}Tracks`]() || [];
      let i3 = t4.length;
      for (; i3--; ) {
        const s5 = t4[i3];
        "text" === e10 && this.removeRemoteTextTrack(s5), t4.removeTrack(s5);
      }
    });
  }
  cleanupAutoTextTracks() {
    const e9 = this.autoRemoteTextTracks_ || [];
    let t4 = e9.length;
    for (; t4--; ) {
      const i3 = e9[t4];
      this.removeRemoteTextTrack(i3);
    }
  }
  reset() {
  }
  crossOrigin() {
  }
  setCrossOrigin() {
  }
  error(e9) {
    return void 0 !== e9 && (this.error_ = new Ra(e9), this.trigger("error")), this.error_;
  }
  played() {
    return this.hasStarted_ ? Ia(0, 0) : Ia();
  }
  play() {
  }
  setScrubbing(e9) {
  }
  scrubbing() {
  }
  setCurrentTime(e9) {
    this.manualTimeUpdates && this.trigger({ type: "timeupdate", target: this, manuallyTriggered: true });
  }
  initTrackListeners() {
    po.names.forEach((e9) => {
      const t4 = po[e9], i3 = () => {
        this.trigger(`${e9}trackchange`);
      }, s5 = this[t4.getterName]();
      s5.addEventListener("removetrack", i3), s5.addEventListener("addtrack", i3), this.on("dispose", () => {
        s5.removeEventListener("removetrack", i3), s5.removeEventListener("addtrack", i3);
      });
    });
  }
  addWebVttScript_() {
    if (!_.WebVTT) if (ne.body.contains(this.el())) {
      if (!this.options_["vtt.js"] && Sn(Me) && Object.keys(Me).length > 0) return void this.trigger("vttjsloaded");
      const e9 = ne.createElement("script");
      e9.src = this.options_["vtt.js"] || "https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js", e9.onload = () => {
        this.trigger("vttjsloaded");
      }, e9.onerror = () => {
        this.trigger("vttjserror");
      }, this.on("dispose", () => {
        e9.onload = null, e9.onerror = null;
      }), _.WebVTT = true, this.el().parentNode.appendChild(e9);
    } else this.ready(this.addWebVttScript_);
  }
  emulateTextTracks() {
    const e9 = this.textTracks(), t4 = this.remoteTextTracks(), i3 = (t5) => e9.addTrack(t5.track), s5 = (t5) => e9.removeTrack(t5.track);
    t4.on("addtrack", i3), t4.on("removetrack", s5), this.addWebVttScript_();
    const n6 = () => this.trigger("texttrackchange"), r5 = () => {
      n6();
      for (let t5 = 0; t5 < e9.length; t5++) {
        const i4 = e9[t5];
        i4.removeEventListener("cuechange", n6), "showing" === i4.mode && i4.addEventListener("cuechange", n6);
      }
    };
    r5(), e9.addEventListener("change", r5), e9.addEventListener("addtrack", r5), e9.addEventListener("removetrack", r5), this.on("dispose", function() {
      t4.off("addtrack", i3), t4.off("removetrack", s5), e9.removeEventListener("change", r5), e9.removeEventListener("addtrack", r5), e9.removeEventListener("removetrack", r5);
      for (let t5 = 0; t5 < e9.length; t5++) {
        e9[t5].removeEventListener("cuechange", n6);
      }
    });
  }
  addTextTrack(e9, t4, i3) {
    if (!e9) throw new Error("TextTrack kind is required but was not provided");
    return fo(this, e9, t4, i3);
  }
  createRemoteTextTrack(e9) {
    const t4 = En(e9, { tech: this });
    return new mo.remoteTextEl.TrackClass(t4);
  }
  addRemoteTextTrack(e9 = {}, t4) {
    const i3 = this.createRemoteTextTrack(e9);
    return "boolean" != typeof t4 && (t4 = false), this.remoteTextTrackEls().addTrackElement_(i3), this.remoteTextTracks().addTrack(i3.track), false === t4 && this.ready(() => this.autoRemoteTextTracks_.addTrack(i3.track)), i3;
  }
  removeRemoteTextTrack(e9) {
    const t4 = this.remoteTextTrackEls().getTrackElementByTrack_(e9);
    this.remoteTextTrackEls().removeTrackElement_(t4), this.remoteTextTracks().removeTrack(e9), this.autoRemoteTextTracks_.removeTrack(e9);
  }
  getVideoPlaybackQuality() {
    return {};
  }
  requestPictureInPicture() {
    return Promise.reject();
  }
  disablePictureInPicture() {
    return true;
  }
  setDisablePictureInPicture() {
  }
  requestVideoFrameCallback(e9) {
    const t4 = jr();
    return !this.isReady_ || this.paused() ? (this.queuedHanders_.add(t4), this.one("playing", () => {
      this.queuedHanders_.has(t4) && (this.queuedHanders_.delete(t4), e9());
    })) : this.requestNamedAnimationFrame(t4, e9), t4;
  }
  cancelVideoFrameCallback(e9) {
    this.queuedHanders_.has(e9) ? this.queuedHanders_.delete(e9) : this.cancelNamedAnimationFrame(e9);
  }
  setPoster() {
  }
  playsinline() {
  }
  setPlaysinline() {
  }
  overrideNativeAudioTracks(e9) {
  }
  overrideNativeVideoTracks(e9) {
  }
  canPlayType(e9) {
    return "";
  }
  static canPlayType(e9) {
    return "";
  }
  static canPlaySource(e9, t4) {
    return _yo.canPlayType(e9.type);
  }
  static isTech(e9) {
    return e9.prototype instanceof _yo || e9 instanceof _yo || e9 === _yo;
  }
  static registerTech(e9, t4) {
    if (_yo.techs_ || (_yo.techs_ = {}), !_yo.isTech(t4)) throw new Error(`Tech ${e9} must be a Tech`);
    if (!_yo.canPlayType) throw new Error("Techs must have a static canPlayType method on them");
    if (!_yo.canPlaySource) throw new Error("Techs must have a static canPlaySource method on them");
    return e9 = va(e9), _yo.techs_[e9] = t4, _yo.techs_[ba(e9)] = t4, "Tech" !== e9 && _yo.defaultTechOrder_.push(e9), t4;
  }
  static getTech(e9) {
    if (e9) return _yo.techs_ && _yo.techs_[e9] ? _yo.techs_[e9] : (e9 = va(e9), _ && _.videojs && _.videojs[e9] ? (gn.warn(`The ${e9} tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)`), _.videojs[e9]) : void 0);
  }
};
go.names.forEach(function(e9) {
  const t4 = go[e9];
  yo.prototype[t4.getterName] = function() {
    return this[t4.privateName] = this[t4.privateName] || new t4.ListClass(), this[t4.privateName];
  };
}), yo.prototype.featuresVolumeControl = true, yo.prototype.featuresMuteControl = true, yo.prototype.featuresFullscreenResize = false, yo.prototype.featuresPlaybackRate = false, yo.prototype.featuresProgressEvents = false, yo.prototype.featuresSourceset = false, yo.prototype.featuresTimeupdateEvents = false, yo.prototype.featuresNativeTextTracks = false, yo.prototype.featuresVideoFrameCallback = false, yo.withSourceHandlers = function(e9) {
  e9.registerSourceHandler = function(t4, i3) {
    let s5 = e9.sourceHandlers;
    s5 || (s5 = e9.sourceHandlers = []), void 0 === i3 && (i3 = s5.length), s5.splice(i3, 0, t4);
  }, e9.canPlayType = function(t4) {
    const i3 = e9.sourceHandlers || [];
    let s5;
    for (let e10 = 0; e10 < i3.length; e10++) if (s5 = i3[e10].canPlayType(t4), s5) return s5;
    return "";
  }, e9.selectSourceHandler = function(t4, i3) {
    const s5 = e9.sourceHandlers || [];
    let n6;
    for (let e10 = 0; e10 < s5.length; e10++) if (n6 = s5[e10].canHandleSource(t4, i3), n6) return s5[e10];
    return null;
  }, e9.canPlaySource = function(t4, i3) {
    const s5 = e9.selectSourceHandler(t4, i3);
    return s5 ? s5.canHandleSource(t4, i3) : "";
  };
  ["seekable", "seeking", "duration"].forEach(function(e10) {
    const t4 = this[e10];
    "function" == typeof t4 && (this[e10] = function() {
      return this.sourceHandler_ && this.sourceHandler_[e10] ? this.sourceHandler_[e10].apply(this.sourceHandler_, arguments) : t4.apply(this, arguments);
    });
  }, e9.prototype), e9.prototype.setSource = function(t4) {
    let i3 = e9.selectSourceHandler(t4, this.options_);
    i3 || (e9.nativeSourceHandler ? i3 = e9.nativeSourceHandler : gn.error("No source handler found for the current source.")), this.disposeSourceHandler(), this.off("dispose", this.disposeSourceHandler_), i3 !== e9.nativeSourceHandler && (this.currentSource_ = t4), this.sourceHandler_ = i3.handleSource(t4, this, this.options_), this.one("dispose", this.disposeSourceHandler_);
  }, e9.prototype.disposeSourceHandler = function() {
    this.currentSource_ && (this.clearTracks(["audio", "video"]), this.currentSource_ = null), this.cleanupAutoTextTracks(), this.sourceHandler_ && (this.sourceHandler_.dispose && this.sourceHandler_.dispose(), this.sourceHandler_ = null);
  };
}, Ea.registerComponent("Tech", yo), yo.registerTech("Tech", yo), yo.defaultTechOrder_ = [];
var _o = {};
var bo = {};
var vo = {};
function To(e9, t4) {
  _o[e9] = _o[e9] || [], _o[e9].push(t4);
}
function So(e9, t4, i3) {
  e9.setTimeout(() => No(t4, _o[t4.type], i3, e9), 1);
}
function Eo(e9, t4) {
  e9.forEach((e10) => e10.setTech && e10.setTech(t4));
}
function wo(e9, t4, i3) {
  return e9.reduceRight(Do(i3), t4[i3]());
}
function Co(e9, t4, i3, s5) {
  return t4[i3](e9.reduce(Do(i3), s5));
}
function ko(e9, t4, i3, s5 = null) {
  const n6 = "call" + va(i3), r5 = e9.reduce(Do(n6), s5), a6 = r5 === vo, o4 = a6 ? null : t4[i3](r5);
  return Po(e9, i3, o4, a6), o4;
}
var Io = { buffered: 1, currentTime: 1, duration: 1, muted: 1, played: 1, paused: 1, seekable: 1, volume: 1, ended: 1 };
var xo = { setCurrentTime: 1, setMuted: 1, setVolume: 1 };
var Ao = { play: 1, pause: 1 };
function Do(e9) {
  return (t4, i3) => t4 === vo ? vo : i3[e9] ? i3[e9](t4) : t4;
}
function Po(e9, t4, i3, s5) {
  for (let n6 = e9.length - 1; n6 >= 0; n6--) {
    const r5 = e9[n6];
    r5[t4] && r5[t4](s5, i3);
  }
}
function Lo(e9) {
  bo.hasOwnProperty(e9.id()) && delete bo[e9.id()];
}
function Oo(e9, t4) {
  const i3 = bo[e9.id()];
  let s5 = null;
  if (null == i3) return s5 = t4(e9), bo[e9.id()] = [[t4, s5]], s5;
  for (let n6 = 0; n6 < i3.length; n6++) {
    const [e10, r5] = i3[n6];
    e10 === t4 && (s5 = r5);
  }
  return null === s5 && (s5 = t4(e9), i3.push([t4, s5])), s5;
}
function No(e9 = {}, t4 = [], i3, s5, n6 = [], r5 = false) {
  const [a6, ...o4] = t4;
  if ("string" == typeof a6) No(e9, _o[a6], i3, s5, n6, r5);
  else if (a6) {
    const t5 = Oo(s5, a6);
    if (!t5.setSource) return n6.push(t5), No(e9, o4, i3, s5, n6, r5);
    t5.setSource(Object.assign({}, e9), function(a7, l6) {
      if (a7) return No(e9, o4, i3, s5, n6, r5);
      n6.push(t5), No(l6, e9.type === l6.type ? o4 : _o[l6.type], i3, s5, n6, r5);
    });
  } else o4.length ? No(e9, o4, i3, s5, n6, r5) : r5 ? i3(e9, n6) : No(e9, _o["*"], i3, s5, n6, true);
}
var Ro = { opus: "video/ogg", ogv: "video/ogg", mp4: "video/mp4", mov: "video/mp4", m4v: "video/mp4", mkv: "video/x-matroska", m4a: "audio/mp4", mp3: "audio/mpeg", aac: "audio/aac", caf: "audio/x-caf", flac: "audio/flac", oga: "audio/ogg", wav: "audio/wav", m3u8: "application/x-mpegURL", mpd: "application/dash+xml", jpg: "image/jpeg", jpeg: "image/jpeg", gif: "image/gif", png: "image/png", svg: "image/svg+xml", webp: "image/webp" };
var Mo = function(e9 = "") {
  const t4 = so(e9);
  return Ro[t4.toLowerCase()] || "";
};
var Uo = (e9, t4) => {
  if (!t4) return "";
  if (e9.cache_.source.src === t4 && e9.cache_.source.type) return e9.cache_.source.type;
  const i3 = e9.cache_.sources.filter((e10) => e10.src === t4);
  if (i3.length) return i3[0].type;
  const s5 = e9.$$("source");
  for (let n6 = 0; n6 < s5.length; n6++) {
    const e10 = s5[n6];
    if (e10.type && e10.src && e10.src === t4) return e10.type;
  }
  return Mo(t4);
};
var Bo = function(e9) {
  if (Array.isArray(e9)) {
    let t4 = [];
    e9.forEach(function(e10) {
      e10 = Bo(e10), Array.isArray(e10) ? t4 = t4.concat(e10) : Tn(e10) && t4.push(e10);
    }), e9 = t4;
  } else e9 = "string" == typeof e9 && e9.trim() ? [Fo({ src: e9 })] : Tn(e9) && "string" == typeof e9.src && e9.src && e9.src.trim() ? [Fo(e9)] : [];
  return e9;
};
function Fo(e9) {
  if (!e9.type) {
    const t4 = Mo(e9.src);
    t4 && (e9.type = t4);
  }
  return e9;
}
var qo = '<svg xmlns="http://www.w3.org/2000/svg">\n  <defs>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-play">\n      <path d="M16 10v28l22-14z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-pause">\n      <path d="M12 38h8V10h-8v28zm16-28v28h8V10h-8z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-audio">\n      <path d="M24 2C14.06 2 6 10.06 6 20v14c0 3.31 2.69 6 6 6h6V24h-8v-4c0-7.73 6.27-14 14-14s14 6.27 14 14v4h-8v16h6c3.31 0 6-2.69 6-6V20c0-9.94-8.06-18-18-18z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-captions">\n      <path d="M38 8H10c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h28c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zM22 22h-3v-1h-4v6h4v-1h3v2a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2zm14 0h-3v-1h-4v6h4v-1h3v2a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-subtitles">\n      <path d="M40 8H8c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h32c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zM8 24h8v4H8v-4zm20 12H8v-4h20v4zm12 0h-8v-4h8v4zm0-8H20v-4h20v4z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-fullscreen-enter">\n      <path d="M14 28h-4v10h10v-4h-6v-6zm-4-8h4v-6h6v-4H10v10zm24 14h-6v4h10V28h-4v6zm-6-24v4h6v6h4V10H28z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-fullscreen-exit">\n      <path d="M10 32h6v6h4V28H10v4zm6-16h-6v4h10V10h-4v6zm12 22h4v-6h6v-4H28v10zm4-22v-6h-4v10h10v-4h-6z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-play-circle">\n      <path d="M20 33l12-9-12-9v18zm4-29C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-volume-mute">\n      <path d="M33 24c0-3.53-2.04-6.58-5-8.05v4.42l4.91 4.91c.06-.42.09-.85.09-1.28zm5 0c0 1.88-.41 3.65-1.08 5.28l3.03 3.03C41.25 29.82 42 27 42 24c0-8.56-5.99-15.72-14-17.54v4.13c5.78 1.72 10 7.07 10 13.41zM8.55 6L6 8.55 15.45 18H6v12h8l10 10V26.55l8.51 8.51c-1.34 1.03-2.85 1.86-4.51 2.36v4.13a17.94 17.94 0 0 0 7.37-3.62L39.45 42 42 39.45l-18-18L8.55 6zM24 8l-4.18 4.18L24 16.36V8z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-volume-low">\n      <path d="M14 18v12h8l10 10V8L22 18h-8z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-volume-medium">\n      <path d="M37 24c0-3.53-2.04-6.58-5-8.05v16.11c2.96-1.48 5-4.53 5-8.06zm-27-6v12h8l10 10V8L18 18h-8z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-volume-high">\n      <path d="M6 18v12h8l10 10V8L14 18H6zm27 6c0-3.53-2.04-6.58-5-8.05v16.11c2.96-1.48 5-4.53 5-8.06zM28 6.46v4.13c5.78 1.72 10 7.07 10 13.41s-4.22 11.69-10 13.41v4.13c8.01-1.82 14-8.97 14-17.54S36.01 8.28 28 6.46z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-spinner">\n      <path d="M18.8 21l9.53-16.51C26.94 4.18 25.49 4 24 4c-4.8 0-9.19 1.69-12.64 4.51l7.33 12.69.11-.2zm24.28-3c-1.84-5.85-6.3-10.52-11.99-12.68L23.77 18h19.31zm.52 2H28.62l.58 1 9.53 16.5C41.99 33.94 44 29.21 44 24c0-1.37-.14-2.71-.4-4zm-26.53 4l-7.8-13.5C6.01 14.06 4 18.79 4 24c0 1.37.14 2.71.4 4h14.98l-2.31-4zM4.92 30c1.84 5.85 6.3 10.52 11.99 12.68L24.23 30H4.92zm22.54 0l-7.8 13.51c1.4.31 2.85.49 4.34.49 4.8 0 9.19-1.69 12.64-4.51L29.31 26.8 27.46 30z"></path>\n    </symbol>\n    <symbol viewBox="0 0 24 24" id="vjs-icon-hd">\n      <path d="M19 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-8 12H9.5v-2h-2v2H6V9h1.5v2.5h2V9H11v6zm2-6h4c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1h-4V9zm1.5 4.5h2v-3h-2v3z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-chapters">\n      <path d="M6 26h4v-4H6v4zm0 8h4v-4H6v4zm0-16h4v-4H6v4zm8 8h28v-4H14v4zm0 8h28v-4H14v4zm0-20v4h28v-4H14z"></path>\n    </symbol>\n    <symbol viewBox="0 0 40 40" id="vjs-icon-downloading">\n      <path d="M18.208 36.875q-3.208-.292-5.979-1.729-2.771-1.438-4.812-3.729-2.042-2.292-3.188-5.229-1.146-2.938-1.146-6.23 0-6.583 4.334-11.416 4.333-4.834 10.833-5.5v3.166q-5.167.75-8.583 4.646Q6.25 14.75 6.25 19.958q0 5.209 3.396 9.104 3.396 3.896 8.562 4.646zM20 28.417L11.542 20l2.083-2.083 4.917 4.916v-11.25h2.916v11.25l4.875-4.916L28.417 20zm1.792 8.458v-3.167q1.833-.25 3.541-.958 1.709-.708 3.167-1.875l2.333 2.292q-1.958 1.583-4.25 2.541-2.291.959-4.791 1.167zm6.791-27.792q-1.541-1.125-3.25-1.854-1.708-.729-3.541-1.021V3.042q2.5.25 4.77 1.208 2.271.958 4.271 2.5zm4.584 21.584l-2.25-2.25q1.166-1.5 1.854-3.209.687-1.708.937-3.541h3.209q-.292 2.5-1.229 4.791-.938 2.292-2.521 4.209zm.541-12.417q-.291-1.833-.958-3.562-.667-1.73-1.833-3.188l2.375-2.208q1.541 1.916 2.458 4.208.917 2.292 1.167 4.75z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-file-download">\n      <path d="M10.8 40.55q-1.35 0-2.375-1T7.4 37.15v-7.7h3.4v7.7h26.35v-7.7h3.4v7.7q0 1.4-1 2.4t-2.4 1zM24 32.1L13.9 22.05l2.45-2.45 5.95 5.95V7.15h3.4v18.4l5.95-5.95 2.45 2.45z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-file-download-done">\n      <path d="M9.8 40.5v-3.45h28.4v3.45zm9.2-9.05L7.4 19.85l2.45-2.35L19 26.65l19.2-19.2 2.4 2.4z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-file-download-off">\n      <path d="M4.9 4.75L43.25 43.1 41 45.3l-4.75-4.75q-.05.05-.075.025-.025-.025-.075-.025H10.8q-1.35 0-2.375-1T7.4 37.15v-7.7h3.4v7.7h22.05l-7-7-1.85 1.8L13.9 21.9l1.85-1.85L2.7 7zm26.75 14.7l2.45 2.45-3.75 3.8-2.45-2.5zM25.7 7.15V21.1l-3.4-3.45V7.15z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-share">\n      <path d="M36 32.17c-1.52 0-2.89.59-3.93 1.54L17.82 25.4c.11-.45.18-.92.18-1.4s-.07-.95-.18-1.4l14.1-8.23c1.07 1 2.5 1.62 4.08 1.62 3.31 0 6-2.69 6-6s-2.69-6-6-6-6 2.69-6 6c0 .48.07.95.18 1.4l-14.1 8.23c-1.07-1-2.5-1.62-4.08-1.62-3.31 0-6 2.69-6 6s2.69 6 6 6c1.58 0 3.01-.62 4.08-1.62l14.25 8.31c-.1.42-.16.86-.16 1.31A5.83 5.83 0 1 0 36 32.17z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-cog">\n      <path d="M38.86 25.95c.08-.64.14-1.29.14-1.95s-.06-1.31-.14-1.95l4.23-3.31c.38-.3.49-.84.24-1.28l-4-6.93c-.25-.43-.77-.61-1.22-.43l-4.98 2.01c-1.03-.79-2.16-1.46-3.38-1.97L29 4.84c-.09-.47-.5-.84-1-.84h-8c-.5 0-.91.37-.99.84l-.75 5.3a14.8 14.8 0 0 0-3.38 1.97L9.9 10.1a1 1 0 0 0-1.22.43l-4 6.93c-.25.43-.14.97.24 1.28l4.22 3.31C9.06 22.69 9 23.34 9 24s.06 1.31.14 1.95l-4.22 3.31c-.38.3-.49.84-.24 1.28l4 6.93c.25.43.77.61 1.22.43l4.98-2.01c1.03.79 2.16 1.46 3.38 1.97l.75 5.3c.08.47.49.84.99.84h8c.5 0 .91-.37.99-.84l.75-5.3a14.8 14.8 0 0 0 3.38-1.97l4.98 2.01a1 1 0 0 0 1.22-.43l4-6.93c.25-.43.14-.97-.24-1.28l-4.22-3.31zM24 31c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-square">\n      <path d="M36 8H12c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h24c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zm0 28H12V12h24v24z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-circle">\n      <circle cx="24" cy="24" r="20"></circle>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-circle-outline">\n      <path d="M24 4C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-circle-inner-circle">\n      <path d="M24 4C12.97 4 4 12.97 4 24s8.97 20 20 20 20-8.97 20-20S35.03 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16zm6-16c0 3.31-2.69 6-6 6s-6-2.69-6-6 2.69-6 6-6 6 2.69 6 6z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-cancel">\n      <path d="M24 4C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm10 27.17L31.17 34 24 26.83 16.83 34 14 31.17 21.17 24 14 16.83 16.83 14 24 21.17 31.17 14 34 16.83 26.83 24 34 31.17z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-replay">\n      <path d="M24 10V2L14 12l10 10v-8c6.63 0 12 5.37 12 12s-5.37 12-12 12-12-5.37-12-12H8c0 8.84 7.16 16 16 16s16-7.16 16-16-7.16-16-16-16z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-repeat">\n      <path d="M14 14h20v6l8-8-8-8v6H10v12h4v-8zm20 20H14v-6l-8 8 8 8v-6h24V26h-4v8z"></path>\n    </symbol>\n    <symbol viewBox="0 96 48 48" id="vjs-icon-replay-5">\n      <path d="M17.689 98l-8.697 8.696 8.697 8.697 2.486-2.485-4.32-4.319h1.302c4.93 0 9.071 1.722 12.424 5.165 3.352 3.443 5.029 7.638 5.029 12.584h3.55c0-2.958-.553-5.73-1.658-8.313-1.104-2.583-2.622-4.841-4.555-6.774-1.932-1.932-4.19-3.45-6.773-4.555-2.584-1.104-5.355-1.657-8.313-1.657H15.5l4.615-4.615zm-8.08 21.659v13.861h11.357v5.008H9.609V143h12.7c.834 0 1.55-.298 2.146-.894.596-.597.895-1.31.895-2.145v-7.781c0-.835-.299-1.55-.895-2.147a2.929 2.929 0 0 0-2.147-.894h-8.227v-5.096H25.35v-4.384z"></path>\n    </symbol>\n    <symbol viewBox="0 96 48 48" id="vjs-icon-replay-10">\n      <path d="M42.315 125.63c0-4.997-1.694-9.235-5.08-12.713-3.388-3.479-7.571-5.218-12.552-5.218h-1.315l4.363 4.363-2.51 2.51-8.787-8.786L25.221 97l2.45 2.45-4.662 4.663h1.375c2.988 0 5.788.557 8.397 1.673 2.61 1.116 4.892 2.65 6.844 4.602 1.953 1.953 3.487 4.234 4.602 6.844 1.116 2.61 1.674 5.41 1.674 8.398zM8.183 142v-19.657H3.176V117.8h9.643V142zm13.63 0c-1.156 0-2.127-.393-2.912-1.178-.778-.778-1.168-1.746-1.168-2.902v-16.04c0-1.156.393-2.127 1.178-2.912.779-.779 1.746-1.168 2.902-1.168h7.696c1.156 0 2.126.392 2.911 1.177.779.78 1.168 1.747 1.168 2.903v16.04c0 1.156-.392 2.127-1.177 2.912-.779.779-1.746 1.168-2.902 1.168zm.556-4.636h6.583v-15.02H22.37z"></path>\n    </symbol>\n    <symbol viewBox="0 96 48 48" id="vjs-icon-replay-30">\n      <path d="M26.047 97l-8.733 8.732 8.733 8.733 2.496-2.494-4.336-4.338h1.307c4.95 0 9.108 1.73 12.474 5.187 3.367 3.458 5.051 7.668 5.051 12.635h3.565c0-2.97-.556-5.751-1.665-8.346-1.109-2.594-2.633-4.862-4.574-6.802-1.94-1.941-4.208-3.466-6.803-4.575-2.594-1.109-5.375-1.664-8.345-1.664H23.85l4.634-4.634zM2.555 117.531v4.688h10.297v5.25H5.873v4.687h6.979v5.156H2.555V142H13.36c1.061 0 1.95-.395 2.668-1.186.718-.79 1.076-1.772 1.076-2.94v-16.218c0-1.168-.358-2.149-1.076-2.94-.717-.79-1.607-1.185-2.668-1.185zm22.482.14c-1.149 0-2.11.39-2.885 1.165-.78.78-1.172 1.744-1.172 2.893v15.943c0 1.149.388 2.11 1.163 2.885.78.78 1.745 1.172 2.894 1.172h7.649c1.148 0 2.11-.388 2.884-1.163.78-.78 1.17-1.745 1.17-2.894v-15.943c0-1.15-.386-2.111-1.16-2.885-.78-.78-1.746-1.172-2.894-1.172zm.553 4.518h6.545v14.93H25.59z"></path>\n    </symbol>\n    <symbol viewBox="0 96 48 48" id="vjs-icon-forward-5">\n      <path d="M29.508 97l-2.431 2.43 4.625 4.625h-1.364c-2.965 0-5.742.554-8.332 1.66-2.589 1.107-4.851 2.629-6.788 4.566-1.937 1.937-3.458 4.2-4.565 6.788-1.107 2.59-1.66 5.367-1.66 8.331h3.557c0-4.957 1.68-9.16 5.04-12.611 3.36-3.45 7.51-5.177 12.451-5.177h1.304l-4.326 4.33 2.49 2.49 8.715-8.716zm-9.783 21.61v13.89h11.382v5.018H19.725V142h12.727a2.93 2.93 0 0 0 2.15-.896 2.93 2.93 0 0 0 .896-2.15v-7.798c0-.837-.299-1.554-.896-2.152a2.93 2.93 0 0 0-2.15-.896h-8.245V123h11.29v-4.392z"></path>\n    </symbol>\n    <symbol viewBox="0 96 48 48" id="vjs-icon-forward-10">\n      <path d="M23.119 97l-2.386 2.383 4.538 4.538h-1.339c-2.908 0-5.633.543-8.173 1.63-2.54 1.085-4.76 2.577-6.66 4.478-1.9 1.9-3.392 4.12-4.478 6.66-1.085 2.54-1.629 5.264-1.629 8.172h3.49c0-4.863 1.648-8.986 4.944-12.372 3.297-3.385 7.368-5.078 12.216-5.078h1.279l-4.245 4.247 2.443 2.442 8.55-8.55zm-9.52 21.45v4.42h4.871V142h4.513v-23.55zm18.136 0c-1.125 0-2.066.377-2.824 1.135-.764.764-1.148 1.709-1.148 2.834v15.612c0 1.124.38 2.066 1.139 2.824.764.764 1.708 1.145 2.833 1.145h7.489c1.125 0 2.066-.378 2.824-1.136.764-.764 1.145-1.709 1.145-2.833v-15.612c0-1.125-.378-2.067-1.136-2.825-.764-.764-1.708-1.145-2.833-1.145zm.54 4.42h6.408v14.617h-6.407z"></path>\n    </symbol>\n    <symbol viewBox="0 96 48 48" id="vjs-icon-forward-30">\n      <path d="M25.549 97l-2.437 2.434 4.634 4.635H26.38c-2.97 0-5.753.555-8.347 1.664-2.594 1.109-4.861 2.633-6.802 4.574-1.94 1.94-3.465 4.207-4.574 6.802-1.109 2.594-1.664 5.377-1.664 8.347h3.565c0-4.967 1.683-9.178 5.05-12.636 3.366-3.458 7.525-5.187 12.475-5.187h1.307l-4.335 4.338 2.495 2.494 8.732-8.732zm-11.553 20.53v4.689h10.297v5.249h-6.978v4.688h6.978v5.156H13.996V142h10.808c1.06 0 1.948-.395 2.666-1.186.718-.79 1.077-1.771 1.077-2.94v-16.217c0-1.169-.36-2.15-1.077-2.94-.718-.79-1.605-1.186-2.666-1.186zm21.174.168c-1.149 0-2.11.389-2.884 1.163-.78.78-1.172 1.745-1.172 2.894v15.942c0 1.15.388 2.11 1.162 2.885.78.78 1.745 1.17 2.894 1.17h7.649c1.149 0 2.11-.386 2.885-1.16.78-.78 1.17-1.746 1.17-2.895v-15.942c0-1.15-.387-2.11-1.161-2.885-.78-.78-1.745-1.172-2.894-1.172zm.552 4.516h6.542v14.931h-6.542z"></path>\n    </symbol>\n    <symbol viewBox="0 0 512 512" id="vjs-icon-audio-description">\n      <g fill-rule="evenodd"><path d="M227.29 381.351V162.993c50.38-1.017 89.108-3.028 117.631 17.126 27.374 19.342 48.734 56.965 44.89 105.325-4.067 51.155-41.335 94.139-89.776 98.475-24.085 2.155-71.972 0-71.972 0s-.84-1.352-.773-2.568m48.755-54.804c31.43 1.26 53.208-16.633 56.495-45.386 4.403-38.51-21.188-63.552-58.041-60.796v103.612c-.036 1.466.575 2.22 1.546 2.57"></path><path d="M383.78 381.328c13.336 3.71 17.387-11.06 23.215-21.408 12.722-22.571 22.294-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.51c-.587 3.874 2.226 7.315 3.865 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894"></path><path d="M425.154 381.328c13.336 3.71 17.384-11.061 23.215-21.408 12.721-22.571 22.291-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.511c-.586 3.874 2.226 7.315 3.866 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894"></path><path d="M466.26 381.328c13.337 3.71 17.385-11.061 23.216-21.408 12.722-22.571 22.292-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.51c-.587 3.874 2.225 7.315 3.865 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894M4.477 383.005H72.58l18.573-28.484 64.169-.135s.065 19.413.065 28.62h48.756V160.307h-58.816c-5.653 9.537-140.85 222.697-140.85 222.697zm152.667-145.282v71.158l-40.453-.27 40.453-70.888z"></path></g>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-next-item">\n      <path d="M12 36l17-12-17-12v24zm20-24v24h4V12h-4z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-previous-item">\n      <path d="M12 12h4v24h-4zm7 12l17 12V12z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-shuffle">\n      <path d="M21.17 18.34L10.83 8 8 10.83l10.34 10.34 2.83-2.83zM29 8l4.09 4.09L8 37.17 10.83 40l25.09-25.09L40 19V8H29zm.66 18.83l-2.83 2.83 6.26 6.26L29 40h11V29l-4.09 4.09-6.25-6.26z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-cast">\n      <path d="M42 6H6c-2.21 0-4 1.79-4 4v6h4v-6h36v28H28v4h14c2.21 0 4-1.79 4-4V10c0-2.21-1.79-4-4-4zM2 36v6h6c0-3.31-2.69-6-6-6zm0-8v4c5.52 0 10 4.48 10 10h4c0-7.73-6.27-14-14-14zm0-8v4c9.94 0 18 8.06 18 18h4c0-12.15-9.85-22-22-22z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-picture-in-picture-enter">\n      <path d="M38 22H22v11.99h16V22zm8 16V9.96C46 7.76 44.2 6 42 6H6C3.8 6 2 7.76 2 9.96V38c0 2.2 1.8 4 4 4h36c2.2 0 4-1.8 4-4zm-4 .04H6V9.94h36v28.1z"></path>\n    </symbol>\n    <symbol viewBox="0 0 22 18" id="vjs-icon-picture-in-picture-exit">\n      <path d="M18 4H4v10h14V4zm4 12V1.98C22 .88 21.1 0 20 0H2C.9 0 0 .88 0 1.98V16c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2zm-2 .02H2V1.97h18v14.05z"></path>\n      <path fill="none" d="M-1-3h24v24H-1z"></path>\n    </symbol>\n    <symbol viewBox="0 0 1792 1792" id="vjs-icon-facebook">\n      <path d="M1343 12v264h-157q-86 0-116 36t-30 108v189h293l-39 296h-254v759H734V905H479V609h255V391q0-186 104-288.5T1115 0q147 0 228 12z"></path>\n    </symbol>\n    <symbol viewBox="0 0 1792 1792" id="vjs-icon-linkedin">\n      <path d="M477 625v991H147V625h330zm21-306q1 73-50.5 122T312 490h-2q-82 0-132-49t-50-122q0-74 51.5-122.5T314 148t133 48.5T498 319zm1166 729v568h-329v-530q0-105-40.5-164.5T1168 862q-63 0-105.5 34.5T999 982q-11 30-11 81v553H659q2-399 2-647t-1-296l-1-48h329v144h-2q20-32 41-56t56.5-52 87-43.5T1285 602q171 0 275 113.5t104 332.5z"></path>\n    </symbol>\n    <symbol viewBox="0 0 1200 1227" id="vjs-icon-twitter">\n      <path d="M714.163 519.284L1160.89 0H1055.03L667.137 450.887L357.328 0H0L468.492 681.821L0 1226.37H105.866L515.491 750.218L842.672 1226.37H1200L714.137 519.284H714.163ZM569.165 687.828L521.697 619.934L144.011 79.6944H306.615L611.412 515.685L658.88 583.579L1055.08 1150.3H892.476L569.165 687.854V687.828Z"/>\n    </symbol>\n    <symbol viewBox="0 0 1792 1792" id="vjs-icon-tumblr">\n      <path d="M1328 1329l80 237q-23 35-111 66t-177 32q-104 2-190.5-26T787 1564t-95-106-55.5-120-16.5-118V676H452V461q72-26 129-69.5t91-90 58-102 34-99T779 12q1-5 4.5-8.5T791 0h244v424h333v252h-334v518q0 30 6.5 56t22.5 52.5 49.5 41.5 81.5 14q78-2 134-29z"></path>\n    </symbol>\n    <symbol viewBox="0 0 1792 1792" id="vjs-icon-pinterest">\n      <path d="M1664 896q0 209-103 385.5T1281.5 1561 896 1664q-111 0-218-32 59-93 78-164 9-34 54-211 20 39 73 67.5t114 28.5q121 0 216-68.5t147-188.5 52-270q0-114-59.5-214T1180 449t-255-63q-105 0-196 29t-154.5 77-109 110.5-67 129.5T377 866q0 104 40 183t117 111q30 12 38-20 2-7 8-31t8-30q6-23-11-43-51-61-51-151 0-151 104.5-259.5T904 517q151 0 235.5 82t84.5 213q0 170-68.5 289T980 1220q-61 0-98-43.5T859 1072q8-35 26.5-93.5t30-103T927 800q0-50-27-83t-77-33q-62 0-105 57t-43 142q0 73 25 122l-99 418q-17 70-13 177-206-91-333-281T128 896q0-209 103-385.5T510.5 231 896 128t385.5 103T1561 510.5 1664 896z"></path>\n    </symbol>\n  </defs>\n</svg>';
var jo = Hn ? 10009 : Vn ? 461 : 8;
var $o = { codes: { play: 415, pause: 19, ff: 417, rw: 412, back: jo }, names: { 415: "play", 19: "pause", 417: "ff", 412: "rw", [jo]: "back" }, isEventKey(e9, t4) {
  return t4 = t4.toLowerCase(), !(!this.names[e9.keyCode] || this.names[e9.keyCode] !== t4);
}, getEventName(e9) {
  if (this.names[e9.keyCode]) return this.names[e9.keyCode];
  if (this.codes[e9.code]) {
    const t4 = this.codes[e9.code];
    return this.names[t4];
  }
  return null;
} };
var Ho = 5;
var Vo = class extends ra {
  constructor(e9) {
    super(), this.player_ = e9, this.focusableComponents = [], this.isListening_ = false, this.isPaused_ = false, this.onKeyDown_ = this.onKeyDown_.bind(this), this.lastFocusedComponent_ = null;
  }
  start() {
    this.isListening_ || (this.player_.on("keydown", this.onKeyDown_), this.player_.on("modalKeydown", this.onKeyDown_), this.player_.on("loadedmetadata", () => {
      this.focus(this.updateFocusableComponents()[0]);
    }), this.player_.on("modalclose", () => {
      this.refocusComponent();
    }), this.player_.on("focusin", this.handlePlayerFocus_.bind(this)), this.player_.on("focusout", this.handlePlayerBlur_.bind(this)), this.isListening_ = true, this.player_.errorDisplay && this.player_.errorDisplay.on("aftermodalfill", () => {
      this.updateFocusableComponents(), this.focusableComponents.length && (this.focusableComponents.length > 1 ? this.focusableComponents[1].focus() : this.focusableComponents[0].focus());
    }));
  }
  stop() {
    this.player_.off("keydown", this.onKeyDown_), this.isListening_ = false;
  }
  onKeyDown_(e9) {
    const t4 = e9.originalEvent ? e9.originalEvent : e9;
    if (["ArrowLeft", "ArrowRight", "ArrowUp", "ArrowDown"].includes(t4.key)) {
      if (this.isPaused_) return;
      t4.preventDefault();
      const e10 = t4.key.substring(5).toLowerCase();
      this.move(e10);
    } else if ($o.isEventKey(t4, "play") || $o.isEventKey(t4, "pause") || $o.isEventKey(t4, "ff") || $o.isEventKey(t4, "rw")) {
      t4.preventDefault();
      const e10 = $o.getEventName(t4);
      this.performMediaAction_(e10);
    } else $o.isEventKey(t4, "Back") && e9.target && "function" == typeof e9.target.closeable && e9.target.closeable() && (t4.preventDefault(), e9.target.close());
  }
  performMediaAction_(e9) {
    if (this.player_) switch (e9) {
      case "play":
        this.player_.paused() && this.player_.play();
        break;
      case "pause":
        this.player_.paused() || this.player_.pause();
        break;
      case "ff":
        this.userSeek_(this.player_.currentTime() + Ho);
        break;
      case "rw":
        this.userSeek_(this.player_.currentTime() - Ho);
    }
  }
  userSeek_(e9) {
    this.player_.liveTracker && this.player_.liveTracker.isLive() && this.player_.liveTracker.nextSeekedFromUser(), this.player_.currentTime(e9);
  }
  pause() {
    this.isPaused_ = true;
  }
  resume() {
    this.isPaused_ = false;
  }
  handlePlayerBlur_(e9) {
    const t4 = e9.relatedTarget;
    let i3 = null;
    const s5 = this.getCurrentComponent(e9.target);
    t4 && (i3 = Boolean(t4.closest(".video-js")), t4.classList.contains("vjs-text-track-settings") && !this.isPaused_ && this.searchForTrackSelect_()), (e9.currentTarget.contains(e9.relatedTarget) || i3) && t4 || (s5 && "CloseButton" === s5.name() ? this.refocusComponent() : (this.pause(), s5 && s5.el() && (this.lastFocusedComponent_ = s5)));
  }
  handlePlayerFocus_() {
    this.getCurrentComponent() && this.getCurrentComponent().getIsFocusable() && this.resume();
  }
  updateFocusableComponents() {
    const e9 = this.player_, t4 = [];
    function i3(e10) {
      for (const s5 of e10) s5.hasOwnProperty("el_") && s5.getIsFocusable() && s5.getIsAvailableToBeFocused(s5.el()) && t4.push(s5), s5.hasOwnProperty("children_") && s5.children_.length > 0 && i3(s5.children_);
    }
    return e9.children_.forEach((e10) => {
      if (e10.hasOwnProperty("el_")) {
        if (e10.getIsFocusable && e10.getIsAvailableToBeFocused && e10.getIsFocusable() && e10.getIsAvailableToBeFocused(e10.el())) return void t4.push(e10);
        e10.hasOwnProperty("children_") && e10.children_.length > 0 ? i3(e10.children_) : e10.hasOwnProperty("items") && e10.items.length > 0 ? i3(e10.items) : this.findSuitableDOMChild(e10) && t4.push(e10);
      }
      if ("ErrorDisplay" === e10.name_ && e10.opened_) {
        const i4 = e10.el_.querySelector(".vjs-errors-ok-button-container");
        if (i4) {
          i4.querySelectorAll("button").forEach((e11, i5) => {
            t4.push({ name: () => "ModalButton" + (i5 + 1), el: () => e11, getPositions: () => {
              const t5 = e11.getBoundingClientRect();
              return { boundingClientRect: { x: t5.x, y: t5.y, width: t5.width, height: t5.height, top: t5.top, right: t5.right, bottom: t5.bottom, left: t5.left }, center: { x: t5.left + t5.width / 2, y: t5.top + t5.height / 2, width: 0, height: 0, top: t5.top + t5.height / 2, right: t5.left + t5.width / 2, bottom: t5.top + t5.height / 2, left: t5.left + t5.width / 2 } };
            }, getIsAvailableToBeFocused: () => true, getIsFocusable: (e12) => true, focus: () => e11.focus() });
          });
        }
      }
    }), this.focusableComponents = t4, this.focusableComponents;
  }
  findSuitableDOMChild(e9) {
    function t4(i3) {
      if (e9.getIsFocusable(i3) && e9.getIsAvailableToBeFocused(i3)) return i3;
      for (let e10 = 0; e10 < i3.children.length; e10++) {
        const s5 = t4(i3.children[e10]);
        if (s5) return s5;
      }
      return null;
    }
    return e9.el() ? t4(e9.el()) : null;
  }
  getCurrentComponent(e9) {
    this.updateFocusableComponents();
    const t4 = e9 || document.activeElement;
    if (this.focusableComponents.length) {
      for (const i3 of this.focusableComponents) if (i3.el() === t4) return i3;
    }
  }
  add(e9) {
    const t4 = [...this.focusableComponents];
    e9.hasOwnProperty("el_") && e9.getIsFocusable() && e9.getIsAvailableToBeFocused(e9.el()) && t4.push(e9), this.focusableComponents = t4, this.trigger({ type: "focusableComponentsChanged", focusableComponents: this.focusableComponents });
  }
  remove(e9) {
    for (let t4 = 0; t4 < this.focusableComponents.length; t4++) if (this.focusableComponents[t4].name() === e9.name()) return this.focusableComponents.splice(t4, 1), void this.trigger({ type: "focusableComponentsChanged", focusableComponents: this.focusableComponents });
  }
  clear() {
    this.focusableComponents.length > 0 && (this.focusableComponents = [], this.trigger({ type: "focusableComponentsChanged", focusableComponents: this.focusableComponents }));
  }
  move(e9) {
    const t4 = this.getCurrentComponent();
    if (!t4) return;
    const i3 = t4.getPositions(), s5 = this.focusableComponents.filter((s6) => s6 !== t4 && this.isInDirection_(i3.boundingClientRect, s6.getPositions().boundingClientRect, e9)), n6 = this.findBestCandidate_(i3.center, s5, e9);
    n6 ? this.focus(n6) : this.trigger({ type: "endOfFocusableComponents", direction: e9, focusedComponent: t4 });
  }
  findBestCandidate_(e9, t4, i3) {
    let s5 = 1 / 0, n6 = null;
    for (const r5 of t4) {
      const t5 = r5.getPositions().center, a6 = this.calculateDistance_(e9, t5, i3);
      a6 < s5 && (s5 = a6, n6 = r5);
    }
    return n6;
  }
  isInDirection_(e9, t4, i3) {
    switch (i3) {
      case "right":
        return t4.left >= e9.right;
      case "left":
        return t4.right <= e9.left;
      case "down":
        return t4.top >= e9.bottom;
      case "up":
        return t4.bottom <= e9.top;
      default:
        return false;
    }
  }
  refocusComponent() {
    if (this.lastFocusedComponent_) {
      this.player_.userActive() || this.player_.userActive(true), this.updateFocusableComponents();
      for (let e9 = 0; e9 < this.focusableComponents.length; e9++) if (this.focusableComponents[e9].name() === this.lastFocusedComponent_.name()) return void this.focus(this.focusableComponents[e9]);
    } else this.focus(this.updateFocusableComponents()[0]);
  }
  focus(e9) {
    "object" == typeof e9 && (e9.getIsAvailableToBeFocused(e9.el()) ? e9.focus() : this.findSuitableDOMChild(e9) && this.findSuitableDOMChild(e9).focus());
  }
  calculateDistance_(e9, t4, i3) {
    const s5 = Math.abs(e9.x - t4.x), n6 = Math.abs(e9.y - t4.y);
    let r5;
    switch (i3) {
      case "right":
      case "left":
        r5 = s5 + 100 * n6;
        break;
      case "up":
        r5 = 2 * n6 + 0.5 * s5;
        break;
      case "down":
        r5 = 5 * n6 + s5;
        break;
      default:
        r5 = s5 + n6;
    }
    return r5;
  }
  searchForTrackSelect_() {
    const e9 = this;
    for (const t4 of e9.updateFocusableComponents()) if ("TextTrackSelect" === t4.constructor.name) {
      e9.focus(t4);
      break;
    }
  }
};
var zo = class extends Ea {
  constructor(e9, t4, i3) {
    if (super(e9, En({ createEl: false }, t4), i3), t4.playerOptions.sources && 0 !== t4.playerOptions.sources.length) e9.src(t4.playerOptions.sources);
    else for (let s5 = 0, n6 = t4.playerOptions.techOrder; s5 < n6.length; s5++) {
      const t5 = va(n6[s5]);
      let i4 = yo.getTech(t5);
      if (t5 || (i4 = Ea.getComponent(t5)), i4 && i4.isSupported()) {
        e9.loadTech_(t5);
        break;
      }
    }
  }
};
Ea.registerComponent("MediaLoader", zo);
var Wo = class extends Ea {
  constructor(e9, t4) {
    super(e9, t4), this.options_.controlText && this.controlText(this.options_.controlText), this.handleMouseOver_ = (e10) => this.handleMouseOver(e10), this.handleMouseOut_ = (e10) => this.handleMouseOut(e10), this.handleClick_ = (e10) => this.handleClick(e10), this.handleKeyDown_ = (e10) => this.handleKeyDown(e10), this.emitTapEvents(), this.enable();
  }
  createEl(e9 = "div", t4 = {}, i3 = {}) {
    t4 = Object.assign({ className: this.buildCSSClass(), tabIndex: 0 }, t4), "button" === e9 && gn.error(`Creating a ClickableComponent with an HTML element of ${e9} is not supported; use a Button instead.`), i3 = Object.assign({ role: "button" }, i3), this.tabIndex_ = t4.tabIndex;
    const s5 = sr(e9, t4, i3);
    return this.player_.options_.experimentalSvgIcons || s5.appendChild(sr("span", { className: "vjs-icon-placeholder" }, { "aria-hidden": true })), this.createControlTextEl(s5), s5;
  }
  dispose() {
    this.controlTextEl_ = null, super.dispose();
  }
  createControlTextEl(e9) {
    return this.controlTextEl_ = sr("span", { className: "vjs-control-text" }, { "aria-live": "polite" }), e9 && e9.appendChild(this.controlTextEl_), this.controlText(this.controlText_, e9), this.controlTextEl_;
  }
  controlText(e9, t4 = this.el()) {
    if (void 0 === e9) return this.controlText_ || "Need Text";
    const i3 = this.localize(e9);
    this.controlText_ = e9, nr(this.controlTextEl_, i3), this.nonIconControl || this.player_.options_.noUITitleAttributes || t4.setAttribute("title", i3);
  }
  buildCSSClass() {
    return `vjs-control vjs-button ${super.buildCSSClass()}`;
  }
  enable() {
    this.enabled_ || (this.enabled_ = true, this.removeClass("vjs-disabled"), this.el_.setAttribute("aria-disabled", "false"), void 0 !== this.tabIndex_ && this.el_.setAttribute("tabIndex", this.tabIndex_), this.on(["tap", "click"], this.handleClick_), this.on("keydown", this.handleKeyDown_));
  }
  disable() {
    this.enabled_ = false, this.addClass("vjs-disabled"), this.el_.setAttribute("aria-disabled", "true"), void 0 !== this.tabIndex_ && this.el_.removeAttribute("tabIndex"), this.off("mouseover", this.handleMouseOver_), this.off("mouseout", this.handleMouseOut_), this.off(["tap", "click"], this.handleClick_), this.off("keydown", this.handleKeyDown_);
  }
  handleLanguagechange() {
    this.controlText(this.controlText_);
  }
  handleClick(e9) {
    this.options_.clickHandler && this.options_.clickHandler.call(this, arguments);
  }
  handleKeyDown(e9) {
    " " === e9.key || "Enter" === e9.key ? (e9.preventDefault(), e9.stopPropagation(), this.trigger("click")) : super.handleKeyDown(e9);
  }
};
Ea.registerComponent("ClickableComponent", Wo);
var Go = class extends Wo {
  constructor(e9, t4) {
    super(e9, t4), this.update(), this.update_ = (e10) => this.update(e10), e9.on("posterchange", this.update_);
  }
  dispose() {
    this.player().off("posterchange", this.update_), super.dispose();
  }
  createEl() {
    return sr("div", { className: "vjs-poster" });
  }
  crossOrigin(e9) {
    if (void 0 === e9) return this.$("img") ? this.$("img").crossOrigin : this.player_.tech_ && this.player_.tech_.isReady_ ? this.player_.crossOrigin() : this.player_.options_.crossOrigin || this.player_.options_.crossorigin || null;
    null === e9 || "anonymous" === e9 || "use-credentials" === e9 ? this.$("img") && (this.$("img").crossOrigin = e9) : this.player_.log.warn(`crossOrigin must be null,  "anonymous" or "use-credentials", given "${e9}"`);
  }
  update(e9) {
    const t4 = this.player().poster();
    this.setSrc(t4), t4 ? this.show() : this.hide();
  }
  setSrc(e9) {
    e9 ? (this.$("img") || this.el_.appendChild(sr("picture", { className: "vjs-poster", tabIndex: -1 }, {}, sr("img", { loading: "lazy", crossOrigin: this.crossOrigin() }, { alt: "" }))), this.$("img").src = e9) : this.el_.textContent = "";
  }
  handleClick(e9) {
    this.player_.controls() && (this.player_.tech(true) && this.player_.tech(true).focus(), this.player_.paused() ? Ua(this.player_.play()) : this.player_.pause());
  }
};
Go.prototype.crossorigin = Go.prototype.crossOrigin, Ea.registerComponent("PosterImage", Go);
var Xo = "#222";
var Ko = "#ccc";
var Yo = { monospace: "monospace", sansSerif: "sans-serif", serif: "serif", monospaceSansSerif: '"Andale Mono", "Lucida Console", monospace', monospaceSerif: '"Courier New", monospace', proportionalSansSerif: "sans-serif", proportionalSerif: "serif", casual: '"Comic Sans MS", Impact, fantasy', script: '"Monotype Corsiva", cursive', smallcaps: '"Andale Mono", "Lucida Console", monospace, sans-serif' };
function Qo(e9, t4) {
  let i3;
  if (4 === e9.length) i3 = e9[1] + e9[1] + e9[2] + e9[2] + e9[3] + e9[3];
  else {
    if (7 !== e9.length) throw new Error("Invalid color code provided, " + e9 + "; must be formatted as e.g. #f0e or #f604e2.");
    i3 = e9.slice(1);
  }
  return "rgba(" + parseInt(i3.slice(0, 2), 16) + "," + parseInt(i3.slice(2, 4), 16) + "," + parseInt(i3.slice(4, 6), 16) + "," + t4 + ")";
}
function Jo(e9, t4, i3) {
  try {
    e9.style[t4] = i3;
  } catch (s5) {
    return;
  }
}
function Zo(e9) {
  return e9 ? `${e9}px` : "";
}
var el = class extends Ea {
  constructor(e9, t4, i3) {
    super(e9, t4, i3);
    const s5 = (e10) => this.updateDisplay(e10), n6 = (e10) => {
      this.updateDisplayOverlay(), this.updateDisplay(e10);
    };
    e9.on("loadstart", (e10) => this.toggleDisplay(e10)), e9.on("texttrackchange", s5), e9.on("loadedmetadata", (e10) => {
      this.updateDisplayOverlay(), this.preselectTrack(e10);
    }), e9.ready(ea(this, function() {
      if (e9.tech_ && e9.tech_.featuresNativeTextTracks) return void this.hide();
      e9.on("fullscreenchange", n6), e9.on("playerresize", n6);
      const t5 = _.screen.orientation || _, i4 = _.screen.orientation ? "change" : "orientationchange";
      t5.addEventListener(i4, n6), e9.on("dispose", () => t5.removeEventListener(i4, n6));
      const s6 = this.options_.playerOptions.tracks || [];
      for (let e10 = 0; e10 < s6.length; e10++) this.player_.addRemoteTextTrack(s6[e10], true);
      this.preselectTrack();
    }));
  }
  preselectTrack() {
    const e9 = { captions: 1, subtitles: 1 }, t4 = this.player_.textTracks(), i3 = this.player_.cache_.selectedLanguage;
    let s5, n6, r5;
    for (let a6 = 0; a6 < t4.length; a6++) {
      const o4 = t4[a6];
      i3 && i3.enabled && i3.language && i3.language === o4.language && o4.kind in e9 ? o4.kind === i3.kind ? r5 = o4 : r5 || (r5 = o4) : i3 && !i3.enabled ? (r5 = null, s5 = null, n6 = null) : o4.default && ("descriptions" !== o4.kind || s5 ? o4.kind in e9 && !n6 && (n6 = o4) : s5 = o4);
    }
    r5 ? r5.mode = "showing" : n6 ? n6.mode = "showing" : s5 && (s5.mode = "showing");
  }
  toggleDisplay() {
    this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks ? this.hide() : this.show();
  }
  createEl() {
    return super.createEl("div", { className: "vjs-text-track-display" }, { translate: "yes", "aria-live": "off", "aria-atomic": "true" });
  }
  clearDisplay() {
    "function" == typeof _.WebVTT && _.WebVTT.processCues(_, [], this.el_);
  }
  updateDisplay() {
    const e9 = this.player_.textTracks(), t4 = this.options_.allowMultipleShowingTracks;
    if (this.clearDisplay(), t4) {
      const t5 = [];
      for (let i4 = 0; i4 < e9.length; ++i4) {
        const s6 = e9[i4];
        "showing" === s6.mode && t5.push(s6);
      }
      return void this.updateForTrack(t5);
    }
    let i3 = null, s5 = null, n6 = e9.length;
    for (; n6--; ) {
      const t5 = e9[n6];
      "showing" === t5.mode && ("descriptions" === t5.kind ? i3 = t5 : s5 = t5);
    }
    if (s5 ? ("off" !== this.getAttribute("aria-live") && this.setAttribute("aria-live", "off"), this.updateForTrack(s5)) : i3 && ("assertive" !== this.getAttribute("aria-live") && this.setAttribute("aria-live", "assertive"), this.updateForTrack(i3)), !_.CSS.supports("inset", "10px")) {
      const e10 = this.el_, t5 = e10.querySelectorAll(".vjs-text-track-cue"), i4 = this.player_.controlBar.el_.getBoundingClientRect().height, s6 = this.player_.el_.getBoundingClientRect().height;
      e10.style = "", Jo(e10, "position", "relative"), Jo(e10, "height", s6 - i4 + "px"), Jo(e10, "top", "unset"), Jo(e10, "bottom", zn ? s6 + "px" : "0px"), t5.length > 0 && t5.forEach((e11) => {
        if (e11.style.inset) {
          const t6 = e11.style.inset.split(" ");
          3 === t6.length && Object.assign(e11.style, { top: t6[0], right: t6[1], bottom: t6[2], left: "unset" });
        }
      });
    }
  }
  updateDisplayOverlay() {
    if (!this.player_.videoHeight() || !_.CSS.supports("inset-inline: 10px")) return;
    const e9 = this.player_.currentWidth(), t4 = this.player_.currentHeight(), i3 = e9 / t4, s5 = this.player_.videoWidth() / this.player_.videoHeight();
    let n6 = 0, r5 = 0;
    Math.abs(i3 - s5) > 0.1 && (i3 > s5 ? n6 = Math.round((e9 - t4 * s5) / 2) : r5 = Math.round((t4 - e9 / s5) / 2)), Jo(this.el_, "insetInline", Zo(n6)), Jo(this.el_, "insetBlock", Zo(r5));
  }
  updateDisplayState(e9) {
    const t4 = this.player_.textTrackSettings.getValues(), i3 = e9.activeCues;
    let s5 = i3.length;
    for (; s5--; ) {
      const e10 = i3[s5];
      if (!e10) continue;
      const n6 = e10.displayState;
      if (t4.color && (n6.firstChild.style.color = t4.color), t4.textOpacity && Jo(n6.firstChild, "color", Qo(t4.color || "#fff", t4.textOpacity)), t4.backgroundColor && (n6.firstChild.style.backgroundColor = t4.backgroundColor), t4.backgroundOpacity && Jo(n6.firstChild, "backgroundColor", Qo(t4.backgroundColor || "#000", t4.backgroundOpacity)), t4.windowColor && (t4.windowOpacity ? Jo(n6, "backgroundColor", Qo(t4.windowColor, t4.windowOpacity)) : n6.style.backgroundColor = t4.windowColor), t4.edgeStyle && ("dropshadow" === t4.edgeStyle ? n6.firstChild.style.textShadow = `2px 2px 3px ${Xo}, 2px 2px 4px ${Xo}, 2px 2px 5px ${Xo}` : "raised" === t4.edgeStyle ? n6.firstChild.style.textShadow = `1px 1px ${Xo}, 2px 2px ${Xo}, 3px 3px ${Xo}` : "depressed" === t4.edgeStyle ? n6.firstChild.style.textShadow = `1px 1px ${Ko}, 0 1px ${Ko}, -1px -1px ${Xo}, 0 -1px ${Xo}` : "uniform" === t4.edgeStyle && (n6.firstChild.style.textShadow = `0 0 4px ${Xo}, 0 0 4px ${Xo}, 0 0 4px ${Xo}, 0 0 4px ${Xo}`)), t4.fontPercent && 1 !== t4.fontPercent) {
        const e11 = _.parseFloat(n6.style.fontSize);
        n6.style.fontSize = e11 * t4.fontPercent + "px", n6.style.height = "auto", n6.style.top = "auto";
      }
      t4.fontFamily && "default" !== t4.fontFamily && ("small-caps" === t4.fontFamily ? n6.firstChild.style.fontVariant = "small-caps" : n6.firstChild.style.fontFamily = Yo[t4.fontFamily]);
    }
  }
  updateForTrack(e9) {
    if (Array.isArray(e9) || (e9 = [e9]), "function" != typeof _.WebVTT || e9.every((e10) => !e10.activeCues)) return;
    const t4 = [];
    for (let i3 = 0; i3 < e9.length; ++i3) {
      const s5 = e9[i3];
      for (let e10 = 0; e10 < s5.activeCues.length; ++e10) t4.push(s5.activeCues[e10]);
    }
    _.WebVTT.processCues(_, t4, this.el_);
    for (let i3 = 0; i3 < e9.length; ++i3) {
      const t5 = e9[i3];
      for (let e10 = 0; e10 < t5.activeCues.length; ++e10) {
        const s5 = t5.activeCues[e10].displayState;
        or(s5, "vjs-text-track-cue", "vjs-text-track-cue-" + (t5.language ? t5.language : i3)), t5.language && pr(s5, "lang", t5.language);
      }
      this.player_.textTrackSettings && this.updateDisplayState(t5);
    }
  }
};
Ea.registerComponent("TextTrackDisplay", el);
var tl = class extends Ea {
  createEl() {
    const e9 = this.player_.isAudio(), t4 = this.localize(e9 ? "Audio Player" : "Video Player"), i3 = sr("span", { className: "vjs-control-text", textContent: this.localize("{1} is loading.", [t4]) }), s5 = super.createEl("div", { className: "vjs-loading-spinner", dir: "ltr" });
    return s5.appendChild(i3), s5;
  }
  handleLanguagechange() {
    this.$(".vjs-control-text").textContent = this.localize("{1} is loading.", [this.player_.isAudio() ? "Audio Player" : "Video Player"]);
  }
};
Ea.registerComponent("LoadingSpinner", tl);
var il = class extends Wo {
  createEl(e9, t4 = {}, i3 = {}) {
    const s5 = sr("button", t4 = Object.assign({ className: this.buildCSSClass() }, t4), i3 = Object.assign({ type: "button" }, i3));
    return this.player_.options_.experimentalSvgIcons || s5.appendChild(sr("span", { className: "vjs-icon-placeholder" }, { "aria-hidden": true })), this.createControlTextEl(s5), s5;
  }
  addChild(e9, t4 = {}) {
    const i3 = this.constructor.name;
    return gn.warn(`Adding an actionable (user controllable) child to a Button (${i3}) is not supported; use a ClickableComponent instead.`), Ea.prototype.addChild.call(this, e9, t4);
  }
  enable() {
    super.enable(), this.el_.removeAttribute("disabled");
  }
  disable() {
    super.disable(), this.el_.setAttribute("disabled", "disabled");
  }
  handleKeyDown(e9) {
    " " !== e9.key && "Enter" !== e9.key ? super.handleKeyDown(e9) : e9.stopPropagation();
  }
};
Ea.registerComponent("Button", il);
var sl = class extends il {
  constructor(e9, t4) {
    super(e9, t4), this.mouseused_ = false, this.setIcon("play"), this.on("mousedown", (e10) => this.handleMouseDown(e10));
  }
  buildCSSClass() {
    return "vjs-big-play-button";
  }
  handleClick(e9) {
    const t4 = this.player_.play();
    if (this.mouseused_ && "clientX" in e9 && "clientY" in e9) return Ua(t4), void (this.player_.tech(true) && this.player_.tech(true).focus());
    const i3 = this.player_.getChild("controlBar"), s5 = i3 && i3.getChild("playToggle");
    if (!s5) return void this.player_.tech(true).focus();
    const n6 = () => s5.focus();
    Ma(t4) ? t4.then(n6, () => {
    }) : this.setTimeout(n6, 1);
  }
  handleKeyDown(e9) {
    this.mouseused_ = false, super.handleKeyDown(e9);
  }
  handleMouseDown(e9) {
    this.mouseused_ = true;
  }
};
sl.prototype.controlText_ = "Play Video", Ea.registerComponent("BigPlayButton", sl);
var nl = class extends il {
  constructor(e9, t4) {
    super(e9, t4), this.setIcon("cancel"), this.controlText(t4 && t4.controlText || this.localize("Close"));
  }
  buildCSSClass() {
    return `vjs-close-button ${super.buildCSSClass()}`;
  }
  handleClick(e9) {
    this.trigger({ type: "close", bubbles: false });
  }
  handleKeyDown(e9) {
    "Escape" === e9.key ? (e9.preventDefault(), e9.stopPropagation(), this.trigger("click")) : super.handleKeyDown(e9);
  }
};
Ea.registerComponent("CloseButton", nl);
var rl = class extends il {
  constructor(e9, t4 = {}) {
    super(e9, t4), t4.replay = void 0 === t4.replay || t4.replay, this.setIcon("play"), this.on(e9, "play", (e10) => this.handlePlay(e10)), this.on(e9, "pause", (e10) => this.handlePause(e10)), t4.replay && this.on(e9, "ended", (e10) => this.handleEnded(e10));
  }
  buildCSSClass() {
    return `vjs-play-control ${super.buildCSSClass()}`;
  }
  handleClick(e9) {
    this.player_.paused() ? Ua(this.player_.play()) : this.player_.pause();
  }
  handleSeeked(e9) {
    this.removeClass("vjs-ended"), this.player_.paused() ? this.handlePause(e9) : this.handlePlay(e9);
  }
  handlePlay(e9) {
    this.removeClass("vjs-ended", "vjs-paused"), this.addClass("vjs-playing"), this.setIcon("pause"), this.controlText("Pause");
  }
  handlePause(e9) {
    this.removeClass("vjs-playing"), this.addClass("vjs-paused"), this.setIcon("play"), this.controlText("Play");
  }
  handleEnded(e9) {
    this.removeClass("vjs-playing"), this.addClass("vjs-ended"), this.setIcon("replay"), this.controlText("Replay"), this.one(this.player_, "seeked", (e10) => this.handleSeeked(e10));
  }
};
rl.prototype.controlText_ = "Play", Ea.registerComponent("PlayToggle", rl);
var al = class extends Ea {
  constructor(e9, t4) {
    super(e9, t4), this.on(e9, ["timeupdate", "ended", "seeking"], (e10) => this.update(e10)), this.updateTextNode_();
  }
  createEl() {
    const e9 = this.buildCSSClass(), t4 = super.createEl("div", { className: `${e9} vjs-time-control vjs-control` }), i3 = sr("span", { className: "vjs-control-text", textContent: `${this.localize(this.labelText_)} ` }, { role: "presentation" });
    return t4.appendChild(i3), this.contentEl_ = sr("span", { className: `${e9}-display` }, { role: "presentation" }), t4.appendChild(this.contentEl_), t4;
  }
  dispose() {
    this.contentEl_ = null, this.textNode_ = null, super.dispose();
  }
  update(e9) {
    (this.player_.options_.enableSmoothSeeking || "seeking" !== e9.type) && this.updateContent(e9);
  }
  updateTextNode_(e9 = 0) {
    e9 = La(e9), this.formattedTime_ !== e9 && (this.formattedTime_ = e9, this.requestNamedAnimationFrame("TimeDisplay#updateTextNode_", () => {
      if (!this.contentEl_) return;
      let e10 = this.textNode_;
      e10 && this.contentEl_.firstChild !== e10 && (e10 = null, gn.warn("TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.")), this.textNode_ = ne.createTextNode(this.formattedTime_), this.textNode_ && (e10 ? this.contentEl_.replaceChild(this.textNode_, e10) : this.contentEl_.appendChild(this.textNode_));
    }));
  }
  updateContent(e9) {
  }
};
al.prototype.labelText_ = "Time", al.prototype.controlText_ = "Time", Ea.registerComponent("TimeDisplay", al);
var ol = class extends al {
  buildCSSClass() {
    return "vjs-current-time";
  }
  updateContent(e9) {
    let t4;
    t4 = this.player_.ended() ? this.player_.duration() : this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime(), this.updateTextNode_(t4);
  }
};
ol.prototype.labelText_ = "Current Time", ol.prototype.controlText_ = "Current Time", Ea.registerComponent("CurrentTimeDisplay", ol);
var ll = class extends al {
  constructor(e9, t4) {
    super(e9, t4);
    const i3 = (e10) => this.updateContent(e10);
    this.on(e9, "durationchange", i3), this.on(e9, "loadstart", i3), this.on(e9, "loadedmetadata", i3);
  }
  buildCSSClass() {
    return "vjs-duration";
  }
  updateContent(e9) {
    const t4 = this.player_.duration();
    this.updateTextNode_(t4);
  }
};
ll.prototype.labelText_ = "Duration", ll.prototype.controlText_ = "Duration", Ea.registerComponent("DurationDisplay", ll);
var hl = class extends Ea {
  createEl() {
    const e9 = super.createEl("div", { className: "vjs-time-control vjs-time-divider" }, { "aria-hidden": true }), t4 = super.createEl("div"), i3 = super.createEl("span", { textContent: "/" });
    return t4.appendChild(i3), e9.appendChild(t4), e9;
  }
};
Ea.registerComponent("TimeDivider", hl);
var ul = class extends al {
  constructor(e9, t4) {
    super(e9, t4), this.on(e9, "durationchange", (e10) => this.updateContent(e10));
  }
  buildCSSClass() {
    return "vjs-remaining-time";
  }
  createEl() {
    const e9 = super.createEl();
    return false !== this.options_.displayNegative && e9.insertBefore(sr("span", {}, { "aria-hidden": true }, "-"), this.contentEl_), e9;
  }
  updateContent(e9) {
    if ("number" != typeof this.player_.duration()) return;
    let t4;
    t4 = this.player_.ended() ? 0 : this.player_.remainingTimeDisplay ? this.player_.remainingTimeDisplay() : this.player_.remainingTime(), this.updateTextNode_(t4);
  }
};
ul.prototype.labelText_ = "Remaining Time", ul.prototype.controlText_ = "Remaining Time", Ea.registerComponent("RemainingTimeDisplay", ul);
var dl = class extends Ea {
  constructor(e9, t4) {
    super(e9, t4), this.updateShowing(), this.on(this.player(), "durationchange", (e10) => this.updateShowing(e10));
  }
  createEl() {
    const e9 = super.createEl("div", { className: "vjs-live-control vjs-control" });
    return this.contentEl_ = sr("div", { className: "vjs-live-display" }, { "aria-live": "off" }), this.contentEl_.appendChild(sr("span", { className: "vjs-control-text", textContent: `${this.localize("Stream Type")} ` })), this.contentEl_.appendChild(ne.createTextNode(this.localize("LIVE"))), e9.appendChild(this.contentEl_), e9;
  }
  dispose() {
    this.contentEl_ = null, super.dispose();
  }
  updateShowing(e9) {
    this.player().duration() === 1 / 0 ? this.show() : this.hide();
  }
};
Ea.registerComponent("LiveDisplay", dl);
var cl = class extends il {
  constructor(e9, t4) {
    super(e9, t4), this.updateLiveEdgeStatus(), this.player_.liveTracker && (this.updateLiveEdgeStatusHandler_ = (e10) => this.updateLiveEdgeStatus(e10), this.on(this.player_.liveTracker, "liveedgechange", this.updateLiveEdgeStatusHandler_));
  }
  createEl() {
    const e9 = super.createEl("button", { className: "vjs-seek-to-live-control vjs-control" });
    return this.setIcon("circle", e9), this.textEl_ = sr("span", { className: "vjs-seek-to-live-text", textContent: this.localize("LIVE") }, { "aria-hidden": "true" }), e9.appendChild(this.textEl_), e9;
  }
  updateLiveEdgeStatus() {
    !this.player_.liveTracker || this.player_.liveTracker.atLiveEdge() ? (this.setAttribute("aria-disabled", true), this.addClass("vjs-at-live-edge"), this.controlText("Seek to live, currently playing live")) : (this.setAttribute("aria-disabled", false), this.removeClass("vjs-at-live-edge"), this.controlText("Seek to live, currently behind live"));
  }
  handleClick() {
    this.player_.liveTracker.seekToLiveEdge();
  }
  dispose() {
    this.player_.liveTracker && this.off(this.player_.liveTracker, "liveedgechange", this.updateLiveEdgeStatusHandler_), this.textEl_ = null, super.dispose();
  }
};
function pl(e9, t4, i3) {
  return e9 = Number(e9), Math.min(i3, Math.max(t4, isNaN(e9) ? t4 : e9));
}
cl.prototype.controlText_ = "Seek to live, currently playing live", Ea.registerComponent("SeekToLive", cl);
var ml = Object.freeze({ __proto__: null, clamp: pl });
var gl = class extends Ea {
  constructor(e9, t4) {
    super(e9, t4), this.handleMouseDown_ = (e10) => this.handleMouseDown(e10), this.handleMouseUp_ = (e10) => this.handleMouseUp(e10), this.handleKeyDown_ = (e10) => this.handleKeyDown(e10), this.handleClick_ = (e10) => this.handleClick(e10), this.handleMouseMove_ = (e10) => this.handleMouseMove(e10), this.update_ = (e10) => this.update(e10), this.bar = this.getChild(this.options_.barName), this.vertical(!!this.options_.vertical), this.enable();
  }
  enabled() {
    return this.enabled_;
  }
  enable() {
    this.enabled() || (this.on("mousedown", this.handleMouseDown_), this.on("touchstart", this.handleMouseDown_), this.on("keydown", this.handleKeyDown_), this.on("click", this.handleClick_), this.on(this.player_, "controlsvisible", this.update), this.playerEvent && this.on(this.player_, this.playerEvent, this.update), this.removeClass("disabled"), this.setAttribute("tabindex", 0), this.enabled_ = true);
  }
  disable() {
    if (!this.enabled()) return;
    const e9 = this.bar.el_.ownerDocument;
    this.off("mousedown", this.handleMouseDown_), this.off("touchstart", this.handleMouseDown_), this.off("keydown", this.handleKeyDown_), this.off("click", this.handleClick_), this.off(this.player_, "controlsvisible", this.update_), this.off(e9, "mousemove", this.handleMouseMove_), this.off(e9, "mouseup", this.handleMouseUp_), this.off(e9, "touchmove", this.handleMouseMove_), this.off(e9, "touchend", this.handleMouseUp_), this.removeAttribute("tabindex"), this.addClass("disabled"), this.playerEvent && this.off(this.player_, this.playerEvent, this.update), this.enabled_ = false;
  }
  createEl(e9, t4 = {}, i3 = {}) {
    return t4.className = t4.className + " vjs-slider", t4 = Object.assign({ tabIndex: 0 }, t4), i3 = Object.assign({ role: "slider", "aria-valuenow": 0, "aria-valuemin": 0, "aria-valuemax": 100 }, i3), super.createEl(e9, t4, i3);
  }
  handleMouseDown(e9) {
    const t4 = this.bar.el_.ownerDocument;
    "mousedown" === e9.type && e9.preventDefault(), "touchstart" !== e9.type || Nn || e9.preventDefault(), gr(), this.addClass("vjs-sliding"), this.trigger("slideractive"), this.on(t4, "mousemove", this.handleMouseMove_), this.on(t4, "mouseup", this.handleMouseUp_), this.on(t4, "touchmove", this.handleMouseMove_), this.on(t4, "touchend", this.handleMouseUp_), this.handleMouseMove(e9, true);
  }
  handleMouseMove(e9) {
  }
  handleMouseUp(e9) {
    const t4 = this.bar.el_.ownerDocument;
    fr(), this.removeClass("vjs-sliding"), this.trigger("sliderinactive"), this.off(t4, "mousemove", this.handleMouseMove_), this.off(t4, "mouseup", this.handleMouseUp_), this.off(t4, "touchmove", this.handleMouseMove_), this.off(t4, "touchend", this.handleMouseUp_), this.update();
  }
  update() {
    if (!this.el_ || !this.bar) return;
    const e9 = this.getProgress();
    return e9 === this.progress_ || (this.progress_ = e9, this.requestNamedAnimationFrame("Slider#update", () => {
      const t4 = this.vertical() ? "height" : "width";
      this.bar.el().style[t4] = (100 * e9).toFixed(2) + "%";
    })), e9;
  }
  getProgress() {
    return Number(pl(this.getPercent(), 0, 1).toFixed(4));
  }
  calculateDistance(e9) {
    const t4 = br(this.el_, e9);
    return this.vertical() ? t4.y : t4.x;
  }
  handleKeyDown(e9) {
    const t4 = this.options_.playerOptions.spatialNavigation, i3 = t4 && t4.enabled, s5 = t4 && t4.horizontalSeek;
    i3 ? s5 && "ArrowLeft" === e9.key || !s5 && "ArrowDown" === e9.key ? (e9.preventDefault(), e9.stopPropagation(), this.stepBack()) : s5 && "ArrowRight" === e9.key || !s5 && "ArrowUp" === e9.key ? (e9.preventDefault(), e9.stopPropagation(), this.stepForward()) : super.handleKeyDown(e9) : "ArrowLeft" === e9.key || "ArrowDown" === e9.key ? (e9.preventDefault(), e9.stopPropagation(), this.stepBack()) : "ArrowUp" === e9.key || "ArrowRight" === e9.key ? (e9.preventDefault(), e9.stopPropagation(), this.stepForward()) : super.handleKeyDown(e9);
  }
  handleClick(e9) {
    e9.stopPropagation(), e9.preventDefault();
  }
  vertical(e9) {
    if (void 0 === e9) return this.vertical_ || false;
    this.vertical_ = !!e9, this.vertical_ ? this.addClass("vjs-slider-vertical") : this.addClass("vjs-slider-horizontal");
  }
};
Ea.registerComponent("Slider", gl);
var fl = (e9, t4) => pl(e9 / t4 * 100, 0, 100).toFixed(2) + "%";
var yl = class extends Ea {
  constructor(e9, t4) {
    super(e9, t4), this.partEls_ = [], this.on(e9, "progress", (e10) => this.update(e10));
  }
  createEl() {
    const e9 = super.createEl("div", { className: "vjs-load-progress" }), t4 = sr("span", { className: "vjs-control-text" }), i3 = sr("span", { textContent: this.localize("Loaded") }), s5 = ne.createTextNode(": ");
    return this.percentageEl_ = sr("span", { className: "vjs-control-text-loaded-percentage", textContent: "0%" }), e9.appendChild(t4), t4.appendChild(i3), t4.appendChild(s5), t4.appendChild(this.percentageEl_), e9;
  }
  dispose() {
    this.partEls_ = null, this.percentageEl_ = null, super.dispose();
  }
  update(e9) {
    this.requestNamedAnimationFrame("LoadProgressBar#update", () => {
      const e10 = this.player_.liveTracker, t4 = this.player_.buffered(), i3 = e10 && e10.isLive() ? e10.seekableEnd() : this.player_.duration(), s5 = this.player_.bufferedEnd(), n6 = this.partEls_, r5 = fl(s5, i3);
      this.percent_ !== r5 && (this.el_.style.width = r5, nr(this.percentageEl_, r5), this.percent_ = r5);
      for (let a6 = 0; a6 < t4.length; a6++) {
        const e11 = t4.start(a6), i4 = t4.end(a6);
        let r6 = n6[a6];
        r6 || (r6 = this.el_.appendChild(sr()), n6[a6] = r6), r6.dataset.start === e11 && r6.dataset.end === i4 || (r6.dataset.start = e11, r6.dataset.end = i4, r6.style.left = fl(e11, s5), r6.style.width = fl(i4 - e11, s5));
      }
      for (let a6 = n6.length; a6 > t4.length; a6--) this.el_.removeChild(n6[a6 - 1]);
      n6.length = t4.length;
    });
  }
};
Ea.registerComponent("LoadProgressBar", yl);
var _l = class extends Ea {
  constructor(e9, t4) {
    super(e9, t4), this.update = ta(ea(this, this.update), Zr);
  }
  createEl() {
    return super.createEl("div", { className: "vjs-time-tooltip" }, { "aria-hidden": "true" });
  }
  update(e9, t4, i3) {
    const s5 = _r(this.el_), n6 = yr(this.player_.el()), r5 = e9.width * t4;
    if (!n6 || !s5) return;
    let a6 = e9.left - n6.left + r5, o4 = e9.width - r5 + (n6.right - e9.right);
    o4 || (o4 = e9.width - r5, a6 = r5);
    let l6 = s5.width / 2;
    a6 < l6 ? l6 += l6 - a6 : o4 < l6 && (l6 = o4), l6 < 0 ? l6 = 0 : l6 > s5.width && (l6 = s5.width), l6 = Math.round(l6), this.el_.style.right = `-${l6}px`, this.write(i3);
  }
  write(e9) {
    nr(this.el_, e9);
  }
  updateTime(e9, t4, i3, s5) {
    this.requestNamedAnimationFrame("TimeTooltip#updateTime", () => {
      let n6;
      const r5 = this.player_.duration();
      if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {
        const e10 = this.player_.liveTracker.liveWindow(), i4 = e10 - t4 * e10;
        n6 = (i4 < 1 ? "" : "-") + La(i4, e10);
      } else n6 = La(i3, r5);
      this.update(e9, t4, n6), s5 && s5();
    });
  }
};
Ea.registerComponent("TimeTooltip", _l);
var bl = class extends Ea {
  constructor(e9, t4) {
    super(e9, t4), this.setIcon("circle"), this.update = ta(ea(this, this.update), Zr);
  }
  createEl() {
    return super.createEl("div", { className: "vjs-play-progress vjs-slider-bar" }, { "aria-hidden": "true" });
  }
  update(e9, t4) {
    const i3 = this.getChild("timeTooltip");
    if (!i3) return;
    const s5 = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();
    i3.updateTime(e9, t4, s5);
  }
};
bl.prototype.options_ = { children: [] }, Xn || Dn || bl.prototype.options_.children.push("timeTooltip"), Ea.registerComponent("PlayProgressBar", bl);
var vl = class extends Ea {
  constructor(e9, t4) {
    super(e9, t4), this.update = ta(ea(this, this.update), Zr);
  }
  createEl() {
    return super.createEl("div", { className: "vjs-mouse-display" });
  }
  update(e9, t4) {
    const i3 = t4 * this.player_.duration();
    this.getChild("timeTooltip").updateTime(e9, t4, i3, () => {
      this.el_.style.left = e9.width * t4 + "px";
    });
  }
};
vl.prototype.options_ = { children: ["timeTooltip"] }, Ea.registerComponent("MouseTimeDisplay", vl);
var Tl = 5;
var Sl = 12;
var El = class extends gl {
  constructor(e9, t4) {
    super(e9, t4), this.setEventHandlers_();
  }
  setEventHandlers_() {
    this.update_ = ea(this, this.update), this.update = ta(this.update_, Zr), this.on(this.player_, ["durationchange", "timeupdate"], this.update), this.on(this.player_, ["ended"], this.update_), this.player_.liveTracker && this.on(this.player_.liveTracker, "liveedgechange", this.update), this.updateInterval = null, this.enableIntervalHandler_ = (e9) => this.enableInterval_(e9), this.disableIntervalHandler_ = (e9) => this.disableInterval_(e9), this.on(this.player_, ["playing"], this.enableIntervalHandler_), this.on(this.player_, ["ended", "pause", "waiting"], this.disableIntervalHandler_), "hidden" in ne && "visibilityState" in ne && this.on(ne, "visibilitychange", this.toggleVisibility_);
  }
  toggleVisibility_(e9) {
    "hidden" === ne.visibilityState ? (this.cancelNamedAnimationFrame("SeekBar#update"), this.cancelNamedAnimationFrame("Slider#update"), this.disableInterval_(e9)) : (this.player_.ended() || this.player_.paused() || this.enableInterval_(), this.update());
  }
  enableInterval_() {
    this.updateInterval || (this.updateInterval = this.setInterval(this.update, Zr));
  }
  disableInterval_(e9) {
    this.player_.liveTracker && this.player_.liveTracker.isLive() && e9 && "ended" !== e9.type || this.updateInterval && (this.clearInterval(this.updateInterval), this.updateInterval = null);
  }
  createEl() {
    return super.createEl("div", { className: "vjs-progress-holder" }, { "aria-label": this.localize("Progress Bar") });
  }
  update(e9) {
    if ("hidden" === ne.visibilityState) return;
    const t4 = super.update();
    return this.requestNamedAnimationFrame("SeekBar#update", () => {
      const e10 = this.player_.ended() ? this.player_.duration() : this.getCurrentTime_(), i3 = this.player_.liveTracker;
      let s5 = this.player_.duration();
      i3 && i3.isLive() && (s5 = this.player_.liveTracker.liveCurrentTime()), this.percent_ !== t4 && (this.el_.setAttribute("aria-valuenow", (100 * t4).toFixed(2)), this.percent_ = t4), this.currentTime_ === e10 && this.duration_ === s5 || (this.el_.setAttribute("aria-valuetext", this.localize("progress bar timing: currentTime={1} duration={2}", [La(e10, s5), La(s5, s5)], "{1} of {2}")), this.currentTime_ = e10, this.duration_ = s5), this.bar && this.bar.update(yr(this.el()), this.getProgress());
    }), t4;
  }
  userSeek_(e9) {
    this.player_.liveTracker && this.player_.liveTracker.isLive() && this.player_.liveTracker.nextSeekedFromUser(), this.player_.currentTime(e9);
  }
  getCurrentTime_() {
    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();
  }
  getPercent() {
    const e9 = this.getCurrentTime_();
    let t4;
    const i3 = this.player_.liveTracker;
    return i3 && i3.isLive() ? (t4 = (e9 - i3.seekableStart()) / i3.liveWindow(), i3.atLiveEdge() && (t4 = 1)) : t4 = e9 / this.player_.duration(), t4;
  }
  handleMouseDown(e9) {
    Cr(e9) && (e9.stopPropagation(), this.videoWasPlaying = !this.player_.paused(), this.player_.pause(), super.handleMouseDown(e9));
  }
  handleMouseMove(e9, t4 = false) {
    if (!Cr(e9) || isNaN(this.player_.duration())) return;
    let i3;
    t4 || this.player_.scrubbing() || this.player_.scrubbing(true);
    const s5 = this.calculateDistance(e9), n6 = this.player_.liveTracker;
    if (n6 && n6.isLive()) {
      if (s5 >= 0.99) return void n6.seekToLiveEdge();
      const e10 = n6.seekableStart(), t5 = n6.liveCurrentTime();
      if (i3 = e10 + s5 * n6.liveWindow(), i3 >= t5 && (i3 = t5), i3 <= e10 && (i3 = e10 + 0.1), i3 === 1 / 0) return;
    } else i3 = s5 * this.player_.duration(), i3 === this.player_.duration() && (i3 -= 0.1);
    this.userSeek_(i3), this.player_.options_.enableSmoothSeeking && this.update();
  }
  enable() {
    super.enable();
    const e9 = this.getChild("mouseTimeDisplay");
    e9 && e9.show();
  }
  disable() {
    super.disable();
    const e9 = this.getChild("mouseTimeDisplay");
    e9 && e9.hide();
  }
  handleMouseUp(e9) {
    super.handleMouseUp(e9), e9 && e9.stopPropagation(), this.player_.scrubbing(false), this.player_.trigger({ type: "timeupdate", target: this, manuallyTriggered: true }), this.videoWasPlaying ? Ua(this.player_.play()) : this.update_();
  }
  stepForward() {
    this.userSeek_(this.player_.currentTime() + Tl);
  }
  stepBack() {
    this.userSeek_(this.player_.currentTime() - Tl);
  }
  handleAction(e9) {
    this.player_.paused() ? this.player_.play() : this.player_.pause();
  }
  handleKeyDown(e9) {
    const t4 = this.player_.liveTracker;
    if (" " === e9.key || "Enter" === e9.key) e9.preventDefault(), e9.stopPropagation(), this.handleAction(e9);
    else if ("Home" === e9.key) e9.preventDefault(), e9.stopPropagation(), this.userSeek_(0);
    else if ("End" === e9.key) e9.preventDefault(), e9.stopPropagation(), t4 && t4.isLive() ? this.userSeek_(t4.liveCurrentTime()) : this.userSeek_(this.player_.duration());
    else if (/^[0-9]$/.test(e9.key)) {
      e9.preventDefault(), e9.stopPropagation();
      const i3 = 0.1 * parseInt(e9.key, 10);
      t4 && t4.isLive() ? this.userSeek_(t4.seekableStart() + t4.liveWindow() * i3) : this.userSeek_(this.player_.duration() * i3);
    } else "PageDown" === e9.key ? (e9.preventDefault(), e9.stopPropagation(), this.userSeek_(this.player_.currentTime() - Tl * Sl)) : "PageUp" === e9.key ? (e9.preventDefault(), e9.stopPropagation(), this.userSeek_(this.player_.currentTime() + Tl * Sl)) : super.handleKeyDown(e9);
  }
  dispose() {
    this.disableInterval_(), this.off(this.player_, ["durationchange", "timeupdate"], this.update), this.off(this.player_, ["ended"], this.update_), this.player_.liveTracker && this.off(this.player_.liveTracker, "liveedgechange", this.update), this.off(this.player_, ["playing"], this.enableIntervalHandler_), this.off(this.player_, ["ended", "pause", "waiting"], this.disableIntervalHandler_), "hidden" in ne && "visibilityState" in ne && this.off(ne, "visibilitychange", this.toggleVisibility_), super.dispose();
  }
};
El.prototype.options_ = { children: ["loadProgressBar", "playProgressBar"], barName: "playProgressBar" }, Xn || Dn || El.prototype.options_.children.splice(1, 0, "mouseTimeDisplay"), Ea.registerComponent("SeekBar", El);
var wl = class extends Ea {
  constructor(e9, t4) {
    super(e9, t4), this.handleMouseMove = ta(ea(this, this.handleMouseMove), Zr), this.throttledHandleMouseSeek = ta(ea(this, this.handleMouseSeek), Zr), this.handleMouseUpHandler_ = (e10) => this.handleMouseUp(e10), this.handleMouseDownHandler_ = (e10) => this.handleMouseDown(e10), this.enable();
  }
  createEl() {
    return super.createEl("div", { className: "vjs-progress-control vjs-control" });
  }
  handleMouseMove(e9) {
    const t4 = this.getChild("seekBar");
    if (!t4) return;
    const i3 = t4.getChild("playProgressBar"), s5 = t4.getChild("mouseTimeDisplay");
    if (!i3 && !s5) return;
    const n6 = t4.el(), r5 = _r(n6);
    let a6 = br(n6, e9).x;
    a6 = pl(a6, 0, 1), s5 && s5.update(r5, a6), i3 && i3.update(r5, t4.getProgress());
  }
  handleMouseSeek(e9) {
    const t4 = this.getChild("seekBar");
    t4 && t4.handleMouseMove(e9);
  }
  enabled() {
    return this.enabled_;
  }
  disable() {
    if (this.children().forEach((e9) => e9.disable && e9.disable()), this.enabled() && (this.off(["mousedown", "touchstart"], this.handleMouseDownHandler_), this.off(this.el_, "mousemove", this.handleMouseMove), this.removeListenersAddedOnMousedownAndTouchstart(), this.addClass("disabled"), this.enabled_ = false, this.player_.scrubbing())) {
      const e9 = this.getChild("seekBar");
      this.player_.scrubbing(false), e9.videoWasPlaying && Ua(this.player_.play());
    }
  }
  enable() {
    this.children().forEach((e9) => e9.enable && e9.enable()), this.enabled() || (this.on(["mousedown", "touchstart"], this.handleMouseDownHandler_), this.on(this.el_, "mousemove", this.handleMouseMove), this.removeClass("disabled"), this.enabled_ = true);
  }
  removeListenersAddedOnMousedownAndTouchstart() {
    const e9 = this.el_.ownerDocument;
    this.off(e9, "mousemove", this.throttledHandleMouseSeek), this.off(e9, "touchmove", this.throttledHandleMouseSeek), this.off(e9, "mouseup", this.handleMouseUpHandler_), this.off(e9, "touchend", this.handleMouseUpHandler_);
  }
  handleMouseDown(e9) {
    const t4 = this.el_.ownerDocument, i3 = this.getChild("seekBar");
    i3 && i3.handleMouseDown(e9), this.on(t4, "mousemove", this.throttledHandleMouseSeek), this.on(t4, "touchmove", this.throttledHandleMouseSeek), this.on(t4, "mouseup", this.handleMouseUpHandler_), this.on(t4, "touchend", this.handleMouseUpHandler_);
  }
  handleMouseUp(e9) {
    const t4 = this.getChild("seekBar");
    t4 && t4.handleMouseUp(e9), this.removeListenersAddedOnMousedownAndTouchstart();
  }
};
wl.prototype.options_ = { children: ["seekBar"] }, Ea.registerComponent("ProgressControl", wl);
var Cl = class extends il {
  constructor(e9, t4) {
    super(e9, t4), this.setIcon("picture-in-picture-enter"), this.on(e9, ["enterpictureinpicture", "leavepictureinpicture"], (e10) => this.handlePictureInPictureChange(e10)), this.on(e9, ["disablepictureinpicturechanged", "loadedmetadata"], (e10) => this.handlePictureInPictureEnabledChange(e10)), this.on(e9, ["loadedmetadata", "audioonlymodechange", "audiopostermodechange"], () => this.handlePictureInPictureAudioModeChange()), this.disable();
  }
  buildCSSClass() {
    return `vjs-picture-in-picture-control vjs-hidden ${super.buildCSSClass()}`;
  }
  handlePictureInPictureAudioModeChange() {
    "audio" === this.player_.currentType().substring(0, 5) || this.player_.audioPosterMode() || this.player_.audioOnlyMode() ? (this.player_.isInPictureInPicture() && this.player_.exitPictureInPicture(), this.hide()) : this.show();
  }
  handlePictureInPictureEnabledChange() {
    ne.pictureInPictureEnabled && false === this.player_.disablePictureInPicture() || this.player_.options_.enableDocumentPictureInPicture && "documentPictureInPicture" in _ ? this.enable() : this.disable();
  }
  handlePictureInPictureChange(e9) {
    this.player_.isInPictureInPicture() ? (this.setIcon("picture-in-picture-exit"), this.controlText("Exit Picture-in-Picture")) : (this.setIcon("picture-in-picture-enter"), this.controlText("Picture-in-Picture")), this.handlePictureInPictureEnabledChange();
  }
  handleClick(e9) {
    this.player_.isInPictureInPicture() ? this.player_.exitPictureInPicture() : this.player_.requestPictureInPicture();
  }
  show() {
    "function" == typeof ne.exitPictureInPicture && super.show();
  }
};
Cl.prototype.controlText_ = "Picture-in-Picture", Ea.registerComponent("PictureInPictureToggle", Cl);
var kl = class extends il {
  constructor(e9, t4) {
    super(e9, t4), this.setIcon("fullscreen-enter"), this.on(e9, "fullscreenchange", (e10) => this.handleFullscreenChange(e10)), false === ne[e9.fsApi_.fullscreenEnabled] && this.disable();
  }
  buildCSSClass() {
    return `vjs-fullscreen-control ${super.buildCSSClass()}`;
  }
  handleFullscreenChange(e9) {
    this.player_.isFullscreen() ? (this.controlText("Exit Fullscreen"), this.setIcon("fullscreen-exit")) : (this.controlText("Fullscreen"), this.setIcon("fullscreen-enter"));
  }
  handleClick(e9) {
    this.player_.isFullscreen() ? this.player_.exitFullscreen() : this.player_.requestFullscreen();
  }
};
kl.prototype.controlText_ = "Fullscreen", Ea.registerComponent("FullscreenToggle", kl);
var Il = function(e9, t4) {
  t4.tech_ && !t4.tech_.featuresVolumeControl && e9.addClass("vjs-hidden"), e9.on(t4, "loadstart", function() {
    t4.tech_.featuresVolumeControl ? e9.removeClass("vjs-hidden") : e9.addClass("vjs-hidden");
  });
};
var xl = class extends Ea {
  createEl() {
    const e9 = super.createEl("div", { className: "vjs-volume-level" });
    return this.setIcon("circle", e9), e9.appendChild(super.createEl("span", { className: "vjs-control-text" })), e9;
  }
};
Ea.registerComponent("VolumeLevel", xl);
var Al = class extends Ea {
  constructor(e9, t4) {
    super(e9, t4), this.update = ta(ea(this, this.update), Zr);
  }
  createEl() {
    return super.createEl("div", { className: "vjs-volume-tooltip" }, { "aria-hidden": "true" });
  }
  update(e9, t4, i3, s5) {
    if (!i3) {
      const i4 = yr(this.el_), s6 = yr(this.player_.el()), n6 = e9.width * t4;
      if (!s6 || !i4) return;
      const r5 = e9.left - s6.left + n6, a6 = e9.width - n6 + (s6.right - e9.right);
      let o4 = i4.width / 2;
      r5 < o4 ? o4 += o4 - r5 : a6 < o4 && (o4 = a6), o4 < 0 ? o4 = 0 : o4 > i4.width && (o4 = i4.width), this.el_.style.right = `-${o4}px`;
    }
    this.write(`${s5}%`);
  }
  write(e9) {
    nr(this.el_, e9);
  }
  updateVolume(e9, t4, i3, s5, n6) {
    this.requestNamedAnimationFrame("VolumeLevelTooltip#updateVolume", () => {
      this.update(e9, t4, i3, s5.toFixed(0)), n6 && n6();
    });
  }
};
Ea.registerComponent("VolumeLevelTooltip", Al);
var Dl = class extends Ea {
  constructor(e9, t4) {
    super(e9, t4), this.update = ta(ea(this, this.update), Zr);
  }
  createEl() {
    return super.createEl("div", { className: "vjs-mouse-display" });
  }
  update(e9, t4, i3) {
    const s5 = 100 * t4;
    this.getChild("volumeLevelTooltip").updateVolume(e9, t4, i3, s5, () => {
      i3 ? this.el_.style.bottom = e9.height * t4 + "px" : this.el_.style.left = e9.width * t4 + "px";
    });
  }
};
Dl.prototype.options_ = { children: ["volumeLevelTooltip"] }, Ea.registerComponent("MouseVolumeLevelDisplay", Dl);
var Pl = class extends gl {
  constructor(e9, t4) {
    super(e9, t4), this.on("slideractive", (e10) => this.updateLastVolume_(e10)), this.on(e9, "volumechange", (e10) => this.updateARIAAttributes(e10)), e9.ready(() => this.updateARIAAttributes());
  }
  createEl() {
    return super.createEl("div", { className: "vjs-volume-bar vjs-slider-bar" }, { "aria-label": this.localize("Volume Level"), "aria-live": "polite" });
  }
  handleMouseDown(e9) {
    Cr(e9) && super.handleMouseDown(e9);
  }
  handleMouseMove(e9) {
    const t4 = this.getChild("mouseVolumeLevelDisplay");
    if (t4) {
      const i3 = this.el(), s5 = yr(i3), n6 = this.vertical();
      let r5 = br(i3, e9);
      r5 = n6 ? r5.y : r5.x, r5 = pl(r5, 0, 1), t4.update(s5, r5, n6);
    }
    Cr(e9) && (this.checkMuted(), this.player_.volume(this.calculateDistance(e9)));
  }
  checkMuted() {
    this.player_.muted() && this.player_.muted(false);
  }
  getPercent() {
    return this.player_.muted() ? 0 : this.player_.volume();
  }
  stepForward() {
    this.checkMuted(), this.player_.volume(this.player_.volume() + 0.1);
  }
  stepBack() {
    this.checkMuted(), this.player_.volume(this.player_.volume() - 0.1);
  }
  updateARIAAttributes(e9) {
    const t4 = this.player_.muted() ? 0 : this.volumeAsPercentage_();
    this.el_.setAttribute("aria-valuenow", t4), this.el_.setAttribute("aria-valuetext", t4 + "%");
  }
  volumeAsPercentage_() {
    return Math.round(100 * this.player_.volume());
  }
  updateLastVolume_() {
    const e9 = this.player_.volume();
    this.one("sliderinactive", () => {
      0 === this.player_.volume() && this.player_.lastVolume_(e9);
    });
  }
};
Pl.prototype.options_ = { children: ["volumeLevel"], barName: "volumeLevel" }, Xn || Dn || Pl.prototype.options_.children.splice(0, 0, "mouseVolumeLevelDisplay"), Pl.prototype.playerEvent = "volumechange", Ea.registerComponent("VolumeBar", Pl);
var Ll = class extends Ea {
  constructor(e9, t4 = {}) {
    t4.vertical = t4.vertical || false, (void 0 === t4.volumeBar || Sn(t4.volumeBar)) && (t4.volumeBar = t4.volumeBar || {}, t4.volumeBar.vertical = t4.vertical), super(e9, t4), Il(this, e9), this.throttledHandleMouseMove = ta(ea(this, this.handleMouseMove), Zr), this.handleMouseUpHandler_ = (e10) => this.handleMouseUp(e10), this.on("mousedown", (e10) => this.handleMouseDown(e10)), this.on("touchstart", (e10) => this.handleMouseDown(e10)), this.on("mousemove", (e10) => this.handleMouseMove(e10)), this.on(this.volumeBar, ["focus", "slideractive"], () => {
      this.volumeBar.addClass("vjs-slider-active"), this.addClass("vjs-slider-active"), this.trigger("slideractive");
    }), this.on(this.volumeBar, ["blur", "sliderinactive"], () => {
      this.volumeBar.removeClass("vjs-slider-active"), this.removeClass("vjs-slider-active"), this.trigger("sliderinactive");
    });
  }
  createEl() {
    let e9 = "vjs-volume-horizontal";
    return this.options_.vertical && (e9 = "vjs-volume-vertical"), super.createEl("div", { className: `vjs-volume-control vjs-control ${e9}` });
  }
  handleMouseDown(e9) {
    const t4 = this.el_.ownerDocument;
    this.on(t4, "mousemove", this.throttledHandleMouseMove), this.on(t4, "touchmove", this.throttledHandleMouseMove), this.on(t4, "mouseup", this.handleMouseUpHandler_), this.on(t4, "touchend", this.handleMouseUpHandler_);
  }
  handleMouseUp(e9) {
    const t4 = this.el_.ownerDocument;
    this.off(t4, "mousemove", this.throttledHandleMouseMove), this.off(t4, "touchmove", this.throttledHandleMouseMove), this.off(t4, "mouseup", this.handleMouseUpHandler_), this.off(t4, "touchend", this.handleMouseUpHandler_);
  }
  handleMouseMove(e9) {
    this.volumeBar.handleMouseMove(e9);
  }
};
Ll.prototype.options_ = { children: ["volumeBar"] }, Ea.registerComponent("VolumeControl", Ll);
var Ol = function(e9, t4) {
  t4.tech_ && !t4.tech_.featuresMuteControl && e9.addClass("vjs-hidden"), e9.on(t4, "loadstart", function() {
    t4.tech_.featuresMuteControl ? e9.removeClass("vjs-hidden") : e9.addClass("vjs-hidden");
  });
};
var Nl = class extends il {
  constructor(e9, t4) {
    super(e9, t4), Ol(this, e9), this.on(e9, ["loadstart", "volumechange"], (e10) => this.update(e10));
  }
  buildCSSClass() {
    return `vjs-mute-control ${super.buildCSSClass()}`;
  }
  handleClick(e9) {
    const t4 = this.player_.volume(), i3 = this.player_.lastVolume_();
    if (0 === t4) {
      const e10 = i3 < 0.1 ? 0.1 : i3;
      this.player_.volume(e10), this.player_.muted(false);
    } else this.player_.muted(!this.player_.muted());
  }
  update(e9) {
    this.updateIcon_(), this.updateControlText_();
  }
  updateIcon_() {
    const e9 = this.player_.volume();
    let t4 = 3;
    this.setIcon("volume-high"), Xn && this.player_.tech_ && this.player_.tech_.el_ && this.player_.muted(this.player_.tech_.el_.muted), 0 === e9 || this.player_.muted() ? (this.setIcon("volume-mute"), t4 = 0) : e9 < 0.33 ? (this.setIcon("volume-low"), t4 = 1) : e9 < 0.67 && (this.setIcon("volume-medium"), t4 = 2), lr(this.el_, [0, 1, 2, 3].reduce((e10, t5) => e10 + `${t5 ? " " : ""}vjs-vol-${t5}`, "")), or(this.el_, `vjs-vol-${t4}`);
  }
  updateControlText_() {
    const e9 = this.player_.muted() || 0 === this.player_.volume() ? "Unmute" : "Mute";
    this.controlText() !== e9 && this.controlText(e9);
  }
};
Nl.prototype.controlText_ = "Mute", Ea.registerComponent("MuteToggle", Nl);
var Rl = class extends Ea {
  constructor(e9, t4 = {}) {
    void 0 !== t4.inline ? t4.inline = t4.inline : t4.inline = true, (void 0 === t4.volumeControl || Sn(t4.volumeControl)) && (t4.volumeControl = t4.volumeControl || {}, t4.volumeControl.vertical = !t4.inline), super(e9, t4), this.handleKeyPressHandler_ = (e10) => this.handleKeyPress(e10), this.on(e9, ["loadstart"], (e10) => this.volumePanelState_(e10)), this.on(this.muteToggle, "keyup", (e10) => this.handleKeyPress(e10)), this.on(this.volumeControl, "keyup", (e10) => this.handleVolumeControlKeyUp(e10)), this.on("keydown", (e10) => this.handleKeyPress(e10)), this.on("mouseover", (e10) => this.handleMouseOver(e10)), this.on("mouseout", (e10) => this.handleMouseOut(e10)), this.on(this.volumeControl, ["slideractive"], this.sliderActive_), this.on(this.volumeControl, ["sliderinactive"], this.sliderInactive_);
  }
  sliderActive_() {
    this.addClass("vjs-slider-active");
  }
  sliderInactive_() {
    this.removeClass("vjs-slider-active");
  }
  volumePanelState_() {
    this.volumeControl.hasClass("vjs-hidden") && this.muteToggle.hasClass("vjs-hidden") && this.addClass("vjs-hidden"), this.volumeControl.hasClass("vjs-hidden") && !this.muteToggle.hasClass("vjs-hidden") && this.addClass("vjs-mute-toggle-only");
  }
  createEl() {
    let e9 = "vjs-volume-panel-horizontal";
    return this.options_.inline || (e9 = "vjs-volume-panel-vertical"), super.createEl("div", { className: `vjs-volume-panel vjs-control ${e9}` });
  }
  dispose() {
    this.handleMouseOut(), super.dispose();
  }
  handleVolumeControlKeyUp(e9) {
    "Escape" === e9.key && this.muteToggle.focus();
  }
  handleMouseOver(e9) {
    this.addClass("vjs-hover"), Gr(ne, "keyup", this.handleKeyPressHandler_);
  }
  handleMouseOut(e9) {
    this.removeClass("vjs-hover"), Xr(ne, "keyup", this.handleKeyPressHandler_);
  }
  handleKeyPress(e9) {
    "Escape" === e9.key && this.handleMouseOut();
  }
};
Rl.prototype.options_ = { children: ["muteToggle", "volumeControl"] }, Ea.registerComponent("VolumePanel", Rl);
var Ml = class extends il {
  constructor(e9, t4) {
    super(e9, t4), this.validOptions = [5, 10, 30], this.skipTime = this.getSkipForwardTime(), this.skipTime && this.validOptions.includes(this.skipTime) ? (this.setIcon(`forward-${this.skipTime}`), this.controlText(this.localize("Skip forward {1} seconds", [this.skipTime.toLocaleString(e9.language())])), this.show()) : this.hide();
  }
  getSkipForwardTime() {
    const e9 = this.options_.playerOptions;
    return e9.controlBar && e9.controlBar.skipButtons && e9.controlBar.skipButtons.forward;
  }
  buildCSSClass() {
    return `vjs-skip-forward-${this.getSkipForwardTime()} ${super.buildCSSClass()}`;
  }
  handleClick(e9) {
    if (isNaN(this.player_.duration())) return;
    const t4 = this.player_.currentTime(), i3 = this.player_.liveTracker, s5 = i3 && i3.isLive() ? i3.seekableEnd() : this.player_.duration();
    let n6;
    n6 = t4 + this.skipTime <= s5 ? t4 + this.skipTime : s5, this.player_.currentTime(n6);
  }
  handleLanguagechange() {
    this.controlText(this.localize("Skip forward {1} seconds", [this.skipTime]));
  }
};
Ml.prototype.controlText_ = "Skip Forward", Ea.registerComponent("SkipForward", Ml);
var Ul = class extends il {
  constructor(e9, t4) {
    super(e9, t4), this.validOptions = [5, 10, 30], this.skipTime = this.getSkipBackwardTime(), this.skipTime && this.validOptions.includes(this.skipTime) ? (this.setIcon(`replay-${this.skipTime}`), this.controlText(this.localize("Skip backward {1} seconds", [this.skipTime.toLocaleString(e9.language())])), this.show()) : this.hide();
  }
  getSkipBackwardTime() {
    const e9 = this.options_.playerOptions;
    return e9.controlBar && e9.controlBar.skipButtons && e9.controlBar.skipButtons.backward;
  }
  buildCSSClass() {
    return `vjs-skip-backward-${this.getSkipBackwardTime()} ${super.buildCSSClass()}`;
  }
  handleClick(e9) {
    const t4 = this.player_.currentTime(), i3 = this.player_.liveTracker, s5 = i3 && i3.isLive() && i3.seekableStart();
    let n6;
    n6 = s5 && t4 - this.skipTime <= s5 ? s5 : t4 >= this.skipTime ? t4 - this.skipTime : 0, this.player_.currentTime(n6);
  }
  handleLanguagechange() {
    this.controlText(this.localize("Skip backward {1} seconds", [this.skipTime]));
  }
};
Ul.prototype.controlText_ = "Skip Backward", Ea.registerComponent("SkipBackward", Ul);
var Bl = class extends Ea {
  constructor(e9, t4) {
    super(e9, t4), t4 && (this.menuButton_ = t4.menuButton), this.focusedChild_ = -1, this.on("keydown", (e10) => this.handleKeyDown(e10)), this.boundHandleBlur_ = (e10) => this.handleBlur(e10), this.boundHandleTapClick_ = (e10) => this.handleTapClick(e10);
  }
  addEventListenerForItem(e9) {
    e9 instanceof Ea && (this.on(e9, "blur", this.boundHandleBlur_), this.on(e9, ["tap", "click"], this.boundHandleTapClick_));
  }
  removeEventListenerForItem(e9) {
    e9 instanceof Ea && (this.off(e9, "blur", this.boundHandleBlur_), this.off(e9, ["tap", "click"], this.boundHandleTapClick_));
  }
  removeChild(e9) {
    "string" == typeof e9 && (e9 = this.getChild(e9)), this.removeEventListenerForItem(e9), super.removeChild(e9);
  }
  addItem(e9) {
    const t4 = this.addChild(e9);
    t4 && this.addEventListenerForItem(t4);
  }
  createEl() {
    const e9 = this.options_.contentElType || "ul";
    this.contentEl_ = sr(e9, { className: "vjs-menu-content" }), this.contentEl_.setAttribute("role", "menu");
    const t4 = super.createEl("div", { append: this.contentEl_, className: "vjs-menu" });
    return t4.appendChild(this.contentEl_), Gr(t4, "click", function(e10) {
      e10.preventDefault(), e10.stopImmediatePropagation();
    }), t4;
  }
  dispose() {
    this.contentEl_ = null, this.boundHandleBlur_ = null, this.boundHandleTapClick_ = null, super.dispose();
  }
  handleBlur(e9) {
    const t4 = e9.relatedTarget || ne.activeElement;
    if (!this.children().some((e10) => e10.el() === t4)) {
      const e10 = this.menuButton_;
      e10 && e10.buttonPressed_ && t4 !== e10.el().firstChild && e10.unpressButton();
    }
  }
  handleTapClick(e9) {
    if (this.menuButton_) {
      this.menuButton_.unpressButton();
      const t4 = this.children();
      if (!Array.isArray(t4)) return;
      const i3 = t4.filter((t5) => t5.el() === e9.target)[0];
      if (!i3) return;
      "CaptionSettingsMenuItem" !== i3.name() && this.menuButton_.focus();
    }
  }
  handleKeyDown(e9) {
    "ArrowLeft" === e9.key || "ArrowDown" === e9.key ? (e9.preventDefault(), e9.stopPropagation(), this.stepForward()) : "ArrowRight" !== e9.key && "ArrowUp" !== e9.key || (e9.preventDefault(), e9.stopPropagation(), this.stepBack());
  }
  stepForward() {
    let e9 = 0;
    void 0 !== this.focusedChild_ && (e9 = this.focusedChild_ + 1), this.focus(e9);
  }
  stepBack() {
    let e9 = 0;
    void 0 !== this.focusedChild_ && (e9 = this.focusedChild_ - 1), this.focus(e9);
  }
  focus(e9 = 0) {
    const t4 = this.children().slice();
    t4.length && t4[0].hasClass("vjs-menu-title") && t4.shift(), t4.length > 0 && (e9 < 0 ? e9 = 0 : e9 >= t4.length && (e9 = t4.length - 1), this.focusedChild_ = e9, t4[e9].el_.focus());
  }
};
Ea.registerComponent("Menu", Bl);
var Fl = class extends Ea {
  constructor(e9, t4 = {}) {
    super(e9, t4), this.menuButton_ = new il(e9, t4), this.menuButton_.controlText(this.controlText_), this.menuButton_.el_.setAttribute("aria-haspopup", "true");
    const i3 = il.prototype.buildCSSClass();
    this.menuButton_.el_.className = this.buildCSSClass() + " " + i3, this.menuButton_.removeClass("vjs-control"), this.addChild(this.menuButton_), this.update(), this.enabled_ = true;
    const s5 = (e10) => this.handleClick(e10);
    this.handleMenuKeyUp_ = (e10) => this.handleMenuKeyUp(e10), this.on(this.menuButton_, "tap", s5), this.on(this.menuButton_, "click", s5), this.on(this.menuButton_, "keydown", (e10) => this.handleKeyDown(e10)), this.on(this.menuButton_, "mouseenter", () => {
      this.addClass("vjs-hover"), this.menu.show(), Gr(ne, "keyup", this.handleMenuKeyUp_);
    }), this.on("mouseleave", (e10) => this.handleMouseLeave(e10)), this.on("keydown", (e10) => this.handleSubmenuKeyDown(e10));
  }
  update() {
    const e9 = this.createMenu();
    this.menu && (this.menu.dispose(), this.removeChild(this.menu)), this.menu = e9, this.addChild(e9), this.buttonPressed_ = false, this.menuButton_.el_.setAttribute("aria-expanded", "false"), this.items && this.items.length <= this.hideThreshold_ ? (this.hide(), this.menu.contentEl_.removeAttribute("role")) : (this.show(), this.menu.contentEl_.setAttribute("role", "menu"));
  }
  createMenu() {
    const e9 = new Bl(this.player_, { menuButton: this });
    if (this.hideThreshold_ = 0, this.options_.title) {
      const t4 = sr("li", { className: "vjs-menu-title", textContent: va(this.options_.title), tabIndex: -1 }), i3 = new Ea(this.player_, { el: t4 });
      e9.addItem(i3);
    }
    if (this.items = this.createItems(), this.items) for (let t4 = 0; t4 < this.items.length; t4++) e9.addItem(this.items[t4]);
    return e9;
  }
  createItems() {
  }
  createEl() {
    return super.createEl("div", { className: this.buildWrapperCSSClass() }, {});
  }
  setIcon(e9) {
    super.setIcon(e9, this.menuButton_.el_);
  }
  buildWrapperCSSClass() {
    let e9 = "vjs-menu-button";
    true === this.options_.inline ? e9 += "-inline" : e9 += "-popup";
    return `vjs-menu-button ${e9} ${il.prototype.buildCSSClass()} ${super.buildCSSClass()}`;
  }
  buildCSSClass() {
    let e9 = "vjs-menu-button";
    return true === this.options_.inline ? e9 += "-inline" : e9 += "-popup", `vjs-menu-button ${e9} ${super.buildCSSClass()}`;
  }
  controlText(e9, t4 = this.menuButton_.el()) {
    return this.menuButton_.controlText(e9, t4);
  }
  dispose() {
    this.handleMouseLeave(), super.dispose();
  }
  handleClick(e9) {
    this.buttonPressed_ ? this.unpressButton() : this.pressButton();
  }
  handleMouseLeave(e9) {
    this.removeClass("vjs-hover"), Xr(ne, "keyup", this.handleMenuKeyUp_);
  }
  focus() {
    this.menuButton_.focus();
  }
  blur() {
    this.menuButton_.blur();
  }
  handleKeyDown(e9) {
    "Esc" === e9.key || "Tab" === e9.key ? (this.buttonPressed_ && this.unpressButton(), "Tab" === !e9.key && (e9.preventDefault(), this.menuButton_.focus())) : "Up" !== e9.key && ("Down" !== e9.key || this.player_.options_.playerOptions.spatialNavigation && this.player_.options_.playerOptions.spatialNavigation.enabled) || this.buttonPressed_ || (e9.preventDefault(), this.pressButton());
  }
  handleMenuKeyUp(e9) {
    "Esc" !== e9.key && "Tab" !== e9.key || this.removeClass("vjs-hover");
  }
  handleSubmenuKeyPress(e9) {
    this.handleSubmenuKeyDown(e9);
  }
  handleSubmenuKeyDown(e9) {
    "Esc" !== e9.key && "Tab" !== e9.key || (this.buttonPressed_ && this.unpressButton(), "Tab" === !e9.key && (e9.preventDefault(), this.menuButton_.focus()));
  }
  pressButton() {
    if (this.enabled_) {
      if (this.buttonPressed_ = true, this.menu.show(), this.menu.lockShowing(), this.menuButton_.el_.setAttribute("aria-expanded", "true"), Xn && tr()) return;
      this.menu.focus();
    }
  }
  unpressButton() {
    this.enabled_ && (this.buttonPressed_ = false, this.menu.unlockShowing(), this.menu.hide(), this.menuButton_.el_.setAttribute("aria-expanded", "false"));
  }
  disable() {
    this.unpressButton(), this.enabled_ = false, this.addClass("vjs-disabled"), this.menuButton_.disable();
  }
  enable() {
    this.enabled_ = true, this.removeClass("vjs-disabled"), this.menuButton_.enable();
  }
};
Ea.registerComponent("MenuButton", Fl);
var ql = class extends Fl {
  constructor(e9, t4) {
    const i3 = t4.tracks;
    if (super(e9, t4), this.items.length <= 1 && this.hide(), !i3) return;
    const s5 = ea(this, this.update);
    i3.addEventListener("removetrack", s5), i3.addEventListener("addtrack", s5), i3.addEventListener("labelchange", s5), this.player_.on("ready", s5), this.player_.on("dispose", function() {
      i3.removeEventListener("removetrack", s5), i3.removeEventListener("addtrack", s5), i3.removeEventListener("labelchange", s5);
    });
  }
};
Ea.registerComponent("TrackButton", ql);
var jl = class extends Wo {
  constructor(e9, t4) {
    super(e9, t4), this.selectable = t4.selectable, this.isSelected_ = t4.selected || false, this.multiSelectable = t4.multiSelectable, this.selected(this.isSelected_), this.selectable ? this.multiSelectable ? this.el_.setAttribute("role", "menuitemcheckbox") : this.el_.setAttribute("role", "menuitemradio") : this.el_.setAttribute("role", "menuitem");
  }
  createEl(e9, t4, i3) {
    this.nonIconControl = true;
    const s5 = super.createEl("li", Object.assign({ className: "vjs-menu-item", tabIndex: -1 }, t4), i3), n6 = sr("span", { className: "vjs-menu-item-text", textContent: this.localize(this.options_.label) });
    return this.player_.options_.experimentalSvgIcons ? s5.appendChild(n6) : s5.replaceChild(n6, s5.querySelector(".vjs-icon-placeholder")), s5;
  }
  handleKeyDown(e9) {
    ["Tab", "Escape", "ArrowUp", "ArrowLeft", "ArrowRight", "ArrowDown"].includes(e9.key) || super.handleKeyDown(e9);
  }
  handleClick(e9) {
    this.selected(true);
  }
  selected(e9) {
    this.selectable && (e9 ? (this.addClass("vjs-selected"), this.el_.setAttribute("aria-checked", "true"), this.controlText(", selected"), this.isSelected_ = true) : (this.removeClass("vjs-selected"), this.el_.setAttribute("aria-checked", "false"), this.controlText(""), this.isSelected_ = false));
  }
};
Ea.registerComponent("MenuItem", jl);
var $l = class extends jl {
  constructor(e9, t4) {
    const i3 = t4.track, s5 = e9.textTracks();
    t4.label = i3.label || i3.language || "Unknown", t4.selected = "showing" === i3.mode, super(e9, t4), this.track = i3, this.kinds = (t4.kinds || [t4.kind || this.track.kind]).filter(Boolean);
    const n6 = (...e10) => {
      this.handleTracksChange.apply(this, e10);
    }, r5 = (...e10) => {
      this.handleSelectedLanguageChange.apply(this, e10);
    };
    if (e9.on(["loadstart", "texttrackchange"], n6), s5.addEventListener("change", n6), s5.addEventListener("selectedlanguagechange", r5), this.on("dispose", function() {
      e9.off(["loadstart", "texttrackchange"], n6), s5.removeEventListener("change", n6), s5.removeEventListener("selectedlanguagechange", r5);
    }), void 0 === s5.onchange) {
      let e10;
      this.on(["tap", "click"], function() {
        if ("object" != typeof _.Event) try {
          e10 = new _.Event("change");
        } catch (t5) {
        }
        e10 || (e10 = ne.createEvent("Event"), e10.initEvent("change", true, true)), s5.dispatchEvent(e10);
      });
    }
    this.handleTracksChange();
  }
  handleClick(e9) {
    const t4 = this.track, i3 = this.player_.textTracks();
    if (super.handleClick(e9), i3) for (let s5 = 0; s5 < i3.length; s5++) {
      const e10 = i3[s5];
      -1 !== this.kinds.indexOf(e10.kind) && (e10 === t4 ? "showing" !== e10.mode && (e10.mode = "showing") : "disabled" !== e10.mode && (e10.mode = "disabled"));
    }
  }
  handleTracksChange(e9) {
    const t4 = "showing" === this.track.mode;
    t4 !== this.isSelected_ && this.selected(t4);
  }
  handleSelectedLanguageChange(e9) {
    if ("showing" === this.track.mode) {
      const e10 = this.player_.cache_.selectedLanguage;
      if (e10 && e10.enabled && e10.language === this.track.language && e10.kind !== this.track.kind) return;
      this.player_.cache_.selectedLanguage = { enabled: true, language: this.track.language, kind: this.track.kind };
    }
  }
  dispose() {
    this.track = null, super.dispose();
  }
};
Ea.registerComponent("TextTrackMenuItem", $l);
var Hl = class extends $l {
  constructor(e9, t4) {
    t4.track = { player: e9, kind: t4.kind, kinds: t4.kinds, default: false, mode: "disabled" }, t4.kinds || (t4.kinds = [t4.kind]), t4.label ? t4.track.label = t4.label : t4.track.label = t4.kinds.join(" and ") + " off", t4.selectable = true, t4.multiSelectable = false, super(e9, t4);
  }
  handleTracksChange(e9) {
    const t4 = this.player().textTracks();
    let i3 = true;
    for (let s5 = 0, n6 = t4.length; s5 < n6; s5++) {
      const e10 = t4[s5];
      if (this.options_.kinds.indexOf(e10.kind) > -1 && "showing" === e10.mode) {
        i3 = false;
        break;
      }
    }
    i3 !== this.isSelected_ && this.selected(i3);
  }
  handleSelectedLanguageChange(e9) {
    const t4 = this.player().textTracks();
    let i3 = true;
    for (let s5 = 0, n6 = t4.length; s5 < n6; s5++) {
      const e10 = t4[s5];
      if (["captions", "descriptions", "subtitles"].indexOf(e10.kind) > -1 && "showing" === e10.mode) {
        i3 = false;
        break;
      }
    }
    i3 && (this.player_.cache_.selectedLanguage = { enabled: false });
  }
  handleLanguagechange() {
    this.$(".vjs-menu-item-text").textContent = this.player_.localize(this.options_.label), super.handleLanguagechange();
  }
};
Ea.registerComponent("OffTextTrackMenuItem", Hl);
var Vl = class extends ql {
  constructor(e9, t4 = {}) {
    t4.tracks = e9.textTracks(), super(e9, t4);
  }
  createItems(e9 = [], t4 = $l) {
    let i3;
    this.label_ && (i3 = `${this.label_} off`), e9.push(new Hl(this.player_, { kinds: this.kinds_, kind: this.kind_, label: i3 })), this.hideThreshold_ += 1;
    const s5 = this.player_.textTracks();
    Array.isArray(this.kinds_) || (this.kinds_ = [this.kind_]);
    for (let n6 = 0; n6 < s5.length; n6++) {
      const i4 = s5[n6];
      if (this.kinds_.indexOf(i4.kind) > -1) {
        const s6 = new t4(this.player_, { track: i4, kinds: this.kinds_, kind: this.kind_, selectable: true, multiSelectable: false });
        s6.addClass(`vjs-${i4.kind}-menu-item`), e9.push(s6);
      }
    }
    return e9;
  }
};
Ea.registerComponent("TextTrackButton", Vl);
var zl = class extends jl {
  constructor(e9, t4) {
    const i3 = t4.track, s5 = t4.cue, n6 = e9.currentTime();
    t4.selectable = true, t4.multiSelectable = false, t4.label = s5.text, t4.selected = s5.startTime <= n6 && n6 < s5.endTime, super(e9, t4), this.track = i3, this.cue = s5;
  }
  handleClick(e9) {
    super.handleClick(), this.player_.currentTime(this.cue.startTime);
  }
};
Ea.registerComponent("ChaptersTrackMenuItem", zl);
var Wl = class extends Vl {
  constructor(e9, t4, i3) {
    super(e9, t4, i3), this.setIcon("chapters"), this.selectCurrentItem_ = () => {
      this.items.forEach((e10) => {
        e10.selected(this.track_.activeCues[0] === e10.cue);
      });
    };
  }
  buildCSSClass() {
    return `vjs-chapters-button ${super.buildCSSClass()}`;
  }
  buildWrapperCSSClass() {
    return `vjs-chapters-button ${super.buildWrapperCSSClass()}`;
  }
  update(e9) {
    if (e9 && e9.track && "chapters" !== e9.track.kind) return;
    const t4 = this.findChaptersTrack();
    t4 !== this.track_ ? (this.setTrack(t4), super.update()) : (!this.items || t4 && t4.cues && t4.cues.length !== this.items.length) && super.update();
  }
  setTrack(e9) {
    if (this.track_ !== e9) {
      if (this.updateHandler_ || (this.updateHandler_ = this.update.bind(this)), this.track_) {
        const e10 = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);
        e10 && e10.removeEventListener("load", this.updateHandler_), this.track_.removeEventListener("cuechange", this.selectCurrentItem_), this.track_ = null;
      }
      if (this.track_ = e9, this.track_) {
        this.track_.mode = "hidden";
        const e10 = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);
        e10 && e10.addEventListener("load", this.updateHandler_), this.track_.addEventListener("cuechange", this.selectCurrentItem_);
      }
    }
  }
  findChaptersTrack() {
    const e9 = this.player_.textTracks() || [];
    for (let t4 = e9.length - 1; t4 >= 0; t4--) {
      const i3 = e9[t4];
      if (i3.kind === this.kind_) return i3;
    }
  }
  getMenuCaption() {
    return this.track_ && this.track_.label ? this.track_.label : this.localize(va(this.kind_));
  }
  createMenu() {
    return this.options_.title = this.getMenuCaption(), super.createMenu();
  }
  createItems() {
    const e9 = [];
    if (!this.track_) return e9;
    const t4 = this.track_.cues;
    if (!t4) return e9;
    for (let i3 = 0, s5 = t4.length; i3 < s5; i3++) {
      const s6 = t4[i3], n6 = new zl(this.player_, { track: this.track_, cue: s6 });
      e9.push(n6);
    }
    return e9;
  }
};
Wl.prototype.kind_ = "chapters", Wl.prototype.controlText_ = "Chapters", Ea.registerComponent("ChaptersButton", Wl);
var Gl = class extends Vl {
  constructor(e9, t4, i3) {
    super(e9, t4, i3), this.setIcon("audio-description");
    const s5 = e9.textTracks(), n6 = ea(this, this.handleTracksChange);
    s5.addEventListener("change", n6), this.on("dispose", function() {
      s5.removeEventListener("change", n6);
    });
  }
  handleTracksChange(e9) {
    const t4 = this.player().textTracks();
    let i3 = false;
    for (let s5 = 0, n6 = t4.length; s5 < n6; s5++) {
      const e10 = t4[s5];
      if (e10.kind !== this.kind_ && "showing" === e10.mode) {
        i3 = true;
        break;
      }
    }
    i3 ? this.disable() : this.enable();
  }
  buildCSSClass() {
    return `vjs-descriptions-button ${super.buildCSSClass()}`;
  }
  buildWrapperCSSClass() {
    return `vjs-descriptions-button ${super.buildWrapperCSSClass()}`;
  }
};
Gl.prototype.kind_ = "descriptions", Gl.prototype.controlText_ = "Descriptions", Ea.registerComponent("DescriptionsButton", Gl);
var Xl = class extends Vl {
  constructor(e9, t4, i3) {
    super(e9, t4, i3), this.setIcon("subtitles");
  }
  buildCSSClass() {
    return `vjs-subtitles-button ${super.buildCSSClass()}`;
  }
  buildWrapperCSSClass() {
    return `vjs-subtitles-button ${super.buildWrapperCSSClass()}`;
  }
};
Xl.prototype.kind_ = "subtitles", Xl.prototype.controlText_ = "Subtitles", Ea.registerComponent("SubtitlesButton", Xl);
var Kl = class extends $l {
  constructor(e9, t4) {
    t4.track = { player: e9, kind: t4.kind, label: t4.kind + " settings", selectable: false, default: false, mode: "disabled" }, t4.selectable = false, t4.name = "CaptionSettingsMenuItem", super(e9, t4), this.addClass("vjs-texttrack-settings"), this.controlText(", opens " + t4.kind + " settings dialog");
  }
  handleClick(e9) {
    this.player().getChild("textTrackSettings").open();
  }
  handleLanguagechange() {
    this.$(".vjs-menu-item-text").textContent = this.player_.localize(this.options_.kind + " settings"), super.handleLanguagechange();
  }
};
Ea.registerComponent("CaptionSettingsMenuItem", Kl);
var Yl = class extends Vl {
  constructor(e9, t4, i3) {
    super(e9, t4, i3), this.setIcon("captions");
  }
  buildCSSClass() {
    return `vjs-captions-button ${super.buildCSSClass()}`;
  }
  buildWrapperCSSClass() {
    return `vjs-captions-button ${super.buildWrapperCSSClass()}`;
  }
  createItems() {
    const e9 = [];
    return this.player().tech_ && this.player().tech_.featuresNativeTextTracks || !this.player().getChild("textTrackSettings") || (e9.push(new Kl(this.player_, { kind: this.kind_ })), this.hideThreshold_ += 1), super.createItems(e9);
  }
};
Yl.prototype.kind_ = "captions", Yl.prototype.controlText_ = "Captions", Ea.registerComponent("CaptionsButton", Yl);
var Ql = class extends $l {
  createEl(e9, t4, i3) {
    const s5 = super.createEl(e9, t4, i3), n6 = s5.querySelector(".vjs-menu-item-text");
    return "captions" === this.options_.track.kind && (this.player_.options_.experimentalSvgIcons ? this.setIcon("captions", s5) : n6.appendChild(sr("span", { className: "vjs-icon-placeholder" }, { "aria-hidden": true })), n6.appendChild(sr("span", { className: "vjs-control-text", textContent: ` ${this.localize("Captions")}` }))), s5;
  }
};
Ea.registerComponent("SubsCapsMenuItem", Ql);
var Jl = class extends Vl {
  constructor(e9, t4 = {}) {
    super(e9, t4), this.label_ = "subtitles", this.setIcon("subtitles"), ["en", "en-us", "en-ca", "fr-ca"].indexOf(this.player_.language_) > -1 && (this.label_ = "captions", this.setIcon("captions")), this.menuButton_.controlText(va(this.label_));
  }
  buildCSSClass() {
    return `vjs-subs-caps-button ${super.buildCSSClass()}`;
  }
  buildWrapperCSSClass() {
    return `vjs-subs-caps-button ${super.buildWrapperCSSClass()}`;
  }
  createItems() {
    let e9 = [];
    return this.player().tech_ && this.player().tech_.featuresNativeTextTracks || !this.player().getChild("textTrackSettings") || (e9.push(new Kl(this.player_, { kind: this.label_ })), this.hideThreshold_ += 1), e9 = super.createItems(e9, Ql), e9;
  }
};
Jl.prototype.kinds_ = ["captions", "subtitles"], Jl.prototype.controlText_ = "Subtitles", Ea.registerComponent("SubsCapsButton", Jl);
var Zl = class extends jl {
  constructor(e9, t4) {
    const i3 = t4.track, s5 = e9.audioTracks();
    t4.label = i3.label || i3.language || "Unknown", t4.selected = i3.enabled, super(e9, t4), this.track = i3, this.addClass(`vjs-${i3.kind}-menu-item`);
    const n6 = (...e10) => {
      this.handleTracksChange.apply(this, e10);
    };
    s5.addEventListener("change", n6), this.on("dispose", () => {
      s5.removeEventListener("change", n6);
    });
  }
  createEl(e9, t4, i3) {
    const s5 = super.createEl(e9, t4, i3), n6 = s5.querySelector(".vjs-menu-item-text");
    return ["main-desc", "descriptions"].indexOf(this.options_.track.kind) >= 0 && (n6.appendChild(sr("span", { className: "vjs-icon-placeholder" }, { "aria-hidden": true })), n6.appendChild(sr("span", { className: "vjs-control-text", textContent: " " + this.localize("Descriptions") }))), s5;
  }
  handleClick(e9) {
    if (super.handleClick(e9), this.track.enabled = true, this.player_.tech_.featuresNativeAudioTracks) {
      const e10 = this.player_.audioTracks();
      for (let t4 = 0; t4 < e10.length; t4++) {
        const i3 = e10[t4];
        i3 !== this.track && (i3.enabled = i3 === this.track);
      }
    }
  }
  handleTracksChange(e9) {
    this.selected(this.track.enabled);
  }
};
Ea.registerComponent("AudioTrackMenuItem", Zl);
var eh = class extends ql {
  constructor(e9, t4 = {}) {
    t4.tracks = e9.audioTracks(), super(e9, t4), this.setIcon("audio");
  }
  buildCSSClass() {
    return `vjs-audio-button ${super.buildCSSClass()}`;
  }
  buildWrapperCSSClass() {
    return `vjs-audio-button ${super.buildWrapperCSSClass()}`;
  }
  createItems(e9 = []) {
    this.hideThreshold_ = 1;
    const t4 = this.player_.audioTracks();
    for (let i3 = 0; i3 < t4.length; i3++) {
      const s5 = t4[i3];
      e9.push(new Zl(this.player_, { track: s5, selectable: true, multiSelectable: false }));
    }
    return e9;
  }
};
eh.prototype.controlText_ = "Audio Track", Ea.registerComponent("AudioTrackButton", eh);
var th = class extends jl {
  constructor(e9, t4) {
    const i3 = t4.rate, s5 = parseFloat(i3, 10);
    t4.label = i3, t4.selected = s5 === e9.playbackRate(), t4.selectable = true, t4.multiSelectable = false, super(e9, t4), this.label = i3, this.rate = s5, this.on(e9, "ratechange", (e10) => this.update(e10));
  }
  handleClick(e9) {
    super.handleClick(), this.player().playbackRate(this.rate);
  }
  update(e9) {
    this.selected(this.player().playbackRate() === this.rate);
  }
};
th.prototype.contentElType = "button", Ea.registerComponent("PlaybackRateMenuItem", th);
var ih = class extends Fl {
  constructor(e9, t4) {
    super(e9, t4), this.menuButton_.el_.setAttribute("aria-describedby", this.labelElId_), this.updateVisibility(), this.updateLabel(), this.on(e9, "loadstart", (e10) => this.updateVisibility(e10)), this.on(e9, "ratechange", (e10) => this.updateLabel(e10)), this.on(e9, "playbackrateschange", (e10) => this.handlePlaybackRateschange(e10));
  }
  createEl() {
    const e9 = super.createEl();
    return this.labelElId_ = "vjs-playback-rate-value-label-" + this.id_, this.labelEl_ = sr("div", { className: "vjs-playback-rate-value", id: this.labelElId_, textContent: "1x" }), e9.appendChild(this.labelEl_), e9;
  }
  dispose() {
    this.labelEl_ = null, super.dispose();
  }
  buildCSSClass() {
    return `vjs-playback-rate ${super.buildCSSClass()}`;
  }
  buildWrapperCSSClass() {
    return `vjs-playback-rate ${super.buildWrapperCSSClass()}`;
  }
  createItems() {
    const e9 = this.playbackRates(), t4 = [];
    for (let i3 = e9.length - 1; i3 >= 0; i3--) t4.push(new th(this.player(), { rate: e9[i3] + "x" }));
    return t4;
  }
  handlePlaybackRateschange(e9) {
    this.update();
  }
  playbackRates() {
    const e9 = this.player();
    return e9.playbackRates && e9.playbackRates() || [];
  }
  playbackRateSupported() {
    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;
  }
  updateVisibility(e9) {
    this.playbackRateSupported() ? this.removeClass("vjs-hidden") : this.addClass("vjs-hidden");
  }
  updateLabel(e9) {
    this.playbackRateSupported() && (this.labelEl_.textContent = this.player().playbackRate() + "x");
  }
};
ih.prototype.controlText_ = "Playback Rate", Ea.registerComponent("PlaybackRateMenuButton", ih);
var sh = class extends Ea {
  buildCSSClass() {
    return `vjs-spacer ${super.buildCSSClass()}`;
  }
  createEl(e9 = "div", t4 = {}, i3 = {}) {
    return t4.className || (t4.className = this.buildCSSClass()), super.createEl(e9, t4, i3);
  }
};
Ea.registerComponent("Spacer", sh);
var nh = class extends sh {
  buildCSSClass() {
    return `vjs-custom-control-spacer ${super.buildCSSClass()}`;
  }
  createEl() {
    return super.createEl("div", { className: this.buildCSSClass(), textContent: " " });
  }
};
Ea.registerComponent("CustomControlSpacer", nh);
var rh = class extends Ea {
  createEl() {
    return super.createEl("div", { className: "vjs-control-bar", dir: "ltr" });
  }
};
rh.prototype.options_ = { children: ["playToggle", "skipBackward", "skipForward", "volumePanel", "currentTimeDisplay", "timeDivider", "durationDisplay", "progressControl", "liveDisplay", "seekToLive", "remainingTimeDisplay", "customControlSpacer", "playbackRateMenuButton", "chaptersButton", "descriptionsButton", "subsCapsButton", "audioTrackButton", "pictureInPictureToggle", "fullscreenToggle"] }, Ea.registerComponent("ControlBar", rh);
var ah = class extends ja {
  constructor(e9, t4) {
    super(e9, t4), this.on(e9, "error", (e10) => {
      this.open(e10);
    });
  }
  buildCSSClass() {
    return `vjs-error-display ${super.buildCSSClass()}`;
  }
  content() {
    const e9 = this.player().error();
    return e9 ? this.localize(e9.message) : "";
  }
};
ah.prototype.options_ = Object.assign({}, ja.prototype.options_, { pauseOnOpen: false, fillAlways: true, temporary: false, uncloseable: true }), Ea.registerComponent("ErrorDisplay", ah);
var oh = class extends Ea {
  constructor(e9, t4 = {}) {
    super(e9, t4), this.el_.setAttribute("aria-labelledby", this.selectLabelledbyIds);
  }
  createEl() {
    this.selectLabelledbyIds = [this.options_.legendId, this.options_.labelId].join(" ").trim();
    return sr("select", { id: this.options_.id }, {}, this.options_.SelectOptions.map((e9) => {
      const t4 = (this.options_.labelId ? this.options_.labelId : `vjs-track-option-${jr()}`) + "-" + e9[1].replace(/\W+/g, ""), i3 = sr("option", { id: t4, value: this.localize(e9[0]), textContent: e9[1] });
      return i3.setAttribute("aria-labelledby", `${this.selectLabelledbyIds} ${t4}`), i3;
    }));
  }
};
Ea.registerComponent("TextTrackSelect", oh);
var lh = class extends Ea {
  constructor(e9, t4 = {}) {
    super(e9, t4);
    const i3 = sr("legend", { textContent: this.localize(this.options_.legendText), id: this.options_.legendId });
    this.el().appendChild(i3);
    const s5 = this.options_.selects;
    for (const n6 of s5) {
      const t5 = this.options_.selectConfigs[n6], i4 = t5.className, s6 = t5.id.replace("%s", this.options_.id_);
      let r5 = null;
      const a6 = `vjs_select_${jr()}`;
      if ("colors" === this.options_.type) {
        r5 = sr("span", { className: i4 });
        const e10 = sr("label", { id: s6, className: "vjs-label", textContent: t5.label });
        e10.setAttribute("for", a6), r5.appendChild(e10);
      }
      const o4 = new oh(e9, { SelectOptions: t5.options, legendId: this.options_.legendId, id: a6, labelId: s6 });
      this.addChild(o4), "colors" === this.options_.type && (r5.appendChild(o4.el()), this.el().appendChild(r5));
    }
  }
  createEl() {
    return sr("fieldset", { className: this.options_.className });
  }
};
Ea.registerComponent("TextTrackFieldset", lh);
var hh = class extends Ea {
  constructor(e9, t4 = {}) {
    super(e9, t4);
    const i3 = this.options_.textTrackComponentid, s5 = new lh(e9, { id_: i3, legendId: `captions-text-legend-${i3}`, legendText: this.localize("Text"), className: "vjs-fg vjs-track-setting", selects: this.options_.fieldSets[0], selectConfigs: this.options_.selectConfigs, type: "colors" });
    this.addChild(s5);
    const n6 = new lh(e9, { id_: i3, legendId: `captions-background-${i3}`, legendText: this.localize("Text Background"), className: "vjs-bg vjs-track-setting", selects: this.options_.fieldSets[1], selectConfigs: this.options_.selectConfigs, type: "colors" });
    this.addChild(n6);
    const r5 = new lh(e9, { id_: i3, legendId: `captions-window-${i3}`, legendText: this.localize("Caption Area Background"), className: "vjs-window vjs-track-setting", selects: this.options_.fieldSets[2], selectConfigs: this.options_.selectConfigs, type: "colors" });
    this.addChild(r5);
  }
  createEl() {
    return sr("div", { className: "vjs-track-settings-colors" });
  }
};
Ea.registerComponent("TextTrackSettingsColors", hh);
var uh = class extends Ea {
  constructor(e9, t4 = {}) {
    super(e9, t4);
    const i3 = this.options_.textTrackComponentid, s5 = new lh(e9, { id_: i3, legendId: `captions-font-size-${i3}`, legendText: "Font Size", className: "vjs-font-percent vjs-track-setting", selects: this.options_.fieldSets[0], selectConfigs: this.options_.selectConfigs, type: "font" });
    this.addChild(s5);
    const n6 = new lh(e9, { id_: i3, legendId: `captions-edge-style-${i3}`, legendText: this.localize("Text Edge Style"), className: "vjs-edge-style vjs-track-setting", selects: this.options_.fieldSets[1], selectConfigs: this.options_.selectConfigs, type: "font" });
    this.addChild(n6);
    const r5 = new lh(e9, { id_: i3, legendId: `captions-font-family-${i3}`, legendText: this.localize("Font Family"), className: "vjs-font-family vjs-track-setting", selects: this.options_.fieldSets[2], selectConfigs: this.options_.selectConfigs, type: "font" });
    this.addChild(r5);
  }
  createEl() {
    return sr("div", { className: "vjs-track-settings-font" });
  }
};
Ea.registerComponent("TextTrackSettingsFont", uh);
var dh = class extends Ea {
  constructor(e9, t4 = {}) {
    super(e9, t4);
    const i3 = this.localize("restore all settings to the default values"), s5 = new il(e9, { controlText: i3, className: "vjs-default-button" });
    s5.el().classList.remove("vjs-control", "vjs-button"), s5.el().textContent = this.localize("Reset"), this.addChild(s5);
    const n6 = new il(e9, { controlText: i3, className: "vjs-done-button" });
    n6.el().classList.remove("vjs-control", "vjs-button"), n6.el().textContent = this.localize("Done"), this.addChild(n6);
  }
  createEl() {
    return sr("div", { className: "vjs-track-settings-controls" });
  }
};
Ea.registerComponent("TrackSettingsControls", dh);
var ch = "vjs-text-track-settings";
var ph = ["#000", "Black"];
var mh = ["#00F", "Blue"];
var gh = ["#0FF", "Cyan"];
var fh = ["#0F0", "Green"];
var yh = ["#F0F", "Magenta"];
var _h = ["#F00", "Red"];
var bh = ["#FFF", "White"];
var vh = ["#FF0", "Yellow"];
var Th = ["1", "Opaque"];
var Sh = ["0.5", "Semi-Transparent"];
var Eh = ["0", "Transparent"];
var wh = { backgroundColor: { selector: ".vjs-bg-color > select", id: "captions-background-color-%s", label: "Color", options: [ph, bh, _h, fh, mh, vh, yh, gh], className: "vjs-bg-color" }, backgroundOpacity: { selector: ".vjs-bg-opacity > select", id: "captions-background-opacity-%s", label: "Opacity", options: [Th, Sh, Eh], className: "vjs-bg-opacity vjs-opacity" }, color: { selector: ".vjs-text-color > select", id: "captions-foreground-color-%s", label: "Color", options: [bh, ph, _h, fh, mh, vh, yh, gh], className: "vjs-text-color" }, edgeStyle: { selector: ".vjs-edge-style > select", id: "", label: "Text Edge Style", options: [["none", "None"], ["raised", "Raised"], ["depressed", "Depressed"], ["uniform", "Uniform"], ["dropshadow", "Drop shadow"]] }, fontFamily: { selector: ".vjs-font-family > select", id: "", label: "Font Family", options: [["proportionalSansSerif", "Proportional Sans-Serif"], ["monospaceSansSerif", "Monospace Sans-Serif"], ["proportionalSerif", "Proportional Serif"], ["monospaceSerif", "Monospace Serif"], ["casual", "Casual"], ["script", "Script"], ["small-caps", "Small Caps"]] }, fontPercent: { selector: ".vjs-font-percent > select", id: "", label: "Font Size", options: [["0.50", "50%"], ["0.75", "75%"], ["1.00", "100%"], ["1.25", "125%"], ["1.50", "150%"], ["1.75", "175%"], ["2.00", "200%"], ["3.00", "300%"], ["4.00", "400%"]], default: 2, parser: (e9) => "1.00" === e9 ? null : Number(e9) }, textOpacity: { selector: ".vjs-text-opacity > select", id: "captions-foreground-opacity-%s", label: "Opacity", options: [Th, Sh], className: "vjs-text-opacity vjs-opacity" }, windowColor: { selector: ".vjs-window-color > select", id: "captions-window-color-%s", label: "Color", className: "vjs-window-color" }, windowOpacity: { selector: ".vjs-window-opacity > select", id: "captions-window-opacity-%s", label: "Opacity", options: [Eh, Sh, Th], className: "vjs-window-opacity vjs-opacity" } };
function Ch(e9, t4) {
  if (t4 && (e9 = t4(e9)), e9 && "none" !== e9) return e9;
}
function kh(e9, t4) {
  return Ch(e9.options[e9.options.selectedIndex].value, t4);
}
function Ih(e9, t4, i3) {
  if (t4) {
    for (let s5 = 0; s5 < e9.options.length; s5++) if (Ch(e9.options[s5].value, i3) === t4) {
      e9.selectedIndex = s5;
      break;
    }
  }
}
wh.windowColor.options = wh.backgroundColor.options;
var xh = class extends ja {
  constructor(e9, t4) {
    t4.temporary = false, super(e9, t4), this.updateDisplay = this.updateDisplay.bind(this), this.fill(), this.hasBeenOpened_ = this.hasBeenFilled_ = true, this.renderModalComponents(e9), this.endDialog = sr("p", { className: "vjs-control-text", textContent: this.localize("End of dialog window.") }), this.el().appendChild(this.endDialog), this.setDefaults(), void 0 === t4.persistTextTrackSettings && (this.options_.persistTextTrackSettings = this.options_.playerOptions.persistTextTrackSettings), this.bindFunctionsToSelectsAndButtons(), this.options_.persistTextTrackSettings && this.restoreSettings();
  }
  renderModalComponents(e9) {
    const t4 = new hh(e9, { textTrackComponentid: this.id_, selectConfigs: wh, fieldSets: [["color", "textOpacity"], ["backgroundColor", "backgroundOpacity"], ["windowColor", "windowOpacity"]] });
    this.addChild(t4);
    const i3 = new uh(e9, { textTrackComponentid: this.id_, selectConfigs: wh, fieldSets: [["fontPercent"], ["edgeStyle"], ["fontFamily"]] });
    this.addChild(i3);
    const s5 = new dh(e9);
    this.addChild(s5);
  }
  bindFunctionsToSelectsAndButtons() {
    this.on(this.$(".vjs-done-button"), ["click", "tap"], () => {
      this.saveSettings(), this.close();
    }), this.on(this.$(".vjs-default-button"), ["click", "tap"], () => {
      this.setDefaults(), this.updateDisplay();
    }), bn(wh, (e9) => {
      this.on(this.$(e9.selector), "change", this.updateDisplay);
    });
  }
  dispose() {
    this.endDialog = null, super.dispose();
  }
  label() {
    return this.localize("Caption Settings Dialog");
  }
  description() {
    return this.localize("Beginning of dialog window. Escape will cancel and close the window.");
  }
  buildCSSClass() {
    return super.buildCSSClass() + " vjs-text-track-settings";
  }
  getValues() {
    return vn(wh, (e9, t4, i3) => {
      const s5 = kh(this.$(t4.selector), t4.parser);
      return void 0 !== s5 && (e9[i3] = s5), e9;
    }, {});
  }
  setValues(e9) {
    bn(wh, (t4, i3) => {
      Ih(this.$(t4.selector), e9[i3], t4.parser);
    });
  }
  setDefaults() {
    bn(wh, (e9) => {
      const t4 = e9.hasOwnProperty("default") ? e9.default : 0;
      this.$(e9.selector).selectedIndex = t4;
    });
  }
  restoreSettings() {
    let e9;
    try {
      e9 = JSON.parse(_.localStorage.getItem(ch));
    } catch (t4) {
      gn.warn(t4);
    }
    e9 && this.setValues(e9);
  }
  saveSettings() {
    if (!this.options_.persistTextTrackSettings) return;
    const e9 = this.getValues();
    try {
      Object.keys(e9).length ? _.localStorage.setItem(ch, JSON.stringify(e9)) : _.localStorage.removeItem(ch);
    } catch (t4) {
      gn.warn(t4);
    }
  }
  updateDisplay() {
    const e9 = this.player_.getChild("textTrackDisplay");
    e9 && e9.updateDisplay();
  }
  handleLanguagechange() {
    this.fill(), this.renderModalComponents(this.player_), this.bindFunctionsToSelectsAndButtons();
  }
};
Ea.registerComponent("TextTrackSettings", xh);
var Ah = class extends Ea {
  constructor(e9, t4) {
    let i3 = t4.ResizeObserver || _.ResizeObserver;
    null === t4.ResizeObserver && (i3 = false);
    super(e9, En({ createEl: !i3, reportTouchActivity: false }, t4)), this.ResizeObserver = t4.ResizeObserver || _.ResizeObserver, this.loadListener_ = null, this.resizeObserver_ = null, this.debouncedHandler_ = ia(() => {
      this.resizeHandler();
    }, 100, false, this), i3 ? (this.resizeObserver_ = new this.ResizeObserver(this.debouncedHandler_), this.resizeObserver_.observe(e9.el())) : (this.loadListener_ = () => {
      if (!this.el_ || !this.el_.contentWindow) return;
      const e10 = this.debouncedHandler_;
      let t5 = this.unloadListener_ = function() {
        Xr(this, "resize", e10), Xr(this, "unload", t5), t5 = null;
      };
      Gr(this.el_.contentWindow, "unload", t5), Gr(this.el_.contentWindow, "resize", e10);
    }, this.one("load", this.loadListener_));
  }
  createEl() {
    return super.createEl("iframe", { className: "vjs-resize-manager", tabIndex: -1, title: this.localize("No content") }, { "aria-hidden": "true" });
  }
  resizeHandler() {
    this.player_ && this.player_.trigger && this.player_.trigger("playerresize");
  }
  dispose() {
    this.debouncedHandler_ && this.debouncedHandler_.cancel(), this.resizeObserver_ && (this.player_.el() && this.resizeObserver_.unobserve(this.player_.el()), this.resizeObserver_.disconnect()), this.loadListener_ && this.off("load", this.loadListener_), this.el_ && this.el_.contentWindow && this.unloadListener_ && this.unloadListener_.call(this.el_.contentWindow), this.ResizeObserver = null, this.resizeObserver = null, this.debouncedHandler_ = null, this.loadListener_ = null, super.dispose();
  }
};
Ea.registerComponent("ResizeManager", Ah);
var Dh = { trackingThreshold: 20, liveTolerance: 15 };
var Ph = class extends Ea {
  constructor(e9, t4) {
    super(e9, En(Dh, t4, { createEl: false })), this.trackLiveHandler_ = () => this.trackLive_(), this.handlePlay_ = (e10) => this.handlePlay(e10), this.handleFirstTimeupdate_ = (e10) => this.handleFirstTimeupdate(e10), this.handleSeeked_ = (e10) => this.handleSeeked(e10), this.seekToLiveEdge_ = (e10) => this.seekToLiveEdge(e10), this.reset_(), this.on(this.player_, "durationchange", (e10) => this.handleDurationchange(e10)), this.on(this.player_, "canplay", () => this.toggleTracking());
  }
  trackLive_() {
    const e9 = this.player_.seekable();
    if (!e9 || !e9.length) return;
    const t4 = Number(_.performance.now().toFixed(4)), i3 = -1 === this.lastTime_ ? 0 : (t4 - this.lastTime_) / 1e3;
    this.lastTime_ = t4, this.pastSeekEnd_ = this.pastSeekEnd() + i3;
    const s5 = this.liveCurrentTime(), n6 = this.player_.currentTime();
    let r5 = this.player_.paused() || this.seekedBehindLive_ || Math.abs(s5 - n6) > this.options_.liveTolerance;
    this.timeupdateSeen_ && s5 !== 1 / 0 || (r5 = false), r5 !== this.behindLiveEdge_ && (this.behindLiveEdge_ = r5, this.trigger("liveedgechange"));
  }
  handleDurationchange() {
    this.toggleTracking();
  }
  toggleTracking() {
    this.player_.duration() === 1 / 0 && this.liveWindow() >= this.options_.trackingThreshold ? (this.player_.options_.liveui && this.player_.addClass("vjs-liveui"), this.startTracking()) : (this.player_.removeClass("vjs-liveui"), this.stopTracking());
  }
  startTracking() {
    this.isTracking() || (this.timeupdateSeen_ || (this.timeupdateSeen_ = this.player_.hasStarted()), this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, Zr), this.trackLive_(), this.on(this.player_, ["play", "pause"], this.trackLiveHandler_), this.timeupdateSeen_ ? this.on(this.player_, "seeked", this.handleSeeked_) : (this.one(this.player_, "play", this.handlePlay_), this.one(this.player_, "timeupdate", this.handleFirstTimeupdate_)));
  }
  handleFirstTimeupdate() {
    this.timeupdateSeen_ = true, this.on(this.player_, "seeked", this.handleSeeked_);
  }
  handleSeeked() {
    const e9 = Math.abs(this.liveCurrentTime() - this.player_.currentTime());
    this.seekedBehindLive_ = this.nextSeekedFromUser_ && e9 > 2, this.nextSeekedFromUser_ = false, this.trackLive_();
  }
  handlePlay() {
    this.one(this.player_, "timeupdate", this.seekToLiveEdge_);
  }
  reset_() {
    this.lastTime_ = -1, this.pastSeekEnd_ = 0, this.lastSeekEnd_ = -1, this.behindLiveEdge_ = true, this.timeupdateSeen_ = false, this.seekedBehindLive_ = false, this.nextSeekedFromUser_ = false, this.clearInterval(this.trackingInterval_), this.trackingInterval_ = null, this.off(this.player_, ["play", "pause"], this.trackLiveHandler_), this.off(this.player_, "seeked", this.handleSeeked_), this.off(this.player_, "play", this.handlePlay_), this.off(this.player_, "timeupdate", this.handleFirstTimeupdate_), this.off(this.player_, "timeupdate", this.seekToLiveEdge_);
  }
  nextSeekedFromUser() {
    this.nextSeekedFromUser_ = true;
  }
  stopTracking() {
    this.isTracking() && (this.reset_(), this.trigger("liveedgechange"));
  }
  seekableEnd() {
    const e9 = this.player_.seekable(), t4 = [];
    let i3 = e9 ? e9.length : 0;
    for (; i3--; ) t4.push(e9.end(i3));
    return t4.length ? t4.sort()[t4.length - 1] : 1 / 0;
  }
  seekableStart() {
    const e9 = this.player_.seekable(), t4 = [];
    let i3 = e9 ? e9.length : 0;
    for (; i3--; ) t4.push(e9.start(i3));
    return t4.length ? t4.sort()[0] : 0;
  }
  liveWindow() {
    const e9 = this.liveCurrentTime();
    return e9 === 1 / 0 ? 0 : e9 - this.seekableStart();
  }
  isLive() {
    return this.isTracking();
  }
  atLiveEdge() {
    return !this.behindLiveEdge();
  }
  liveCurrentTime() {
    return this.pastSeekEnd() + this.seekableEnd();
  }
  pastSeekEnd() {
    const e9 = this.seekableEnd();
    return -1 !== this.lastSeekEnd_ && e9 !== this.lastSeekEnd_ && (this.pastSeekEnd_ = 0), this.lastSeekEnd_ = e9, this.pastSeekEnd_;
  }
  behindLiveEdge() {
    return this.behindLiveEdge_;
  }
  isTracking() {
    return "number" == typeof this.trackingInterval_;
  }
  seekToLiveEdge() {
    this.seekedBehindLive_ = false, this.atLiveEdge() || (this.nextSeekedFromUser_ = false, this.player_.currentTime(this.liveCurrentTime()));
  }
  dispose() {
    this.stopTracking(), super.dispose();
  }
};
Ea.registerComponent("LiveTracker", Ph);
var Lh = class extends Ea {
  constructor(e9, t4) {
    super(e9, t4), this.on("statechanged", (e10) => this.updateDom_()), this.updateDom_();
  }
  createEl() {
    return this.els = { title: sr("div", { className: "vjs-title-bar-title", id: `vjs-title-bar-title-${jr()}` }), description: sr("div", { className: "vjs-title-bar-description", id: `vjs-title-bar-description-${jr()}` }) }, sr("div", { className: "vjs-title-bar" }, {}, wn(this.els));
  }
  updateDom_() {
    const e9 = this.player_.tech_, t4 = e9 && e9.el_, i3 = { title: "aria-labelledby", description: "aria-describedby" };
    ["title", "description"].forEach((e10) => {
      const s5 = this.state[e10], n6 = this.els[e10], r5 = i3[e10];
      Tr(n6), s5 && nr(n6, s5), t4 && (t4.removeAttribute(r5), s5 && t4.setAttribute(r5, n6.id));
    }), this.state.title || this.state.description ? this.show() : this.hide();
  }
  update(e9) {
    this.setState(e9);
  }
  dispose() {
    const e9 = this.player_.tech_, t4 = e9 && e9.el_;
    t4 && (t4.removeAttribute("aria-labelledby"), t4.removeAttribute("aria-describedby")), super.dispose(), this.els = null;
  }
};
Ea.registerComponent("TitleBar", Lh);
var Oh = { initialDisplay: 4e3, position: [], takeFocus: false };
var Nh = class extends il {
  constructor(e9, t4) {
    super(e9, t4 = En(Oh, t4)), this.controlText(t4.controlText), this.hide(), this.on(this.player_, ["useractive", "userinactive"], (e10) => {
      this.removeClass("force-display");
    });
  }
  buildCSSClass() {
    return `vjs-transient-button focus-visible ${this.options_.position.map((e9) => `vjs-${e9}`).join(" ")}`;
  }
  createEl() {
    const e9 = sr("button", {}, { type: "button", class: this.buildCSSClass() }, sr("span"));
    return this.controlTextEl_ = e9.querySelector("span"), e9;
  }
  show() {
    super.show(), this.addClass("force-display"), this.options_.takeFocus && this.el().focus({ preventScroll: true }), this.forceDisplayTimeout = this.player_.setTimeout(() => {
      this.removeClass("force-display");
    }, this.options_.initialDisplay);
  }
  hide() {
    this.removeClass("force-display"), super.hide();
  }
  dispose() {
    this.player_.clearTimeout(this.forceDisplayTimeout), super.dispose();
  }
};
Ea.registerComponent("TransientButton", Nh);
var Rh = (e9) => {
  const t4 = e9.el();
  if (t4.hasAttribute("src")) return e9.triggerSourceset(t4.src), true;
  const i3 = e9.$$("source"), s5 = [];
  let n6 = "";
  if (!i3.length) return false;
  for (let r5 = 0; r5 < i3.length; r5++) {
    const e10 = i3[r5].src;
    e10 && -1 === s5.indexOf(e10) && s5.push(e10);
  }
  return !!s5.length && (1 === s5.length && (n6 = s5[0]), e9.triggerSourceset(n6), true);
};
var Mh = Object.defineProperty({}, "innerHTML", { get() {
  return this.cloneNode(true).innerHTML;
}, set(e9) {
  const t4 = ne.createElement(this.nodeName.toLowerCase());
  t4.innerHTML = e9;
  const i3 = ne.createDocumentFragment();
  for (; t4.childNodes.length; ) i3.appendChild(t4.childNodes[0]);
  return this.innerText = "", _.Element.prototype.appendChild.call(this, i3), this.innerHTML;
} });
var Uh = (e9, t4) => {
  let i3 = {};
  for (let s5 = 0; s5 < e9.length && (i3 = Object.getOwnPropertyDescriptor(e9[s5], t4), !(i3 && i3.set && i3.get)); s5++) ;
  return i3.enumerable = true, i3.configurable = true, i3;
};
var Bh = (e9) => Uh([e9.el(), _.HTMLMediaElement.prototype, _.Element.prototype, Mh], "innerHTML");
var Fh = function(e9) {
  const t4 = e9.el();
  if (t4.resetSourceWatch_) return;
  const i3 = {}, s5 = Bh(e9), n6 = (i4) => (...s6) => {
    const n7 = i4.apply(t4, s6);
    return Rh(e9), n7;
  };
  ["append", "appendChild", "insertAdjacentHTML"].forEach((e10) => {
    t4[e10] && (i3[e10] = t4[e10], t4[e10] = n6(i3[e10]));
  }), Object.defineProperty(t4, "innerHTML", En(s5, { set: n6(s5.set) })), t4.resetSourceWatch_ = () => {
    t4.resetSourceWatch_ = null, Object.keys(i3).forEach((e10) => {
      t4[e10] = i3[e10];
    }), Object.defineProperty(t4, "innerHTML", s5);
  }, e9.one("sourceset", t4.resetSourceWatch_);
};
var qh = Object.defineProperty({}, "src", { get() {
  return this.hasAttribute("src") ? io(_.Element.prototype.getAttribute.call(this, "src")) : "";
}, set(e9) {
  return _.Element.prototype.setAttribute.call(this, "src", e9), e9;
} });
var jh = (e9) => Uh([e9.el(), _.HTMLMediaElement.prototype, qh], "src");
var $h = function(e9) {
  if (!e9.featuresSourceset) return;
  const t4 = e9.el();
  if (t4.resetSourceset_) return;
  const i3 = jh(e9), s5 = t4.setAttribute, n6 = t4.load;
  Object.defineProperty(t4, "src", En(i3, { set: (s6) => {
    const n7 = i3.set.call(t4, s6);
    return e9.triggerSourceset(t4.src), n7;
  } })), t4.setAttribute = (i4, n7) => {
    const r5 = s5.call(t4, i4, n7);
    return /src/i.test(i4) && e9.triggerSourceset(t4.src), r5;
  }, t4.load = () => {
    const i4 = n6.call(t4);
    return Rh(e9) || (e9.triggerSourceset(""), Fh(e9)), i4;
  }, t4.currentSrc ? e9.triggerSourceset(t4.currentSrc) : Rh(e9) || Fh(e9), t4.resetSourceset_ = () => {
    t4.resetSourceset_ = null, t4.load = n6, t4.setAttribute = s5, Object.defineProperty(t4, "src", i3), t4.resetSourceWatch_ && t4.resetSourceWatch_();
  };
};
var Hh = class _Hh extends yo {
  constructor(e9, t4) {
    super(e9, t4);
    const i3 = e9.source;
    let s5 = false;
    if (this.featuresVideoFrameCallback = this.featuresVideoFrameCallback && "VIDEO" === this.el_.tagName, i3 && (this.el_.currentSrc !== i3.src || e9.tag && 3 === e9.tag.initNetworkState_) ? this.setSource(i3) : this.handleLateInit_(this.el_), e9.enableSourceset && this.setupSourcesetHandling_(), this.isScrubbing_ = false, this.el_.hasChildNodes()) {
      const e10 = this.el_.childNodes;
      let t5 = e10.length;
      const i4 = [];
      for (; t5--; ) {
        const n6 = e10[t5];
        "track" === n6.nodeName.toLowerCase() && (this.featuresNativeTextTracks ? (this.remoteTextTrackEls().addTrackElement_(n6), this.remoteTextTracks().addTrack(n6.track), this.textTracks().addTrack(n6.track), s5 || this.el_.hasAttribute("crossorigin") || !no(n6.src) || (s5 = true)) : i4.push(n6));
      }
      for (let s6 = 0; s6 < i4.length; s6++) this.el_.removeChild(i4[s6]);
    }
    this.proxyNativeTracks_(), this.featuresNativeTextTracks && s5 && gn.warn("Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\nThis may prevent text tracks from loading."), this.restoreMetadataTracksInIOSNativePlayer_(), (Wn || $n) && true === e9.nativeControlsForTouch && this.setControls(true), this.proxyWebkitFullscreen_(), this.triggerReady();
  }
  dispose() {
    this.el_ && this.el_.resetSourceset_ && this.el_.resetSourceset_(), _Hh.disposeMediaElement(this.el_), this.options_ = null, super.dispose();
  }
  setupSourcesetHandling_() {
    $h(this);
  }
  restoreMetadataTracksInIOSNativePlayer_() {
    const e9 = this.textTracks();
    let t4;
    const i3 = () => {
      t4 = [];
      for (let i4 = 0; i4 < e9.length; i4++) {
        const s6 = e9[i4];
        "metadata" === s6.kind && t4.push({ track: s6, storedMode: s6.mode });
      }
    };
    i3(), e9.addEventListener("change", i3), this.on("dispose", () => e9.removeEventListener("change", i3));
    const s5 = () => {
      for (let e10 = 0; e10 < t4.length; e10++) {
        const i4 = t4[e10];
        "disabled" === i4.track.mode && i4.track.mode !== i4.storedMode && (i4.track.mode = i4.storedMode);
      }
      e9.removeEventListener("change", s5);
    };
    this.on("webkitbeginfullscreen", () => {
      e9.removeEventListener("change", i3), e9.removeEventListener("change", s5), e9.addEventListener("change", s5);
    }), this.on("webkitendfullscreen", () => {
      e9.removeEventListener("change", i3), e9.addEventListener("change", i3), e9.removeEventListener("change", s5);
    });
  }
  overrideNative_(e9, t4) {
    if (t4 !== this[`featuresNative${e9}Tracks`]) return;
    const i3 = e9.toLowerCase();
    this[`${i3}TracksListeners_`] && Object.keys(this[`${i3}TracksListeners_`]).forEach((e10) => {
      this.el()[`${i3}Tracks`].removeEventListener(e10, this[`${i3}TracksListeners_`][e10]);
    }), this[`featuresNative${e9}Tracks`] = !t4, this[`${i3}TracksListeners_`] = null, this.proxyNativeTracksForType_(i3);
  }
  overrideNativeAudioTracks(e9) {
    this.overrideNative_("Audio", e9);
  }
  overrideNativeVideoTracks(e9) {
    this.overrideNative_("Video", e9);
  }
  proxyNativeTracksForType_(e9) {
    const t4 = po[e9], i3 = this.el()[t4.getterName], s5 = this[t4.getterName]();
    if (!this[`featuresNative${t4.capitalName}Tracks`] || !i3 || !i3.addEventListener) return;
    const n6 = { change: (t5) => {
      const i4 = { type: "change", target: s5, currentTarget: s5, srcElement: s5 };
      s5.trigger(i4), "text" === e9 && this[mo.remoteText.getterName]().trigger(i4);
    }, addtrack(e10) {
      s5.addTrack(e10.track);
    }, removetrack(e10) {
      s5.removeTrack(e10.track);
    } }, r5 = function() {
      const e10 = [];
      for (let t5 = 0; t5 < s5.length; t5++) {
        let n7 = false;
        for (let e11 = 0; e11 < i3.length; e11++) if (i3[e11] === s5[t5]) {
          n7 = true;
          break;
        }
        n7 || e10.push(s5[t5]);
      }
      for (; e10.length; ) s5.removeTrack(e10.shift());
    };
    this[t4.getterName + "Listeners_"] = n6, Object.keys(n6).forEach((e10) => {
      const t5 = n6[e10];
      i3.addEventListener(e10, t5), this.on("dispose", (s6) => i3.removeEventListener(e10, t5));
    }), this.on("loadstart", r5), this.on("dispose", (e10) => this.off("loadstart", r5));
  }
  proxyNativeTracks_() {
    po.names.forEach((e9) => {
      this.proxyNativeTracksForType_(e9);
    });
  }
  createEl() {
    let e9 = this.options_.tag;
    if (!e9 || !this.options_.playerElIngest && !this.movingMediaElementInDOM) {
      if (e9) {
        const t5 = e9.cloneNode(true);
        e9.parentNode && e9.parentNode.insertBefore(t5, e9), _Hh.disposeMediaElement(e9), e9 = t5;
      } else {
        e9 = ne.createElement("video");
        const t5 = En({}, this.options_.tag && dr(this.options_.tag));
        Wn && true === this.options_.nativeControlsForTouch || delete t5.controls, ur(e9, Object.assign(t5, { id: this.options_.techId, class: "vjs-tech" }));
      }
      e9.playerId = this.options_.playerId;
    }
    void 0 !== this.options_.preload && pr(e9, "preload", this.options_.preload), void 0 !== this.options_.disablePictureInPicture && (e9.disablePictureInPicture = this.options_.disablePictureInPicture);
    const t4 = ["loop", "muted", "playsinline", "autoplay"];
    for (let i3 = 0; i3 < t4.length; i3++) {
      const s5 = t4[i3], n6 = this.options_[s5];
      void 0 !== n6 && (n6 ? pr(e9, s5, s5) : mr(e9, s5), e9[s5] = n6);
    }
    return e9;
  }
  handleLateInit_(e9) {
    if (0 === e9.networkState || 3 === e9.networkState) return;
    if (0 === e9.readyState) {
      let e10 = false;
      const t5 = function() {
        e10 = true;
      };
      this.on("loadstart", t5);
      const i3 = function() {
        e10 || this.trigger("loadstart");
      };
      return this.on("loadedmetadata", i3), void this.ready(function() {
        this.off("loadstart", t5), this.off("loadedmetadata", i3), e10 || this.trigger("loadstart");
      });
    }
    const t4 = ["loadstart"];
    t4.push("loadedmetadata"), e9.readyState >= 2 && t4.push("loadeddata"), e9.readyState >= 3 && t4.push("canplay"), e9.readyState >= 4 && t4.push("canplaythrough"), this.ready(function() {
      t4.forEach(function(e10) {
        this.trigger(e10);
      }, this);
    });
  }
  setScrubbing(e9) {
    this.isScrubbing_ = e9;
  }
  scrubbing() {
    return this.isScrubbing_;
  }
  setCurrentTime(e9) {
    try {
      this.isScrubbing_ && this.el_.fastSeek && Kn ? this.el_.fastSeek(e9) : this.el_.currentTime = e9;
    } catch (t4) {
      gn(t4, "Video is not ready. (Video.js)");
    }
  }
  duration() {
    if (this.el_.duration === 1 / 0 && Dn && Nn && 0 === this.el_.currentTime) {
      const e9 = () => {
        this.el_.currentTime > 0 && (this.el_.duration === 1 / 0 && this.trigger("durationchange"), this.off("timeupdate", e9));
      };
      return this.on("timeupdate", e9), NaN;
    }
    return this.el_.duration || NaN;
  }
  width() {
    return this.el_.offsetWidth;
  }
  height() {
    return this.el_.offsetHeight;
  }
  proxyWebkitFullscreen_() {
    if (!("webkitDisplayingFullscreen" in this.el_)) return;
    const e9 = function() {
      this.trigger("fullscreenchange", { isFullscreen: false }), this.el_.controls && !this.options_.nativeControlsForTouch && this.controls() && (this.el_.controls = false);
    }, t4 = function() {
      "webkitPresentationMode" in this.el_ && "picture-in-picture" !== this.el_.webkitPresentationMode && (this.one("webkitendfullscreen", e9), this.trigger("fullscreenchange", { isFullscreen: true, nativeIOSFullscreen: true }));
    };
    this.on("webkitbeginfullscreen", t4), this.on("dispose", () => {
      this.off("webkitbeginfullscreen", t4), this.off("webkitendfullscreen", e9);
    });
  }
  supportsFullScreen() {
    return "function" == typeof this.el_.webkitEnterFullScreen;
  }
  enterFullScreen() {
    const e9 = this.el_;
    if (e9.paused && e9.networkState <= e9.HAVE_METADATA) Ua(this.el_.play()), this.setTimeout(function() {
      e9.pause();
      try {
        e9.webkitEnterFullScreen();
      } catch (t4) {
        this.trigger("fullscreenerror", t4);
      }
    }, 0);
    else try {
      e9.webkitEnterFullScreen();
    } catch (t4) {
      this.trigger("fullscreenerror", t4);
    }
  }
  exitFullScreen() {
    this.el_.webkitDisplayingFullscreen ? this.el_.webkitExitFullScreen() : this.trigger("fullscreenerror", new Error("The video is not fullscreen"));
  }
  requestPictureInPicture() {
    return this.el_.requestPictureInPicture();
  }
  requestVideoFrameCallback(e9) {
    return this.featuresVideoFrameCallback && !this.el_.webkitKeys ? this.el_.requestVideoFrameCallback(e9) : super.requestVideoFrameCallback(e9);
  }
  cancelVideoFrameCallback(e9) {
    this.featuresVideoFrameCallback && !this.el_.webkitKeys ? this.el_.cancelVideoFrameCallback(e9) : super.cancelVideoFrameCallback(e9);
  }
  src(e9) {
    if (void 0 === e9) return this.el_.src;
    this.setSrc(e9);
  }
  reset() {
    _Hh.resetMediaElement(this.el_);
  }
  currentSrc() {
    return this.currentSource_ ? this.currentSource_.src : this.el_.currentSrc;
  }
  setControls(e9) {
    this.el_.controls = !!e9;
  }
  addTextTrack(e9, t4, i3) {
    return this.featuresNativeTextTracks ? this.el_.addTextTrack(e9, t4, i3) : super.addTextTrack(e9, t4, i3);
  }
  createRemoteTextTrack(e9) {
    if (!this.featuresNativeTextTracks) return super.createRemoteTextTrack(e9);
    const t4 = ne.createElement("track");
    return e9.kind && (t4.kind = e9.kind), e9.label && (t4.label = e9.label), (e9.language || e9.srclang) && (t4.srclang = e9.language || e9.srclang), e9.default && (t4.default = e9.default), e9.id && (t4.id = e9.id), e9.src && (t4.src = e9.src), t4;
  }
  addRemoteTextTrack(e9, t4) {
    const i3 = super.addRemoteTextTrack(e9, t4);
    return this.featuresNativeTextTracks && this.el().appendChild(i3), i3;
  }
  removeRemoteTextTrack(e9) {
    if (super.removeRemoteTextTrack(e9), this.featuresNativeTextTracks) {
      const t4 = this.$$("track");
      let i3 = t4.length;
      for (; i3--; ) e9 !== t4[i3] && e9 !== t4[i3].track || this.el().removeChild(t4[i3]);
    }
  }
  getVideoPlaybackQuality() {
    if ("function" == typeof this.el().getVideoPlaybackQuality) return this.el().getVideoPlaybackQuality();
    const e9 = {};
    return void 0 !== this.el().webkitDroppedFrameCount && void 0 !== this.el().webkitDecodedFrameCount && (e9.droppedVideoFrames = this.el().webkitDroppedFrameCount, e9.totalVideoFrames = this.el().webkitDecodedFrameCount), _.performance && (e9.creationTime = _.performance.now()), e9;
  }
};
Cn(Hh, "TEST_VID", function() {
  if (!Zn()) return;
  const e9 = ne.createElement("video"), t4 = ne.createElement("track");
  return t4.kind = "captions", t4.srclang = "en", t4.label = "English", e9.appendChild(t4), e9;
}), Hh.isSupported = function() {
  try {
    Hh.TEST_VID.volume = 0.5;
  } catch (e9) {
    return false;
  }
  return !(!Hh.TEST_VID || !Hh.TEST_VID.canPlayType);
}, Hh.canPlayType = function(e9) {
  return Hh.TEST_VID.canPlayType(e9);
}, Hh.canPlaySource = function(e9, t4) {
  return Hh.canPlayType(e9.type);
}, Hh.canControlVolume = function() {
  try {
    const e9 = Hh.TEST_VID.volume;
    Hh.TEST_VID.volume = e9 / 2 + 0.1;
    const t4 = e9 !== Hh.TEST_VID.volume;
    return t4 && Xn ? (_.setTimeout(() => {
      Hh && Hh.prototype && (Hh.prototype.featuresVolumeControl = e9 !== Hh.TEST_VID.volume);
    }), false) : t4;
  } catch (e9) {
    return false;
  }
}, Hh.canMuteVolume = function() {
  try {
    const e9 = Hh.TEST_VID.muted;
    return Hh.TEST_VID.muted = !e9, Hh.TEST_VID.muted ? pr(Hh.TEST_VID, "muted", "muted") : mr(Hh.TEST_VID, "muted", "muted"), e9 !== Hh.TEST_VID.muted;
  } catch (e9) {
    return false;
  }
}, Hh.canControlPlaybackRate = function() {
  if (Dn && Nn && Mn < 58) return false;
  try {
    const e9 = Hh.TEST_VID.playbackRate;
    return Hh.TEST_VID.playbackRate = e9 / 2 + 0.1, e9 !== Hh.TEST_VID.playbackRate;
  } catch (e9) {
    return false;
  }
}, Hh.canOverrideAttributes = function() {
  try {
    const e9 = () => {
    };
    Object.defineProperty(ne.createElement("video"), "src", { get: e9, set: e9 }), Object.defineProperty(ne.createElement("audio"), "src", { get: e9, set: e9 }), Object.defineProperty(ne.createElement("video"), "innerHTML", { get: e9, set: e9 }), Object.defineProperty(ne.createElement("audio"), "innerHTML", { get: e9, set: e9 });
  } catch (e9) {
    return false;
  }
  return true;
}, Hh.supportsNativeTextTracks = function() {
  return Kn || Xn && Nn;
}, Hh.supportsNativeVideoTracks = function() {
  return !(!Hh.TEST_VID || !Hh.TEST_VID.videoTracks);
}, Hh.supportsNativeAudioTracks = function() {
  return !(!Hh.TEST_VID || !Hh.TEST_VID.audioTracks);
}, Hh.Events = ["loadstart", "suspend", "abort", "error", "emptied", "stalled", "loadedmetadata", "loadeddata", "canplay", "canplaythrough", "playing", "waiting", "seeking", "seeked", "ended", "durationchange", "timeupdate", "progress", "play", "pause", "ratechange", "resize", "volumechange"], [["featuresMuteControl", "canMuteVolume"], ["featuresPlaybackRate", "canControlPlaybackRate"], ["featuresSourceset", "canOverrideAttributes"], ["featuresNativeTextTracks", "supportsNativeTextTracks"], ["featuresNativeVideoTracks", "supportsNativeVideoTracks"], ["featuresNativeAudioTracks", "supportsNativeAudioTracks"]].forEach(function([e9, t4]) {
  Cn(Hh.prototype, e9, () => Hh[t4](), true);
}), Hh.prototype.featuresVolumeControl = Hh.canControlVolume(), Hh.prototype.movingMediaElementInDOM = !Xn, Hh.prototype.featuresFullscreenResize = true, Hh.prototype.featuresProgressEvents = true, Hh.prototype.featuresTimeupdateEvents = true, Hh.prototype.featuresVideoFrameCallback = !(!Hh.TEST_VID || !Hh.TEST_VID.requestVideoFrameCallback), Hh.disposeMediaElement = function(e9) {
  if (e9) {
    for (e9.parentNode && e9.parentNode.removeChild(e9); e9.hasChildNodes(); ) e9.removeChild(e9.firstChild);
    e9.removeAttribute("src"), "function" == typeof e9.load && function() {
      try {
        e9.load();
      } catch (t4) {
      }
    }();
  }
}, Hh.resetMediaElement = function(e9) {
  if (!e9) return;
  const t4 = e9.querySelectorAll("source");
  let i3 = t4.length;
  for (; i3--; ) e9.removeChild(t4[i3]);
  e9.removeAttribute("src"), "function" == typeof e9.load && function() {
    try {
      e9.load();
    } catch (t5) {
    }
  }();
}, ["muted", "defaultMuted", "autoplay", "controls", "loop", "playsinline"].forEach(function(e9) {
  Hh.prototype[e9] = function() {
    return this.el_[e9] || this.el_.hasAttribute(e9);
  };
}), ["muted", "defaultMuted", "autoplay", "loop", "playsinline"].forEach(function(e9) {
  Hh.prototype["set" + va(e9)] = function(t4) {
    this.el_[e9] = t4, t4 ? this.el_.setAttribute(e9, e9) : this.el_.removeAttribute(e9);
  };
}), ["paused", "currentTime", "buffered", "volume", "poster", "preload", "error", "seeking", "seekable", "ended", "playbackRate", "defaultPlaybackRate", "disablePictureInPicture", "played", "networkState", "readyState", "videoWidth", "videoHeight", "crossOrigin"].forEach(function(e9) {
  Hh.prototype[e9] = function() {
    return this.el_[e9];
  };
}), ["volume", "src", "poster", "preload", "playbackRate", "defaultPlaybackRate", "disablePictureInPicture", "crossOrigin"].forEach(function(e9) {
  Hh.prototype["set" + va(e9)] = function(t4) {
    this.el_[e9] = t4;
  };
}), ["pause", "load", "play"].forEach(function(e9) {
  Hh.prototype[e9] = function() {
    return this.el_[e9]();
  };
}), yo.withSourceHandlers(Hh), Hh.nativeSourceHandler = {}, Hh.nativeSourceHandler.canPlayType = function(e9) {
  try {
    return Hh.TEST_VID.canPlayType(e9);
  } catch (t4) {
    return "";
  }
}, Hh.nativeSourceHandler.canHandleSource = function(e9, t4) {
  if (e9.type) return Hh.nativeSourceHandler.canPlayType(e9.type);
  if (e9.src) {
    const t5 = so(e9.src);
    return Hh.nativeSourceHandler.canPlayType(`video/${t5}`);
  }
  return "";
}, Hh.nativeSourceHandler.handleSource = function(e9, t4, i3) {
  t4.setSrc(e9.src);
}, Hh.nativeSourceHandler.dispose = function() {
}, Hh.registerSourceHandler(Hh.nativeSourceHandler), yo.registerTech("Html5", Hh);
var Vh = ["progress", "abort", "suspend", "emptied", "stalled", "loadedmetadata", "loadeddata", "timeupdate", "resize", "volumechange", "texttrackchange"];
var zh = { canplay: "CanPlay", canplaythrough: "CanPlayThrough", playing: "Playing", seeked: "Seeked" };
var Wh = ["tiny", "xsmall", "small", "medium", "large", "xlarge", "huge"];
var Gh = {};
Wh.forEach((e9) => {
  const t4 = "x" === e9.charAt(0) ? `x-${e9.substring(1)}` : e9;
  Gh[e9] = `vjs-layout-${t4}`;
});
var Xh = { tiny: 210, xsmall: 320, small: 425, medium: 768, large: 1440, xlarge: 2560, huge: 1 / 0 };
var Kh = class _Kh extends Ea {
  constructor(e9, t4, i3) {
    if (e9.id = e9.id || t4.id || `vjs_video_${jr()}`, (t4 = Object.assign(_Kh.getTagSettings(e9), t4)).initChildren = false, t4.createEl = false, t4.evented = false, t4.reportTouchActivity = false, !t4.language) {
      const i4 = e9.closest("[lang]");
      i4 && (t4.language = i4.getAttribute("lang"));
    }
    if (super(null, t4, i3), this.boundDocumentFullscreenChange_ = (e10) => this.documentFullscreenChange_(e10), this.boundFullWindowOnEscKey_ = (e10) => this.fullWindowOnEscKey(e10), this.boundUpdateStyleEl_ = (e10) => this.updateStyleEl_(e10), this.boundApplyInitTime_ = (e10) => this.applyInitTime_(e10), this.boundUpdateCurrentBreakpoint_ = (e10) => this.updateCurrentBreakpoint_(e10), this.boundHandleTechClick_ = (e10) => this.handleTechClick_(e10), this.boundHandleTechDoubleClick_ = (e10) => this.handleTechDoubleClick_(e10), this.boundHandleTechTouchStart_ = (e10) => this.handleTechTouchStart_(e10), this.boundHandleTechTouchMove_ = (e10) => this.handleTechTouchMove_(e10), this.boundHandleTechTouchEnd_ = (e10) => this.handleTechTouchEnd_(e10), this.boundHandleTechTap_ = (e10) => this.handleTechTap_(e10), this.boundUpdatePlayerHeightOnAudioOnlyMode_ = (e10) => this.updatePlayerHeightOnAudioOnlyMode_(e10), this.isFullscreen_ = false, this.log = fn(this.id_), this.fsApi_ = ln, this.isPosterFromTech_ = false, this.queuedCallbacks_ = [], this.isReady_ = false, this.hasStarted_ = false, this.userActive_ = false, this.debugEnabled_ = false, this.audioOnlyMode_ = false, this.audioPosterMode_ = false, this.audioOnlyCache_ = { controlBarHeight: null, playerHeight: null, hiddenChildren: [] }, !this.options_ || !this.options_.techOrder || !this.options_.techOrder.length) throw new Error("No techOrder specified. Did you overwrite videojs.options instead of just changing the properties you want to override?");
    if (this.tag = e9, this.tagAttributes = e9 && dr(e9), this.language(this.options_.language), t4.languages) {
      const e10 = {};
      Object.getOwnPropertyNames(t4.languages).forEach(function(i4) {
        e10[i4.toLowerCase()] = t4.languages[i4];
      }), this.languages_ = e10;
    } else this.languages_ = _Kh.prototype.options_.languages;
    this.resetCache_(), this.poster_ = t4.poster || "", this.controls_ = !!t4.controls, e9.controls = false, e9.removeAttribute("controls"), this.changingSrc_ = false, this.playCallbacks_ = [], this.playTerminatedQueue_ = [], e9.hasAttribute("autoplay") ? this.autoplay(true) : this.autoplay(this.options_.autoplay), t4.plugins && Object.keys(t4.plugins).forEach((e10) => {
      if ("function" != typeof this[e10]) throw new Error(`plugin "${e10}" does not exist`);
    }), this.scrubbing_ = false, this.el_ = this.createEl(), fa(this, { eventBusKey: "el_" }), this.fsApi_.requestFullscreen && (Gr(ne, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_), this.on(this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_)), this.fluid_ && this.on(["playerreset", "resize"], this.boundUpdateStyleEl_);
    const s5 = En(this.options_);
    if (t4.plugins && Object.keys(t4.plugins).forEach((e10) => {
      this[e10](t4.plugins[e10]);
    }), t4.debug && this.debug(true), this.options_.playerOptions = s5, this.middleware_ = [], this.playbackRates(t4.playbackRates), t4.experimentalSvgIcons) {
      const e10 = new _.DOMParser().parseFromString(qo, "image/svg+xml");
      if (e10.querySelector("parsererror")) gn.warn("Failed to load SVG Icons. Falling back to Font Icons."), this.options_.experimentalSvgIcons = null;
      else {
        const t5 = e10.documentElement;
        t5.style.display = "none", this.el_.appendChild(t5), this.addClass("vjs-svg-icons-enabled");
      }
    }
    this.initChildren(), this.isAudio("audio" === e9.nodeName.toLowerCase()), this.controls() ? this.addClass("vjs-controls-enabled") : this.addClass("vjs-controls-disabled"), this.el_.setAttribute("role", "region"), this.isAudio() ? this.el_.setAttribute("aria-label", this.localize("Audio Player")) : this.el_.setAttribute("aria-label", this.localize("Video Player")), this.isAudio() && this.addClass("vjs-audio"), t4.spatialNavigation && t4.spatialNavigation.enabled && (this.spatialNavigation = new Vo(this), this.addClass("vjs-spatial-navigation-enabled")), Wn && this.addClass("vjs-touch-enabled"), Xn || this.addClass("vjs-workinghover"), _Kh.players[this.id_] = this;
    const n6 = tn.split(".")[0];
    this.addClass(`vjs-v${n6}`), this.userActive(true), this.reportUserActivity(), this.one("play", (e10) => this.listenForUserActivity_(e10)), this.on("keydown", (e10) => this.handleKeyDown(e10)), this.on("languagechange", (e10) => this.handleLanguagechange(e10)), this.breakpoints(this.options_.breakpoints), this.responsive(this.options_.responsive), this.on("ready", () => {
      this.audioPosterMode(this.options_.audioPosterMode), this.audioOnlyMode(this.options_.audioOnlyMode);
    });
  }
  dispose() {
    this.trigger("dispose"), this.off("dispose"), Xr(ne, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_), Xr(ne, "keydown", this.boundFullWindowOnEscKey_), this.styleEl_ && this.styleEl_.parentNode && (this.styleEl_.parentNode.removeChild(this.styleEl_), this.styleEl_ = null), _Kh.players[this.id_] = null, this.tag && this.tag.player && (this.tag.player = null), this.el_ && this.el_.player && (this.el_.player = null), this.tech_ && (this.tech_.dispose(), this.isPosterFromTech_ = false, this.poster_ = ""), this.playerElIngest_ && (this.playerElIngest_ = null), this.tag && (this.tag = null), Lo(this), go.names.forEach((e9) => {
      const t4 = this[go[e9].getterName]();
      t4 && t4.off && t4.off();
    }), super.dispose({ restoreEl: this.options_.restoreEl });
  }
  createEl() {
    let e9, t4 = this.tag, i3 = this.playerElIngest_ = t4.parentNode && t4.parentNode.hasAttribute && t4.parentNode.hasAttribute("data-vjs-player");
    const s5 = "video-js" === this.tag.tagName.toLowerCase();
    i3 ? e9 = this.el_ = t4.parentNode : s5 || (e9 = this.el_ = super.createEl("div"));
    const n6 = dr(t4);
    if (s5) {
      for (e9 = this.el_ = t4, t4 = this.tag = ne.createElement("video"); e9.children.length; ) t4.appendChild(e9.firstChild);
      ar(e9, "video-js") || or(e9, "video-js"), e9.appendChild(t4), i3 = this.playerElIngest_ = e9, Object.keys(e9).forEach((i4) => {
        try {
          t4[i4] = e9[i4];
        } catch (s6) {
        }
      });
    }
    t4.setAttribute("tabindex", "-1"), n6.tabindex = "-1", Nn && qn && (t4.setAttribute("role", "application"), n6.role = "application"), t4.removeAttribute("width"), t4.removeAttribute("height"), "width" in n6 && delete n6.width, "height" in n6 && delete n6.height, Object.getOwnPropertyNames(n6).forEach(function(i4) {
      s5 && "class" === i4 || e9.setAttribute(i4, n6[i4]), s5 && t4.setAttribute(i4, n6[i4]);
    }), t4.playerId = t4.id, t4.id += "_html5_api", t4.className = "vjs-tech", t4.player = e9.player = this, this.addClass("vjs-paused");
    const r5 = ["IS_SMART_TV", "IS_TIZEN", "IS_WEBOS", "IS_ANDROID", "IS_IPAD", "IS_IPHONE", "IS_CHROMECAST_RECEIVER"].filter((e10) => Yn[e10]).map((e10) => "vjs-device-" + e10.substring(3).toLowerCase().replace(/\_/g, "-"));
    if (this.addClass(...r5), true !== _.VIDEOJS_NO_DYNAMIC_STYLE) {
      this.styleEl_ = Mr("vjs-styles-dimensions");
      const e10 = kr(".vjs-styles-defaults"), t5 = kr("head");
      t5.insertBefore(this.styleEl_, e10 ? e10.nextSibling : t5.firstChild);
    }
    this.fill_ = false, this.fluid_ = false, this.width(this.options_.width), this.height(this.options_.height), this.fill(this.options_.fill), this.fluid(this.options_.fluid), this.aspectRatio(this.options_.aspectRatio), this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);
    const a6 = t4.getElementsByTagName("a");
    for (let o4 = 0; o4 < a6.length; o4++) {
      const e10 = a6.item(o4);
      or(e10, "vjs-hidden"), e10.setAttribute("hidden", "hidden");
    }
    return t4.initNetworkState_ = t4.networkState, t4.parentNode && !i3 && t4.parentNode.insertBefore(e9, t4), rr(t4, e9), this.children_.unshift(t4), this.el_.setAttribute("lang", this.language_), this.el_.setAttribute("translate", "no"), this.el_ = e9, e9;
  }
  crossOrigin(e9) {
    if (void 0 === e9) return this.techGet_("crossOrigin");
    null === e9 || "anonymous" === e9 || "use-credentials" === e9 ? (this.techCall_("setCrossOrigin", e9), this.posterImage && this.posterImage.crossOrigin(e9)) : gn.warn(`crossOrigin must be null,  "anonymous" or "use-credentials", given "${e9}"`);
  }
  width(e9) {
    return this.dimension("width", e9);
  }
  height(e9) {
    return this.dimension("height", e9);
  }
  dimension(e9, t4) {
    const i3 = e9 + "_";
    if (void 0 === t4) return this[i3] || 0;
    if ("" === t4 || "auto" === t4) return this[i3] = void 0, void this.updateStyleEl_();
    const s5 = parseFloat(t4);
    isNaN(s5) ? gn.error(`Improper value "${t4}" supplied for for ${e9}`) : (this[i3] = s5, this.updateStyleEl_());
  }
  fluid(e9) {
    if (void 0 === e9) return !!this.fluid_;
    this.fluid_ = !!e9, oa(this) && this.off(["playerreset", "resize"], this.boundUpdateStyleEl_), e9 ? (this.addClass("vjs-fluid"), this.fill(false), la(this, () => {
      this.on(["playerreset", "resize"], this.boundUpdateStyleEl_);
    })) : this.removeClass("vjs-fluid"), this.updateStyleEl_();
  }
  fill(e9) {
    if (void 0 === e9) return !!this.fill_;
    this.fill_ = !!e9, e9 ? (this.addClass("vjs-fill"), this.fluid(false)) : this.removeClass("vjs-fill");
  }
  aspectRatio(e9) {
    if (void 0 === e9) return this.aspectRatio_;
    if (!/^\d+\:\d+$/.test(e9)) throw new Error("Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.");
    this.aspectRatio_ = e9, this.fluid(true), this.updateStyleEl_();
  }
  updateStyleEl_() {
    if (true === _.VIDEOJS_NO_DYNAMIC_STYLE) {
      const e10 = "number" == typeof this.width_ ? this.width_ : this.options_.width, t5 = "number" == typeof this.height_ ? this.height_ : this.options_.height, i4 = this.tech_ && this.tech_.el();
      return void (i4 && (e10 >= 0 && (i4.width = e10), t5 >= 0 && (i4.height = t5)));
    }
    let e9, t4, i3, s5;
    i3 = void 0 !== this.aspectRatio_ && "auto" !== this.aspectRatio_ ? this.aspectRatio_ : this.videoWidth() > 0 ? this.videoWidth() + ":" + this.videoHeight() : "16:9";
    const n6 = i3.split(":"), r5 = n6[1] / n6[0];
    e9 = void 0 !== this.width_ ? this.width_ : void 0 !== this.height_ ? this.height_ / r5 : this.videoWidth() || 300, t4 = void 0 !== this.height_ ? this.height_ : e9 * r5, s5 = /^[^a-zA-Z]/.test(this.id()) ? "dimensions-" + this.id() : this.id() + "-dimensions", this.addClass(s5), Ur(this.styleEl_, `
      .${s5} {
        width: ${e9}px;
        height: ${t4}px;
      }

      .${s5}.vjs-fluid:not(.vjs-audio-only-mode) {
        padding-top: ${100 * r5}%;
      }
    `);
  }
  loadTech_(e9, t4) {
    this.tech_ && this.unloadTech_();
    const i3 = va(e9), s5 = e9.charAt(0).toLowerCase() + e9.slice(1);
    "Html5" !== i3 && this.tag && (yo.getTech("Html5").disposeMediaElement(this.tag), this.tag.player = null, this.tag = null), this.techName_ = i3, this.isReady_ = false;
    let n6 = this.autoplay();
    ("string" == typeof this.autoplay() || true === this.autoplay() && this.options_.normalizeAutoplay) && (n6 = false);
    const r5 = { source: t4, autoplay: n6, nativeControlsForTouch: this.options_.nativeControlsForTouch, playerId: this.id(), techId: `${this.id()}_${s5}_api`, playsinline: this.options_.playsinline, preload: this.options_.preload, loop: this.options_.loop, disablePictureInPicture: this.options_.disablePictureInPicture, muted: this.options_.muted, poster: this.poster(), language: this.language(), playerElIngest: this.playerElIngest_ || false, "vtt.js": this.options_["vtt.js"], canOverridePoster: !!this.options_.techCanOverridePoster, enableSourceset: this.options_.enableSourceset };
    go.names.forEach((e10) => {
      const t5 = go[e10];
      r5[t5.getterName] = this[t5.privateName];
    }), Object.assign(r5, this.options_[i3]), Object.assign(r5, this.options_[s5]), Object.assign(r5, this.options_[e9.toLowerCase()]), this.tag && (r5.tag = this.tag), t4 && t4.src === this.cache_.src && this.cache_.currentTime > 0 && (r5.startTime = this.cache_.currentTime);
    const a6 = yo.getTech(e9);
    if (!a6) throw new Error(`No Tech named '${i3}' exists! '${i3}' should be registered using videojs.registerTech()'`);
    this.tech_ = new a6(r5), this.tech_.ready(ea(this, this.handleTechReady_), true), Fa.jsonToTextTracks(this.textTracksJson_ || [], this.tech_), Vh.forEach((e10) => {
      this.on(this.tech_, e10, (t5) => this[`handleTech${va(e10)}_`](t5));
    }), Object.keys(zh).forEach((e10) => {
      this.on(this.tech_, e10, (t5) => {
        0 === this.tech_.playbackRate() && this.tech_.seeking() ? this.queuedCallbacks_.push({ callback: this[`handleTech${zh[e10]}_`].bind(this), event: t5 }) : this[`handleTech${zh[e10]}_`](t5);
      });
    }), this.on(this.tech_, "loadstart", (e10) => this.handleTechLoadStart_(e10)), this.on(this.tech_, "sourceset", (e10) => this.handleTechSourceset_(e10)), this.on(this.tech_, "waiting", (e10) => this.handleTechWaiting_(e10)), this.on(this.tech_, "ended", (e10) => this.handleTechEnded_(e10)), this.on(this.tech_, "seeking", (e10) => this.handleTechSeeking_(e10)), this.on(this.tech_, "play", (e10) => this.handleTechPlay_(e10)), this.on(this.tech_, "pause", (e10) => this.handleTechPause_(e10)), this.on(this.tech_, "durationchange", (e10) => this.handleTechDurationChange_(e10)), this.on(this.tech_, "fullscreenchange", (e10, t5) => this.handleTechFullscreenChange_(e10, t5)), this.on(this.tech_, "fullscreenerror", (e10, t5) => this.handleTechFullscreenError_(e10, t5)), this.on(this.tech_, "enterpictureinpicture", (e10) => this.handleTechEnterPictureInPicture_(e10)), this.on(this.tech_, "leavepictureinpicture", (e10) => this.handleTechLeavePictureInPicture_(e10)), this.on(this.tech_, "error", (e10) => this.handleTechError_(e10)), this.on(this.tech_, "posterchange", (e10) => this.handleTechPosterChange_(e10)), this.on(this.tech_, "textdata", (e10) => this.handleTechTextData_(e10)), this.on(this.tech_, "ratechange", (e10) => this.handleTechRateChange_(e10)), this.on(this.tech_, "loadedmetadata", this.boundUpdateStyleEl_), this.usingNativeControls(this.techGet_("controls")), this.controls() && !this.usingNativeControls() && this.addTechControlsListeners_(), this.tech_.el().parentNode === this.el() || "Html5" === i3 && this.tag || rr(this.tech_.el(), this.el()), this.tag && (this.tag.player = null, this.tag = null);
  }
  unloadTech_() {
    go.names.forEach((e9) => {
      const t4 = go[e9];
      this[t4.privateName] = this[t4.getterName]();
    }), this.textTracksJson_ = Fa.textTracksToJson(this.tech_), this.isReady_ = false, this.tech_.dispose(), this.tech_ = false, this.isPosterFromTech_ && (this.poster_ = "", this.trigger("posterchange")), this.isPosterFromTech_ = false;
  }
  tech(e9) {
    return void 0 === e9 && gn.warn("Using the tech directly can be dangerous. I hope you know what you're doing.\nSee https://github.com/videojs/video.js/issues/2617 for more info.\n"), this.tech_;
  }
  version() {
    return { "video.js": tn };
  }
  addTechControlsListeners_() {
    this.removeTechControlsListeners_(), this.on(this.tech_, "click", this.boundHandleTechClick_), this.on(this.tech_, "dblclick", this.boundHandleTechDoubleClick_), this.on(this.tech_, "touchstart", this.boundHandleTechTouchStart_), this.on(this.tech_, "touchmove", this.boundHandleTechTouchMove_), this.on(this.tech_, "touchend", this.boundHandleTechTouchEnd_), this.on(this.tech_, "tap", this.boundHandleTechTap_);
  }
  removeTechControlsListeners_() {
    this.off(this.tech_, "tap", this.boundHandleTechTap_), this.off(this.tech_, "touchstart", this.boundHandleTechTouchStart_), this.off(this.tech_, "touchmove", this.boundHandleTechTouchMove_), this.off(this.tech_, "touchend", this.boundHandleTechTouchEnd_), this.off(this.tech_, "click", this.boundHandleTechClick_), this.off(this.tech_, "dblclick", this.boundHandleTechDoubleClick_);
  }
  handleTechReady_() {
    this.triggerReady(), this.cache_.volume && this.techCall_("setVolume", this.cache_.volume), this.handleTechPosterChange_(), this.handleTechDurationChange_();
  }
  handleTechLoadStart_() {
    this.removeClass("vjs-ended", "vjs-seeking"), this.error(null), this.handleTechDurationChange_(), this.paused() ? (this.hasStarted(false), this.trigger("loadstart")) : this.trigger("loadstart"), this.manualAutoplay_(true === this.autoplay() && this.options_.normalizeAutoplay ? "play" : this.autoplay());
  }
  manualAutoplay_(e9) {
    if (!this.tech_ || "string" != typeof e9) return;
    const t4 = () => {
      const e10 = this.muted();
      this.muted(true);
      const t5 = () => {
        this.muted(e10);
      };
      this.playTerminatedQueue_.push(t5);
      const i4 = this.play();
      if (Ma(i4)) return i4.catch((e11) => {
        throw t5(), new Error(`Rejection at manualAutoplay. Restoring muted value. ${e11 || ""}`);
      });
    };
    let i3;
    return "any" !== e9 || this.muted() ? i3 = "muted" !== e9 || this.muted() ? this.play() : t4() : (i3 = this.play(), Ma(i3) && (i3 = i3.catch(t4))), Ma(i3) ? i3.then(() => {
      this.trigger({ type: "autoplay-success", autoplay: e9 });
    }).catch(() => {
      this.trigger({ type: "autoplay-failure", autoplay: e9 });
    }) : void 0;
  }
  updateSourceCaches_(e9 = "") {
    let t4 = e9, i3 = "";
    "string" != typeof t4 && (t4 = e9.src, i3 = e9.type), this.cache_.source = this.cache_.source || {}, this.cache_.sources = this.cache_.sources || [], t4 && !i3 && (i3 = Uo(this, t4)), this.cache_.source = En({}, e9, { src: t4, type: i3 });
    const s5 = this.cache_.sources.filter((e10) => e10.src && e10.src === t4), n6 = [], r5 = this.$$("source"), a6 = [];
    for (let o4 = 0; o4 < r5.length; o4++) {
      const e10 = dr(r5[o4]);
      n6.push(e10), e10.src && e10.src === t4 && a6.push(e10.src);
    }
    a6.length && !s5.length ? this.cache_.sources = n6 : s5.length || (this.cache_.sources = [this.cache_.source]), this.cache_.src = t4;
  }
  handleTechSourceset_(e9) {
    if (!this.changingSrc_) {
      let t4 = (e10) => this.updateSourceCaches_(e10);
      const i3 = this.currentSource().src, s5 = e9.src;
      i3 && !/^blob:/.test(i3) && /^blob:/.test(s5) && (!this.lastSource_ || this.lastSource_.tech !== s5 && this.lastSource_.player !== i3) && (t4 = () => {
      }), t4(s5), e9.src || this.tech_.any(["sourceset", "loadstart"], (e10) => {
        if ("sourceset" === e10.type) return;
        const t5 = this.techGet_("currentSrc");
        this.lastSource_.tech = t5, this.updateSourceCaches_(t5);
      });
    }
    this.lastSource_ = { player: this.currentSource().src, tech: e9.src }, this.trigger({ src: e9.src, type: "sourceset" });
  }
  hasStarted(e9) {
    if (void 0 === e9) return this.hasStarted_;
    e9 !== this.hasStarted_ && (this.hasStarted_ = e9, this.hasStarted_ ? this.addClass("vjs-has-started") : this.removeClass("vjs-has-started"));
  }
  handleTechPlay_() {
    this.removeClass("vjs-ended", "vjs-paused"), this.addClass("vjs-playing"), this.hasStarted(true), this.trigger("play");
  }
  handleTechRateChange_() {
    this.tech_.playbackRate() > 0 && 0 === this.cache_.lastPlaybackRate && (this.queuedCallbacks_.forEach((e9) => e9.callback(e9.event)), this.queuedCallbacks_ = []), this.cache_.lastPlaybackRate = this.tech_.playbackRate(), this.trigger("ratechange");
  }
  handleTechWaiting_() {
    this.addClass("vjs-waiting"), this.trigger("waiting");
    const e9 = this.currentTime(), t4 = () => {
      e9 !== this.currentTime() && (this.removeClass("vjs-waiting"), this.off("timeupdate", t4));
    };
    this.on("timeupdate", t4);
  }
  handleTechCanPlay_() {
    this.removeClass("vjs-waiting"), this.trigger("canplay");
  }
  handleTechCanPlayThrough_() {
    this.removeClass("vjs-waiting"), this.trigger("canplaythrough");
  }
  handleTechPlaying_() {
    this.removeClass("vjs-waiting"), this.trigger("playing");
  }
  handleTechSeeking_() {
    this.addClass("vjs-seeking"), this.trigger("seeking");
  }
  handleTechSeeked_() {
    this.removeClass("vjs-seeking", "vjs-ended"), this.trigger("seeked");
  }
  handleTechPause_() {
    this.removeClass("vjs-playing"), this.addClass("vjs-paused"), this.trigger("pause");
  }
  handleTechEnded_() {
    this.addClass("vjs-ended"), this.removeClass("vjs-waiting"), this.options_.loop ? (this.currentTime(0), this.play()) : this.paused() || this.pause(), this.trigger("ended");
  }
  handleTechDurationChange_() {
    this.duration(this.techGet_("duration"));
  }
  handleTechClick_(e9) {
    this.controls_ && (void 0 !== this.options_ && void 0 !== this.options_.userActions && void 0 !== this.options_.userActions.click && false === this.options_.userActions.click || (void 0 !== this.options_ && void 0 !== this.options_.userActions && "function" == typeof this.options_.userActions.click ? this.options_.userActions.click.call(this, e9) : this.paused() ? Ua(this.play()) : this.pause()));
  }
  handleTechDoubleClick_(e9) {
    if (!this.controls_) return;
    Array.prototype.some.call(this.$$(".vjs-control-bar, .vjs-modal-dialog"), (t4) => t4.contains(e9.target)) || void 0 !== this.options_ && void 0 !== this.options_.userActions && void 0 !== this.options_.userActions.doubleClick && false === this.options_.userActions.doubleClick || (void 0 !== this.options_ && void 0 !== this.options_.userActions && "function" == typeof this.options_.userActions.doubleClick ? this.options_.userActions.doubleClick.call(this, e9) : this.isFullscreen() ? this.exitFullscreen() : this.requestFullscreen());
  }
  handleTechTap_() {
    this.userActive(!this.userActive());
  }
  handleTechTouchStart_() {
    this.userWasActive = this.userActive();
  }
  handleTechTouchMove_() {
    this.userWasActive && this.reportUserActivity();
  }
  handleTechTouchEnd_(e9) {
    e9.cancelable && e9.preventDefault();
  }
  toggleFullscreenClass_() {
    this.isFullscreen() ? this.addClass("vjs-fullscreen") : this.removeClass("vjs-fullscreen");
  }
  documentFullscreenChange_(e9) {
    const t4 = e9.target.player;
    if (t4 && t4 !== this) return;
    const i3 = this.el();
    let s5 = ne[this.fsApi_.fullscreenElement] === i3;
    !s5 && i3.matches && (s5 = i3.matches(":" + this.fsApi_.fullscreen)), this.isFullscreen(s5);
  }
  handleTechFullscreenChange_(e9, t4) {
    t4 && (t4.nativeIOSFullscreen && (this.addClass("vjs-ios-native-fs"), this.tech_.one("webkitendfullscreen", () => {
      this.removeClass("vjs-ios-native-fs");
    })), this.isFullscreen(t4.isFullscreen));
  }
  handleTechFullscreenError_(e9, t4) {
    this.trigger("fullscreenerror", t4);
  }
  togglePictureInPictureClass_() {
    this.isInPictureInPicture() ? this.addClass("vjs-picture-in-picture") : this.removeClass("vjs-picture-in-picture");
  }
  handleTechEnterPictureInPicture_(e9) {
    this.isInPictureInPicture(true);
  }
  handleTechLeavePictureInPicture_(e9) {
    this.isInPictureInPicture(false);
  }
  handleTechError_() {
    const e9 = this.tech_.error();
    e9 && this.error(e9);
  }
  handleTechTextData_() {
    let e9 = null;
    arguments.length > 1 && (e9 = arguments[1]), this.trigger("textdata", e9);
  }
  getCache() {
    return this.cache_;
  }
  resetCache_() {
    this.cache_ = { currentTime: 0, initTime: 0, inactivityTimeout: this.options_.inactivityTimeout, duration: NaN, lastVolume: 1, lastPlaybackRate: this.defaultPlaybackRate(), media: null, src: "", source: {}, sources: [], playbackRates: [], volume: 1 };
  }
  techCall_(e9, t4) {
    this.ready(function() {
      if (e9 in xo) return Co(this.middleware_, this.tech_, e9, t4);
      if (e9 in Ao) return ko(this.middleware_, this.tech_, e9, t4);
      try {
        this.tech_ && this.tech_[e9](t4);
      } catch (i3) {
        throw gn(i3), i3;
      }
    }, true);
  }
  techGet_(e9) {
    if (this.tech_ && this.tech_.isReady_) {
      if (e9 in Io) return wo(this.middleware_, this.tech_, e9);
      if (e9 in Ao) return ko(this.middleware_, this.tech_, e9);
      try {
        return this.tech_[e9]();
      } catch (t4) {
        if (void 0 === this.tech_[e9]) throw gn(`Video.js: ${e9} method not defined for ${this.techName_} playback technology.`, t4), t4;
        if ("TypeError" === t4.name) throw gn(`Video.js: ${e9} unavailable on ${this.techName_} playback technology element.`, t4), this.tech_.isReady_ = false, t4;
        throw gn(t4), t4;
      }
    }
  }
  play() {
    return new Promise((e9) => {
      this.play_(e9);
    });
  }
  play_(e9 = Ua) {
    this.playCallbacks_.push(e9);
    const t4 = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())), i3 = Boolean(Kn || Xn);
    if (this.waitToPlay_ && (this.off(["ready", "loadstart"], this.waitToPlay_), this.waitToPlay_ = null), !this.isReady_ || !t4) return this.waitToPlay_ = (e10) => {
      this.play_();
    }, this.one(["ready", "loadstart"], this.waitToPlay_), void (!t4 && i3 && this.load());
    const s5 = this.techGet_("play");
    i3 && this.hasClass("vjs-ended") && this.resetProgressBar_(), null === s5 ? this.runPlayTerminatedQueue_() : this.runPlayCallbacks_(s5);
  }
  runPlayTerminatedQueue_() {
    const e9 = this.playTerminatedQueue_.slice(0);
    this.playTerminatedQueue_ = [], e9.forEach(function(e10) {
      e10();
    });
  }
  runPlayCallbacks_(e9) {
    const t4 = this.playCallbacks_.slice(0);
    this.playCallbacks_ = [], this.playTerminatedQueue_ = [], t4.forEach(function(t5) {
      t5(e9);
    });
  }
  pause() {
    this.techCall_("pause");
  }
  paused() {
    return false !== this.techGet_("paused");
  }
  played() {
    return this.techGet_("played") || Ia(0, 0);
  }
  scrubbing(e9) {
    if (void 0 === e9) return this.scrubbing_;
    this.scrubbing_ = !!e9, this.techCall_("setScrubbing", this.scrubbing_), e9 ? this.addClass("vjs-scrubbing") : this.removeClass("vjs-scrubbing");
  }
  currentTime(e9) {
    return void 0 === e9 ? (this.cache_.currentTime = this.techGet_("currentTime") || 0, this.cache_.currentTime) : (e9 < 0 && (e9 = 0), this.isReady_ && !this.changingSrc_ && this.tech_ && this.tech_.isReady_ ? (this.techCall_("setCurrentTime", e9), this.cache_.initTime = 0, void (isFinite(e9) && (this.cache_.currentTime = Number(e9)))) : (this.cache_.initTime = e9, this.off("canplay", this.boundApplyInitTime_), void this.one("canplay", this.boundApplyInitTime_)));
  }
  applyInitTime_() {
    this.currentTime(this.cache_.initTime);
  }
  duration(e9) {
    if (void 0 === e9) return void 0 !== this.cache_.duration ? this.cache_.duration : NaN;
    (e9 = parseFloat(e9)) < 0 && (e9 = 1 / 0), e9 !== this.cache_.duration && (this.cache_.duration = e9, e9 === 1 / 0 ? this.addClass("vjs-live") : this.removeClass("vjs-live"), isNaN(e9) || this.trigger("durationchange"));
  }
  remainingTime() {
    return this.duration() - this.currentTime();
  }
  remainingTimeDisplay() {
    return Math.floor(this.duration()) - Math.floor(this.currentTime());
  }
  buffered() {
    let e9 = this.techGet_("buffered");
    return e9 && e9.length || (e9 = Ia(0, 0)), e9;
  }
  seekable() {
    let e9 = this.techGet_("seekable");
    return e9 && e9.length || (e9 = Ia(0, 0)), e9;
  }
  seeking() {
    return this.techGet_("seeking");
  }
  ended() {
    return this.techGet_("ended");
  }
  networkState() {
    return this.techGet_("networkState");
  }
  readyState() {
    return this.techGet_("readyState");
  }
  bufferedPercent() {
    return Na(this.buffered(), this.duration());
  }
  bufferedEnd() {
    const e9 = this.buffered(), t4 = this.duration();
    let i3 = e9.end(e9.length - 1);
    return i3 > t4 && (i3 = t4), i3;
  }
  volume(e9) {
    let t4;
    return void 0 !== e9 ? (t4 = Math.max(0, Math.min(1, e9)), this.cache_.volume = t4, this.techCall_("setVolume", t4), void (t4 > 0 && this.lastVolume_(t4))) : (t4 = parseFloat(this.techGet_("volume")), isNaN(t4) ? 1 : t4);
  }
  muted(e9) {
    if (void 0 === e9) return this.techGet_("muted") || false;
    this.techCall_("setMuted", e9);
  }
  defaultMuted(e9) {
    return void 0 !== e9 && this.techCall_("setDefaultMuted", e9), this.techGet_("defaultMuted") || false;
  }
  lastVolume_(e9) {
    if (void 0 === e9 || 0 === e9) return this.cache_.lastVolume;
    this.cache_.lastVolume = e9;
  }
  supportsFullScreen() {
    return this.techGet_("supportsFullScreen") || false;
  }
  isFullscreen(e9) {
    if (void 0 !== e9) {
      const t4 = this.isFullscreen_;
      return this.isFullscreen_ = Boolean(e9), this.isFullscreen_ !== t4 && this.fsApi_.prefixed && this.trigger("fullscreenchange"), void this.toggleFullscreenClass_();
    }
    return this.isFullscreen_;
  }
  requestFullscreen(e9) {
    this.isInPictureInPicture() && this.exitPictureInPicture();
    const t4 = this;
    return new Promise((i3, s5) => {
      function n6() {
        t4.off("fullscreenerror", a6), t4.off("fullscreenchange", r5);
      }
      function r5() {
        n6(), i3();
      }
      function a6(e10, t5) {
        n6(), s5(t5);
      }
      t4.one("fullscreenchange", r5), t4.one("fullscreenerror", a6);
      const o4 = t4.requestFullscreenHelper_(e9);
      o4 && (o4.then(n6, n6), o4.then(i3, s5));
    });
  }
  requestFullscreenHelper_(e9) {
    let t4;
    if (this.fsApi_.prefixed || (t4 = this.options_.fullscreen && this.options_.fullscreen.options || {}, void 0 !== e9 && (t4 = e9)), this.fsApi_.requestFullscreen) {
      const e10 = this.el_[this.fsApi_.requestFullscreen](t4);
      return e10 && e10.then(() => this.isFullscreen(true), () => this.isFullscreen(false)), e10;
    }
    this.tech_.supportsFullScreen() && true == !this.options_.preferFullWindow ? this.techCall_("enterFullScreen") : this.enterFullWindow();
  }
  exitFullscreen() {
    const e9 = this;
    return new Promise((t4, i3) => {
      function s5() {
        e9.off("fullscreenerror", r5), e9.off("fullscreenchange", n6);
      }
      function n6() {
        s5(), t4();
      }
      function r5(e10, t5) {
        s5(), i3(t5);
      }
      e9.one("fullscreenchange", n6), e9.one("fullscreenerror", r5);
      const a6 = e9.exitFullscreenHelper_();
      a6 && (a6.then(s5, s5), a6.then(t4, i3));
    });
  }
  exitFullscreenHelper_() {
    if (this.fsApi_.requestFullscreen) {
      const e9 = ne[this.fsApi_.exitFullscreen]();
      return e9 && Ua(e9.then(() => this.isFullscreen(false))), e9;
    }
    this.tech_.supportsFullScreen() && true == !this.options_.preferFullWindow ? this.techCall_("exitFullScreen") : this.exitFullWindow();
  }
  enterFullWindow() {
    this.isFullscreen(true), this.isFullWindow = true, this.docOrigOverflow = ne.documentElement.style.overflow, Gr(ne, "keydown", this.boundFullWindowOnEscKey_), ne.documentElement.style.overflow = "hidden", or(ne.body, "vjs-full-window"), this.trigger("enterFullWindow");
  }
  fullWindowOnEscKey(e9) {
    "Escape" === e9.key && true === this.isFullscreen() && (this.isFullWindow ? this.exitFullWindow() : this.exitFullscreen());
  }
  exitFullWindow() {
    this.isFullscreen(false), this.isFullWindow = false, Xr(ne, "keydown", this.boundFullWindowOnEscKey_), ne.documentElement.style.overflow = this.docOrigOverflow, lr(ne.body, "vjs-full-window"), this.trigger("exitFullWindow");
  }
  disablePictureInPicture(e9) {
    if (void 0 === e9) return this.techGet_("disablePictureInPicture");
    this.techCall_("setDisablePictureInPicture", e9), this.options_.disablePictureInPicture = e9, this.trigger("disablepictureinpicturechanged");
  }
  isInPictureInPicture(e9) {
    return void 0 !== e9 ? (this.isInPictureInPicture_ = !!e9, void this.togglePictureInPictureClass_()) : !!this.isInPictureInPicture_;
  }
  requestPictureInPicture() {
    if (this.options_.enableDocumentPictureInPicture && _.documentPictureInPicture) {
      const e9 = ne.createElement(this.el().tagName);
      return e9.classList = this.el().classList, e9.classList.add("vjs-pip-container"), this.posterImage && e9.appendChild(this.posterImage.el().cloneNode(true)), this.titleBar && e9.appendChild(this.titleBar.el().cloneNode(true)), e9.appendChild(sr("p", { className: "vjs-pip-text" }, {}, this.localize("Playing in picture-in-picture"))), _.documentPictureInPicture.requestWindow({ width: this.videoWidth(), height: this.videoHeight() }).then((t4) => (Ar(t4), this.el_.parentNode.insertBefore(e9, this.el_), t4.document.body.appendChild(this.el_), t4.document.body.classList.add("vjs-pip-window"), this.player_.isInPictureInPicture(true), this.player_.trigger({ type: "enterpictureinpicture", pipWindow: t4 }), t4.addEventListener("pagehide", (t5) => {
        const i3 = t5.target.querySelector(".video-js");
        e9.parentNode.replaceChild(i3, e9), this.player_.isInPictureInPicture(false), this.player_.trigger("leavepictureinpicture");
      }), t4));
    }
    return "pictureInPictureEnabled" in ne && false === this.disablePictureInPicture() ? this.techGet_("requestPictureInPicture") : Promise.reject("No PiP mode is available");
  }
  exitPictureInPicture() {
    return _.documentPictureInPicture && _.documentPictureInPicture.window ? (_.documentPictureInPicture.window.close(), Promise.resolve()) : "pictureInPictureEnabled" in ne ? ne.exitPictureInPicture() : void 0;
  }
  handleKeyDown(e9) {
    const { userActions: t4 } = this.options_;
    if (!t4 || !t4.hotkeys) return;
    ((e10) => {
      const t5 = e10.tagName.toLowerCase();
      if (e10.isContentEditable) return true;
      if ("input" === t5) return -1 === ["button", "checkbox", "hidden", "radio", "reset", "submit"].indexOf(e10.type);
      return -1 !== ["textarea"].indexOf(t5);
    })(this.el_.ownerDocument.activeElement) || ("function" == typeof t4.hotkeys ? t4.hotkeys.call(this, e9) : this.handleHotkeys(e9));
  }
  handleHotkeys(e9) {
    const t4 = this.options_.userActions ? this.options_.userActions.hotkeys : {}, { fullscreenKey: i3 = (t5) => "f" === e9.key.toLowerCase(), muteKey: s5 = (t5) => "m" === e9.key.toLowerCase(), playPauseKey: n6 = (t5) => "k" === e9.key.toLowerCase() || " " === e9.key.toLowerCase() } = t4;
    if (i3.call(this, e9)) {
      e9.preventDefault(), e9.stopPropagation();
      const t5 = Ea.getComponent("FullscreenToggle");
      false !== ne[this.fsApi_.fullscreenEnabled] && t5.prototype.handleClick.call(this, e9);
    } else if (s5.call(this, e9)) {
      e9.preventDefault(), e9.stopPropagation();
      Ea.getComponent("MuteToggle").prototype.handleClick.call(this, e9);
    } else if (n6.call(this, e9)) {
      e9.preventDefault(), e9.stopPropagation();
      Ea.getComponent("PlayToggle").prototype.handleClick.call(this, e9);
    }
  }
  canPlayType(e9) {
    let t4;
    for (let i3 = 0, s5 = this.options_.techOrder; i3 < s5.length; i3++) {
      const n6 = s5[i3];
      let r5 = yo.getTech(n6);
      if (r5 || (r5 = Ea.getComponent(n6)), r5) {
        if (r5.isSupported() && (t4 = r5.canPlayType(e9), t4)) return t4;
      } else gn.error(`The "${n6}" tech is undefined. Skipped browser support check for that tech.`);
    }
    return "";
  }
  selectSource(e9) {
    const t4 = this.options_.techOrder.map((e10) => [e10, yo.getTech(e10)]).filter(([e10, t5]) => t5 ? t5.isSupported() : (gn.error(`The "${e10}" tech is undefined. Skipped browser support check for that tech.`), false)), i3 = function(e10, t5, i4) {
      let s6;
      return e10.some((e11) => t5.some((t6) => {
        if (s6 = i4(e11, t6), s6) return true;
      })), s6;
    };
    let s5;
    const n6 = (e10) => (t5, i4) => e10(i4, t5), r5 = ([e10, t5], i4) => {
      if (t5.canPlaySource(i4, this.options_[e10.toLowerCase()])) return { source: i4, tech: e10 };
    };
    return s5 = this.options_.sourceOrder ? i3(e9, t4, n6(r5)) : i3(t4, e9, r5), s5 || false;
  }
  handleSrc_(e9, t4) {
    if (void 0 === e9) return this.cache_.src || "";
    this.resetRetryOnError_ && this.resetRetryOnError_();
    const i3 = Bo(e9);
    if (i3.length) {
      if (this.changingSrc_ = true, t4 || (this.cache_.sources = i3), this.updateSourceCaches_(i3[0]), So(this, i3[0], (e10, s5) => {
        this.middleware_ = s5, t4 || (this.cache_.sources = i3), this.updateSourceCaches_(e10);
        if (this.src_(e10)) return i3.length > 1 ? this.handleSrc_(i3.slice(1)) : (this.changingSrc_ = false, this.setTimeout(function() {
          this.error({ code: 4, message: this.options_.notSupportedMessage });
        }, 0), void this.triggerReady());
        Eo(s5, this.tech_);
      }), i3.length > 1) {
        const e10 = () => {
          this.error(null), this.handleSrc_(i3.slice(1), true);
        }, t5 = () => {
          this.off("error", e10);
        };
        this.one("error", e10), this.one("playing", t5), this.resetRetryOnError_ = () => {
          this.off("error", e10), this.off("playing", t5);
        };
      }
    } else this.setTimeout(function() {
      this.error({ code: 4, message: this.options_.notSupportedMessage });
    }, 0);
  }
  src(e9) {
    return this.handleSrc_(e9, false);
  }
  src_(e9) {
    const t4 = this.selectSource([e9]);
    return !t4 || (Ta(t4.tech, this.techName_) ? (this.ready(function() {
      this.tech_.constructor.prototype.hasOwnProperty("setSource") ? this.techCall_("setSource", e9) : this.techCall_("src", e9.src), this.changingSrc_ = false;
    }, true), false) : (this.changingSrc_ = true, this.loadTech_(t4.tech, t4.source), this.tech_.ready(() => {
      this.changingSrc_ = false;
    }), false));
  }
  load() {
    this.tech_ && this.tech_.vhs ? this.src(this.currentSource()) : this.techCall_("load");
  }
  reset() {
    if (this.paused()) this.doReset_();
    else {
      Ua(this.play().then(() => this.doReset_()));
    }
  }
  doReset_() {
    this.tech_ && this.tech_.clearTracks("text"), this.removeClass("vjs-playing"), this.addClass("vjs-paused"), this.resetCache_(), this.poster(""), this.loadTech_(this.options_.techOrder[0], null), this.techCall_("reset"), this.resetControlBarUI_(), this.error(null), this.titleBar && this.titleBar.update({ title: void 0, description: void 0 }), oa(this) && this.trigger("playerreset");
  }
  resetControlBarUI_() {
    this.resetProgressBar_(), this.resetPlaybackRate_(), this.resetVolumeBar_();
  }
  resetProgressBar_() {
    this.currentTime(0);
    const { currentTimeDisplay: e9, durationDisplay: t4, progressControl: i3, remainingTimeDisplay: s5 } = this.controlBar || {}, { seekBar: n6 } = i3 || {};
    e9 && e9.updateContent(), t4 && t4.updateContent(), s5 && s5.updateContent(), n6 && (n6.update(), n6.loadProgressBar && n6.loadProgressBar.update());
  }
  resetPlaybackRate_() {
    this.playbackRate(this.defaultPlaybackRate()), this.handleTechRateChange_();
  }
  resetVolumeBar_() {
    this.volume(1), this.trigger("volumechange");
  }
  currentSources() {
    const e9 = this.currentSource(), t4 = [];
    return 0 !== Object.keys(e9).length && t4.push(e9), this.cache_.sources || t4;
  }
  currentSource() {
    return this.cache_.source || {};
  }
  currentSrc() {
    return this.currentSource() && this.currentSource().src || "";
  }
  currentType() {
    return this.currentSource() && this.currentSource().type || "";
  }
  preload(e9) {
    return void 0 !== e9 ? (this.techCall_("setPreload", e9), void (this.options_.preload = e9)) : this.techGet_("preload");
  }
  autoplay(e9) {
    if (void 0 === e9) return this.options_.autoplay || false;
    let t4;
    "string" == typeof e9 && /(any|play|muted)/.test(e9) || true === e9 && this.options_.normalizeAutoplay ? (this.options_.autoplay = e9, this.manualAutoplay_("string" == typeof e9 ? e9 : "play"), t4 = false) : this.options_.autoplay = !!e9, t4 = void 0 === t4 ? this.options_.autoplay : t4, this.tech_ && this.techCall_("setAutoplay", t4);
  }
  playsinline(e9) {
    return void 0 !== e9 && (this.techCall_("setPlaysinline", e9), this.options_.playsinline = e9), this.techGet_("playsinline");
  }
  loop(e9) {
    return void 0 !== e9 ? (this.techCall_("setLoop", e9), void (this.options_.loop = e9)) : this.techGet_("loop");
  }
  poster(e9) {
    if (void 0 === e9) return this.poster_;
    e9 || (e9 = ""), e9 !== this.poster_ && (this.poster_ = e9, this.techCall_("setPoster", e9), this.isPosterFromTech_ = false, this.trigger("posterchange"));
  }
  handleTechPosterChange_() {
    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {
      const e9 = this.tech_.poster() || "";
      e9 !== this.poster_ && (this.poster_ = e9, this.isPosterFromTech_ = true, this.trigger("posterchange"));
    }
  }
  controls(e9) {
    if (void 0 === e9) return !!this.controls_;
    e9 = !!e9, this.controls_ !== e9 && (this.controls_ = e9, this.usingNativeControls() && this.techCall_("setControls", e9), this.controls_ ? (this.removeClass("vjs-controls-disabled"), this.addClass("vjs-controls-enabled"), this.trigger("controlsenabled"), this.usingNativeControls() || this.addTechControlsListeners_()) : (this.removeClass("vjs-controls-enabled"), this.addClass("vjs-controls-disabled"), this.trigger("controlsdisabled"), this.usingNativeControls() || this.removeTechControlsListeners_()));
  }
  usingNativeControls(e9) {
    if (void 0 === e9) return !!this.usingNativeControls_;
    e9 = !!e9, this.usingNativeControls_ !== e9 && (this.usingNativeControls_ = e9, this.usingNativeControls_ ? (this.addClass("vjs-using-native-controls"), this.trigger("usingnativecontrols")) : (this.removeClass("vjs-using-native-controls"), this.trigger("usingcustomcontrols")));
  }
  error(e9) {
    if (void 0 === e9) return this.error_ || null;
    if (nn("beforeerror").forEach((t4) => {
      const i3 = t4(this, e9);
      Tn(i3) && !Array.isArray(i3) || "string" == typeof i3 || "number" == typeof i3 || null === i3 ? e9 = i3 : this.log.error("please return a value that MediaError expects in beforeerror hooks");
    }), this.options_.suppressNotSupportedError && e9 && 4 === e9.code) {
      const t4 = function() {
        this.error(e9);
      };
      return this.options_.suppressNotSupportedError = false, this.any(["click", "touchstart"], t4), void this.one("loadstart", function() {
        this.off(["click", "touchstart"], t4);
      });
    }
    if (null === e9) return this.error_ = null, this.removeClass("vjs-error"), void (this.errorDisplay && this.errorDisplay.close());
    this.error_ = new Ra(e9), this.addClass("vjs-error"), gn.error(`(CODE:${this.error_.code} ${Ra.errorTypes[this.error_.code]})`, this.error_.message, this.error_), this.trigger("error"), nn("error").forEach((e10) => e10(this, this.error_));
  }
  reportUserActivity(e9) {
    this.userActivity_ = true;
  }
  userActive(e9) {
    if (void 0 === e9) return this.userActive_;
    if ((e9 = !!e9) !== this.userActive_) {
      if (this.userActive_ = e9, this.userActive_) return this.userActivity_ = true, this.removeClass("vjs-user-inactive"), this.addClass("vjs-user-active"), void this.trigger("useractive");
      this.tech_ && this.tech_.one("mousemove", function(e10) {
        e10.stopPropagation(), e10.preventDefault();
      }), this.userActivity_ = false, this.removeClass("vjs-user-active"), this.addClass("vjs-user-inactive"), this.trigger("userinactive");
    }
  }
  listenForUserActivity_() {
    let e9, t4, i3;
    const s5 = ea(this, this.reportUserActivity), n6 = function(e10) {
      e10.screenX === t4 && e10.screenY === i3 || (t4 = e10.screenX, i3 = e10.screenY, s5());
    }, r5 = function() {
      s5(), this.clearInterval(e9), e9 = this.setInterval(s5, 250);
    }, a6 = function(t5) {
      s5(), this.clearInterval(e9);
    };
    this.on("mousedown", r5), this.on("mousemove", n6), this.on("mouseup", a6), this.on("mouseleave", a6);
    const o4 = this.getChild("controlBar");
    let l6;
    !o4 || Xn || Dn || (o4.on("mouseenter", function(e10) {
      0 !== this.player().options_.inactivityTimeout && (this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout), this.player().options_.inactivityTimeout = 0;
    }), o4.on("mouseleave", function(e10) {
      this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;
    })), this.on("keydown", s5), this.on("keyup", s5);
    const h2 = function() {
      if (!this.userActivity_) return;
      this.userActivity_ = false, this.userActive(true), this.clearTimeout(l6);
      const e10 = this.options_.inactivityTimeout;
      e10 <= 0 || (l6 = this.setTimeout(function() {
        this.userActivity_ || this.userActive(false);
      }, e10));
    };
    this.setInterval(h2, 250);
  }
  playbackRate(e9) {
    if (void 0 === e9) return this.tech_ && this.tech_.featuresPlaybackRate ? this.cache_.lastPlaybackRate || this.techGet_("playbackRate") : 1;
    this.techCall_("setPlaybackRate", e9);
  }
  defaultPlaybackRate(e9) {
    return void 0 !== e9 ? this.techCall_("setDefaultPlaybackRate", e9) : this.tech_ && this.tech_.featuresPlaybackRate ? this.techGet_("defaultPlaybackRate") : 1;
  }
  isAudio(e9) {
    if (void 0 === e9) return !!this.isAudio_;
    this.isAudio_ = !!e9;
  }
  updatePlayerHeightOnAudioOnlyMode_() {
    const e9 = this.getChild("ControlBar");
    e9 && this.audioOnlyCache_.controlBarHeight !== e9.currentHeight() && (this.audioOnlyCache_.controlBarHeight = e9.currentHeight(), this.height(this.audioOnlyCache_.controlBarHeight));
  }
  enableAudioOnlyUI_() {
    this.addClass("vjs-audio-only-mode");
    const e9 = this.children(), t4 = this.getChild("ControlBar"), i3 = t4 && t4.currentHeight();
    e9.forEach((e10) => {
      e10 !== t4 && e10.el_ && !e10.hasClass("vjs-hidden") && (e10.hide(), this.audioOnlyCache_.hiddenChildren.push(e10));
    }), this.audioOnlyCache_.playerHeight = this.currentHeight(), this.audioOnlyCache_.controlBarHeight = i3, this.on("playerresize", this.boundUpdatePlayerHeightOnAudioOnlyMode_), this.height(i3), this.trigger("audioonlymodechange");
  }
  disableAudioOnlyUI_() {
    this.removeClass("vjs-audio-only-mode"), this.off("playerresize", this.boundUpdatePlayerHeightOnAudioOnlyMode_), this.audioOnlyCache_.hiddenChildren.forEach((e9) => e9.show()), this.height(this.audioOnlyCache_.playerHeight), this.trigger("audioonlymodechange");
  }
  audioOnlyMode(e9) {
    if ("boolean" != typeof e9 || e9 === this.audioOnlyMode_) return this.audioOnlyMode_;
    if (this.audioOnlyMode_ = e9, e9) {
      const e10 = [];
      return this.isInPictureInPicture() && e10.push(this.exitPictureInPicture()), this.isFullscreen() && e10.push(this.exitFullscreen()), this.audioPosterMode() && e10.push(this.audioPosterMode(false)), Promise.all(e10).then(() => this.enableAudioOnlyUI_());
    }
    return Promise.resolve().then(() => this.disableAudioOnlyUI_());
  }
  enablePosterModeUI_() {
    (this.tech_ && this.tech_).hide(), this.addClass("vjs-audio-poster-mode"), this.trigger("audiopostermodechange");
  }
  disablePosterModeUI_() {
    (this.tech_ && this.tech_).show(), this.removeClass("vjs-audio-poster-mode"), this.trigger("audiopostermodechange");
  }
  audioPosterMode(e9) {
    if ("boolean" != typeof e9 || e9 === this.audioPosterMode_) return this.audioPosterMode_;
    if (this.audioPosterMode_ = e9, e9) {
      if (this.audioOnlyMode()) {
        return this.audioOnlyMode(false).then(() => {
          this.enablePosterModeUI_();
        });
      }
      return Promise.resolve().then(() => {
        this.enablePosterModeUI_();
      });
    }
    return Promise.resolve().then(() => {
      this.disablePosterModeUI_();
    });
  }
  addTextTrack(e9, t4, i3) {
    if (this.tech_) return this.tech_.addTextTrack(e9, t4, i3);
  }
  addRemoteTextTrack(e9, t4) {
    if (this.tech_) return this.tech_.addRemoteTextTrack(e9, t4);
  }
  removeRemoteTextTrack(e9 = {}) {
    let { track: t4 } = e9;
    if (t4 || (t4 = e9), this.tech_) return this.tech_.removeRemoteTextTrack(t4);
  }
  getVideoPlaybackQuality() {
    return this.techGet_("getVideoPlaybackQuality");
  }
  videoWidth() {
    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;
  }
  videoHeight() {
    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;
  }
  language(e9) {
    if (void 0 === e9) return this.language_;
    this.language_ !== String(e9).toLowerCase() && (this.language_ = String(e9).toLowerCase(), oa(this) && this.trigger("languagechange"));
  }
  languages() {
    return En(_Kh.prototype.options_.languages, this.languages_);
  }
  toJSON() {
    const e9 = En(this.options_), t4 = e9.tracks;
    e9.tracks = [];
    for (let i3 = 0; i3 < t4.length; i3++) {
      let s5 = t4[i3];
      s5 = En(s5), s5.player = void 0, e9.tracks[i3] = s5;
    }
    return e9;
  }
  createModal(e9, t4) {
    (t4 = t4 || {}).content = e9 || "";
    const i3 = new ja(this, t4);
    return this.addChild(i3), i3.on("dispose", () => {
      this.removeChild(i3);
    }), i3.open(), i3;
  }
  updateCurrentBreakpoint_() {
    if (!this.responsive()) return;
    const e9 = this.currentBreakpoint(), t4 = this.currentWidth();
    for (let i3 = 0; i3 < Wh.length; i3++) {
      const s5 = Wh[i3];
      if (t4 <= this.breakpoints_[s5]) {
        if (e9 === s5) return;
        e9 && this.removeClass(Gh[e9]), this.addClass(Gh[s5]), this.breakpoint_ = s5;
        break;
      }
    }
  }
  removeCurrentBreakpoint_() {
    const e9 = this.currentBreakpointClass();
    this.breakpoint_ = "", e9 && this.removeClass(e9);
  }
  breakpoints(e9) {
    return void 0 === e9 || (this.breakpoint_ = "", this.breakpoints_ = Object.assign({}, Xh, e9), this.updateCurrentBreakpoint_()), Object.assign(this.breakpoints_);
  }
  responsive(e9) {
    if (void 0 === e9) return this.responsive_;
    return (e9 = Boolean(e9)) !== this.responsive_ ? (this.responsive_ = e9, e9 ? (this.on("playerresize", this.boundUpdateCurrentBreakpoint_), this.updateCurrentBreakpoint_()) : (this.off("playerresize", this.boundUpdateCurrentBreakpoint_), this.removeCurrentBreakpoint_()), e9) : void 0;
  }
  currentBreakpoint() {
    return this.breakpoint_;
  }
  currentBreakpointClass() {
    return Gh[this.breakpoint_] || "";
  }
  loadMedia(e9, t4) {
    if (!e9 || "object" != typeof e9) return;
    const i3 = this.crossOrigin();
    this.reset(), this.cache_.media = En(e9);
    const { artist: s5, artwork: n6, description: r5, poster: a6, src: o4, textTracks: l6, title: h2 } = this.cache_.media;
    !n6 && a6 && (this.cache_.media.artwork = [{ src: a6, type: Mo(a6) }]), i3 && this.crossOrigin(i3), o4 && this.src(o4), a6 && this.poster(a6), Array.isArray(l6) && l6.forEach((e10) => this.addRemoteTextTrack(e10, false)), this.titleBar && this.titleBar.update({ title: h2, description: r5 || s5 || "" }), this.ready(t4);
  }
  getMedia() {
    if (!this.cache_.media) {
      const e9 = this.poster(), t4 = { src: this.currentSources(), textTracks: Array.prototype.map.call(this.remoteTextTracks(), (e10) => ({ kind: e10.kind, label: e10.label, language: e10.language, src: e10.src })) };
      return e9 && (t4.poster = e9, t4.artwork = [{ src: t4.poster, type: Mo(t4.poster) }]), t4;
    }
    return En(this.cache_.media);
  }
  static getTagSettings(e9) {
    const t4 = { sources: [], tracks: [] }, i3 = dr(e9), s5 = i3["data-setup"];
    if (ar(e9, "vjs-fill") && (i3.fill = true), ar(e9, "vjs-fluid") && (i3.fluid = true), null !== s5) try {
      Object.assign(i3, JSON.parse(s5 || "{}"));
    } catch (n6) {
      gn.error("data-setup", n6);
    }
    if (Object.assign(t4, i3), e9.hasChildNodes()) {
      const i4 = e9.childNodes;
      for (let e10 = 0, s6 = i4.length; e10 < s6; e10++) {
        const s7 = i4[e10], n6 = s7.nodeName.toLowerCase();
        "source" === n6 ? t4.sources.push(dr(s7)) : "track" === n6 && t4.tracks.push(dr(s7));
      }
    }
    return t4;
  }
  debug(e9) {
    if (void 0 === e9) return this.debugEnabled_;
    e9 ? (this.trigger("debugon"), this.previousLogLevel_ = this.log.level, this.log.level("debug"), this.debugEnabled_ = true) : (this.trigger("debugoff"), this.log.level(this.previousLogLevel_), this.previousLogLevel_ = void 0, this.debugEnabled_ = false);
  }
  playbackRates(e9) {
    if (void 0 === e9) return this.cache_.playbackRates;
    Array.isArray(e9) && e9.every((e10) => "number" == typeof e10) && (this.cache_.playbackRates = e9, this.trigger("playbackrateschange"));
  }
};
go.names.forEach(function(e9) {
  const t4 = go[e9];
  Kh.prototype[t4.getterName] = function() {
    return this.tech_ ? this.tech_[t4.getterName]() : (this[t4.privateName] = this[t4.privateName] || new t4.ListClass(), this[t4.privateName]);
  };
}), Kh.prototype.crossorigin = Kh.prototype.crossOrigin, Kh.players = {};
var Yh = _.navigator;
Kh.prototype.options_ = { techOrder: yo.defaultTechOrder_, html5: {}, enableSourceset: true, inactivityTimeout: 2e3, playbackRates: [], liveui: false, children: ["mediaLoader", "posterImage", "titleBar", "textTrackDisplay", "loadingSpinner", "bigPlayButton", "liveTracker", "controlBar", "errorDisplay", "textTrackSettings", "resizeManager"], language: Yh && (Yh.languages && Yh.languages[0] || Yh.userLanguage || Yh.language) || "en", languages: {}, notSupportedMessage: "No compatible source was found for this media.", normalizeAutoplay: false, fullscreen: { options: { navigationUI: "hide" } }, breakpoints: {}, responsive: false, audioOnlyMode: false, audioPosterMode: false, spatialNavigation: { enabled: false, horizontalSeek: false }, enableSmoothSeeking: false }, Vh.forEach(function(e9) {
  Kh.prototype[`handleTech${va(e9)}_`] = function() {
    return this.trigger(e9);
  };
}), Ea.registerComponent("Player", Kh);
var Qh = "plugin";
var Jh = "activePlugins_";
var Zh = {};
var eu = (e9) => Zh.hasOwnProperty(e9);
var tu = (e9) => eu(e9) ? Zh[e9] : void 0;
var iu = (e9, t4) => {
  e9[Jh] = e9[Jh] || {}, e9[Jh][t4] = true;
};
var su = (e9, t4, i3) => {
  const s5 = (i3 ? "before" : "") + "pluginsetup";
  e9.trigger(s5, t4), e9.trigger(s5 + ":" + t4.name, t4);
};
var nu = function(e9, t4) {
  const i3 = function() {
    su(this, { name: e9, plugin: t4, instance: null }, true);
    const i4 = t4.apply(this, arguments);
    return iu(this, e9), su(this, { name: e9, plugin: t4, instance: i4 }), i4;
  };
  return Object.keys(t4).forEach(function(e10) {
    i3[e10] = t4[e10];
  }), i3;
};
var ru = (e9, t4) => (t4.prototype.name = e9, function(...i3) {
  su(this, { name: e9, plugin: t4, instance: null }, true);
  const s5 = new t4(...[this, ...i3]);
  return this[e9] = () => s5, su(this, s5.getEventHash()), s5;
});
var au = class _au {
  constructor(e9) {
    if (this.constructor === _au) throw new Error("Plugin must be sub-classed; not directly instantiated.");
    this.player = e9, this.log || (this.log = this.player.log.createLogger(this.name)), fa(this), delete this.trigger, _a(this, this.constructor.defaultState), iu(e9, this.name), this.dispose = this.dispose.bind(this), e9.on("dispose", this.dispose);
  }
  version() {
    return this.constructor.VERSION;
  }
  getEventHash(e9 = {}) {
    return e9.name = this.name, e9.plugin = this.constructor, e9.instance = this, e9;
  }
  trigger(e9, t4 = {}) {
    return Kr(this.eventBusEl_, e9, this.getEventHash(t4));
  }
  handleStateChanged(e9) {
  }
  dispose() {
    const { name: e9, player: t4 } = this;
    this.trigger("dispose"), this.off(), t4.off("dispose", this.dispose), t4[Jh][e9] = false, this.player = this.state = null, t4[e9] = ru(e9, Zh[e9]);
  }
  static isBasic(e9) {
    const t4 = "string" == typeof e9 ? tu(e9) : e9;
    return "function" == typeof t4 && !_au.prototype.isPrototypeOf(t4.prototype);
  }
  static registerPlugin(e9, t4) {
    if ("string" != typeof e9) throw new Error(`Illegal plugin name, "${e9}", must be a string, was ${typeof e9}.`);
    if (eu(e9)) gn.warn(`A plugin named "${e9}" already exists. You may want to avoid re-registering plugins!`);
    else if (Kh.prototype.hasOwnProperty(e9)) throw new Error(`Illegal plugin name, "${e9}", cannot share a name with an existing player method!`);
    if ("function" != typeof t4) throw new Error(`Illegal plugin for "${e9}", must be a function, was ${typeof t4}.`);
    return Zh[e9] = t4, e9 !== Qh && (_au.isBasic(t4) ? Kh.prototype[e9] = nu(e9, t4) : Kh.prototype[e9] = ru(e9, t4)), t4;
  }
  static deregisterPlugin(e9) {
    if (e9 === Qh) throw new Error("Cannot de-register base plugin.");
    eu(e9) && (delete Zh[e9], delete Kh.prototype[e9]);
  }
  static getPlugins(e9 = Object.keys(Zh)) {
    let t4;
    return e9.forEach((e10) => {
      const i3 = tu(e10);
      i3 && (t4 = t4 || {}, t4[e10] = i3);
    }), t4;
  }
  static getPluginVersion(e9) {
    const t4 = tu(e9);
    return t4 && t4.VERSION || "";
  }
};
function ou(e9, t4) {
  let i3 = false;
  return function(...s5) {
    return i3 || gn.warn(e9), i3 = true, t4.apply(this, s5);
  };
}
function lu(e9, t4, i3, s5) {
  return ou(`${t4} is deprecated and will be removed in ${e9}.0; please use ${i3} instead.`, s5);
}
au.getPlugin = tu, au.BASE_PLUGIN_NAME = Qh, au.registerPlugin(Qh, au), Kh.prototype.usingPlugin = function(e9) {
  return !!this[Jh] && true === this[Jh][e9];
}, Kh.prototype.hasPlugin = function(e9) {
  return !!eu(e9);
};
var hu = { NetworkBadStatus: "networkbadstatus", NetworkRequestFailed: "networkrequestfailed", NetworkRequestAborted: "networkrequestaborted", NetworkRequestTimeout: "networkrequesttimeout", NetworkBodyParserFailed: "networkbodyparserfailed", StreamingHlsPlaylistParserError: "streaminghlsplaylistparsererror", StreamingDashManifestParserError: "streamingdashmanifestparsererror", StreamingContentSteeringParserError: "streamingcontentsteeringparsererror", StreamingVttParserError: "streamingvttparsererror", StreamingFailedToSelectNextSegment: "streamingfailedtoselectnextsegment", StreamingFailedToDecryptSegment: "streamingfailedtodecryptsegment", StreamingFailedToTransmuxSegment: "streamingfailedtotransmuxsegment", StreamingFailedToAppendSegment: "streamingfailedtoappendsegment", StreamingCodecsChangeError: "streamingcodecschangeerror" };
var uu = (e9) => 0 === e9.indexOf("#") ? e9.slice(1) : e9;
function du(e9, t4, i3) {
  let s5 = du.getPlayer(e9);
  if (s5) return t4 && gn.warn(`Player "${e9}" is already initialised. Options will not be applied.`), i3 && s5.ready(i3), s5;
  const n6 = "string" == typeof e9 ? kr("#" + uu(e9)) : e9;
  if (!er(n6)) throw new TypeError("The element or ID supplied is not valid. (videojs)");
  const r5 = "getRootNode" in n6 && n6.getRootNode() instanceof _.ShadowRoot ? n6.getRootNode() : n6.ownerDocument.body;
  n6.ownerDocument.defaultView && r5.contains(n6) || gn.warn("The element supplied is not included in the DOM"), true === (t4 = t4 || {}).restoreEl && (t4.restoreEl = (n6.parentNode && n6.parentNode.hasAttribute && n6.parentNode.hasAttribute("data-vjs-player") ? n6.parentNode : n6).cloneNode(true)), nn("beforesetup").forEach((e10) => {
    const i4 = e10(n6, En(t4));
    Tn(i4) && !Array.isArray(i4) ? t4 = En(t4, i4) : gn.error("please return an object in beforesetup hooks");
  });
  const a6 = Ea.getComponent("Player");
  return s5 = new a6(n6, t4, i3), nn("setup").forEach((e10) => e10(s5)), s5;
}
if (du.hooks_ = sn, du.hooks = nn, du.hook = rn, du.hookOnce = on, du.removeHook = an, true !== _.VIDEOJS_NO_DYNAMIC_STYLE && Zn()) {
  let e9 = kr(".vjs-styles-defaults");
  if (!e9) {
    e9 = Mr("vjs-styles-defaults");
    const t4 = kr("head");
    t4 && t4.insertBefore(e9, t4.firstChild), Ur(e9, "\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: 56.25%\n      }\n    ");
  }
}
Nr(1, du), du.VERSION = tn, du.options = Kh.prototype.options_, du.getPlayers = () => Kh.players, du.getPlayer = (e9) => {
  const t4 = Kh.players;
  let i3;
  if ("string" == typeof e9) {
    const s5 = uu(e9), n6 = t4[s5];
    if (n6) return n6;
    i3 = kr("#" + s5);
  } else i3 = e9;
  if (er(i3)) {
    const { player: e10, playerId: s5 } = i3;
    if (e10 || t4[s5]) return e10 || t4[s5];
  }
}, du.getAllPlayers = () => Object.keys(Kh.players).map((e9) => Kh.players[e9]).filter(Boolean), du.players = Kh.players, du.getComponent = Ea.getComponent, du.registerComponent = (e9, t4) => (yo.isTech(t4) && gn.warn(`The ${e9} tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)`), Ea.registerComponent.call(Ea, e9, t4)), du.getTech = yo.getTech, du.registerTech = yo.registerTech, du.use = To, Object.defineProperty(du, "middleware", { value: {}, writeable: false, enumerable: true }), Object.defineProperty(du.middleware, "TERMINATOR", { value: vo, writeable: false, enumerable: true }), du.browser = Yn, du.obj = kn, du.mergeOptions = lu(9, "videojs.mergeOptions", "videojs.obj.merge", En), du.defineLazyProperty = lu(9, "videojs.defineLazyProperty", "videojs.obj.defineLazyProperty", Cn), du.bind = lu(9, "videojs.bind", "native Function.prototype.bind", ea), du.registerPlugin = au.registerPlugin, du.deregisterPlugin = au.deregisterPlugin, du.plugin = (e9, t4) => (gn.warn("videojs.plugin() is deprecated; use videojs.registerPlugin() instead"), au.registerPlugin(e9, t4)), du.getPlugins = au.getPlugins, du.getPlugin = au.getPlugin, du.getPluginVersion = au.getPluginVersion, du.addLanguage = function(e9, t4) {
  return e9 = ("" + e9).toLowerCase(), du.options.languages = En(du.options.languages, { [e9]: t4 }), du.options.languages[e9];
}, du.log = gn, du.createLogger = fn, du.time = Oa, du.createTimeRange = lu(9, "videojs.createTimeRange", "videojs.time.createTimeRanges", Ia), du.createTimeRanges = lu(9, "videojs.createTimeRanges", "videojs.time.createTimeRanges", Ia), du.formatTime = lu(9, "videojs.formatTime", "videojs.time.formatTime", La), du.setFormatTime = lu(9, "videojs.setFormatTime", "videojs.time.setFormatTime", Da), du.resetFormatTime = lu(9, "videojs.resetFormatTime", "videojs.time.resetFormatTime", Pa), du.parseUrl = lu(9, "videojs.parseUrl", "videojs.url.parseUrl", to), du.isCrossOrigin = lu(9, "videojs.isCrossOrigin", "videojs.url.isCrossOrigin", no), du.EventTarget = ra, du.any = Qr, du.on = Gr, du.one = Yr, du.off = Xr, du.trigger = Kr, du.xhr = Ee, du.TextTrack = lo, du.AudioTrack = ho, du.VideoTrack = uo, ["isEl", "isTextNode", "createEl", "hasClass", "addClass", "removeClass", "toggleClass", "setAttributes", "getAttributes", "emptyEl", "appendContent", "insertContent"].forEach((e9) => {
  du[e9] = function() {
    return gn.warn(`videojs.${e9}() is deprecated; use videojs.dom.${e9}() instead`), Dr[e9].apply(null, arguments);
  };
}), du.computedStyle = lu(9, "videojs.computedStyle", "videojs.dom.computedStyle", xr), du.dom = Dr, du.fn = sa, du.num = ml, du.str = Sa, du.url = ro, du.Error = hu;
var cu = class {
  constructor(e9) {
    let t4 = this;
    return t4.id = e9.id, t4.label = t4.id, t4.width = e9.width, t4.height = e9.height, t4.bitrate = e9.bandwidth, t4.frameRate = e9.frameRate, t4.enabled_ = e9.enabled, Object.defineProperty(t4, "enabled", { get: () => t4.enabled_(), set(e10) {
      t4.enabled_(e10);
    } }), t4;
  }
};
var pu = class extends du.EventTarget {
  constructor() {
    super();
    let e9 = this;
    return e9.levels_ = [], e9.selectedIndex_ = -1, Object.defineProperty(e9, "selectedIndex", { get: () => e9.selectedIndex_ }), Object.defineProperty(e9, "length", { get: () => e9.levels_.length }), e9[Symbol.iterator] = () => e9.levels_.values(), e9;
  }
  addQualityLevel(e9) {
    let t4 = this.getQualityLevelById(e9.id);
    if (t4) return t4;
    const i3 = this.levels_.length;
    return t4 = new cu(e9), "" + i3 in this || Object.defineProperty(this, i3, { get() {
      return this.levels_[i3];
    } }), this.levels_.push(t4), this.trigger({ qualityLevel: t4, type: "addqualitylevel" }), t4;
  }
  removeQualityLevel(e9) {
    let t4 = null;
    for (let i3 = 0, s5 = this.length; i3 < s5; i3++) if (this[i3] === e9) {
      t4 = this.levels_.splice(i3, 1)[0], this.selectedIndex_ === i3 ? this.selectedIndex_ = -1 : this.selectedIndex_ > i3 && this.selectedIndex_--;
      break;
    }
    return t4 && this.trigger({ qualityLevel: e9, type: "removequalitylevel" }), t4;
  }
  getQualityLevelById(e9) {
    for (let t4 = 0, i3 = this.length; t4 < i3; t4++) {
      const i4 = this[t4];
      if (i4.id === e9) return i4;
    }
    return null;
  }
  dispose() {
    this.selectedIndex_ = -1, this.levels_.length = 0;
  }
};
pu.prototype.allowedEvents_ = { change: "change", addqualitylevel: "addqualitylevel", removequalitylevel: "removequalitylevel" };
for (const Eg in pu.prototype.allowedEvents_) pu.prototype["on" + Eg] = null;
var mu = "4.1.0";
var gu = function(e9, t4) {
  const i3 = e9.qualityLevels, s5 = new pu(), n6 = function() {
    s5.dispose(), e9.qualityLevels = i3, e9.off("dispose", n6);
  };
  return e9.on("dispose", n6), e9.qualityLevels = () => s5, e9.qualityLevels.VERSION = mu, s5;
};
var fu = function(e9) {
  return gu(this, du.obj.merge({}, e9));
};
du.registerPlugin("qualityLevels", fu), fu.VERSION = mu;
var yu = Fe;
var _u = (e9, t4) => t4 && t4.responseURL && e9 !== t4.responseURL ? t4.responseURL : e9;
var bu = (e9) => du.log.debug ? du.log.debug.bind(du, "VHS:", `${e9} >`) : function() {
};
function vu(...e9) {
  const t4 = du.obj || du;
  return (t4.merge || t4.mergeOptions).apply(t4, e9);
}
function Tu(...e9) {
  const t4 = du.time || du;
  return (t4.createTimeRanges || t4.createTimeRanges).apply(t4, e9);
}
function Su(e9) {
  if (0 === e9.length) return "Buffered Ranges are empty";
  let t4 = "Buffered Ranges: \n";
  for (let i3 = 0; i3 < e9.length; i3++) {
    const s5 = e9.start(i3), n6 = e9.end(i3);
    t4 += `${s5} --> ${n6}. Duration (${n6 - s5})
`;
  }
  return t4;
}
var Eu = 1 / 30;
var wu = 3 * Eu;
var Cu = function(e9, t4) {
  const i3 = [];
  let s5;
  if (e9 && e9.length) for (s5 = 0; s5 < e9.length; s5++) t4(e9.start(s5), e9.end(s5)) && i3.push([e9.start(s5), e9.end(s5)]);
  return Tu(i3);
};
var ku = function(e9, t4) {
  return Cu(e9, function(e10, i3) {
    return e10 - wu <= t4 && i3 + wu >= t4;
  });
};
var Iu = function(e9, t4) {
  return Cu(e9, function(e10) {
    return e10 - Eu >= t4;
  });
};
var xu = function(e9) {
  if (e9.length < 2) return Tu();
  const t4 = [];
  for (let i3 = 1; i3 < e9.length; i3++) {
    const s5 = e9.end(i3 - 1), n6 = e9.start(i3);
    t4.push([s5, n6]);
  }
  return Tu(t4);
};
var Au = function(e9, t4) {
  let i3 = null, s5 = null, n6 = 0;
  const r5 = [], a6 = [];
  if (!(e9 && e9.length && t4 && t4.length)) return Tu();
  let o4 = e9.length;
  for (; o4--; ) r5.push({ time: e9.start(o4), type: "start" }), r5.push({ time: e9.end(o4), type: "end" });
  for (o4 = t4.length; o4--; ) r5.push({ time: t4.start(o4), type: "start" }), r5.push({ time: t4.end(o4), type: "end" });
  for (r5.sort(function(e10, t5) {
    return e10.time - t5.time;
  }), o4 = 0; o4 < r5.length; o4++) "start" === r5[o4].type ? (n6++, 2 === n6 && (i3 = r5[o4].time)) : "end" === r5[o4].type && (n6--, 1 === n6 && (s5 = r5[o4].time)), null !== i3 && null !== s5 && (a6.push([i3, s5]), i3 = null, s5 = null);
  return Tu(a6);
};
var Du = (e9) => {
  const t4 = [];
  if (!e9 || !e9.length) return "";
  for (let i3 = 0; i3 < e9.length; i3++) t4.push(e9.start(i3) + " => " + e9.end(i3));
  return t4.join(", ");
};
var Pu = function(e9, t4, i3 = 1) {
  return ((e9.length ? e9.end(e9.length - 1) : 0) - t4) / i3;
};
var Lu = (e9) => {
  const t4 = [];
  for (let i3 = 0; i3 < e9.length; i3++) t4.push({ start: e9.start(i3), end: e9.end(i3) });
  return t4;
};
var Ou = function(e9, t4) {
  if (e9 === t4) return false;
  if (!e9 && t4 || !t4 && e9) return true;
  if (e9.length !== t4.length) return true;
  for (let i3 = 0; i3 < e9.length; i3++) if (e9.start(i3) !== t4.start(i3) || e9.end(i3) !== t4.end(i3)) return true;
  return false;
};
var Nu = function(e9) {
  if (e9 && e9.length && e9.end) return e9.end(e9.length - 1);
};
var Ru = function(e9, t4) {
  let i3 = 0;
  if (!e9 || !e9.length) return i3;
  for (let s5 = 0; s5 < e9.length; s5++) {
    const n6 = e9.start(s5), r5 = e9.end(s5);
    t4 > r5 || (i3 += t4 > n6 && t4 <= r5 ? r5 - t4 : r5 - n6);
  }
  return i3;
};
var Mu = (e9, t4) => {
  if (!t4.preload) return t4.duration;
  let i3 = 0;
  return (t4.parts || []).forEach(function(e10) {
    i3 += e10.duration;
  }), (t4.preloadHints || []).forEach(function(t5) {
    "PART" === t5.type && (i3 += e9.partTargetDuration);
  }), i3;
};
var Uu = (e9) => (e9.segments || []).reduce((e10, t4, i3) => (t4.parts ? t4.parts.forEach(function(s5, n6) {
  e10.push({ duration: s5.duration, segmentIndex: i3, partIndex: n6, part: s5, segment: t4 });
}) : e10.push({ duration: t4.duration, segmentIndex: i3, partIndex: null, segment: t4, part: null }), e10), []);
var Bu = (e9) => {
  const t4 = e9.segments && e9.segments.length && e9.segments[e9.segments.length - 1];
  return t4 && t4.parts || [];
};
var Fu = ({ preloadSegment: e9 }) => {
  if (!e9) return;
  const { parts: t4, preloadHints: i3 } = e9;
  let s5 = (i3 || []).reduce((e10, t5) => e10 + ("PART" === t5.type ? 1 : 0), 0);
  return s5 += t4 && t4.length ? t4.length : 0, s5;
};
var qu = (e9, t4) => {
  if (t4.endList) return 0;
  if (e9 && e9.suggestedPresentationDelay) return e9.suggestedPresentationDelay;
  const i3 = Bu(t4).length > 0;
  return i3 && t4.serverControl && t4.serverControl.partHoldBack ? t4.serverControl.partHoldBack : i3 && t4.partTargetDuration ? 3 * t4.partTargetDuration : t4.serverControl && t4.serverControl.holdBack ? t4.serverControl.holdBack : t4.targetDuration ? 3 * t4.targetDuration : 0;
};
var ju = function(e9, t4) {
  let i3 = 0, s5 = t4 - e9.mediaSequence, n6 = e9.segments[s5];
  if (n6) {
    if (void 0 !== n6.start) return { result: n6.start, precise: true };
    if (void 0 !== n6.end) return { result: n6.end - n6.duration, precise: true };
  }
  for (; s5--; ) {
    if (n6 = e9.segments[s5], void 0 !== n6.end) return { result: i3 + n6.end, precise: true };
    if (i3 += Mu(e9, n6), void 0 !== n6.start) return { result: i3 + n6.start, precise: true };
  }
  return { result: i3, precise: false };
};
var $u = function(e9, t4) {
  let i3, s5 = 0, n6 = t4 - e9.mediaSequence;
  for (; n6 < e9.segments.length; n6++) {
    if (i3 = e9.segments[n6], void 0 !== i3.start) return { result: i3.start - s5, precise: true };
    if (s5 += Mu(e9, i3), void 0 !== i3.end) return { result: i3.end - s5, precise: true };
  }
  return { result: -1, precise: false };
};
var Hu = function(e9, t4, i3) {
  if (void 0 === t4 && (t4 = e9.mediaSequence + e9.segments.length), t4 < e9.mediaSequence) return 0;
  const s5 = ju(e9, t4);
  if (s5.precise) return s5.result;
  const n6 = $u(e9, t4);
  return n6.precise ? n6.result : s5.result + i3;
};
var Vu = function(e9, t4, i3) {
  if (!e9) return 0;
  if ("number" != typeof i3 && (i3 = 0), void 0 === t4) {
    if (e9.totalDuration) return e9.totalDuration;
    if (!e9.endList) return _.Infinity;
  }
  return Hu(e9, t4, i3);
};
var zu = function({ defaultDuration: e9, durationList: t4, startIndex: i3, endIndex: s5 }) {
  let n6 = 0;
  if (i3 > s5 && ([i3, s5] = [s5, i3]), i3 < 0) {
    for (let t5 = i3; t5 < Math.min(0, s5); t5++) n6 += e9;
    i3 = 0;
  }
  for (let r5 = i3; r5 < s5; r5++) n6 += t4[r5].duration;
  return n6;
};
var Wu = function(e9, t4, i3, s5) {
  if (!e9 || !e9.segments) return null;
  if (e9.endList) return Vu(e9);
  if (null === t4) return null;
  t4 = t4 || 0;
  let n6 = Hu(e9, e9.mediaSequence + e9.segments.length, t4);
  return i3 && (n6 -= s5 = "number" == typeof s5 ? s5 : qu(null, e9)), Math.max(0, n6);
};
var Gu = function(e9) {
  return e9.excludeUntil && e9.excludeUntil > Date.now();
};
var Xu = function(e9) {
  return e9.excludeUntil && e9.excludeUntil === 1 / 0;
};
var Ku = function(e9) {
  const t4 = Gu(e9);
  return !e9.disabled && !t4;
};
var Yu = function(e9, t4) {
  return t4.attributes && t4.attributes[e9];
};
var Qu = function(e9, t4, i3, s5 = 0) {
  if (!Yu("BANDWIDTH", i3)) return NaN;
  return (e9 * i3.attributes.BANDWIDTH - 8 * s5) / t4;
};
var Ju = (e9, t4) => {
  if (1 === e9.playlists.length) return true;
  const i3 = t4.attributes.BANDWIDTH || Number.MAX_VALUE;
  return 0 === e9.playlists.filter((e10) => !!Ku(e10) && (e10.attributes.BANDWIDTH || 0) < i3).length;
};
var Zu = (e9, t4) => !(!e9 && !t4 || !e9 && t4 || e9 && !t4) && (e9 === t4 || (!(!e9.id || !t4.id || e9.id !== t4.id) || (!(!e9.resolvedUri || !t4.resolvedUri || e9.resolvedUri !== t4.resolvedUri) || !(!e9.uri || !t4.uri || e9.uri !== t4.uri))));
var ed = function(e9, t4) {
  const i3 = e9 && e9.mediaGroups && e9.mediaGroups.AUDIO || {};
  let s5 = false;
  for (const n6 in i3) {
    for (const e10 in i3[n6]) if (s5 = t4(i3[n6][e10]), s5) break;
    if (s5) break;
  }
  return !!s5;
};
var td = (e9) => {
  if (!e9 || !e9.playlists || !e9.playlists.length) {
    return ed(e9, (e10) => e10.playlists && e10.playlists.length || e10.uri);
  }
  for (let t4 = 0; t4 < e9.playlists.length; t4++) {
    const i3 = e9.playlists[t4], s5 = i3.attributes && i3.attributes.CODECS;
    if (s5 && s5.split(",").every((e10) => lt(e10))) continue;
    if (!ed(e9, (e10) => Zu(i3, e10))) return false;
  }
  return true;
};
var id = { liveEdgeDelay: qu, duration: Vu, seekable: function(e9, t4, i3) {
  const s5 = t4 || 0;
  let n6 = Wu(e9, t4, true, i3);
  return null === n6 ? Tu() : (n6 < s5 && (n6 = s5), Tu(s5, n6));
}, getMediaInfoForTime: function({ playlist: e9, currentTime: t4, startingSegmentIndex: i3, startingPartIndex: s5, startTime: n6, exactManifestTimings: r5 }) {
  let a6 = t4 - n6;
  const o4 = Uu(e9);
  let l6 = 0;
  for (let h2 = 0; h2 < o4.length; h2++) {
    const e10 = o4[h2];
    if (i3 === e10.segmentIndex && ("number" != typeof s5 || "number" != typeof e10.partIndex || s5 === e10.partIndex)) {
      l6 = h2;
      break;
    }
  }
  if (a6 < 0) {
    if (l6 > 0) for (let t5 = l6 - 1; t5 >= 0; t5--) {
      const i4 = o4[t5];
      if (a6 += i4.duration, r5) {
        if (a6 < 0) continue;
      } else if (a6 + Eu <= 0) continue;
      return { partIndex: i4.partIndex, segmentIndex: i4.segmentIndex, startTime: n6 - zu({ defaultDuration: e9.targetDuration, durationList: o4, startIndex: l6, endIndex: t5 }) };
    }
    return { partIndex: o4[0] && o4[0].partIndex || null, segmentIndex: o4[0] && o4[0].segmentIndex || 0, startTime: t4 };
  }
  if (l6 < 0) {
    for (let i4 = l6; i4 < 0; i4++) if (a6 -= e9.targetDuration, a6 < 0) return { partIndex: o4[0] && o4[0].partIndex || null, segmentIndex: o4[0] && o4[0].segmentIndex || 0, startTime: t4 };
    l6 = 0;
  }
  for (let h2 = l6; h2 < o4.length; h2++) {
    const t5 = o4[h2];
    a6 -= t5.duration;
    const i4 = t5.duration > Eu;
    if (!(0 === a6) && !(i4 && a6 + Eu >= 0) || h2 === o4.length - 1) {
      if (r5) {
        if (a6 > 0) continue;
      } else if (a6 - Eu >= 0) continue;
      return { partIndex: t5.partIndex, segmentIndex: t5.segmentIndex, startTime: n6 + zu({ defaultDuration: e9.targetDuration, durationList: o4, startIndex: l6, endIndex: h2 }) };
    }
  }
  return { segmentIndex: o4[o4.length - 1].segmentIndex, partIndex: o4[o4.length - 1].partIndex, startTime: t4 };
}, isEnabled: Ku, isDisabled: function(e9) {
  return e9.disabled;
}, isExcluded: Gu, isIncompatible: Xu, playlistEnd: Wu, isAes: function(e9) {
  for (let t4 = 0; t4 < e9.segments.length; t4++) if (e9.segments[t4].key) return true;
  return false;
}, hasAttribute: Yu, estimateSegmentRequestTime: Qu, isLowestEnabledRendition: Ju, isAudioOnly: td, playlistMatch: Zu, segmentDurationWithParts: Mu };
var { log: sd } = du;
var nd = (e9, t4) => `${e9}-${t4}`;
var rd = (e9, t4, i3) => `placeholder-uri-${e9}-${t4}-${i3}`;
var ad = ({ onwarn: e9, oninfo: t4, manifestString: i3, customTagParsers: s5 = [], customTagMappers: n6 = [], llhls: r5 }) => {
  const a6 = new Ze();
  e9 && a6.on("warn", e9), t4 && a6.on("info", t4), s5.forEach((e10) => a6.addParser(e10)), n6.forEach((e10) => a6.addTagMapper(e10)), a6.push(i3), a6.end();
  const o4 = a6.manifest;
  if (r5 || (["preloadSegment", "skip", "serverControl", "renditionReports", "partInf", "partTargetDuration"].forEach(function(e10) {
    o4.hasOwnProperty(e10) && delete o4[e10];
  }), o4.segments && o4.segments.forEach(function(e10) {
    ["parts", "preloadHints"].forEach(function(t5) {
      e10.hasOwnProperty(t5) && delete e10[t5];
    });
  })), !o4.targetDuration) {
    let t5 = 10;
    o4.segments && o4.segments.length && (t5 = o4.segments.reduce((e10, t6) => Math.max(e10, t6.duration), 0)), e9 && e9({ message: `manifest has no targetDuration defaulting to ${t5}` }), o4.targetDuration = t5;
  }
  const l6 = Bu(o4);
  if (l6.length && !o4.partTargetDuration) {
    const t5 = l6.reduce((e10, t6) => Math.max(e10, t6.duration), 0);
    e9 && (e9({ message: `manifest has no partTargetDuration defaulting to ${t5}` }), sd.error("LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.")), o4.partTargetDuration = t5;
  }
  return o4;
};
var od = (e9, t4) => {
  e9.mediaGroups && ["AUDIO", "SUBTITLES"].forEach((i3) => {
    if (e9.mediaGroups[i3]) for (const s5 in e9.mediaGroups[i3]) for (const n6 in e9.mediaGroups[i3][s5]) {
      const r5 = e9.mediaGroups[i3][s5][n6];
      t4(r5, i3, s5, n6);
    }
  });
};
var ld = ({ playlist: e9, uri: t4, id: i3 }) => {
  e9.id = i3, e9.playlistErrors_ = 0, t4 && (e9.uri = t4), e9.attributes = e9.attributes || {};
};
var hd = (e9) => {
  let t4 = e9.playlists.length;
  for (; t4--; ) {
    const i3 = e9.playlists[t4];
    ld({ playlist: i3, id: nd(t4, i3.uri) }), i3.resolvedUri = yu(e9.uri, i3.uri), e9.playlists[i3.id] = i3, e9.playlists[i3.uri] = i3, i3.attributes.BANDWIDTH || sd.warn("Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.");
  }
};
var ud = (e9) => {
  od(e9, (t4) => {
    t4.uri && (t4.resolvedUri = yu(e9.uri, t4.uri));
  });
};
var dd = (e9, t4) => {
  const i3 = nd(0, t4), s5 = { mediaGroups: { AUDIO: {}, VIDEO: {}, "CLOSED-CAPTIONS": {}, SUBTITLES: {} }, uri: _.location.href, resolvedUri: _.location.href, playlists: [{ uri: t4, id: i3, resolvedUri: t4, attributes: {} }] };
  return s5.playlists[i3] = s5.playlists[0], s5.playlists[t4] = s5.playlists[0], s5;
};
var cd = (e9, t4, i3 = rd) => {
  e9.uri = t4;
  for (let n6 = 0; n6 < e9.playlists.length; n6++) if (!e9.playlists[n6].uri) {
    const t5 = `placeholder-uri-${n6}`;
    e9.playlists[n6].uri = t5;
  }
  const s5 = td(e9);
  od(e9, (t5, n6, r5, a6) => {
    if (!t5.playlists || !t5.playlists.length) {
      if (s5 && "AUDIO" === n6 && !t5.uri) for (let t6 = 0; t6 < e9.playlists.length; t6++) {
        const i4 = e9.playlists[t6];
        if (i4.attributes && i4.attributes.AUDIO && i4.attributes.AUDIO === r5) return;
      }
      t5.playlists = [Ue({}, t5)];
    }
    t5.playlists.forEach(function(t6, s6) {
      const o4 = i3(n6, r5, a6, t6), l6 = nd(s6, o4);
      t6.uri ? t6.resolvedUri = t6.resolvedUri || yu(e9.uri, t6.uri) : (t6.uri = 0 === s6 ? o4 : l6, t6.resolvedUri = t6.uri), t6.id = t6.id || l6, t6.attributes = t6.attributes || {}, e9.playlists[t6.id] = t6, e9.playlists[t6.uri] = t6;
    });
  }), hd(e9), ud(e9);
};
var pd = class {
  constructor() {
    this.offset_ = null, this.pendingDateRanges_ = /* @__PURE__ */ new Map(), this.processedDateRanges_ = /* @__PURE__ */ new Map();
  }
  setOffset(e9 = []) {
    if (null !== this.offset_) return;
    if (!e9.length) return;
    const [t4] = e9;
    void 0 !== t4.programDateTime && (this.offset_ = t4.programDateTime / 1e3);
  }
  setPendingDateRanges(e9 = []) {
    if (!e9.length) return;
    const [t4] = e9, i3 = t4.startDate.getTime();
    this.trimProcessedDateRanges_(i3), this.pendingDateRanges_ = e9.reduce((e10, t5) => (e10.set(t5.id, t5), e10), /* @__PURE__ */ new Map());
  }
  processDateRange(e9) {
    this.pendingDateRanges_.delete(e9.id), this.processedDateRanges_.set(e9.id, e9);
  }
  getDateRangesToProcess() {
    if (null === this.offset_) return [];
    const e9 = {}, t4 = [];
    this.pendingDateRanges_.forEach((i3, s5) => {
      if (!this.processedDateRanges_.has(s5) && (i3.startTime = i3.startDate.getTime() / 1e3 - this.offset_, i3.processDateRange = () => this.processDateRange(i3), t4.push(i3), i3.class)) if (e9[i3.class]) {
        const t5 = e9[i3.class].push(i3);
        i3.classListIndex = t5 - 1;
      } else e9[i3.class] = [i3], i3.classListIndex = 0;
    });
    for (const i3 of t4) {
      const t5 = e9[i3.class] || [];
      i3.endDate ? i3.endTime = i3.endDate.getTime() / 1e3 - this.offset_ : i3.endOnNext && t5[i3.classListIndex + 1] ? i3.endTime = t5[i3.classListIndex + 1].startTime : i3.duration ? i3.endTime = i3.startTime + i3.duration : i3.plannedDuration ? i3.endTime = i3.startTime + i3.plannedDuration : i3.endTime = i3.startTime;
    }
    return t4;
  }
  trimProcessedDateRanges_(e9) {
    new Map(this.processedDateRanges_).forEach((t4, i3) => {
      t4.startDate.getTime() < e9 && this.processedDateRanges_.delete(i3);
    });
  }
};
var md = 22;
var gd = ({ requestType: e9, request: t4, error: i3, parseFailure: s5 }) => {
  const n6 = t4.status < 200 || t4.status > 299, r5 = t4.status >= 400 && t4.status <= 499, a6 = { uri: t4.uri, requestType: e9 }, o4 = n6 && !r5 || s5;
  if (i3 && r5) a6.error = Ue({}, i3), a6.errorType = du.Error.NetworkRequestFailed;
  else if (t4.aborted) a6.errorType = du.Error.NetworkRequestAborted;
  else if (t4.timedout) a6.erroType = du.Error.NetworkRequestTimeout;
  else if (o4) {
    const e10 = s5 ? du.Error.NetworkBodyParserFailed : du.Error.NetworkBadStatus;
    a6.errorType = e10, a6.status = t4.status, a6.headers = t4.headers;
  }
  return a6;
};
var { EventTarget: fd } = du;
var yd = (e9, t4) => {
  if (t4.endList || !t4.serverControl) return e9;
  const i3 = {};
  if (t4.serverControl.canBlockReload) {
    const { preloadSegment: e10 } = t4;
    let s5 = t4.mediaSequence + t4.segments.length;
    if (e10) {
      const n6 = e10.parts || [], r5 = Fu(t4) - 1;
      r5 > -1 && r5 !== n6.length - 1 && (i3._HLS_part = r5), (r5 > -1 || n6.length) && s5--;
    }
    i3._HLS_msn = s5;
  }
  if (t4.serverControl && t4.serverControl.canSkipUntil && (i3._HLS_skip = t4.serverControl.canSkipDateranges ? "v2" : "YES"), Object.keys(i3).length) {
    const t5 = new _.URL(e9);
    ["_HLS_skip", "_HLS_msn", "_HLS_part"].forEach(function(e10) {
      i3.hasOwnProperty(e10) && t5.searchParams.set(e10, i3[e10]);
    }), e9 = t5.toString();
  }
  return e9;
};
var _d = (e9, t4) => {
  if (!e9) return t4;
  const i3 = vu(e9, t4);
  if (e9.preloadHints && !t4.preloadHints && delete i3.preloadHints, e9.parts && !t4.parts) delete i3.parts;
  else if (e9.parts && t4.parts) for (let s5 = 0; s5 < t4.parts.length; s5++) e9.parts && e9.parts[s5] && (i3.parts[s5] = vu(e9.parts[s5], t4.parts[s5]));
  return !e9.skipped && t4.skipped && (i3.skipped = false), e9.preload && !t4.preload && (i3.preload = false), i3;
};
var bd = (e9, t4, i3) => {
  const s5 = e9.slice(), n6 = t4.slice();
  i3 = i3 || 0;
  const r5 = [];
  let a6;
  for (let o4 = 0; o4 < n6.length; o4++) {
    const e10 = s5[o4 + i3], t5 = n6[o4];
    e10 ? (a6 = e10.map || a6, r5.push(_d(e10, t5))) : (a6 && !t5.map && (t5.map = a6), r5.push(t5));
  }
  return r5;
};
var vd = (e9, t4) => {
  !e9.resolvedUri && e9.uri && (e9.resolvedUri = yu(t4, e9.uri)), e9.key && !e9.key.resolvedUri && (e9.key.resolvedUri = yu(t4, e9.key.uri)), e9.map && !e9.map.resolvedUri && (e9.map.resolvedUri = yu(t4, e9.map.uri)), e9.map && e9.map.key && !e9.map.key.resolvedUri && (e9.map.key.resolvedUri = yu(t4, e9.map.key.uri)), e9.parts && e9.parts.length && e9.parts.forEach((e10) => {
    e10.resolvedUri || (e10.resolvedUri = yu(t4, e10.uri));
  }), e9.preloadHints && e9.preloadHints.length && e9.preloadHints.forEach((e10) => {
    e10.resolvedUri || (e10.resolvedUri = yu(t4, e10.uri));
  });
};
var Td = function(e9) {
  const t4 = e9.segments || [], i3 = e9.preloadSegment;
  if (i3 && i3.parts && i3.parts.length) {
    if (i3.preloadHints) {
      for (let e10 = 0; e10 < i3.preloadHints.length; e10++) if ("MAP" === i3.preloadHints[e10].type) return t4;
    }
    i3.duration = e9.targetDuration, i3.preload = true, t4.push(i3);
  }
  return t4;
};
var Sd = (e9, t4) => e9 === t4 || e9.segments && t4.segments && e9.segments.length === t4.segments.length && e9.endList === t4.endList && e9.mediaSequence === t4.mediaSequence && e9.preloadSegment === t4.preloadSegment;
var Ed = (e9, t4, i3 = Sd) => {
  const s5 = vu(e9, {}), n6 = s5.playlists[t4.id];
  if (!n6) return null;
  if (i3(n6, t4)) return null;
  t4.segments = Td(t4);
  const r5 = vu(n6, t4);
  if (r5.preloadSegment && !t4.preloadSegment && delete r5.preloadSegment, n6.segments) {
    if (t4.skip) {
      t4.segments = t4.segments || [];
      for (let e10 = 0; e10 < t4.skip.skippedSegments; e10++) t4.segments.unshift({ skipped: true });
    }
    r5.segments = bd(n6.segments, t4.segments, t4.mediaSequence - n6.mediaSequence);
  }
  r5.segments.forEach((e10) => {
    vd(e10, r5.resolvedUri);
  });
  for (let a6 = 0; a6 < s5.playlists.length; a6++) s5.playlists[a6].id === t4.id && (s5.playlists[a6] = r5);
  return s5.playlists[t4.id] = r5, s5.playlists[t4.uri] = r5, od(e9, (e10, i4, s6, n7) => {
    if (e10.playlists) for (let a6 = 0; a6 < e10.playlists.length; a6++) t4.id === e10.playlists[a6].id && (e10.playlists[a6] = r5);
  }), s5;
};
var wd = (e9, t4) => {
  const i3 = e9.segments || [], s5 = i3[i3.length - 1], n6 = s5 && s5.parts && s5.parts[s5.parts.length - 1], r5 = n6 && n6.duration || s5 && s5.duration;
  return t4 && r5 ? 1e3 * r5 : 500 * (e9.partTargetDuration || e9.targetDuration || 10);
};
var Cd = (e9, t4, i3) => {
  if (!e9) return;
  const s5 = [];
  return e9.forEach((e10) => {
    if (!e10.attributes) return;
    const { BANDWIDTH: t5, RESOLUTION: i4, CODECS: n6 } = e10.attributes;
    s5.push({ id: e10.id, bandwidth: t5, resolution: i4, codecs: n6 });
  }), { type: t4, isLive: i3, renditions: s5 };
};
var kd = class extends fd {
  constructor(e9, t4, i3 = {}) {
    if (super(), !e9) throw new Error("A non-empty playlist URL or object is required");
    this.logger_ = bu("PlaylistLoader");
    const { withCredentials: s5 = false } = i3;
    this.src = e9, this.vhs_ = t4, this.withCredentials = s5, this.addDateRangesToTextTrack_ = i3.addDateRangesToTextTrack;
    const n6 = t4.options_;
    this.customTagParsers = n6 && n6.customTagParsers || [], this.customTagMappers = n6 && n6.customTagMappers || [], this.llhls = n6 && n6.llhls, this.dateRangesStorage_ = new pd(), this.state = "HAVE_NOTHING", this.handleMediaupdatetimeout_ = this.handleMediaupdatetimeout_.bind(this), this.on("mediaupdatetimeout", this.handleMediaupdatetimeout_), this.on("loadedplaylist", this.handleLoadedPlaylist_.bind(this));
  }
  handleLoadedPlaylist_() {
    const e9 = this.media();
    if (!e9) return;
    this.dateRangesStorage_.setOffset(e9.segments), this.dateRangesStorage_.setPendingDateRanges(e9.dateRanges);
    const t4 = this.dateRangesStorage_.getDateRangesToProcess();
    t4.length && this.addDateRangesToTextTrack_ && this.addDateRangesToTextTrack_(t4);
  }
  handleMediaupdatetimeout_() {
    if ("HAVE_METADATA" !== this.state) return;
    const e9 = this.media();
    let t4 = yu(this.main.uri, e9.uri);
    this.llhls && (t4 = yd(t4, e9)), this.state = "HAVE_CURRENT_METADATA", this.request = this.vhs_.xhr({ uri: t4, withCredentials: this.withCredentials, requestType: "hls-playlist" }, (e10, t5) => {
      if (this.request) return e10 ? this.playlistRequestError(this.request, this.media(), "HAVE_METADATA") : void this.haveMetadata({ playlistString: this.request.responseText, url: this.media().uri, id: this.media().id });
    });
  }
  playlistRequestError(e9, t4, i3) {
    const { uri: s5, id: n6 } = t4;
    this.request = null, i3 && (this.state = i3), this.error = { playlist: this.main.playlists[n6], status: e9.status, message: `HLS playlist request error at URL: ${s5}.`, responseText: e9.responseText, code: e9.status >= 500 ? 4 : 2, metadata: gd({ requestType: e9.requestType, request: e9, error: e9.error }) }, this.trigger("error");
  }
  parseManifest_({ url: e9, manifestString: t4 }) {
    try {
      return ad({ onwarn: ({ message: t5 }) => this.logger_(`m3u8-parser warn for ${e9}: ${t5}`), oninfo: ({ message: t5 }) => this.logger_(`m3u8-parser info for ${e9}: ${t5}`), manifestString: t4, customTagParsers: this.customTagParsers, customTagMappers: this.customTagMappers, llhls: this.llhls });
    } catch (i3) {
      this.error = i3, this.error.metadata = { errorType: du.Error.StreamingHlsPlaylistParserError, error: i3 };
    }
  }
  haveMetadata({ playlistString: e9, playlistObject: t4, url: i3, id: s5 }) {
    this.request = null, this.state = "HAVE_METADATA";
    const n6 = { playlistInfo: { type: "media", uri: i3 } };
    this.trigger({ type: "playlistparsestart", metadata: n6 });
    const r5 = t4 || this.parseManifest_({ url: i3, manifestString: e9 });
    r5.lastRequest = Date.now(), ld({ playlist: r5, uri: i3, id: s5 });
    const a6 = Ed(this.main, r5);
    this.targetDuration = r5.partTargetDuration || r5.targetDuration, this.pendingMedia_ = null, a6 ? (this.main = a6, this.media_ = this.main.playlists[s5]) : this.trigger("playlistunchanged"), this.updateMediaUpdateTimeout_(wd(this.media(), !!a6)), n6.parsedPlaylist = Cd(this.main.playlists, n6.playlistInfo.type, !this.media_.endList), this.trigger({ type: "playlistparsecomplete", metadata: n6 }), this.trigger("loadedplaylist");
  }
  dispose() {
    this.trigger("dispose"), this.stopRequest(), _.clearTimeout(this.mediaUpdateTimeout), _.clearTimeout(this.finalRenditionTimeout), this.dateRangesStorage_ = new pd(), this.off();
  }
  stopRequest() {
    if (this.request) {
      const e9 = this.request;
      this.request = null, e9.onreadystatechange = null, e9.abort();
    }
  }
  media(e9, t4) {
    if (!e9) return this.media_;
    if ("HAVE_NOTHING" === this.state) throw new Error("Cannot switch media playlist from " + this.state);
    if ("string" == typeof e9) {
      if (!this.main.playlists[e9]) throw new Error("Unknown playlist URI: " + e9);
      e9 = this.main.playlists[e9];
    }
    if (_.clearTimeout(this.finalRenditionTimeout), t4) {
      const t5 = (e9.partTargetDuration || e9.targetDuration) / 2 * 1e3 || 5e3;
      return void (this.finalRenditionTimeout = _.setTimeout(this.media.bind(this, e9, false), t5));
    }
    const i3 = this.state, s5 = !this.media_ || e9.id !== this.media_.id, n6 = this.main.playlists[e9.id];
    if (n6 && n6.endList || e9.endList && e9.segments.length) return this.request && (this.request.onreadystatechange = null, this.request.abort(), this.request = null), this.state = "HAVE_METADATA", this.media_ = e9, void (s5 && (this.trigger("mediachanging"), "HAVE_MAIN_MANIFEST" === i3 ? this.trigger("loadedmetadata") : this.trigger("mediachange")));
    if (this.updateMediaUpdateTimeout_(wd(e9, true)), !s5) return;
    if (this.state = "SWITCHING_MEDIA", this.request) {
      if (e9.resolvedUri === this.request.url) return;
      this.request.onreadystatechange = null, this.request.abort(), this.request = null;
    }
    this.media_ && this.trigger("mediachanging"), this.pendingMedia_ = e9;
    const r5 = { playlistInfo: { type: "media", uri: e9.uri } };
    this.trigger({ type: "playlistrequeststart", metadata: r5 }), this.request = this.vhs_.xhr({ uri: e9.resolvedUri, withCredentials: this.withCredentials, requestType: "hls-playlist" }, (t5, s6) => {
      if (this.request) {
        if (e9.lastRequest = Date.now(), e9.resolvedUri = _u(e9.resolvedUri, s6), t5) return this.playlistRequestError(this.request, e9, i3);
        this.trigger({ type: "playlistrequestcomplete", metadata: r5 }), this.haveMetadata({ playlistString: s6.responseText, url: e9.uri, id: e9.id }), "HAVE_MAIN_MANIFEST" === i3 ? this.trigger("loadedmetadata") : this.trigger("mediachange");
      }
    });
  }
  pause() {
    this.mediaUpdateTimeout && (_.clearTimeout(this.mediaUpdateTimeout), this.mediaUpdateTimeout = null), this.stopRequest(), "HAVE_NOTHING" === this.state && (this.started = false), "SWITCHING_MEDIA" === this.state ? this.media_ ? this.state = "HAVE_METADATA" : this.state = "HAVE_MAIN_MANIFEST" : "HAVE_CURRENT_METADATA" === this.state && (this.state = "HAVE_METADATA");
  }
  load(e9) {
    this.mediaUpdateTimeout && (_.clearTimeout(this.mediaUpdateTimeout), this.mediaUpdateTimeout = null);
    const t4 = this.media();
    if (e9) {
      const e10 = t4 ? (t4.partTargetDuration || t4.targetDuration) / 2 * 1e3 : 5e3;
      this.mediaUpdateTimeout = _.setTimeout(() => {
        this.mediaUpdateTimeout = null, this.load();
      }, e10);
    } else this.started ? t4 && !t4.endList ? this.trigger("mediaupdatetimeout") : this.trigger("loadedplaylist") : this.start();
  }
  updateMediaUpdateTimeout_(e9) {
    this.mediaUpdateTimeout && (_.clearTimeout(this.mediaUpdateTimeout), this.mediaUpdateTimeout = null), this.media() && !this.media().endList && (this.mediaUpdateTimeout = _.setTimeout(() => {
      this.mediaUpdateTimeout = null, this.trigger("mediaupdatetimeout"), this.updateMediaUpdateTimeout_(e9);
    }, e9));
  }
  start() {
    if (this.started = true, "object" == typeof this.src) return this.src.uri || (this.src.uri = _.location.href), this.src.resolvedUri = this.src.uri, void setTimeout(() => {
      this.setupInitialPlaylist(this.src);
    }, 0);
    const e9 = { playlistInfo: { type: "multivariant", uri: this.src } };
    this.trigger({ type: "playlistrequeststart", metadata: e9 }), this.request = this.vhs_.xhr({ uri: this.src, withCredentials: this.withCredentials, requestType: "hls-playlist" }, (t4, i3) => {
      if (!this.request) return;
      if (this.request = null, t4) return this.error = { status: i3.status, message: `HLS playlist request error at URL: ${this.src}.`, responseText: i3.responseText, code: 2, metadata: gd({ requestType: i3.requestType, request: i3, error: t4 }) }, "HAVE_NOTHING" === this.state && (this.started = false), this.trigger("error");
      this.trigger({ type: "playlistrequestcomplete", metadata: e9 }), this.src = _u(this.src, i3), this.trigger({ type: "playlistparsestart", metadata: e9 });
      const s5 = this.parseManifest_({ manifestString: i3.responseText, url: this.src });
      e9.parsedPlaylist = Cd(s5.playlists, e9.playlistInfo.type, false), this.trigger({ type: "playlistparsecomplete", metadata: e9 }), this.setupInitialPlaylist(s5);
    });
  }
  srcUri() {
    return "string" == typeof this.src ? this.src : this.src.uri;
  }
  setupInitialPlaylist(e9) {
    if (this.state = "HAVE_MAIN_MANIFEST", e9.playlists) return this.main = e9, cd(this.main, this.srcUri()), e9.playlists.forEach((e10) => {
      e10.segments = Td(e10), e10.segments.forEach((t5) => {
        vd(t5, e10.resolvedUri);
      });
    }), this.trigger("loadedplaylist"), void (this.request || this.media(this.main.playlists[0]));
    const t4 = this.srcUri() || _.location.href;
    this.main = dd(e9, t4), this.haveMetadata({ playlistObject: e9, url: t4, id: this.main.playlists[0].id }), this.trigger("loadedmetadata");
  }
  updateOrDeleteClone(e9, t4) {
    const i3 = this.main, s5 = e9.ID;
    let n6 = i3.playlists.length;
    for (; n6--; ) {
      const r5 = i3.playlists[n6];
      if (r5.attributes["PATHWAY-ID"] === s5) {
        const a6 = r5.resolvedUri, o4 = r5.id;
        if (t4) {
          const t5 = this.createCloneURI_(r5.resolvedUri, e9), a7 = nd(s5, t5), o5 = this.createCloneAttributes_(s5, r5.attributes), l6 = this.createClonePlaylist_(r5, a7, e9, o5);
          i3.playlists[n6] = l6, i3.playlists[a7] = l6, i3.playlists[t5] = l6;
        } else i3.playlists.splice(n6, 1);
        delete i3.playlists[o4], delete i3.playlists[a6];
      }
    }
    this.updateOrDeleteCloneMedia(e9, t4);
  }
  updateOrDeleteCloneMedia(e9, t4) {
    const i3 = this.main, s5 = e9.ID;
    ["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach((e10) => {
      if (i3.mediaGroups[e10] && i3.mediaGroups[e10][s5]) {
        for (const t5 in i3.mediaGroups[e10]) if (t5 === s5) {
          for (const s6 in i3.mediaGroups[e10][t5]) {
            i3.mediaGroups[e10][t5][s6].playlists.forEach((e11, t6) => {
              const s7 = i3.playlists[e11.id], n6 = s7.id, r5 = s7.resolvedUri;
              delete i3.playlists[n6], delete i3.playlists[r5];
            });
          }
          delete i3.mediaGroups[e10][t5];
        }
      }
    }), t4 && this.createClonedMediaGroups_(e9);
  }
  addClonePathway(e9, t4 = {}) {
    const i3 = this.main, s5 = i3.playlists.length, n6 = this.createCloneURI_(t4.resolvedUri, e9), r5 = nd(e9.ID, n6), a6 = this.createCloneAttributes_(e9.ID, t4.attributes), o4 = this.createClonePlaylist_(t4, r5, e9, a6);
    i3.playlists[s5] = o4, i3.playlists[r5] = o4, i3.playlists[n6] = o4, this.createClonedMediaGroups_(e9);
  }
  createClonedMediaGroups_(e9) {
    const t4 = e9.ID, i3 = e9["BASE-ID"], s5 = this.main;
    ["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach((n6) => {
      if (s5.mediaGroups[n6] && !s5.mediaGroups[n6][t4]) {
        for (const r5 in s5.mediaGroups[n6]) if (r5 === i3) {
          s5.mediaGroups[n6][t4] = {};
          for (const i4 in s5.mediaGroups[n6][r5]) {
            const a6 = s5.mediaGroups[n6][r5][i4];
            s5.mediaGroups[n6][t4][i4] = Ue({}, a6);
            const o4 = s5.mediaGroups[n6][t4][i4], l6 = this.createCloneURI_(a6.resolvedUri, e9);
            o4.resolvedUri = l6, o4.uri = l6, o4.playlists = [], a6.playlists.forEach((r6, a7) => {
              const l7 = s5.playlists[r6.id], h2 = rd(n6, t4, i4), u4 = nd(t4, h2);
              if (l7 && !s5.playlists[u4]) {
                const t5 = this.createClonePlaylist_(l7, u4, e9), i5 = t5.resolvedUri;
                s5.playlists[u4] = t5, s5.playlists[i5] = t5;
              }
              o4.playlists[a7] = this.createClonePlaylist_(r6, u4, e9);
            });
          }
        }
      }
    });
  }
  createClonePlaylist_(e9, t4, i3, s5) {
    const n6 = this.createCloneURI_(e9.resolvedUri, i3), r5 = { resolvedUri: n6, uri: n6, id: t4 };
    return e9.segments && (r5.segments = []), s5 && (r5.attributes = s5), vu(e9, r5);
  }
  createCloneURI_(e9, t4) {
    const i3 = new URL(e9);
    i3.hostname = t4["URI-REPLACEMENT"].HOST;
    const s5 = t4["URI-REPLACEMENT"].PARAMS;
    for (const n6 of Object.keys(s5)) i3.searchParams.set(n6, s5[n6]);
    return i3.href;
  }
  createCloneAttributes_(e9, t4) {
    const i3 = { "PATHWAY-ID": e9 };
    return ["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach((s5) => {
      t4[s5] && (i3[s5] = e9);
    }), i3;
  }
  getKeyIdSet(e9) {
    if (e9.contentProtection) {
      const t4 = /* @__PURE__ */ new Set();
      for (const i3 in e9.contentProtection) {
        const s5 = e9.contentProtection[i3].attributes.keyId;
        s5 && t4.add(s5.toLowerCase());
      }
      return t4;
    }
  }
};
var Id = function(e9, t4, i3, s5) {
  const n6 = "arraybuffer" === e9.responseType ? e9.response : e9.responseText;
  !t4 && n6 && (e9.responseTime = Date.now(), e9.roundTripTime = e9.responseTime - e9.requestTime, e9.bytesReceived = n6.byteLength || n6.length, e9.bandwidth || (e9.bandwidth = Math.floor(e9.bytesReceived / e9.roundTripTime * 8 * 1e3))), i3.headers && (e9.responseHeaders = i3.headers), t4 && "ETIMEDOUT" === t4.code && (e9.timedout = true), t4 || e9.aborted || 200 === i3.statusCode || 206 === i3.statusCode || 0 === i3.statusCode || (t4 = new Error("XHR Failed with a response of: " + (e9 && (n6 || e9.responseText)))), s5(t4, e9);
};
var xd = (e9, t4) => {
  if (!e9 || !e9.size) return;
  let i3 = t4;
  return e9.forEach((e10) => {
    i3 = e10(i3);
  }), i3;
};
var Ad = (e9, t4, i3, s5) => {
  e9 && e9.size && e9.forEach((e10) => {
    e10(t4, i3, s5);
  });
};
var Dd = function() {
  const e9 = function e10(t4, i3) {
    t4 = vu({ timeout: 45e3 }, t4);
    const s5 = e10.beforeRequest || du.Vhs.xhr.beforeRequest, n6 = e10._requestCallbackSet || du.Vhs.xhr._requestCallbackSet || /* @__PURE__ */ new Set(), r5 = e10._responseCallbackSet || du.Vhs.xhr._responseCallbackSet;
    s5 && "function" == typeof s5 && (du.log.warn("beforeRequest is deprecated, use onRequest instead."), n6.add(s5));
    const a6 = true === du.Vhs.xhr.original ? du.xhr : du.Vhs.xhr, o4 = xd(n6, t4);
    n6.delete(s5);
    const l6 = a6(o4 || t4, function(e11, t5) {
      return Ad(r5, l6, e11, t5), Id(l6, e11, t5, i3);
    }), h2 = l6.abort;
    return l6.abort = function() {
      return l6.aborted = true, h2.apply(l6, arguments);
    }, l6.uri = t4.uri, l6.requestType = t4.requestType, l6.requestTime = Date.now(), l6;
  };
  return e9.original = true, e9;
};
var Pd = function(e9) {
  let t4;
  const i3 = e9.offset;
  return t4 = "bigint" == typeof e9.offset || "bigint" == typeof e9.length ? _.BigInt(e9.offset) + _.BigInt(e9.length) - _.BigInt(1) : e9.offset + e9.length - 1, "bytes=" + i3 + "-" + t4;
};
var Ld = function(e9) {
  const t4 = {};
  return e9.byterange && (t4.Range = Pd(e9.byterange)), t4;
};
var Od = function(e9, t4) {
  return e9.start(t4) + "-" + e9.end(t4);
};
var Nd = function(e9, t4) {
  const i3 = e9.toString(16);
  return "00".substring(0, 2 - i3.length) + i3 + (t4 % 2 ? " " : "");
};
var Rd = function(e9) {
  return e9 >= 32 && e9 < 126 ? String.fromCharCode(e9) : ".";
};
var Md = function(e9) {
  const t4 = {};
  return Object.keys(e9).forEach((i3) => {
    const s5 = e9[i3];
    vt(s5) ? t4[i3] = { bytes: s5.buffer, byteOffset: s5.byteOffset, byteLength: s5.byteLength } : t4[i3] = s5;
  }), t4;
};
var Ud = function(e9) {
  const t4 = e9.byterange || { length: 1 / 0, offset: 0 };
  return [t4.length, t4.offset, e9.resolvedUri].join(",");
};
var Bd = function(e9) {
  return e9.resolvedUri;
};
var Fd = (e9) => {
  const t4 = Array.prototype.slice.call(e9), i3 = 16;
  let s5, n6, r5 = "";
  for (let a6 = 0; a6 < t4.length / i3; a6++) s5 = t4.slice(a6 * i3, a6 * i3 + i3).map(Nd).join(""), n6 = t4.slice(a6 * i3, a6 * i3 + i3).map(Rd).join(""), r5 += s5 + " " + n6 + "\n";
  return r5;
};
var qd = ({ bytes: e9 }) => Fd(e9);
var jd = (e9) => {
  let t4, i3 = "";
  for (t4 = 0; t4 < e9.length; t4++) i3 += Od(e9, t4) + " ";
  return i3;
};
var $d = Object.freeze({ __proto__: null, createTransferableMessage: Md, initSegmentId: Ud, segmentKeyId: Bd, hexDump: Fd, tagDump: qd, textRanges: jd });
var Hd = 0.25;
var Vd = (e9, t4) => {
  if (!t4.dateTimeObject) return null;
  const i3 = t4.videoTimingInfo.transmuxerPrependedSeconds, s5 = e9 - (t4.videoTimingInfo.transmuxedPresentationStart + i3);
  return new Date(t4.dateTimeObject.getTime() + 1e3 * s5);
};
var zd = (e9) => e9.transmuxedPresentationEnd - e9.transmuxedPresentationStart - e9.transmuxerPrependedSeconds;
var Wd = (e9, t4) => {
  let i3;
  try {
    i3 = new Date(e9);
  } catch (o4) {
    return null;
  }
  if (!t4 || !t4.segments || 0 === t4.segments.length) return null;
  let s5 = t4.segments[0];
  if (i3 < new Date(s5.dateTimeObject)) return null;
  for (let l6 = 0; l6 < t4.segments.length - 1; l6++) {
    s5 = t4.segments[l6];
    if (i3 < new Date(t4.segments[l6 + 1].dateTimeObject)) break;
  }
  const n6 = t4.segments[t4.segments.length - 1], r5 = n6.dateTimeObject, a6 = n6.videoTimingInfo ? zd(n6.videoTimingInfo) : n6.duration + n6.duration * Hd;
  return i3 > new Date(r5.getTime() + 1e3 * a6) ? null : (i3 > new Date(r5) && (s5 = n6), { segment: s5, estimatedStart: s5.videoTimingInfo ? s5.videoTimingInfo.transmuxedPresentationStart : id.duration(t4, t4.mediaSequence + t4.segments.indexOf(s5)), type: s5.videoTimingInfo ? "accurate" : "estimate" });
};
var Gd = (e9, t4) => {
  if (!t4 || !t4.segments || 0 === t4.segments.length) return null;
  let i3, s5 = 0;
  for (let r5 = 0; r5 < t4.segments.length && (i3 = t4.segments[r5], s5 = i3.videoTimingInfo ? i3.videoTimingInfo.transmuxedPresentationEnd : s5 + i3.duration, !(e9 <= s5)); r5++) ;
  const n6 = t4.segments[t4.segments.length - 1];
  if (n6.videoTimingInfo && n6.videoTimingInfo.transmuxedPresentationEnd < e9) return null;
  if (e9 > s5) {
    if (e9 > s5 + n6.duration * Hd) return null;
    i3 = n6;
  }
  return { segment: i3, estimatedStart: i3.videoTimingInfo ? i3.videoTimingInfo.transmuxedPresentationStart : s5 - i3.duration, type: i3.videoTimingInfo ? "accurate" : "estimate" };
};
var Xd = (e9, t4) => {
  let i3, s5;
  try {
    i3 = new Date(e9), s5 = new Date(t4);
  } catch (r5) {
  }
  const n6 = i3.getTime();
  return (s5.getTime() - n6) / 1e3;
};
var Kd = (e9) => {
  if (!e9.segments || 0 === e9.segments.length) return false;
  for (let t4 = 0; t4 < e9.segments.length; t4++) {
    if (!e9.segments[t4].dateTimeObject) return false;
  }
  return true;
};
var Yd = ({ playlist: e9, time: t4, callback: i3 }) => {
  if (!i3) throw new Error("getProgramTime: callback must be provided");
  if (!e9 || void 0 === t4) return i3({ message: "getProgramTime: playlist and time must be provided" });
  const s5 = Gd(t4, e9);
  if (!s5) return i3({ message: "valid programTime was not found" });
  if ("estimate" === s5.type) return i3({ message: "Accurate programTime could not be determined. Please seek to e.seekTime and try again", seekTime: s5.estimatedStart });
  const n6 = { mediaSeconds: t4 }, r5 = Vd(t4, s5.segment);
  return r5 && (n6.programDateTime = r5.toISOString()), i3(null, n6);
};
var Qd = ({ programTime: e9, playlist: t4, retryCount: i3 = 2, seekTo: s5, pauseAfterSeek: n6 = true, tech: r5, callback: a6 }) => {
  if (!a6) throw new Error("seekToProgramTime: callback must be provided");
  if (void 0 === e9 || !t4 || !s5) return a6({ message: "seekToProgramTime: programTime, seekTo and playlist must be provided" });
  if (!t4.endList && !r5.hasStarted_) return a6({ message: "player must be playing a live stream to start buffering" });
  if (!Kd(t4)) return a6({ message: "programDateTime tags must be provided in the manifest " + t4.resolvedUri });
  const o4 = Wd(e9, t4);
  if (!o4) return a6({ message: `${e9} was not found in the stream` });
  const l6 = o4.segment, h2 = Xd(l6.dateTimeObject, e9);
  if ("estimate" === o4.type) return 0 === i3 ? a6({ message: `${e9} is not buffered yet. Try again` }) : (s5(o4.estimatedStart + h2), void r5.one("seeked", () => {
    Qd({ programTime: e9, playlist: t4, retryCount: i3 - 1, seekTo: s5, pauseAfterSeek: n6, tech: r5, callback: a6 });
  }));
  const u4 = l6.start + h2, d5 = () => a6(null, r5.currentTime());
  r5.one("seeked", d5), n6 && r5.pause(), s5(u4);
};
var Jd = (e9, t4) => {
  if (4 === e9.readyState) return t4();
};
var Zd = (e9, t4, i3, s5) => {
  let n6, r5 = [], a6 = false;
  const o4 = function(e10, t5, s6, n7) {
    return t5.abort(), a6 = true, i3(e10, t5, s6, n7);
  }, l6 = function(e10, t5) {
    if (a6) return;
    if (e10) return e10.metadata = gd({ requestType: s5, request: t5, error: e10 }), o4(e10, t5, "", r5);
    const i4 = t5.responseText.substring(r5 && r5.byteLength || 0, t5.responseText.length);
    if (r5 = Dt(r5, At(i4, true)), n6 = n6 || ks(r5), r5.length < 10 || n6 && r5.length < n6 + 2) return Jd(t5, () => o4(e10, t5, "", r5));
    const l7 = Qs(r5);
    return "ts" === l7 && r5.length < 188 || !l7 && r5.length < 376 ? Jd(t5, () => o4(e10, t5, "", r5)) : o4(null, t5, l7, r5);
  }, h2 = { uri: e9, beforeSend(e10) {
    e10.overrideMimeType("text/plain; charset=x-user-defined"), e10.addEventListener("progress", function({ total: t5, loaded: i4 }) {
      return Id(e10, null, { statusCode: e10.status }, l6);
    });
  } }, u4 = t4(h2, function(e10, t5) {
    return Id(u4, e10, t5, l6);
  });
  return u4;
};
var { EventTarget: ec } = du;
var tc = function(e9, t4) {
  if (!Sd(e9, t4)) return false;
  if (e9.sidx && t4.sidx && (e9.sidx.offset !== t4.sidx.offset || e9.sidx.length !== t4.sidx.length)) return false;
  if (!e9.sidx && t4.sidx || e9.sidx && !t4.sidx) return false;
  if (e9.segments && !t4.segments || !e9.segments && t4.segments) return false;
  if (!e9.segments && !t4.segments) return true;
  for (let i3 = 0; i3 < e9.segments.length; i3++) {
    const s5 = e9.segments[i3], n6 = t4.segments[i3];
    if (s5.uri !== n6.uri) return false;
    if (!s5.byterange && !n6.byterange) continue;
    const r5 = s5.byterange, a6 = n6.byterange;
    if (r5 && !a6 || !r5 && a6) return false;
    if (r5.offset !== a6.offset || r5.length !== a6.length) return false;
  }
  return true;
};
var ic = (e9, t4, i3, s5) => `placeholder-uri-${e9}-${t4}-${s5.attributes.NAME || i3}`;
var sc = ({ mainXml: e9, srcUrl: t4, clientOffset: i3, sidxMapping: s5, previousManifest: n6 }) => {
  const r5 = gs(e9, { manifestUri: t4, clientOffset: i3, sidxMapping: s5, previousManifest: n6 });
  return cd(r5, t4, ic), r5;
};
var nc = (e9, t4) => {
  od(e9, (i3, s5, n6, r5) => {
    t4.mediaGroups[s5][n6] && r5 in t4.mediaGroups[s5][n6] || delete e9.mediaGroups[s5][n6][r5];
  });
};
var rc = (e9, t4, i3) => {
  let s5 = true, n6 = vu(e9, { duration: t4.duration, minimumUpdatePeriod: t4.minimumUpdatePeriod, timelineStarts: t4.timelineStarts });
  for (let r5 = 0; r5 < t4.playlists.length; r5++) {
    const e10 = t4.playlists[r5];
    if (e10.sidx) {
      const t5 = Ti(e10.sidx);
      i3 && i3[t5] && i3[t5].sidx && ci(e10, i3[t5].sidx, e10.sidx.resolvedUri);
    }
    const a6 = Ed(n6, e10, tc);
    a6 && (n6 = a6, s5 = false);
  }
  return od(t4, (e10, t5, i4, r5) => {
    if (e10.playlists && e10.playlists.length) {
      const a6 = e10.playlists[0].id, o4 = Ed(n6, e10.playlists[0], tc);
      o4 && (n6 = o4, r5 in n6.mediaGroups[t5][i4] || (n6.mediaGroups[t5][i4][r5] = e10), n6.mediaGroups[t5][i4][r5].playlists[0] = n6.playlists[a6], s5 = false);
    }
  }), nc(n6, t4), t4.minimumUpdatePeriod !== e9.minimumUpdatePeriod && (s5 = false), s5 ? null : n6;
};
var ac = (e9, t4) => (Boolean(!e9.map && !t4.map) || Boolean(e9.map && t4.map && e9.map.byterange.offset === t4.map.byterange.offset && e9.map.byterange.length === t4.map.byterange.length)) && e9.uri === t4.uri && e9.byterange.offset === t4.byterange.offset && e9.byterange.length === t4.byterange.length;
var oc = (e9, t4) => {
  const i3 = {};
  for (const s5 in e9) {
    const n6 = e9[s5].sidx;
    if (n6) {
      const e10 = Ti(n6);
      if (!t4[e10]) break;
      const s6 = t4[e10].sidxInfo;
      ac(s6, n6) && (i3[e10] = t4[e10]);
    }
  }
  return i3;
};
var lc = (e9, t4) => {
  let i3 = oc(e9.playlists, t4);
  return od(e9, (e10, s5, n6, r5) => {
    if (e10.playlists && e10.playlists.length) {
      const s6 = e10.playlists;
      i3 = vu(i3, oc(s6, t4));
    }
  }), i3;
};
var hc = class extends ec {
  constructor(e9, t4, i3 = {}, s5) {
    super(), this.mainPlaylistLoader_ = s5 || this, s5 || (this.isMain_ = true);
    const { withCredentials: n6 = false } = i3;
    if (this.vhs_ = t4, this.withCredentials = n6, this.addMetadataToTextTrack = i3.addMetadataToTextTrack, !e9) throw new Error("A non-empty playlist URL or object is required");
    this.on("minimumUpdatePeriod", () => {
      this.refreshXml_();
    }), this.on("mediaupdatetimeout", () => {
      this.refreshMedia_(this.media().id);
    }), this.state = "HAVE_NOTHING", this.loadedPlaylists_ = {}, this.logger_ = bu("DashPlaylistLoader"), this.isMain_ ? (this.mainPlaylistLoader_.srcUrl = e9, this.mainPlaylistLoader_.sidxMapping_ = {}) : this.childPlaylist_ = e9;
  }
  requestErrored_(e9, t4, i3) {
    return !this.request || (this.request = null, e9 ? (this.error = "object" != typeof e9 || e9 instanceof Error ? { status: t4.status, message: "DASH request error at URL: " + t4.uri, response: t4.response, code: 2, metadata: e9.metadata } : e9, i3 && (this.state = i3), this.trigger("error"), true) : void 0);
  }
  addSidxSegments_(e9, t4, i3) {
    const s5 = e9.sidx && Ti(e9.sidx);
    if (!e9.sidx || !s5 || this.mainPlaylistLoader_.sidxMapping_[s5]) return void (this.mediaRequest_ = _.setTimeout(() => i3(false), 0));
    const n6 = _u(e9.sidx.resolvedUri), r5 = (n7, r6) => {
      if (this.requestErrored_(n7, r6, t4)) return;
      const a7 = this.mainPlaylistLoader_.sidxMapping_, { requestType: o4 } = r6;
      let l6;
      try {
        l6 = Es(St(r6.response).subarray(8));
      } catch (h2) {
        return h2.metadata = gd({ requestType: o4, request: r6, parseFailure: true }), void this.requestErrored_(h2, r6, t4);
      }
      return a7[s5] = { sidxInfo: e9.sidx, sidx: l6 }, ci(e9, l6, e9.sidx.resolvedUri), i3(true);
    }, a6 = "dash-sidx";
    this.request = Zd(n6, this.vhs_.xhr, (t5, i4, s6, a7) => {
      if (t5) return r5(t5, i4);
      if (!s6 || "mp4" !== s6) {
        const t6 = s6 || "unknown";
        return r5({ status: i4.status, message: `Unsupported ${t6} container type for sidx segment at URL: ${n6}`, response: "", playlist: e9, internal: true, playlistExclusionDuration: 1 / 0, code: 2 }, i4);
      }
      const { offset: o4, length: l6 } = e9.sidx.byterange;
      if (a7.length >= l6 + o4) return r5(t5, { response: a7.subarray(o4, o4 + l6), status: i4.status, uri: i4.uri });
      this.request = this.vhs_.xhr({ uri: n6, responseType: "arraybuffer", requestType: "dash-sidx", headers: Ld({ byterange: e9.sidx.byterange }) }, r5);
    }, a6);
  }
  dispose() {
    this.trigger("dispose"), this.stopRequest(), this.loadedPlaylists_ = {}, _.clearTimeout(this.minimumUpdatePeriodTimeout_), _.clearTimeout(this.mediaRequest_), _.clearTimeout(this.mediaUpdateTimeout), this.mediaUpdateTimeout = null, this.mediaRequest_ = null, this.minimumUpdatePeriodTimeout_ = null, this.mainPlaylistLoader_.createMupOnMedia_ && (this.off("loadedmetadata", this.mainPlaylistLoader_.createMupOnMedia_), this.mainPlaylistLoader_.createMupOnMedia_ = null), this.off();
  }
  hasPendingRequest() {
    return this.request || this.mediaRequest_;
  }
  stopRequest() {
    if (this.request) {
      const e9 = this.request;
      this.request = null, e9.onreadystatechange = null, e9.abort();
    }
  }
  media(e9) {
    if (!e9) return this.media_;
    if ("HAVE_NOTHING" === this.state) throw new Error("Cannot switch media playlist from " + this.state);
    const t4 = this.state;
    if ("string" == typeof e9) {
      if (!this.mainPlaylistLoader_.main.playlists[e9]) throw new Error("Unknown playlist URI: " + e9);
      e9 = this.mainPlaylistLoader_.main.playlists[e9];
    }
    const i3 = !this.media_ || e9.id !== this.media_.id;
    if (i3 && this.loadedPlaylists_[e9.id] && this.loadedPlaylists_[e9.id].endList) return this.state = "HAVE_METADATA", this.media_ = e9, void (i3 && (this.trigger("mediachanging"), this.trigger("mediachange")));
    i3 && (this.media_ && this.trigger("mediachanging"), this.addSidxSegments_(e9, t4, (i4) => {
      this.haveMetadata({ startingState: t4, playlist: e9 });
    }));
  }
  haveMetadata({ startingState: e9, playlist: t4 }) {
    this.state = "HAVE_METADATA", this.loadedPlaylists_[t4.id] = t4, this.mediaRequest_ = null, this.refreshMedia_(t4.id), "HAVE_MAIN_MANIFEST" === e9 ? this.trigger("loadedmetadata") : this.trigger("mediachange");
  }
  pause() {
    this.mainPlaylistLoader_.createMupOnMedia_ && (this.off("loadedmetadata", this.mainPlaylistLoader_.createMupOnMedia_), this.mainPlaylistLoader_.createMupOnMedia_ = null), this.stopRequest(), _.clearTimeout(this.mediaUpdateTimeout), this.mediaUpdateTimeout = null, this.isMain_ && (_.clearTimeout(this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_), this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_ = null), "HAVE_NOTHING" === this.state && (this.started = false);
  }
  load(e9) {
    _.clearTimeout(this.mediaUpdateTimeout), this.mediaUpdateTimeout = null;
    const t4 = this.media();
    if (e9) {
      const e10 = t4 ? t4.targetDuration / 2 * 1e3 : 5e3;
      this.mediaUpdateTimeout = _.setTimeout(() => this.load(), e10);
    } else this.started ? t4 && !t4.endList ? (this.isMain_ && !this.minimumUpdatePeriodTimeout_ && (this.trigger("minimumUpdatePeriod"), this.updateMinimumUpdatePeriodTimeout_()), this.trigger("mediaupdatetimeout")) : this.trigger("loadedplaylist") : this.start();
  }
  start() {
    this.started = true, this.isMain_ ? this.requestMain_((e9, t4) => {
      this.haveMain_(), this.hasPendingRequest() || this.media_ || this.media(this.mainPlaylistLoader_.main.playlists[0]);
    }) : this.mediaRequest_ = _.setTimeout(() => this.haveMain_(), 0);
  }
  requestMain_(e9) {
    const t4 = { manifestInfo: { uri: this.mainPlaylistLoader_.srcUrl } };
    this.trigger({ type: "manifestrequeststart", metadata: t4 }), this.request = this.vhs_.xhr({ uri: this.mainPlaylistLoader_.srcUrl, withCredentials: this.withCredentials, requestType: "dash-manifest" }, (i3, s5) => {
      if (i3) {
        const { requestType: e10 } = s5;
        i3.metadata = gd({ requestType: e10, request: s5, error: i3 });
      }
      if (this.requestErrored_(i3, s5)) return void ("HAVE_NOTHING" === this.state && (this.started = false));
      this.trigger({ type: "manifestrequestcomplete", metadata: t4 });
      const n6 = s5.responseText !== this.mainPlaylistLoader_.mainXml_;
      return this.mainPlaylistLoader_.mainXml_ = s5.responseText, s5.responseHeaders && s5.responseHeaders.date ? this.mainLoaded_ = Date.parse(s5.responseHeaders.date) : this.mainLoaded_ = Date.now(), this.mainPlaylistLoader_.srcUrl = _u(this.mainPlaylistLoader_.srcUrl, s5), n6 ? (this.handleMain_(), void this.syncClientServerClock_(() => e9(s5, n6))) : e9(s5, n6);
    });
  }
  syncClientServerClock_(e9) {
    const t4 = fs(this.mainPlaylistLoader_.mainXml_);
    return null === t4 ? (this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now(), e9()) : "DIRECT" === t4.method ? (this.mainPlaylistLoader_.clientOffset_ = t4.value - Date.now(), e9()) : void (this.request = this.vhs_.xhr({ uri: yu(this.mainPlaylistLoader_.srcUrl, t4.value), method: t4.method, withCredentials: this.withCredentials, requestType: "dash-clock-sync" }, (i3, s5) => {
      if (!this.request) return;
      if (i3) {
        const { requestType: t5 } = s5;
        return this.error.metadata = gd({ requestType: t5, request: s5, error: i3 }), this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now(), e9();
      }
      let n6;
      n6 = "HEAD" === t4.method ? s5.responseHeaders && s5.responseHeaders.date ? Date.parse(s5.responseHeaders.date) : this.mainLoaded_ : Date.parse(s5.responseText), this.mainPlaylistLoader_.clientOffset_ = n6 - Date.now(), e9();
    }));
  }
  haveMain_() {
    this.state = "HAVE_MAIN_MANIFEST", this.isMain_ ? this.trigger("loadedplaylist") : this.media_ || this.media(this.childPlaylist_);
  }
  handleMain_() {
    this.mediaRequest_ = null;
    const e9 = this.mainPlaylistLoader_.main, t4 = { manifestInfo: { uri: this.mainPlaylistLoader_.srcUrl } };
    let i3;
    this.trigger({ type: "manifestparsestart", metadata: t4 });
    try {
      i3 = sc({ mainXml: this.mainPlaylistLoader_.mainXml_, srcUrl: this.mainPlaylistLoader_.srcUrl, clientOffset: this.mainPlaylistLoader_.clientOffset_, sidxMapping: this.mainPlaylistLoader_.sidxMapping_, previousManifest: e9 });
    } catch (n6) {
      this.error = n6, this.error.metadata = { errorType: du.Error.StreamingDashManifestParserError, error: n6 }, this.trigger("error");
    }
    e9 && (i3 = rc(e9, i3, this.mainPlaylistLoader_.sidxMapping_)), this.mainPlaylistLoader_.main = i3 || e9;
    const s5 = this.mainPlaylistLoader_.main.locations && this.mainPlaylistLoader_.main.locations[0];
    if (s5 && s5 !== this.mainPlaylistLoader_.srcUrl && (this.mainPlaylistLoader_.srcUrl = s5), (!e9 || i3 && i3.minimumUpdatePeriod !== e9.minimumUpdatePeriod) && this.updateMinimumUpdatePeriodTimeout_(), this.addEventStreamToMetadataTrack_(i3), i3) {
      const { duration: e10, endList: s6 } = i3, n6 = [];
      i3.playlists.forEach((e11) => {
        n6.push({ id: e11.id, bandwidth: e11.attributes.BANDWIDTH, resolution: e11.attributes.RESOLUTION, codecs: e11.attributes.CODECS });
      });
      const r5 = { duration: e10, isLive: !s6, renditions: n6 };
      t4.parsedManifest = r5, this.trigger({ type: "manifestparsecomplete", metadata: t4 });
    }
    return Boolean(i3);
  }
  updateMinimumUpdatePeriodTimeout_() {
    const e9 = this.mainPlaylistLoader_;
    e9.createMupOnMedia_ && (e9.off("loadedmetadata", e9.createMupOnMedia_), e9.createMupOnMedia_ = null), e9.minimumUpdatePeriodTimeout_ && (_.clearTimeout(e9.minimumUpdatePeriodTimeout_), e9.minimumUpdatePeriodTimeout_ = null);
    let t4 = e9.main && e9.main.minimumUpdatePeriod;
    0 === t4 && (e9.media() ? t4 = 1e3 * e9.media().targetDuration : (e9.createMupOnMedia_ = e9.updateMinimumUpdatePeriodTimeout_, e9.one("loadedmetadata", e9.createMupOnMedia_))), "number" != typeof t4 || t4 <= 0 ? t4 < 0 && this.logger_(`found invalid minimumUpdatePeriod of ${t4}, not setting a timeout`) : this.createMUPTimeout_(t4);
  }
  createMUPTimeout_(e9) {
    const t4 = this.mainPlaylistLoader_;
    t4.minimumUpdatePeriodTimeout_ = _.setTimeout(() => {
      t4.minimumUpdatePeriodTimeout_ = null, t4.trigger("minimumUpdatePeriod"), t4.createMUPTimeout_(e9);
    }, e9);
  }
  refreshXml_() {
    this.requestMain_((e9, t4) => {
      t4 && (this.media_ && (this.media_ = this.mainPlaylistLoader_.main.playlists[this.media_.id]), this.mainPlaylistLoader_.sidxMapping_ = lc(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.sidxMapping_), this.addSidxSegments_(this.media(), this.state, (e10) => {
        this.refreshMedia_(this.media().id);
      }));
    });
  }
  refreshMedia_(e9) {
    if (!e9) throw new Error("refreshMedia_ must take a media id");
    this.media_ && this.isMain_ && this.handleMain_();
    const t4 = this.mainPlaylistLoader_.main.playlists, i3 = !this.media_ || this.media_ !== t4[e9];
    if (i3 ? this.media_ = t4[e9] : this.trigger("playlistunchanged"), !this.mediaUpdateTimeout) {
      const e10 = () => {
        this.media().endList || (this.mediaUpdateTimeout = _.setTimeout(() => {
          this.trigger("mediaupdatetimeout"), e10();
        }, wd(this.media(), Boolean(i3))));
      };
      e10();
    }
    this.trigger("loadedplaylist");
  }
  addEventStreamToMetadataTrack_(e9) {
    if (e9 && this.mainPlaylistLoader_.main.eventStream) {
      const e10 = this.mainPlaylistLoader_.main.eventStream.map((e11) => ({ cueTime: e11.start, frames: [{ data: e11.messageData }] }));
      this.addMetadataToTextTrack("EventStream", e10, this.mainPlaylistLoader_.main.duration);
    }
  }
  getKeyIdSet(e9) {
    if (e9.contentProtection) {
      const t4 = /* @__PURE__ */ new Set();
      for (const i3 in e9.contentProtection) {
        const s5 = e9.contentProtection[i3].attributes["cenc:default_KID"];
        s5 && t4.add(s5.replace(/-/g, "").toLowerCase());
      }
      return t4;
    }
  }
};
var uc = { GOAL_BUFFER_LENGTH: 30, MAX_GOAL_BUFFER_LENGTH: 60, BACK_BUFFER_LENGTH: 30, GOAL_BUFFER_LENGTH_RATE: 1, INITIAL_BANDWIDTH: 4194304, BANDWIDTH_VARIANCE: 1.2, BUFFER_LOW_WATER_LINE: 0, MAX_BUFFER_LOW_WATER_LINE: 30, EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16, BUFFER_LOW_WATER_LINE_RATE: 1, BUFFER_HIGH_WATER_LINE: 30 };
var dc = (e9) => {
  const t4 = new Uint8Array(new ArrayBuffer(e9.length));
  for (let i3 = 0; i3 < e9.length; i3++) t4[i3] = e9.charCodeAt(i3);
  return t4.buffer;
};
var cc = function(e9) {
  return e9.on = e9.addEventListener, e9.off = e9.removeEventListener, e9;
};
var pc = function(e9) {
  try {
    return URL.createObjectURL(new Blob([e9], { type: "application/javascript" }));
  } catch (t4) {
    const i3 = new BlobBuilder();
    return i3.append(e9), URL.createObjectURL(i3.getBlob());
  }
};
var mc = function(e9) {
  return function() {
    const t4 = pc(e9), i3 = cc(new Worker(t4));
    i3.objURL = t4;
    const s5 = i3.terminate;
    return i3.on = i3.addEventListener, i3.off = i3.removeEventListener, i3.terminate = function() {
      return URL.revokeObjectURL(t4), s5.call(this);
    }, i3;
  };
};
var gc = function(e9) {
  return `var browserWorkerPolyFill = ${cc.toString()};
browserWorkerPolyFill(self);
` + e9;
};
var fc = function(e9) {
  return e9.toString().replace(/^function.+?{/, "").slice(0, -1);
};
var yc = gc(fc(function() {
  var e9 = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {}, t4 = function() {
    this.init = function() {
      var e10 = {};
      this.on = function(t5, i4) {
        e10[t5] || (e10[t5] = []), e10[t5] = e10[t5].concat(i4);
      }, this.off = function(t5, i4) {
        var s6;
        return !!e10[t5] && (s6 = e10[t5].indexOf(i4), e10[t5] = e10[t5].slice(), e10[t5].splice(s6, 1), s6 > -1);
      }, this.trigger = function(t5) {
        var i4, s6, n7, r6;
        if (i4 = e10[t5]) if (2 === arguments.length) for (n7 = i4.length, s6 = 0; s6 < n7; ++s6) i4[s6].call(this, arguments[1]);
        else {
          for (r6 = [], s6 = arguments.length, s6 = 1; s6 < arguments.length; ++s6) r6.push(arguments[s6]);
          for (n7 = i4.length, s6 = 0; s6 < n7; ++s6) i4[s6].apply(this, r6);
        }
      }, this.dispose = function() {
        e10 = {};
      };
    };
  };
  t4.prototype.pipe = function(e10) {
    return this.on("data", function(t5) {
      e10.push(t5);
    }), this.on("done", function(t5) {
      e10.flush(t5);
    }), this.on("partialdone", function(t5) {
      e10.partialFlush(t5);
    }), this.on("endedtimeline", function(t5) {
      e10.endTimeline(t5);
    }), this.on("reset", function(t5) {
      e10.reset(t5);
    }), e10;
  }, t4.prototype.push = function(e10) {
    this.trigger("data", e10);
  }, t4.prototype.flush = function(e10) {
    this.trigger("done", e10);
  }, t4.prototype.partialFlush = function(e10) {
    this.trigger("partialdone", e10);
  }, t4.prototype.endTimeline = function(e10) {
    this.trigger("endedtimeline", e10);
  }, t4.prototype.reset = function(e10) {
    this.trigger("reset", e10);
  };
  var i3, s5, n6, r5, a6, o4, l6, h2, u4, d5, c3, p2, m5, g4, f5, y4, _2, b3, v5, T2, S4, E4, w5, C3, k2, I2, x2, A3, D2, P5, L3, O2, N3, R2, M3, U3, B2, F2, q3, j3, $2 = t4, H2 = Math.pow(2, 32), V3 = { getUint64: function(e10) {
    var t5, i4 = new DataView(e10.buffer, e10.byteOffset, e10.byteLength);
    return i4.getBigUint64 ? (t5 = i4.getBigUint64(0)) < Number.MAX_SAFE_INTEGER ? Number(t5) : t5 : i4.getUint32(0) * H2 + i4.getUint32(4);
  }, MAX_UINT32: H2 }, z2 = V3.MAX_UINT32;
  !function() {
    var e10;
    if (E4 = { avc1: [], avcC: [], btrt: [], dinf: [], dref: [], esds: [], ftyp: [], hdlr: [], mdat: [], mdhd: [], mdia: [], mfhd: [], minf: [], moof: [], moov: [], mp4a: [], mvex: [], mvhd: [], pasp: [], sdtp: [], smhd: [], stbl: [], stco: [], stsc: [], stsd: [], stsz: [], stts: [], styp: [], tfdt: [], tfhd: [], traf: [], trak: [], trun: [], trex: [], tkhd: [], vmhd: [] }, "undefined" != typeof Uint8Array) {
      for (e10 in E4) E4.hasOwnProperty(e10) && (E4[e10] = [e10.charCodeAt(0), e10.charCodeAt(1), e10.charCodeAt(2), e10.charCodeAt(3)]);
      w5 = new Uint8Array(["i".charCodeAt(0), "s".charCodeAt(0), "o".charCodeAt(0), "m".charCodeAt(0)]), k2 = new Uint8Array(["a".charCodeAt(0), "v".charCodeAt(0), "c".charCodeAt(0), "1".charCodeAt(0)]), C3 = new Uint8Array([0, 0, 0, 1]), I2 = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0]), x2 = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]), A3 = { video: I2, audio: x2 }, L3 = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1]), P5 = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]), O2 = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]), N3 = O2, R2 = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), M3 = O2, D2 = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]);
    }
  }(), i3 = function(e10) {
    var t5, i4, s6 = [], n7 = 0;
    for (t5 = 1; t5 < arguments.length; t5++) s6.push(arguments[t5]);
    for (t5 = s6.length; t5--; ) n7 += s6[t5].byteLength;
    for (i4 = new Uint8Array(n7 + 8), new DataView(i4.buffer, i4.byteOffset, i4.byteLength).setUint32(0, i4.byteLength), i4.set(e10, 4), t5 = 0, n7 = 8; t5 < s6.length; t5++) i4.set(s6[t5], n7), n7 += s6[t5].byteLength;
    return i4;
  }, s5 = function() {
    return i3(E4.dinf, i3(E4.dref, L3));
  }, n6 = function(e10) {
    return i3(E4.esds, new Uint8Array([0, 0, 0, 0, 3, 25, 0, 0, 0, 4, 17, 64, 21, 0, 6, 0, 0, 0, 218, 192, 0, 0, 218, 192, 5, 2, e10.audioobjecttype << 3 | e10.samplingfrequencyindex >>> 1, e10.samplingfrequencyindex << 7 | e10.channelcount << 3, 6, 1, 2]));
  }, f5 = function(e10) {
    return i3(E4.hdlr, A3[e10]);
  }, g4 = function(e10) {
    var t5 = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 1, 95, 144, e10.duration >>> 24 & 255, e10.duration >>> 16 & 255, e10.duration >>> 8 & 255, 255 & e10.duration, 85, 196, 0, 0]);
    return e10.samplerate && (t5[12] = e10.samplerate >>> 24 & 255, t5[13] = e10.samplerate >>> 16 & 255, t5[14] = e10.samplerate >>> 8 & 255, t5[15] = 255 & e10.samplerate), i3(E4.mdhd, t5);
  }, m5 = function(e10) {
    return i3(E4.mdia, g4(e10), f5(e10.type), o4(e10));
  }, a6 = function(e10) {
    return i3(E4.mfhd, new Uint8Array([0, 0, 0, 0, (4278190080 & e10) >> 24, (16711680 & e10) >> 16, (65280 & e10) >> 8, 255 & e10]));
  }, o4 = function(e10) {
    return i3(E4.minf, "video" === e10.type ? i3(E4.vmhd, D2) : i3(E4.smhd, P5), s5(), _2(e10));
  }, l6 = function(e10, t5) {
    for (var s6 = [], n7 = t5.length; n7--; ) s6[n7] = v5(t5[n7]);
    return i3.apply(null, [E4.moof, a6(e10)].concat(s6));
  }, h2 = function(e10) {
    for (var t5 = e10.length, s6 = []; t5--; ) s6[t5] = c3(e10[t5]);
    return i3.apply(null, [E4.moov, d5(4294967295)].concat(s6).concat(u4(e10)));
  }, u4 = function(e10) {
    for (var t5 = e10.length, s6 = []; t5--; ) s6[t5] = T2(e10[t5]);
    return i3.apply(null, [E4.mvex].concat(s6));
  }, d5 = function(e10) {
    var t5 = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 95, 144, (4278190080 & e10) >> 24, (16711680 & e10) >> 16, (65280 & e10) >> 8, 255 & e10, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]);
    return i3(E4.mvhd, t5);
  }, y4 = function(e10) {
    var t5, s6, n7 = e10.samples || [], r6 = new Uint8Array(4 + n7.length);
    for (s6 = 0; s6 < n7.length; s6++) t5 = n7[s6].flags, r6[s6 + 4] = t5.dependsOn << 4 | t5.isDependedOn << 2 | t5.hasRedundancy;
    return i3(E4.sdtp, r6);
  }, _2 = function(e10) {
    return i3(E4.stbl, b3(e10), i3(E4.stts, M3), i3(E4.stsc, N3), i3(E4.stsz, R2), i3(E4.stco, O2));
  }, b3 = function(e10) {
    return i3(E4.stsd, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]), "video" === e10.type ? U3(e10) : B2(e10));
  }, U3 = function(e10) {
    var t5, s6, n7 = e10.sps || [], r6 = e10.pps || [], a7 = [], o5 = [];
    for (t5 = 0; t5 < n7.length; t5++) a7.push((65280 & n7[t5].byteLength) >>> 8), a7.push(255 & n7[t5].byteLength), a7 = a7.concat(Array.prototype.slice.call(n7[t5]));
    for (t5 = 0; t5 < r6.length; t5++) o5.push((65280 & r6[t5].byteLength) >>> 8), o5.push(255 & r6[t5].byteLength), o5 = o5.concat(Array.prototype.slice.call(r6[t5]));
    if (s6 = [E4.avc1, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (65280 & e10.width) >> 8, 255 & e10.width, (65280 & e10.height) >> 8, 255 & e10.height, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 19, 118, 105, 100, 101, 111, 106, 115, 45, 99, 111, 110, 116, 114, 105, 98, 45, 104, 108, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17]), i3(E4.avcC, new Uint8Array([1, e10.profileIdc, e10.profileCompatibility, e10.levelIdc, 255].concat([n7.length], a7, [r6.length], o5))), i3(E4.btrt, new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192]))], e10.sarRatio) {
      var l7 = e10.sarRatio[0], h3 = e10.sarRatio[1];
      s6.push(i3(E4.pasp, new Uint8Array([(4278190080 & l7) >> 24, (16711680 & l7) >> 16, (65280 & l7) >> 8, 255 & l7, (4278190080 & h3) >> 24, (16711680 & h3) >> 16, (65280 & h3) >> 8, 255 & h3])));
    }
    return i3.apply(null, s6);
  }, B2 = function(e10) {
    return i3(E4.mp4a, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, (65280 & e10.channelcount) >> 8, 255 & e10.channelcount, (65280 & e10.samplesize) >> 8, 255 & e10.samplesize, 0, 0, 0, 0, (65280 & e10.samplerate) >> 8, 255 & e10.samplerate, 0, 0]), n6(e10));
  }, p2 = function(e10) {
    var t5 = new Uint8Array([0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, (4278190080 & e10.id) >> 24, (16711680 & e10.id) >> 16, (65280 & e10.id) >> 8, 255 & e10.id, 0, 0, 0, 0, (4278190080 & e10.duration) >> 24, (16711680 & e10.duration) >> 16, (65280 & e10.duration) >> 8, 255 & e10.duration, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, (65280 & e10.width) >> 8, 255 & e10.width, 0, 0, (65280 & e10.height) >> 8, 255 & e10.height, 0, 0]);
    return i3(E4.tkhd, t5);
  }, v5 = function(e10) {
    var t5, s6, n7, r6, a7, o5, l7;
    return t5 = i3(E4.tfhd, new Uint8Array([0, 0, 0, 58, (4278190080 & e10.id) >> 24, (16711680 & e10.id) >> 16, (65280 & e10.id) >> 8, 255 & e10.id, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])), o5 = Math.floor(e10.baseMediaDecodeTime / z2), l7 = Math.floor(e10.baseMediaDecodeTime % z2), s6 = i3(E4.tfdt, new Uint8Array([1, 0, 0, 0, o5 >>> 24 & 255, o5 >>> 16 & 255, o5 >>> 8 & 255, 255 & o5, l7 >>> 24 & 255, l7 >>> 16 & 255, l7 >>> 8 & 255, 255 & l7])), a7 = 92, "audio" === e10.type ? (n7 = S4(e10, a7), i3(E4.traf, t5, s6, n7)) : (r6 = y4(e10), n7 = S4(e10, r6.length + a7), i3(E4.traf, t5, s6, n7, r6));
  }, c3 = function(e10) {
    return e10.duration = e10.duration || 4294967295, i3(E4.trak, p2(e10), m5(e10));
  }, T2 = function(e10) {
    var t5 = new Uint8Array([0, 0, 0, 0, (4278190080 & e10.id) >> 24, (16711680 & e10.id) >> 16, (65280 & e10.id) >> 8, 255 & e10.id, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]);
    return "video" !== e10.type && (t5[t5.length - 1] = 0), i3(E4.trex, t5);
  }, j3 = function(e10, t5) {
    var i4 = 0, s6 = 0, n7 = 0, r6 = 0;
    return e10.length && (void 0 !== e10[0].duration && (i4 = 1), void 0 !== e10[0].size && (s6 = 2), void 0 !== e10[0].flags && (n7 = 4), void 0 !== e10[0].compositionTimeOffset && (r6 = 8)), [0, 0, i4 | s6 | n7 | r6, 1, (4278190080 & e10.length) >>> 24, (16711680 & e10.length) >>> 16, (65280 & e10.length) >>> 8, 255 & e10.length, (4278190080 & t5) >>> 24, (16711680 & t5) >>> 16, (65280 & t5) >>> 8, 255 & t5];
  }, q3 = function(e10, t5) {
    var s6, n7, r6, a7, o5, l7;
    for (t5 += 20 + 16 * (a7 = e10.samples || []).length, r6 = j3(a7, t5), (n7 = new Uint8Array(r6.length + 16 * a7.length)).set(r6), s6 = r6.length, l7 = 0; l7 < a7.length; l7++) o5 = a7[l7], n7[s6++] = (4278190080 & o5.duration) >>> 24, n7[s6++] = (16711680 & o5.duration) >>> 16, n7[s6++] = (65280 & o5.duration) >>> 8, n7[s6++] = 255 & o5.duration, n7[s6++] = (4278190080 & o5.size) >>> 24, n7[s6++] = (16711680 & o5.size) >>> 16, n7[s6++] = (65280 & o5.size) >>> 8, n7[s6++] = 255 & o5.size, n7[s6++] = o5.flags.isLeading << 2 | o5.flags.dependsOn, n7[s6++] = o5.flags.isDependedOn << 6 | o5.flags.hasRedundancy << 4 | o5.flags.paddingValue << 1 | o5.flags.isNonSyncSample, n7[s6++] = 61440 & o5.flags.degradationPriority, n7[s6++] = 15 & o5.flags.degradationPriority, n7[s6++] = (4278190080 & o5.compositionTimeOffset) >>> 24, n7[s6++] = (16711680 & o5.compositionTimeOffset) >>> 16, n7[s6++] = (65280 & o5.compositionTimeOffset) >>> 8, n7[s6++] = 255 & o5.compositionTimeOffset;
    return i3(E4.trun, n7);
  }, F2 = function(e10, t5) {
    var s6, n7, r6, a7, o5, l7;
    for (t5 += 20 + 8 * (a7 = e10.samples || []).length, r6 = j3(a7, t5), (s6 = new Uint8Array(r6.length + 8 * a7.length)).set(r6), n7 = r6.length, l7 = 0; l7 < a7.length; l7++) o5 = a7[l7], s6[n7++] = (4278190080 & o5.duration) >>> 24, s6[n7++] = (16711680 & o5.duration) >>> 16, s6[n7++] = (65280 & o5.duration) >>> 8, s6[n7++] = 255 & o5.duration, s6[n7++] = (4278190080 & o5.size) >>> 24, s6[n7++] = (16711680 & o5.size) >>> 16, s6[n7++] = (65280 & o5.size) >>> 8, s6[n7++] = 255 & o5.size;
    return i3(E4.trun, s6);
  }, S4 = function(e10, t5) {
    return "audio" === e10.type ? F2(e10, t5) : q3(e10, t5);
  };
  var W2, G2, X2, K2, Y2, Q2, J2, Z2, ee2 = { ftyp: r5 = function() {
    return i3(E4.ftyp, w5, C3, w5, k2);
  }, mdat: function(e10) {
    return i3(E4.mdat, e10);
  }, moof: l6, moov: h2, initSegment: function(e10) {
    var t5, i4 = r5(), s6 = h2(e10);
    return (t5 = new Uint8Array(i4.byteLength + s6.byteLength)).set(i4), t5.set(s6, i4.byteLength), t5;
  } }, te2 = function() {
    return { size: 0, flags: { isLeading: 0, dependsOn: 1, isDependedOn: 0, hasRedundancy: 0, degradationPriority: 0, isNonSyncSample: 1 } };
  }, ie2 = function(e10, t5) {
    var i4 = te2();
    return i4.dataOffset = t5, i4.compositionTimeOffset = e10.pts - e10.dts, i4.duration = e10.duration, i4.size = 4 * e10.length, i4.size += e10.byteLength, e10.keyFrame && (i4.flags.dependsOn = 2, i4.flags.isNonSyncSample = 0), i4;
  }, se2 = { groupNalsIntoFrames: function(e10) {
    var t5, i4, s6 = [], n7 = [];
    for (n7.byteLength = 0, n7.nalCount = 0, n7.duration = 0, s6.byteLength = 0, t5 = 0; t5 < e10.length; t5++) "access_unit_delimiter_rbsp" === (i4 = e10[t5]).nalUnitType ? (s6.length && (s6.duration = i4.dts - s6.dts, n7.byteLength += s6.byteLength, n7.nalCount += s6.length, n7.duration += s6.duration, n7.push(s6)), (s6 = [i4]).byteLength = i4.data.byteLength, s6.pts = i4.pts, s6.dts = i4.dts) : ("slice_layer_without_partitioning_rbsp_idr" === i4.nalUnitType && (s6.keyFrame = true), s6.duration = i4.dts - s6.dts, s6.byteLength += i4.data.byteLength, s6.push(i4));
    return n7.length && (!s6.duration || s6.duration <= 0) && (s6.duration = n7[n7.length - 1].duration), n7.byteLength += s6.byteLength, n7.nalCount += s6.length, n7.duration += s6.duration, n7.push(s6), n7;
  }, groupFramesIntoGops: function(e10) {
    var t5, i4, s6 = [], n7 = [];
    for (s6.byteLength = 0, s6.nalCount = 0, s6.duration = 0, s6.pts = e10[0].pts, s6.dts = e10[0].dts, n7.byteLength = 0, n7.nalCount = 0, n7.duration = 0, n7.pts = e10[0].pts, n7.dts = e10[0].dts, t5 = 0; t5 < e10.length; t5++) (i4 = e10[t5]).keyFrame ? (s6.length && (n7.push(s6), n7.byteLength += s6.byteLength, n7.nalCount += s6.nalCount, n7.duration += s6.duration), (s6 = [i4]).nalCount = i4.length, s6.byteLength = i4.byteLength, s6.pts = i4.pts, s6.dts = i4.dts, s6.duration = i4.duration) : (s6.duration += i4.duration, s6.nalCount += i4.length, s6.byteLength += i4.byteLength, s6.push(i4));
    return n7.length && s6.duration <= 0 && (s6.duration = n7[n7.length - 1].duration), n7.byteLength += s6.byteLength, n7.nalCount += s6.nalCount, n7.duration += s6.duration, n7.push(s6), n7;
  }, extendFirstKeyFrame: function(e10) {
    var t5;
    return !e10[0][0].keyFrame && e10.length > 1 && (t5 = e10.shift(), e10.byteLength -= t5.byteLength, e10.nalCount -= t5.nalCount, e10[0][0].dts = t5.dts, e10[0][0].pts = t5.pts, e10[0][0].duration += t5.duration), e10;
  }, generateSampleTable: function(e10, t5) {
    var i4, s6, n7, r6, a7, o5 = t5 || 0, l7 = [];
    for (i4 = 0; i4 < e10.length; i4++) for (r6 = e10[i4], s6 = 0; s6 < r6.length; s6++) a7 = r6[s6], o5 += (n7 = ie2(a7, o5)).size, l7.push(n7);
    return l7;
  }, concatenateNalData: function(e10) {
    var t5, i4, s6, n7, r6, a7, o5 = 0, l7 = e10.byteLength, h3 = e10.nalCount, u5 = new Uint8Array(l7 + 4 * h3), d6 = new DataView(u5.buffer);
    for (t5 = 0; t5 < e10.length; t5++) for (n7 = e10[t5], i4 = 0; i4 < n7.length; i4++) for (r6 = n7[i4], s6 = 0; s6 < r6.length; s6++) a7 = r6[s6], d6.setUint32(o5, a7.data.byteLength), o5 += 4, u5.set(a7.data, o5), o5 += a7.data.byteLength;
    return u5;
  }, generateSampleTableForFrame: function(e10, t5) {
    var i4, s6 = [];
    return i4 = ie2(e10, t5 || 0), s6.push(i4), s6;
  }, concatenateNalDataForFrame: function(e10) {
    var t5, i4, s6 = 0, n7 = e10.byteLength, r6 = e10.length, a7 = new Uint8Array(n7 + 4 * r6), o5 = new DataView(a7.buffer);
    for (t5 = 0; t5 < e10.length; t5++) i4 = e10[t5], o5.setUint32(s6, i4.data.byteLength), s6 += 4, a7.set(i4.data, s6), s6 += i4.data.byteLength;
    return a7;
  } }, ne2 = [33, 16, 5, 32, 164, 27], re2 = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252], ae2 = function(e10) {
    for (var t5 = []; e10--; ) t5.push(0);
    return t5;
  }, oe2 = function(e10) {
    return Object.keys(e10).reduce(function(t5, i4) {
      return t5[i4] = new Uint8Array(e10[i4].reduce(function(e11, t6) {
        return e11.concat(t6);
      }, [])), t5;
    }, {});
  }, le2 = function() {
    if (!W2) {
      var e10 = { 96e3: [ne2, [227, 64], ae2(154), [56]], 88200: [ne2, [231], ae2(170), [56]], 64e3: [ne2, [248, 192], ae2(240), [56]], 48e3: [ne2, [255, 192], ae2(268), [55, 148, 128], ae2(54), [112]], 44100: [ne2, [255, 192], ae2(268), [55, 163, 128], ae2(84), [112]], 32e3: [ne2, [255, 192], ae2(268), [55, 234], ae2(226), [112]], 24e3: [ne2, [255, 192], ae2(268), [55, 255, 128], ae2(268), [111, 112], ae2(126), [224]], 16e3: [ne2, [255, 192], ae2(268), [55, 255, 128], ae2(268), [111, 255], ae2(269), [223, 108], ae2(195), [1, 192]], 12e3: [re2, ae2(268), [3, 127, 248], ae2(268), [6, 255, 240], ae2(268), [13, 255, 224], ae2(268), [27, 253, 128], ae2(259), [56]], 11025: [re2, ae2(268), [3, 127, 248], ae2(268), [6, 255, 240], ae2(268), [13, 255, 224], ae2(268), [27, 255, 192], ae2(268), [55, 175, 128], ae2(108), [112]], 8e3: [re2, ae2(268), [3, 121, 16], ae2(47), [7]] };
      W2 = oe2(e10);
    }
    return W2;
  }, he2 = 9e4;
  Q2 = function(e10, t5) {
    return G2(Y2(e10, t5));
  }, J2 = function(e10, t5) {
    return X2(K2(e10), t5);
  }, Z2 = function(e10, t5, i4) {
    return K2(i4 ? e10 : e10 - t5);
  };
  var ue2 = { ONE_SECOND_IN_TS: he2, secondsToVideoTs: G2 = function(e10) {
    return e10 * he2;
  }, secondsToAudioTs: X2 = function(e10, t5) {
    return e10 * t5;
  }, videoTsToSeconds: K2 = function(e10) {
    return e10 / he2;
  }, audioTsToSeconds: Y2 = function(e10, t5) {
    return e10 / t5;
  }, audioTsToVideoTs: Q2, videoTsToAudioTs: J2, metadataTsToSeconds: Z2 }, de2 = le2, ce2 = ue2, pe2 = function(e10) {
    var t5, i4 = 0;
    for (t5 = 0; t5 < e10.length; t5++) i4 += e10[t5].data.byteLength;
    return i4;
  }, me2 = { prefixWithSilence: function(e10, t5, i4, s6) {
    var n7, r6, a7, o5, l7 = 0, h3 = 0, u5 = 0, d6 = 0;
    if (t5.length && (n7 = ce2.audioTsToVideoTs(e10.baseMediaDecodeTime, e10.samplerate), l7 = Math.ceil(ce2.ONE_SECOND_IN_TS / (e10.samplerate / 1024)), i4 && s6 && (h3 = n7 - Math.max(i4, s6), d6 = (u5 = Math.floor(h3 / l7)) * l7), !(u5 < 1 || d6 > ce2.ONE_SECOND_IN_TS / 2))) {
      for ((r6 = de2()[e10.samplerate]) || (r6 = t5[0].data), a7 = 0; a7 < u5; a7++) o5 = t5[0], t5.splice(0, 0, { data: r6, dts: o5.dts - l7, pts: o5.pts - l7 });
      return e10.baseMediaDecodeTime -= Math.floor(ce2.videoTsToAudioTs(d6, e10.samplerate)), d6;
    }
  }, trimAdtsFramesByEarliestDts: function(e10, t5, i4) {
    return t5.minSegmentDts >= i4 ? e10 : (t5.minSegmentDts = 1 / 0, e10.filter(function(e11) {
      return e11.dts >= i4 && (t5.minSegmentDts = Math.min(t5.minSegmentDts, e11.dts), t5.minSegmentPts = t5.minSegmentDts, true);
    }));
  }, generateSampleTable: function(e10) {
    var t5, i4, s6 = [];
    for (t5 = 0; t5 < e10.length; t5++) i4 = e10[t5], s6.push({ size: i4.data.byteLength, duration: 1024 });
    return s6;
  }, concatenateFrameData: function(e10) {
    var t5, i4, s6 = 0, n7 = new Uint8Array(pe2(e10));
    for (t5 = 0; t5 < e10.length; t5++) i4 = e10[t5], n7.set(i4.data, s6), s6 += i4.data.byteLength;
    return n7;
  } }, ge2 = ue2.ONE_SECOND_IN_TS, fe2 = { clearDtsInfo: function(e10) {
    delete e10.minSegmentDts, delete e10.maxSegmentDts, delete e10.minSegmentPts, delete e10.maxSegmentPts;
  }, calculateTrackBaseMediaDecodeTime: function(e10, t5) {
    var i4, s6 = e10.minSegmentDts;
    return t5 || (s6 -= e10.timelineStartInfo.dts), i4 = e10.timelineStartInfo.baseMediaDecodeTime, i4 += s6, i4 = Math.max(0, i4), "audio" === e10.type && (i4 *= e10.samplerate / ge2, i4 = Math.floor(i4)), i4;
  }, collectDtsInfo: function(e10, t5) {
    "number" == typeof t5.pts && (void 0 === e10.timelineStartInfo.pts && (e10.timelineStartInfo.pts = t5.pts), void 0 === e10.minSegmentPts ? e10.minSegmentPts = t5.pts : e10.minSegmentPts = Math.min(e10.minSegmentPts, t5.pts), void 0 === e10.maxSegmentPts ? e10.maxSegmentPts = t5.pts : e10.maxSegmentPts = Math.max(e10.maxSegmentPts, t5.pts)), "number" == typeof t5.dts && (void 0 === e10.timelineStartInfo.dts && (e10.timelineStartInfo.dts = t5.dts), void 0 === e10.minSegmentDts ? e10.minSegmentDts = t5.dts : e10.minSegmentDts = Math.min(e10.minSegmentDts, t5.dts), void 0 === e10.maxSegmentDts ? e10.maxSegmentDts = t5.dts : e10.maxSegmentDts = Math.max(e10.maxSegmentDts, t5.dts));
  } }, ye2 = 4, _e2 = 128, be2 = { parseSei: function(e10) {
    for (var t5 = 0, i4 = { payloadType: -1, payloadSize: 0 }, s6 = 0, n7 = 0; t5 < e10.byteLength && e10[t5] !== _e2; ) {
      for (; 255 === e10[t5]; ) s6 += 255, t5++;
      for (s6 += e10[t5++]; 255 === e10[t5]; ) n7 += 255, t5++;
      if (n7 += e10[t5++], !i4.payload && s6 === ye2) {
        if ("GA94" === String.fromCharCode(e10[t5 + 3], e10[t5 + 4], e10[t5 + 5], e10[t5 + 6])) {
          i4.payloadType = s6, i4.payloadSize = n7, i4.payload = e10.subarray(t5, t5 + n7);
          break;
        }
        i4.payload = void 0;
      }
      t5 += n7, s6 = 0, n7 = 0;
    }
    return i4;
  }, parseUserData: function(e10) {
    return 181 !== e10.payload[0] || 49 != (e10.payload[1] << 8 | e10.payload[2]) || "GA94" !== String.fromCharCode(e10.payload[3], e10.payload[4], e10.payload[5], e10.payload[6]) || 3 !== e10.payload[7] ? null : e10.payload.subarray(8, e10.payload.length - 1);
  }, parseCaptionPackets: function(e10, t5) {
    var i4, s6, n7, r6, a7 = [];
    if (!(64 & t5[0])) return a7;
    for (s6 = 31 & t5[0], i4 = 0; i4 < s6; i4++) r6 = { type: 3 & t5[(n7 = 3 * i4) + 2], pts: e10 }, 4 & t5[n7 + 2] && (r6.ccData = t5[n7 + 3] << 8 | t5[n7 + 4], a7.push(r6));
    return a7;
  }, discardEmulationPreventionBytes: function(e10) {
    for (var t5, i4, s6 = e10.byteLength, n7 = [], r6 = 1; r6 < s6 - 2; ) 0 === e10[r6] && 0 === e10[r6 + 1] && 3 === e10[r6 + 2] ? (n7.push(r6 + 2), r6 += 2) : r6++;
    if (0 === n7.length) return e10;
    t5 = s6 - n7.length, i4 = new Uint8Array(t5);
    var a7 = 0;
    for (r6 = 0; r6 < t5; a7++, r6++) a7 === n7[0] && (a7++, n7.shift()), i4[r6] = e10[a7];
    return i4;
  }, USER_DATA_REGISTERED_ITU_T_T35: ye2 }, ve2 = $2, Te2 = be2, Se2 = function(e10) {
    e10 = e10 || {}, Se2.prototype.init.call(this), this.parse708captions_ = "boolean" != typeof e10.parse708captions || e10.parse708captions, this.captionPackets_ = [], this.ccStreams_ = [new Ne2(0, 0), new Ne2(0, 1), new Ne2(1, 0), new Ne2(1, 1)], this.parse708captions_ && (this.cc708Stream_ = new xe2({ captionServices: e10.captionServices })), this.reset(), this.ccStreams_.forEach(function(e11) {
      e11.on("data", this.trigger.bind(this, "data")), e11.on("partialdone", this.trigger.bind(this, "partialdone")), e11.on("done", this.trigger.bind(this, "done"));
    }, this), this.parse708captions_ && (this.cc708Stream_.on("data", this.trigger.bind(this, "data")), this.cc708Stream_.on("partialdone", this.trigger.bind(this, "partialdone")), this.cc708Stream_.on("done", this.trigger.bind(this, "done")));
  };
  Se2.prototype = new ve2(), Se2.prototype.push = function(e10) {
    var t5, i4, s6;
    if ("sei_rbsp" === e10.nalUnitType && (t5 = Te2.parseSei(e10.escapedRBSP)).payload && t5.payloadType === Te2.USER_DATA_REGISTERED_ITU_T_T35 && (i4 = Te2.parseUserData(t5))) if (e10.dts < this.latestDts_) this.ignoreNextEqualDts_ = true;
    else {
      if (e10.dts === this.latestDts_ && this.ignoreNextEqualDts_) return this.numSameDts_--, void (this.numSameDts_ || (this.ignoreNextEqualDts_ = false));
      s6 = Te2.parseCaptionPackets(e10.pts, i4), this.captionPackets_ = this.captionPackets_.concat(s6), this.latestDts_ !== e10.dts && (this.numSameDts_ = 0), this.numSameDts_++, this.latestDts_ = e10.dts;
    }
  }, Se2.prototype.flushCCStreams = function(e10) {
    this.ccStreams_.forEach(function(t5) {
      return "flush" === e10 ? t5.flush() : t5.partialFlush();
    }, this);
  }, Se2.prototype.flushStream = function(e10) {
    this.captionPackets_.length ? (this.captionPackets_.forEach(function(e11, t5) {
      e11.presortIndex = t5;
    }), this.captionPackets_.sort(function(e11, t5) {
      return e11.pts === t5.pts ? e11.presortIndex - t5.presortIndex : e11.pts - t5.pts;
    }), this.captionPackets_.forEach(function(e11) {
      e11.type < 2 ? this.dispatchCea608Packet(e11) : this.dispatchCea708Packet(e11);
    }, this), this.captionPackets_.length = 0, this.flushCCStreams(e10)) : this.flushCCStreams(e10);
  }, Se2.prototype.flush = function() {
    return this.flushStream("flush");
  }, Se2.prototype.partialFlush = function() {
    return this.flushStream("partialFlush");
  }, Se2.prototype.reset = function() {
    this.latestDts_ = null, this.ignoreNextEqualDts_ = false, this.numSameDts_ = 0, this.activeCea608Channel_ = [null, null], this.ccStreams_.forEach(function(e10) {
      e10.reset();
    });
  }, Se2.prototype.dispatchCea608Packet = function(e10) {
    this.setsTextOrXDSActive(e10) ? this.activeCea608Channel_[e10.type] = null : this.setsChannel1Active(e10) ? this.activeCea608Channel_[e10.type] = 0 : this.setsChannel2Active(e10) && (this.activeCea608Channel_[e10.type] = 1), null !== this.activeCea608Channel_[e10.type] && this.ccStreams_[(e10.type << 1) + this.activeCea608Channel_[e10.type]].push(e10);
  }, Se2.prototype.setsChannel1Active = function(e10) {
    return 4096 == (30720 & e10.ccData);
  }, Se2.prototype.setsChannel2Active = function(e10) {
    return 6144 == (30720 & e10.ccData);
  }, Se2.prototype.setsTextOrXDSActive = function(e10) {
    return 256 == (28928 & e10.ccData) || 4138 == (30974 & e10.ccData) || 6186 == (30974 & e10.ccData);
  }, Se2.prototype.dispatchCea708Packet = function(e10) {
    this.parse708captions_ && this.cc708Stream_.push(e10);
  };
  var Ee2 = { 127: 9834, 4128: 32, 4129: 160, 4133: 8230, 4138: 352, 4140: 338, 4144: 9608, 4145: 8216, 4146: 8217, 4147: 8220, 4148: 8221, 4149: 8226, 4153: 8482, 4154: 353, 4156: 339, 4157: 8480, 4159: 376, 4214: 8539, 4215: 8540, 4216: 8541, 4217: 8542, 4218: 9168, 4219: 9124, 4220: 9123, 4221: 9135, 4222: 9126, 4223: 9121, 4256: 12600 }, we2 = function(e10) {
    var t5 = Ee2[e10] || e10;
    return 4096 & e10 && e10 === t5 ? "" : String.fromCharCode(t5);
  }, Ce2 = function(e10) {
    return 32 <= e10 && e10 <= 127 || 160 <= e10 && e10 <= 255;
  }, ke2 = function(e10) {
    this.windowNum = e10, this.reset();
  };
  ke2.prototype.reset = function() {
    this.clearText(), this.pendingNewLine = false, this.winAttr = {}, this.penAttr = {}, this.penLoc = {}, this.penColor = {}, this.visible = 0, this.rowLock = 0, this.columnLock = 0, this.priority = 0, this.relativePositioning = 0, this.anchorVertical = 0, this.anchorHorizontal = 0, this.anchorPoint = 0, this.rowCount = 1, this.virtualRowCount = this.rowCount + 1, this.columnCount = 41, this.windowStyle = 0, this.penStyle = 0;
  }, ke2.prototype.getText = function() {
    return this.rows.join("\n");
  }, ke2.prototype.clearText = function() {
    this.rows = [""], this.rowIdx = 0;
  }, ke2.prototype.newLine = function(e10) {
    for (this.rows.length >= this.virtualRowCount && "function" == typeof this.beforeRowOverflow && this.beforeRowOverflow(e10), this.rows.length > 0 && (this.rows.push(""), this.rowIdx++); this.rows.length > this.virtualRowCount; ) this.rows.shift(), this.rowIdx--;
  }, ke2.prototype.isEmpty = function() {
    return 0 === this.rows.length || 1 === this.rows.length && "" === this.rows[0];
  }, ke2.prototype.addText = function(e10) {
    this.rows[this.rowIdx] += e10;
  }, ke2.prototype.backspace = function() {
    if (!this.isEmpty()) {
      var e10 = this.rows[this.rowIdx];
      this.rows[this.rowIdx] = e10.substr(0, e10.length - 1);
    }
  };
  var Ie2 = function(e10, t5, i4) {
    this.serviceNum = e10, this.text = "", this.currentWindow = new ke2(-1), this.windows = [], this.stream = i4, "string" == typeof t5 && this.createTextDecoder(t5);
  };
  Ie2.prototype.init = function(e10, t5) {
    this.startPts = e10;
    for (var i4 = 0; i4 < 8; i4++) this.windows[i4] = new ke2(i4), "function" == typeof t5 && (this.windows[i4].beforeRowOverflow = t5);
  }, Ie2.prototype.setCurrentWindow = function(e10) {
    this.currentWindow = this.windows[e10];
  }, Ie2.prototype.createTextDecoder = function(e10) {
    if ("undefined" == typeof TextDecoder) this.stream.trigger("log", { level: "warn", message: "The `encoding` option is unsupported without TextDecoder support" });
    else try {
      this.textDecoder_ = new TextDecoder(e10);
    } catch (t5) {
      this.stream.trigger("log", { level: "warn", message: "TextDecoder could not be created with " + e10 + " encoding. " + t5 });
    }
  };
  var xe2 = function(e10) {
    e10 = e10 || {}, xe2.prototype.init.call(this);
    var t5, i4 = this, s6 = e10.captionServices || {}, n7 = {};
    Object.keys(s6).forEach((e11) => {
      t5 = s6[e11], /^SERVICE/.test(e11) && (n7[e11] = t5.encoding);
    }), this.serviceEncodings = n7, this.current708Packet = null, this.services = {}, this.push = function(e11) {
      3 === e11.type ? (i4.new708Packet(), i4.add708Bytes(e11)) : (null === i4.current708Packet && i4.new708Packet(), i4.add708Bytes(e11));
    };
  };
  xe2.prototype = new ve2(), xe2.prototype.new708Packet = function() {
    null !== this.current708Packet && this.push708Packet(), this.current708Packet = { data: [], ptsVals: [] };
  }, xe2.prototype.add708Bytes = function(e10) {
    var t5 = e10.ccData, i4 = t5 >>> 8, s6 = 255 & t5;
    this.current708Packet.ptsVals.push(e10.pts), this.current708Packet.data.push(i4), this.current708Packet.data.push(s6);
  }, xe2.prototype.push708Packet = function() {
    var e10 = this.current708Packet, t5 = e10.data, i4 = null, s6 = null, n7 = 0, r6 = t5[n7++];
    for (e10.seq = r6 >> 6, e10.sizeCode = 63 & r6; n7 < t5.length; n7++) s6 = 31 & (r6 = t5[n7++]), 7 === (i4 = r6 >> 5) && s6 > 0 && (i4 = r6 = t5[n7++]), this.pushServiceBlock(i4, n7, s6), s6 > 0 && (n7 += s6 - 1);
  }, xe2.prototype.pushServiceBlock = function(e10, t5, i4) {
    var s6, n7 = t5, r6 = this.current708Packet.data, a7 = this.services[e10];
    for (a7 || (a7 = this.initService(e10, n7)); n7 < t5 + i4 && n7 < r6.length; n7++) s6 = r6[n7], Ce2(s6) ? n7 = this.handleText(n7, a7) : 24 === s6 ? n7 = this.multiByteCharacter(n7, a7) : 16 === s6 ? n7 = this.extendedCommands(n7, a7) : 128 <= s6 && s6 <= 135 ? n7 = this.setCurrentWindow(n7, a7) : 152 <= s6 && s6 <= 159 ? n7 = this.defineWindow(n7, a7) : 136 === s6 ? n7 = this.clearWindows(n7, a7) : 140 === s6 ? n7 = this.deleteWindows(n7, a7) : 137 === s6 ? n7 = this.displayWindows(n7, a7) : 138 === s6 ? n7 = this.hideWindows(n7, a7) : 139 === s6 ? n7 = this.toggleWindows(n7, a7) : 151 === s6 ? n7 = this.setWindowAttributes(n7, a7) : 144 === s6 ? n7 = this.setPenAttributes(n7, a7) : 145 === s6 ? n7 = this.setPenColor(n7, a7) : 146 === s6 ? n7 = this.setPenLocation(n7, a7) : 143 === s6 ? a7 = this.reset(n7, a7) : 8 === s6 ? a7.currentWindow.backspace() : 12 === s6 ? a7.currentWindow.clearText() : 13 === s6 ? a7.currentWindow.pendingNewLine = true : 14 === s6 ? a7.currentWindow.clearText() : 141 === s6 && n7++;
  }, xe2.prototype.extendedCommands = function(e10, t5) {
    var i4 = this.current708Packet.data[++e10];
    return Ce2(i4) && (e10 = this.handleText(e10, t5, { isExtended: true })), e10;
  }, xe2.prototype.getPts = function(e10) {
    return this.current708Packet.ptsVals[Math.floor(e10 / 2)];
  }, xe2.prototype.initService = function(e10, t5) {
    var i4, s6, n7 = this;
    return (i4 = "SERVICE" + e10) in this.serviceEncodings && (s6 = this.serviceEncodings[i4]), this.services[e10] = new Ie2(e10, s6, n7), this.services[e10].init(this.getPts(t5), function(t6) {
      n7.flushDisplayed(t6, n7.services[e10]);
    }), this.services[e10];
  }, xe2.prototype.handleText = function(e10, t5, i4) {
    var s6, n7, r6 = i4 && i4.isExtended, a7 = i4 && i4.isMultiByte, o5 = this.current708Packet.data, l7 = r6 ? 4096 : 0, h3 = o5[e10], u5 = o5[e10 + 1], d6 = t5.currentWindow;
    function c4(e11) {
      return e11.map((e12) => ("0" + (255 & e12).toString(16)).slice(-2)).join("");
    }
    if (a7 ? (n7 = [h3, u5], e10++) : n7 = [h3], t5.textDecoder_ && !r6) s6 = t5.textDecoder_.decode(new Uint8Array(n7));
    else if (a7) {
      const e11 = c4(n7);
      s6 = String.fromCharCode(parseInt(e11, 16));
    } else s6 = we2(l7 | h3);
    return d6.pendingNewLine && !d6.isEmpty() && d6.newLine(this.getPts(e10)), d6.pendingNewLine = false, d6.addText(s6), e10;
  }, xe2.prototype.multiByteCharacter = function(e10, t5) {
    var i4 = this.current708Packet.data, s6 = i4[e10 + 1], n7 = i4[e10 + 2];
    return Ce2(s6) && Ce2(n7) && (e10 = this.handleText(++e10, t5, { isMultiByte: true })), e10;
  }, xe2.prototype.setCurrentWindow = function(e10, t5) {
    var i4 = 7 & this.current708Packet.data[e10];
    return t5.setCurrentWindow(i4), e10;
  }, xe2.prototype.defineWindow = function(e10, t5) {
    var i4 = this.current708Packet.data, s6 = i4[e10], n7 = 7 & s6;
    t5.setCurrentWindow(n7);
    var r6 = t5.currentWindow;
    return s6 = i4[++e10], r6.visible = (32 & s6) >> 5, r6.rowLock = (16 & s6) >> 4, r6.columnLock = (8 & s6) >> 3, r6.priority = 7 & s6, s6 = i4[++e10], r6.relativePositioning = (128 & s6) >> 7, r6.anchorVertical = 127 & s6, s6 = i4[++e10], r6.anchorHorizontal = s6, s6 = i4[++e10], r6.anchorPoint = (240 & s6) >> 4, r6.rowCount = 15 & s6, s6 = i4[++e10], r6.columnCount = 63 & s6, s6 = i4[++e10], r6.windowStyle = (56 & s6) >> 3, r6.penStyle = 7 & s6, r6.virtualRowCount = r6.rowCount + 1, e10;
  }, xe2.prototype.setWindowAttributes = function(e10, t5) {
    var i4 = this.current708Packet.data, s6 = i4[e10], n7 = t5.currentWindow.winAttr;
    return s6 = i4[++e10], n7.fillOpacity = (192 & s6) >> 6, n7.fillRed = (48 & s6) >> 4, n7.fillGreen = (12 & s6) >> 2, n7.fillBlue = 3 & s6, s6 = i4[++e10], n7.borderType = (192 & s6) >> 6, n7.borderRed = (48 & s6) >> 4, n7.borderGreen = (12 & s6) >> 2, n7.borderBlue = 3 & s6, s6 = i4[++e10], n7.borderType += (128 & s6) >> 5, n7.wordWrap = (64 & s6) >> 6, n7.printDirection = (48 & s6) >> 4, n7.scrollDirection = (12 & s6) >> 2, n7.justify = 3 & s6, s6 = i4[++e10], n7.effectSpeed = (240 & s6) >> 4, n7.effectDirection = (12 & s6) >> 2, n7.displayEffect = 3 & s6, e10;
  }, xe2.prototype.flushDisplayed = function(e10, t5) {
    for (var i4 = [], s6 = 0; s6 < 8; s6++) t5.windows[s6].visible && !t5.windows[s6].isEmpty() && i4.push(t5.windows[s6].getText());
    t5.endPts = e10, t5.text = i4.join("\n\n"), this.pushCaption(t5), t5.startPts = e10;
  }, xe2.prototype.pushCaption = function(e10) {
    "" !== e10.text && (this.trigger("data", { startPts: e10.startPts, endPts: e10.endPts, text: e10.text, stream: "cc708_" + e10.serviceNum }), e10.text = "", e10.startPts = e10.endPts);
  }, xe2.prototype.displayWindows = function(e10, t5) {
    var i4 = this.current708Packet.data[++e10], s6 = this.getPts(e10);
    this.flushDisplayed(s6, t5);
    for (var n7 = 0; n7 < 8; n7++) i4 & 1 << n7 && (t5.windows[n7].visible = 1);
    return e10;
  }, xe2.prototype.hideWindows = function(e10, t5) {
    var i4 = this.current708Packet.data[++e10], s6 = this.getPts(e10);
    this.flushDisplayed(s6, t5);
    for (var n7 = 0; n7 < 8; n7++) i4 & 1 << n7 && (t5.windows[n7].visible = 0);
    return e10;
  }, xe2.prototype.toggleWindows = function(e10, t5) {
    var i4 = this.current708Packet.data[++e10], s6 = this.getPts(e10);
    this.flushDisplayed(s6, t5);
    for (var n7 = 0; n7 < 8; n7++) i4 & 1 << n7 && (t5.windows[n7].visible ^= 1);
    return e10;
  }, xe2.prototype.clearWindows = function(e10, t5) {
    var i4 = this.current708Packet.data[++e10], s6 = this.getPts(e10);
    this.flushDisplayed(s6, t5);
    for (var n7 = 0; n7 < 8; n7++) i4 & 1 << n7 && t5.windows[n7].clearText();
    return e10;
  }, xe2.prototype.deleteWindows = function(e10, t5) {
    var i4 = this.current708Packet.data[++e10], s6 = this.getPts(e10);
    this.flushDisplayed(s6, t5);
    for (var n7 = 0; n7 < 8; n7++) i4 & 1 << n7 && t5.windows[n7].reset();
    return e10;
  }, xe2.prototype.setPenAttributes = function(e10, t5) {
    var i4 = this.current708Packet.data, s6 = i4[e10], n7 = t5.currentWindow.penAttr;
    return s6 = i4[++e10], n7.textTag = (240 & s6) >> 4, n7.offset = (12 & s6) >> 2, n7.penSize = 3 & s6, s6 = i4[++e10], n7.italics = (128 & s6) >> 7, n7.underline = (64 & s6) >> 6, n7.edgeType = (56 & s6) >> 3, n7.fontStyle = 7 & s6, e10;
  }, xe2.prototype.setPenColor = function(e10, t5) {
    var i4 = this.current708Packet.data, s6 = i4[e10], n7 = t5.currentWindow.penColor;
    return s6 = i4[++e10], n7.fgOpacity = (192 & s6) >> 6, n7.fgRed = (48 & s6) >> 4, n7.fgGreen = (12 & s6) >> 2, n7.fgBlue = 3 & s6, s6 = i4[++e10], n7.bgOpacity = (192 & s6) >> 6, n7.bgRed = (48 & s6) >> 4, n7.bgGreen = (12 & s6) >> 2, n7.bgBlue = 3 & s6, s6 = i4[++e10], n7.edgeRed = (48 & s6) >> 4, n7.edgeGreen = (12 & s6) >> 2, n7.edgeBlue = 3 & s6, e10;
  }, xe2.prototype.setPenLocation = function(e10, t5) {
    var i4 = this.current708Packet.data, s6 = i4[e10], n7 = t5.currentWindow.penLoc;
    return t5.currentWindow.pendingNewLine = true, s6 = i4[++e10], n7.row = 15 & s6, s6 = i4[++e10], n7.column = 63 & s6, e10;
  }, xe2.prototype.reset = function(e10, t5) {
    var i4 = this.getPts(e10);
    return this.flushDisplayed(i4, t5), this.initService(t5.serviceNum, e10);
  };
  var Ae2 = { 42: 225, 92: 233, 94: 237, 95: 243, 96: 250, 123: 231, 124: 247, 125: 209, 126: 241, 127: 9608, 304: 174, 305: 176, 306: 189, 307: 191, 308: 8482, 309: 162, 310: 163, 311: 9834, 312: 224, 313: 160, 314: 232, 315: 226, 316: 234, 317: 238, 318: 244, 319: 251, 544: 193, 545: 201, 546: 211, 547: 218, 548: 220, 549: 252, 550: 8216, 551: 161, 552: 42, 553: 39, 554: 8212, 555: 169, 556: 8480, 557: 8226, 558: 8220, 559: 8221, 560: 192, 561: 194, 562: 199, 563: 200, 564: 202, 565: 203, 566: 235, 567: 206, 568: 207, 569: 239, 570: 212, 571: 217, 572: 249, 573: 219, 574: 171, 575: 187, 800: 195, 801: 227, 802: 205, 803: 204, 804: 236, 805: 210, 806: 242, 807: 213, 808: 245, 809: 123, 810: 125, 811: 92, 812: 94, 813: 95, 814: 124, 815: 126, 816: 196, 817: 228, 818: 214, 819: 246, 820: 223, 821: 165, 822: 164, 823: 9474, 824: 197, 825: 229, 826: 216, 827: 248, 828: 9484, 829: 9488, 830: 9492, 831: 9496 }, De2 = function(e10) {
    return null === e10 ? "" : (e10 = Ae2[e10] || e10, String.fromCharCode(e10));
  }, Pe2 = 14, Le2 = [4352, 4384, 4608, 4640, 5376, 5408, 5632, 5664, 5888, 5920, 4096, 4864, 4896, 5120, 5152], Oe2 = function() {
    for (var e10 = [], t5 = Pe2 + 1; t5--; ) e10.push({ text: "", indent: 0, offset: 0 });
    return e10;
  }, Ne2 = function(e10, t5) {
    Ne2.prototype.init.call(this), this.field_ = e10 || 0, this.dataChannel_ = t5 || 0, this.name_ = "CC" + (1 + (this.field_ << 1 | this.dataChannel_)), this.setConstants(), this.reset(), this.push = function(e11) {
      var t6, i4, s6, n7, r6;
      if ((t6 = 32639 & e11.ccData) !== this.lastControlCode_) {
        if (4096 == (61440 & t6) ? this.lastControlCode_ = t6 : t6 !== this.PADDING_ && (this.lastControlCode_ = null), s6 = t6 >>> 8, n7 = 255 & t6, t6 !== this.PADDING_) if (t6 === this.RESUME_CAPTION_LOADING_) this.mode_ = "popOn";
        else if (t6 === this.END_OF_CAPTION_) this.mode_ = "popOn", this.clearFormatting(e11.pts), this.flushDisplayed(e11.pts), i4 = this.displayed_, this.displayed_ = this.nonDisplayed_, this.nonDisplayed_ = i4, this.startPts_ = e11.pts;
        else if (t6 === this.ROLL_UP_2_ROWS_) this.rollUpRows_ = 2, this.setRollUp(e11.pts);
        else if (t6 === this.ROLL_UP_3_ROWS_) this.rollUpRows_ = 3, this.setRollUp(e11.pts);
        else if (t6 === this.ROLL_UP_4_ROWS_) this.rollUpRows_ = 4, this.setRollUp(e11.pts);
        else if (t6 === this.CARRIAGE_RETURN_) this.clearFormatting(e11.pts), this.flushDisplayed(e11.pts), this.shiftRowsUp_(), this.startPts_ = e11.pts;
        else if (t6 === this.BACKSPACE_) "popOn" === this.mode_ ? this.nonDisplayed_[this.row_].text = this.nonDisplayed_[this.row_].text.slice(0, -1) : this.displayed_[this.row_].text = this.displayed_[this.row_].text.slice(0, -1);
        else if (t6 === this.ERASE_DISPLAYED_MEMORY_) this.flushDisplayed(e11.pts), this.displayed_ = Oe2();
        else if (t6 === this.ERASE_NON_DISPLAYED_MEMORY_) this.nonDisplayed_ = Oe2();
        else if (t6 === this.RESUME_DIRECT_CAPTIONING_) "paintOn" !== this.mode_ && (this.flushDisplayed(e11.pts), this.displayed_ = Oe2()), this.mode_ = "paintOn", this.startPts_ = e11.pts;
        else if (this.isSpecialCharacter(s6, n7)) r6 = De2((s6 = (3 & s6) << 8) | n7), this[this.mode_](e11.pts, r6), this.column_++;
        else if (this.isExtCharacter(s6, n7)) "popOn" === this.mode_ ? this.nonDisplayed_[this.row_].text = this.nonDisplayed_[this.row_].text.slice(0, -1) : this.displayed_[this.row_].text = this.displayed_[this.row_].text.slice(0, -1), r6 = De2((s6 = (3 & s6) << 8) | n7), this[this.mode_](e11.pts, r6), this.column_++;
        else if (this.isMidRowCode(s6, n7)) this.clearFormatting(e11.pts), this[this.mode_](e11.pts, " "), this.column_++, 14 & ~n7 || this.addFormatting(e11.pts, ["i"]), 1 & ~n7 || this.addFormatting(e11.pts, ["u"]);
        else if (this.isOffsetControlCode(s6, n7)) {
          const e12 = 3 & n7;
          this.nonDisplayed_[this.row_].offset = e12, this.column_ += e12;
        } else if (this.isPAC(s6, n7)) {
          var a7 = Le2.indexOf(7968 & t6);
          if ("rollUp" === this.mode_ && (a7 - this.rollUpRows_ + 1 < 0 && (a7 = this.rollUpRows_ - 1), this.setRollUp(e11.pts, a7)), a7 !== this.row_ && a7 >= 0 && a7 <= 14 && (this.clearFormatting(e11.pts), this.row_ = a7), 1 & n7 && -1 === this.formatting_.indexOf("u") && this.addFormatting(e11.pts, ["u"]), !(16 & ~t6)) {
            const e12 = (14 & t6) >> 1;
            this.column_ = 4 * e12, this.nonDisplayed_[this.row_].indent += e12;
          }
          this.isColorPAC(n7) && (14 & ~n7 || this.addFormatting(e11.pts, ["i"]));
        } else this.isNormalChar(s6) && (0 === n7 && (n7 = null), r6 = De2(s6), r6 += De2(n7), this[this.mode_](e11.pts, r6), this.column_ += r6.length);
      } else this.lastControlCode_ = null;
    };
  };
  Ne2.prototype = new ve2(), Ne2.prototype.flushDisplayed = function(e10) {
    const t5 = (e11) => {
      this.trigger("log", { level: "warn", message: "Skipping a malformed 608 caption at index " + e11 + "." });
    }, i4 = [];
    this.displayed_.forEach((e11, s6) => {
      if (e11 && e11.text && e11.text.length) {
        try {
          e11.text = e11.text.trim();
        } catch (n7) {
          t5(s6);
        }
        e11.text.length && i4.push({ text: e11.text, line: s6 + 1, position: 10 + Math.min(70, 10 * e11.indent) + 2.5 * e11.offset });
      } else null == e11 && t5(s6);
    }), i4.length && this.trigger("data", { startPts: this.startPts_, endPts: e10, content: i4, stream: this.name_ });
  }, Ne2.prototype.reset = function() {
    this.mode_ = "popOn", this.topRow_ = 0, this.startPts_ = 0, this.displayed_ = Oe2(), this.nonDisplayed_ = Oe2(), this.lastControlCode_ = null, this.column_ = 0, this.row_ = Pe2, this.rollUpRows_ = 2, this.formatting_ = [];
  }, Ne2.prototype.setConstants = function() {
    0 === this.dataChannel_ ? (this.BASE_ = 16, this.EXT_ = 17, this.CONTROL_ = (20 | this.field_) << 8, this.OFFSET_ = 23) : 1 === this.dataChannel_ && (this.BASE_ = 24, this.EXT_ = 25, this.CONTROL_ = (28 | this.field_) << 8, this.OFFSET_ = 31), this.PADDING_ = 0, this.RESUME_CAPTION_LOADING_ = 32 | this.CONTROL_, this.END_OF_CAPTION_ = 47 | this.CONTROL_, this.ROLL_UP_2_ROWS_ = 37 | this.CONTROL_, this.ROLL_UP_3_ROWS_ = 38 | this.CONTROL_, this.ROLL_UP_4_ROWS_ = 39 | this.CONTROL_, this.CARRIAGE_RETURN_ = 45 | this.CONTROL_, this.RESUME_DIRECT_CAPTIONING_ = 41 | this.CONTROL_, this.BACKSPACE_ = 33 | this.CONTROL_, this.ERASE_DISPLAYED_MEMORY_ = 44 | this.CONTROL_, this.ERASE_NON_DISPLAYED_MEMORY_ = 46 | this.CONTROL_;
  }, Ne2.prototype.isSpecialCharacter = function(e10, t5) {
    return e10 === this.EXT_ && t5 >= 48 && t5 <= 63;
  }, Ne2.prototype.isExtCharacter = function(e10, t5) {
    return (e10 === this.EXT_ + 1 || e10 === this.EXT_ + 2) && t5 >= 32 && t5 <= 63;
  }, Ne2.prototype.isMidRowCode = function(e10, t5) {
    return e10 === this.EXT_ && t5 >= 32 && t5 <= 47;
  }, Ne2.prototype.isOffsetControlCode = function(e10, t5) {
    return e10 === this.OFFSET_ && t5 >= 33 && t5 <= 35;
  }, Ne2.prototype.isPAC = function(e10, t5) {
    return e10 >= this.BASE_ && e10 < this.BASE_ + 8 && t5 >= 64 && t5 <= 127;
  }, Ne2.prototype.isColorPAC = function(e10) {
    return e10 >= 64 && e10 <= 79 || e10 >= 96 && e10 <= 127;
  }, Ne2.prototype.isNormalChar = function(e10) {
    return e10 >= 32 && e10 <= 127;
  }, Ne2.prototype.setRollUp = function(e10, t5) {
    if ("rollUp" !== this.mode_ && (this.row_ = Pe2, this.mode_ = "rollUp", this.flushDisplayed(e10), this.nonDisplayed_ = Oe2(), this.displayed_ = Oe2()), void 0 !== t5 && t5 !== this.row_) for (var i4 = 0; i4 < this.rollUpRows_; i4++) this.displayed_[t5 - i4] = this.displayed_[this.row_ - i4], this.displayed_[this.row_ - i4] = { text: "", indent: 0, offset: 0 };
    void 0 === t5 && (t5 = this.row_), this.topRow_ = t5 - this.rollUpRows_ + 1;
  }, Ne2.prototype.addFormatting = function(e10, t5) {
    this.formatting_ = this.formatting_.concat(t5);
    var i4 = t5.reduce(function(e11, t6) {
      return e11 + "<" + t6 + ">";
    }, "");
    this[this.mode_](e10, i4);
  }, Ne2.prototype.clearFormatting = function(e10) {
    if (this.formatting_.length) {
      var t5 = this.formatting_.reverse().reduce(function(e11, t6) {
        return e11 + "</" + t6 + ">";
      }, "");
      this.formatting_ = [], this[this.mode_](e10, t5);
    }
  }, Ne2.prototype.popOn = function(e10, t5) {
    var i4 = this.nonDisplayed_[this.row_].text;
    i4 += t5, this.nonDisplayed_[this.row_].text = i4;
  }, Ne2.prototype.rollUp = function(e10, t5) {
    var i4 = this.displayed_[this.row_].text;
    i4 += t5, this.displayed_[this.row_].text = i4;
  }, Ne2.prototype.shiftRowsUp_ = function() {
    var e10;
    for (e10 = 0; e10 < this.topRow_; e10++) this.displayed_[e10] = { text: "", indent: 0, offset: 0 };
    for (e10 = this.row_ + 1; e10 < Pe2 + 1; e10++) this.displayed_[e10] = { text: "", indent: 0, offset: 0 };
    for (e10 = this.topRow_; e10 < this.row_; e10++) this.displayed_[e10] = this.displayed_[e10 + 1];
    this.displayed_[this.row_] = { text: "", indent: 0, offset: 0 };
  }, Ne2.prototype.paintOn = function(e10, t5) {
    var i4 = this.displayed_[this.row_].text;
    i4 += t5, this.displayed_[this.row_].text = i4;
  };
  var Re2 = { CaptionStream: Se2, Cea608Stream: Ne2, Cea708Stream: xe2 }, Me2 = { H264_STREAM_TYPE: 27, ADTS_STREAM_TYPE: 15, METADATA_STREAM_TYPE: 21 }, Ue2 = $2, Be2 = 8589934592, Fe2 = 4294967296, qe2 = "shared", je2 = function(e10, t5) {
    var i4 = 1;
    for (e10 > t5 && (i4 = -1); Math.abs(t5 - e10) > Fe2; ) e10 += i4 * Be2;
    return e10;
  }, $e2 = function(e10) {
    var t5, i4;
    $e2.prototype.init.call(this), this.type_ = e10 || qe2, this.push = function(e11) {
      "metadata" !== e11.type ? this.type_ !== qe2 && e11.type !== this.type_ || (void 0 === i4 && (i4 = e11.dts), e11.dts = je2(e11.dts, i4), e11.pts = je2(e11.pts, i4), t5 = e11.dts, this.trigger("data", e11)) : this.trigger("data", e11);
    }, this.flush = function() {
      i4 = t5, this.trigger("done");
    }, this.endTimeline = function() {
      this.flush(), this.trigger("endedtimeline");
    }, this.discontinuity = function() {
      i4 = void 0, t5 = void 0;
    }, this.reset = function() {
      this.discontinuity(), this.trigger("reset");
    };
  };
  $e2.prototype = new Ue2();
  var He2, Ve2 = { TimestampRolloverStream: $e2, handleRollover: je2 }, ze2 = (e10, t5, i4) => {
    if (!e10) return -1;
    for (var s6 = i4; s6 < e10.length; s6++) if (e10[s6] === t5) return s6;
    return -1;
  }, We2 = { typedArrayIndexOf: ze2 }.typedArrayIndexOf, Ge2 = { Iso88591: 0, Utf16: 1, Utf16be: 2, Utf8: 3 }, Xe2 = function(e10, t5, i4) {
    var s6, n7 = "";
    for (s6 = t5; s6 < i4; s6++) n7 += "%" + ("00" + e10[s6].toString(16)).slice(-2);
    return n7;
  }, Ke2 = function(e10, t5, i4) {
    return decodeURIComponent(Xe2(e10, t5, i4));
  }, Ye2 = function(e10, t5, i4) {
    return unescape(Xe2(e10, t5, i4));
  }, Qe2 = function(e10) {
    return e10[0] << 21 | e10[1] << 14 | e10[2] << 7 | e10[3];
  }, Je2 = { APIC: function(e10) {
    var t5, i4, s6 = 1, n7 = "-->";
    e10.data[0] === Ge2.Utf8 && ((t5 = We2(e10.data, 0, s6)) < 0 || (e10.mimeType = Ye2(e10.data, s6, t5), s6 = t5 + 1, e10.pictureType = e10.data[s6], s6++, (i4 = We2(e10.data, 0, s6)) < 0 || (e10.description = Ke2(e10.data, s6, i4), s6 = i4 + 1, e10.mimeType === n7 ? e10.url = Ye2(e10.data, s6, e10.data.length) : e10.pictureData = e10.data.subarray(s6, e10.data.length))));
  }, "T*": function(e10) {
    e10.data[0] === Ge2.Utf8 && (e10.value = Ke2(e10.data, 1, e10.data.length).replace(/\0*$/, ""), e10.values = e10.value.split("\0"));
  }, TXXX: function(e10) {
    var t5;
    e10.data[0] === Ge2.Utf8 && -1 !== (t5 = We2(e10.data, 0, 1)) && (e10.description = Ke2(e10.data, 1, t5), e10.value = Ke2(e10.data, t5 + 1, e10.data.length).replace(/\0*$/, ""), e10.data = e10.value);
  }, "W*": function(e10) {
    e10.url = Ye2(e10.data, 0, e10.data.length).replace(/\0.*$/, "");
  }, WXXX: function(e10) {
    var t5;
    e10.data[0] === Ge2.Utf8 && -1 !== (t5 = We2(e10.data, 0, 1)) && (e10.description = Ke2(e10.data, 1, t5), e10.url = Ye2(e10.data, t5 + 1, e10.data.length).replace(/\0.*$/, ""));
  }, PRIV: function(e10) {
    var t5;
    for (t5 = 0; t5 < e10.data.length; t5++) if (0 === e10.data[t5]) {
      e10.owner = Ye2(e10.data, 0, t5);
      break;
    }
    e10.privateData = e10.data.subarray(t5 + 1), e10.data = e10.privateData;
  } }, Ze2 = { parseId3Frames: function(e10) {
    var t5, i4 = 10, s6 = 0, n7 = [];
    if (!(e10.length < 10 || e10[0] !== "I".charCodeAt(0) || e10[1] !== "D".charCodeAt(0) || e10[2] !== "3".charCodeAt(0))) {
      s6 = Qe2(e10.subarray(6, 10)), s6 += 10, 64 & e10[5] && (i4 += 4, i4 += Qe2(e10.subarray(10, 14)), s6 -= Qe2(e10.subarray(16, 20)));
      do {
        if ((t5 = Qe2(e10.subarray(i4 + 4, i4 + 8))) < 1) break;
        var r6 = { id: String.fromCharCode(e10[i4], e10[i4 + 1], e10[i4 + 2], e10[i4 + 3]), data: e10.subarray(i4 + 10, i4 + t5 + 10) };
        r6.key = r6.id, Je2[r6.id] ? Je2[r6.id](r6) : "T" === r6.id[0] ? Je2["T*"](r6) : "W" === r6.id[0] && Je2["W*"](r6), n7.push(r6), i4 += 10, i4 += t5;
      } while (i4 < s6);
      return n7;
    }
  }, parseSyncSafeInteger: Qe2, frameParsers: Je2 }, et2 = Me2, tt2 = Ze2;
  (He2 = function(e10) {
    var t5, i4 = { descriptor: e10 && e10.descriptor }, s6 = 0, n7 = [], r6 = 0;
    if (He2.prototype.init.call(this), this.dispatchType = et2.METADATA_STREAM_TYPE.toString(16), i4.descriptor) for (t5 = 0; t5 < i4.descriptor.length; t5++) this.dispatchType += ("00" + i4.descriptor[t5].toString(16)).slice(-2);
    this.push = function(e11) {
      var t6, i5, a7, o5, l7;
      if ("timed-metadata" === e11.type) {
        if (e11.dataAlignmentIndicator && (r6 = 0, n7.length = 0), 0 === n7.length && (e11.data.length < 10 || e11.data[0] !== "I".charCodeAt(0) || e11.data[1] !== "D".charCodeAt(0) || e11.data[2] !== "3".charCodeAt(0))) this.trigger("log", { level: "warn", message: "Skipping unrecognized metadata packet" });
        else if (n7.push(e11), r6 += e11.data.byteLength, 1 === n7.length && (s6 = tt2.parseSyncSafeInteger(e11.data.subarray(6, 10)), s6 += 10), !(r6 < s6)) {
          for (t6 = { data: new Uint8Array(s6), frames: [], pts: n7[0].pts, dts: n7[0].dts }, l7 = 0; l7 < s6; ) t6.data.set(n7[0].data.subarray(0, s6 - l7), l7), l7 += n7[0].data.byteLength, r6 -= n7[0].data.byteLength, n7.shift();
          i5 = 10, 64 & t6.data[5] && (i5 += 4, i5 += tt2.parseSyncSafeInteger(t6.data.subarray(10, 14)), s6 -= tt2.parseSyncSafeInteger(t6.data.subarray(16, 20)));
          do {
            if ((a7 = tt2.parseSyncSafeInteger(t6.data.subarray(i5 + 4, i5 + 8))) < 1) {
              this.trigger("log", { level: "warn", message: "Malformed ID3 frame encountered. Skipping remaining metadata parsing." });
              break;
            }
            if ((o5 = { id: String.fromCharCode(t6.data[i5], t6.data[i5 + 1], t6.data[i5 + 2], t6.data[i5 + 3]), data: t6.data.subarray(i5 + 10, i5 + a7 + 10) }).key = o5.id, tt2.frameParsers[o5.id] ? tt2.frameParsers[o5.id](o5) : "T" === o5.id[0] ? tt2.frameParsers["T*"](o5) : "W" === o5.id[0] && tt2.frameParsers["W*"](o5), "com.apple.streaming.transportStreamTimestamp" === o5.owner) {
              var h3 = o5.data, u5 = (1 & h3[3]) << 30 | h3[4] << 22 | h3[5] << 14 | h3[6] << 6 | h3[7] >>> 2;
              u5 *= 4, u5 += 3 & h3[7], o5.timeStamp = u5, void 0 === t6.pts && void 0 === t6.dts && (t6.pts = o5.timeStamp, t6.dts = o5.timeStamp), this.trigger("timestamp", o5);
            }
            t6.frames.push(o5), i5 += 10, i5 += a7;
          } while (i5 < s6);
          this.trigger("data", t6);
        }
      }
    };
  }).prototype = new $2();
  var it2, st2, nt2, rt2 = He2, at2 = $2, ot2 = Re2, lt2 = Me2, ht2 = Ve2.TimestampRolloverStream, ut2 = 188, dt2 = 71;
  (it2 = function() {
    var e10 = new Uint8Array(ut2), t5 = 0;
    it2.prototype.init.call(this), this.push = function(i4) {
      var s6, n7 = 0, r6 = ut2;
      for (t5 ? ((s6 = new Uint8Array(i4.byteLength + t5)).set(e10.subarray(0, t5)), s6.set(i4, t5), t5 = 0) : s6 = i4; r6 < s6.byteLength; ) s6[n7] !== dt2 || s6[r6] !== dt2 ? (n7++, r6++) : (this.trigger("data", s6.subarray(n7, r6)), n7 += ut2, r6 += ut2);
      n7 < s6.byteLength && (e10.set(s6.subarray(n7), 0), t5 = s6.byteLength - n7);
    }, this.flush = function() {
      t5 === ut2 && e10[0] === dt2 && (this.trigger("data", e10), t5 = 0), this.trigger("done");
    }, this.endTimeline = function() {
      this.flush(), this.trigger("endedtimeline");
    }, this.reset = function() {
      t5 = 0, this.trigger("reset");
    };
  }).prototype = new at2(), st2 = function() {
    var e10, t5, i4, s6;
    st2.prototype.init.call(this), s6 = this, this.packetsWaitingForPmt = [], this.programMapTable = void 0, e10 = function(e11, s7) {
      var n7 = 0;
      s7.payloadUnitStartIndicator && (n7 += e11[n7] + 1), "pat" === s7.type ? t5(e11.subarray(n7), s7) : i4(e11.subarray(n7), s7);
    }, t5 = function(e11, t6) {
      t6.section_number = e11[7], t6.last_section_number = e11[8], s6.pmtPid = (31 & e11[10]) << 8 | e11[11], t6.pmtPid = s6.pmtPid;
    }, i4 = function(e11, t6) {
      var i5, n7;
      if (1 & e11[5]) {
        for (s6.programMapTable = { video: null, audio: null, "timed-metadata": {} }, i5 = 3 + ((15 & e11[1]) << 8 | e11[2]) - 4, n7 = 12 + ((15 & e11[10]) << 8 | e11[11]); n7 < i5; ) {
          var r6 = e11[n7], a7 = (31 & e11[n7 + 1]) << 8 | e11[n7 + 2];
          r6 === lt2.H264_STREAM_TYPE && null === s6.programMapTable.video ? s6.programMapTable.video = a7 : r6 === lt2.ADTS_STREAM_TYPE && null === s6.programMapTable.audio ? s6.programMapTable.audio = a7 : r6 === lt2.METADATA_STREAM_TYPE && (s6.programMapTable["timed-metadata"][a7] = r6), n7 += 5 + ((15 & e11[n7 + 3]) << 8 | e11[n7 + 4]);
        }
        t6.programMapTable = s6.programMapTable;
      }
    }, this.push = function(t6) {
      var i5 = {}, s7 = 4;
      if (i5.payloadUnitStartIndicator = !!(64 & t6[1]), i5.pid = 31 & t6[1], i5.pid <<= 8, i5.pid |= t6[2], (48 & t6[3]) >>> 4 > 1 && (s7 += t6[s7] + 1), 0 === i5.pid) i5.type = "pat", e10(t6.subarray(s7), i5), this.trigger("data", i5);
      else if (i5.pid === this.pmtPid) for (i5.type = "pmt", e10(t6.subarray(s7), i5), this.trigger("data", i5); this.packetsWaitingForPmt.length; ) this.processPes_.apply(this, this.packetsWaitingForPmt.shift());
      else void 0 === this.programMapTable ? this.packetsWaitingForPmt.push([t6, s7, i5]) : this.processPes_(t6, s7, i5);
    }, this.processPes_ = function(e11, t6, i5) {
      i5.pid === this.programMapTable.video ? i5.streamType = lt2.H264_STREAM_TYPE : i5.pid === this.programMapTable.audio ? i5.streamType = lt2.ADTS_STREAM_TYPE : i5.streamType = this.programMapTable["timed-metadata"][i5.pid], i5.type = "pes", i5.data = e11.subarray(t6), this.trigger("data", i5);
    };
  }, st2.prototype = new at2(), st2.STREAM_TYPES = { h264: 27, adts: 15 }, nt2 = function() {
    var e10, t5 = this, i4 = false, s6 = { data: [], size: 0 }, n7 = { data: [], size: 0 }, r6 = { data: [], size: 0 }, a7 = function(e11, t6) {
      var i5;
      const s7 = e11[0] << 16 | e11[1] << 8 | e11[2];
      t6.data = new Uint8Array(), 1 === s7 && (t6.packetLength = 6 + (e11[4] << 8 | e11[5]), t6.dataAlignmentIndicator = !!(4 & e11[6]), 192 & (i5 = e11[7]) && (t6.pts = (14 & e11[9]) << 27 | (255 & e11[10]) << 20 | (254 & e11[11]) << 12 | (255 & e11[12]) << 5 | (254 & e11[13]) >>> 3, t6.pts *= 4, t6.pts += (6 & e11[13]) >>> 1, t6.dts = t6.pts, 64 & i5 && (t6.dts = (14 & e11[14]) << 27 | (255 & e11[15]) << 20 | (254 & e11[16]) << 12 | (255 & e11[17]) << 5 | (254 & e11[18]) >>> 3, t6.dts *= 4, t6.dts += (6 & e11[18]) >>> 1)), t6.data = e11.subarray(9 + e11[8]));
    }, o5 = function(e11, i5, s7) {
      var n8, r7 = new Uint8Array(e11.size), o6 = { type: i5 }, l7 = 0, h3 = 0, u5 = false;
      if (e11.data.length && !(e11.size < 9)) {
        for (o6.trackId = e11.data[0].pid, l7 = 0; l7 < e11.data.length; l7++) n8 = e11.data[l7], r7.set(n8.data, h3), h3 += n8.data.byteLength;
        a7(r7, o6), u5 = "video" === i5 || o6.packetLength <= e11.size, (s7 || u5) && (e11.size = 0, e11.data.length = 0), u5 && t5.trigger("data", o6);
      }
    };
    nt2.prototype.init.call(this), this.push = function(a8) {
      ({ pat: function() {
      }, pes: function() {
        var e11, t6;
        switch (a8.streamType) {
          case lt2.H264_STREAM_TYPE:
            e11 = s6, t6 = "video";
            break;
          case lt2.ADTS_STREAM_TYPE:
            e11 = n7, t6 = "audio";
            break;
          case lt2.METADATA_STREAM_TYPE:
            e11 = r6, t6 = "timed-metadata";
            break;
          default:
            return;
        }
        a8.payloadUnitStartIndicator && o5(e11, t6, true), e11.data.push(a8), e11.size += a8.data.byteLength;
      }, pmt: function() {
        var s7 = { type: "metadata", tracks: [] };
        null !== (e10 = a8.programMapTable).video && s7.tracks.push({ timelineStartInfo: { baseMediaDecodeTime: 0 }, id: +e10.video, codec: "avc", type: "video" }), null !== e10.audio && s7.tracks.push({ timelineStartInfo: { baseMediaDecodeTime: 0 }, id: +e10.audio, codec: "adts", type: "audio" }), i4 = true, t5.trigger("data", s7);
      } })[a8.type]();
    }, this.reset = function() {
      s6.size = 0, s6.data.length = 0, n7.size = 0, n7.data.length = 0, this.trigger("reset");
    }, this.flushStreams_ = function() {
      o5(s6, "video"), o5(n7, "audio"), o5(r6, "timed-metadata");
    }, this.flush = function() {
      if (!i4 && e10) {
        var s7 = { type: "metadata", tracks: [] };
        null !== e10.video && s7.tracks.push({ timelineStartInfo: { baseMediaDecodeTime: 0 }, id: +e10.video, codec: "avc", type: "video" }), null !== e10.audio && s7.tracks.push({ timelineStartInfo: { baseMediaDecodeTime: 0 }, id: +e10.audio, codec: "adts", type: "audio" }), t5.trigger("data", s7);
      }
      i4 = false, this.flushStreams_(), this.trigger("done");
    };
  }, nt2.prototype = new at2();
  var ct2 = { PAT_PID: 0, MP2T_PACKET_LENGTH: ut2, TransportPacketStream: it2, TransportParseStream: st2, ElementaryStream: nt2, TimestampRolloverStream: ht2, CaptionStream: ot2.CaptionStream, Cea608Stream: ot2.Cea608Stream, Cea708Stream: ot2.Cea708Stream, MetadataStream: rt2 };
  for (var pt2 in lt2) lt2.hasOwnProperty(pt2) && (ct2[pt2] = lt2[pt2]);
  var mt2, gt2 = ct2, ft2 = $2, yt2 = ue2.ONE_SECOND_IN_TS, _t2 = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
  (mt2 = function(e10) {
    var t5, i4 = 0;
    mt2.prototype.init.call(this), this.skipWarn_ = function(e11, t6) {
      this.trigger("log", { level: "warn", message: `adts skiping bytes ${e11} to ${t6} in frame ${i4} outside syncword` });
    }, this.push = function(s6) {
      var n7, r6, a7, o5, l7, h3 = 0;
      if (e10 || (i4 = 0), "audio" === s6.type) {
        var u5;
        for (t5 && t5.length ? (a7 = t5, (t5 = new Uint8Array(a7.byteLength + s6.data.byteLength)).set(a7), t5.set(s6.data, a7.byteLength)) : t5 = s6.data; h3 + 7 < t5.length; ) if (255 === t5[h3] && 240 == (246 & t5[h3 + 1])) {
          if ("number" == typeof u5 && (this.skipWarn_(u5, h3), u5 = null), r6 = 2 * (1 & ~t5[h3 + 1]), n7 = (3 & t5[h3 + 3]) << 11 | t5[h3 + 4] << 3 | (224 & t5[h3 + 5]) >> 5, l7 = (o5 = 1024 * (1 + (3 & t5[h3 + 6]))) * yt2 / _t2[(60 & t5[h3 + 2]) >>> 2], t5.byteLength - h3 < n7) break;
          this.trigger("data", { pts: s6.pts + i4 * l7, dts: s6.dts + i4 * l7, sampleCount: o5, audioobjecttype: 1 + (t5[h3 + 2] >>> 6 & 3), channelcount: (1 & t5[h3 + 2]) << 2 | (192 & t5[h3 + 3]) >>> 6, samplerate: _t2[(60 & t5[h3 + 2]) >>> 2], samplingfrequencyindex: (60 & t5[h3 + 2]) >>> 2, samplesize: 16, data: t5.subarray(h3 + 7 + r6, h3 + n7) }), i4++, h3 += n7;
        } else "number" != typeof u5 && (u5 = h3), h3++;
        "number" == typeof u5 && (this.skipWarn_(u5, h3), u5 = null), t5 = t5.subarray(h3);
      }
    }, this.flush = function() {
      i4 = 0, this.trigger("done");
    }, this.reset = function() {
      t5 = void 0, this.trigger("reset");
    }, this.endTimeline = function() {
      t5 = void 0, this.trigger("endedtimeline");
    };
  }).prototype = new ft2();
  var bt2, vt2, Tt2, St2 = mt2, Et2 = $2, wt2 = function(e10) {
    var t5 = e10.byteLength, i4 = 0, s6 = 0;
    this.length = function() {
      return 8 * t5;
    }, this.bitsAvailable = function() {
      return 8 * t5 + s6;
    }, this.loadWord = function() {
      var n7 = e10.byteLength - t5, r6 = new Uint8Array(4), a7 = Math.min(4, t5);
      if (0 === a7) throw new Error("no bytes available");
      r6.set(e10.subarray(n7, n7 + a7)), i4 = new DataView(r6.buffer).getUint32(0), s6 = 8 * a7, t5 -= a7;
    }, this.skipBits = function(e11) {
      var n7;
      s6 > e11 ? (i4 <<= e11, s6 -= e11) : (e11 -= s6, e11 -= 8 * (n7 = Math.floor(e11 / 8)), t5 -= n7, this.loadWord(), i4 <<= e11, s6 -= e11);
    }, this.readBits = function(e11) {
      var n7 = Math.min(s6, e11), r6 = i4 >>> 32 - n7;
      return (s6 -= n7) > 0 ? i4 <<= n7 : t5 > 0 && this.loadWord(), (n7 = e11 - n7) > 0 ? r6 << n7 | this.readBits(n7) : r6;
    }, this.skipLeadingZeros = function() {
      var e11;
      for (e11 = 0; e11 < s6; ++e11) if (i4 & 2147483648 >>> e11) return i4 <<= e11, s6 -= e11, e11;
      return this.loadWord(), e11 + this.skipLeadingZeros();
    }, this.skipUnsignedExpGolomb = function() {
      this.skipBits(1 + this.skipLeadingZeros());
    }, this.skipExpGolomb = function() {
      this.skipBits(1 + this.skipLeadingZeros());
    }, this.readUnsignedExpGolomb = function() {
      var e11 = this.skipLeadingZeros();
      return this.readBits(e11 + 1) - 1;
    }, this.readExpGolomb = function() {
      var e11 = this.readUnsignedExpGolomb();
      return 1 & e11 ? 1 + e11 >>> 1 : -1 * (e11 >>> 1);
    }, this.readBoolean = function() {
      return 1 === this.readBits(1);
    }, this.readUnsignedByte = function() {
      return this.readBits(8);
    }, this.loadWord();
  };
  (vt2 = function() {
    var e10, t5, i4 = 0;
    vt2.prototype.init.call(this), this.push = function(s6) {
      var n7;
      t5 ? ((n7 = new Uint8Array(t5.byteLength + s6.data.byteLength)).set(t5), n7.set(s6.data, t5.byteLength), t5 = n7) : t5 = s6.data;
      for (var r6 = t5.byteLength; i4 < r6 - 3; i4++) if (1 === t5[i4 + 2]) {
        e10 = i4 + 5;
        break;
      }
      for (; e10 < r6; ) switch (t5[e10]) {
        case 0:
          if (0 !== t5[e10 - 1]) {
            e10 += 2;
            break;
          }
          if (0 !== t5[e10 - 2]) {
            e10++;
            break;
          }
          i4 + 3 !== e10 - 2 && this.trigger("data", t5.subarray(i4 + 3, e10 - 2));
          do {
            e10++;
          } while (1 !== t5[e10] && e10 < r6);
          i4 = e10 - 2, e10 += 3;
          break;
        case 1:
          if (0 !== t5[e10 - 1] || 0 !== t5[e10 - 2]) {
            e10 += 3;
            break;
          }
          this.trigger("data", t5.subarray(i4 + 3, e10 - 2)), i4 = e10 - 2, e10 += 3;
          break;
        default:
          e10 += 3;
      }
      t5 = t5.subarray(i4), e10 -= i4, i4 = 0;
    }, this.reset = function() {
      t5 = null, i4 = 0, this.trigger("reset");
    }, this.flush = function() {
      t5 && t5.byteLength > 3 && this.trigger("data", t5.subarray(i4 + 3)), t5 = null, i4 = 0, this.trigger("done");
    }, this.endTimeline = function() {
      this.flush(), this.trigger("endedtimeline");
    };
  }).prototype = new Et2(), Tt2 = { 100: true, 110: true, 122: true, 244: true, 44: true, 83: true, 86: true, 118: true, 128: true, 138: true, 139: true, 134: true }, bt2 = function() {
    var e10, t5, i4, s6, n7, r6, a7, o5 = new vt2();
    bt2.prototype.init.call(this), e10 = this, this.push = function(e11) {
      "video" === e11.type && (t5 = e11.trackId, i4 = e11.pts, s6 = e11.dts, o5.push(e11));
    }, o5.on("data", function(a8) {
      var o6 = { trackId: t5, pts: i4, dts: s6, data: a8, nalUnitTypeCode: 31 & a8[0] };
      switch (o6.nalUnitTypeCode) {
        case 5:
          o6.nalUnitType = "slice_layer_without_partitioning_rbsp_idr";
          break;
        case 6:
          o6.nalUnitType = "sei_rbsp", o6.escapedRBSP = n7(a8.subarray(1));
          break;
        case 7:
          o6.nalUnitType = "seq_parameter_set_rbsp", o6.escapedRBSP = n7(a8.subarray(1)), o6.config = r6(o6.escapedRBSP);
          break;
        case 8:
          o6.nalUnitType = "pic_parameter_set_rbsp";
          break;
        case 9:
          o6.nalUnitType = "access_unit_delimiter_rbsp";
      }
      e10.trigger("data", o6);
    }), o5.on("done", function() {
      e10.trigger("done");
    }), o5.on("partialdone", function() {
      e10.trigger("partialdone");
    }), o5.on("reset", function() {
      e10.trigger("reset");
    }), o5.on("endedtimeline", function() {
      e10.trigger("endedtimeline");
    }), this.flush = function() {
      o5.flush();
    }, this.partialFlush = function() {
      o5.partialFlush();
    }, this.reset = function() {
      o5.reset();
    }, this.endTimeline = function() {
      o5.endTimeline();
    }, a7 = function(e11, t6) {
      var i5, s7 = 8, n8 = 8;
      for (i5 = 0; i5 < e11; i5++) 0 !== n8 && (n8 = (s7 + t6.readExpGolomb() + 256) % 256), s7 = 0 === n8 ? s7 : n8;
    }, n7 = function(e11) {
      for (var t6, i5, s7 = e11.byteLength, n8 = [], r7 = 1; r7 < s7 - 2; ) 0 === e11[r7] && 0 === e11[r7 + 1] && 3 === e11[r7 + 2] ? (n8.push(r7 + 2), r7 += 2) : r7++;
      if (0 === n8.length) return e11;
      t6 = s7 - n8.length, i5 = new Uint8Array(t6);
      var a8 = 0;
      for (r7 = 0; r7 < t6; a8++, r7++) a8 === n8[0] && (a8++, n8.shift()), i5[r7] = e11[a8];
      return i5;
    }, r6 = function(e11) {
      var t6, i5, s7, n8, r7, o6, l7, h3, u5, d6, c4, p3, m6 = 0, g5 = 0, f6 = 0, y5 = 0, _3 = [1, 1];
      if (i5 = (t6 = new wt2(e11)).readUnsignedByte(), n8 = t6.readUnsignedByte(), s7 = t6.readUnsignedByte(), t6.skipUnsignedExpGolomb(), Tt2[i5] && (3 === (r7 = t6.readUnsignedExpGolomb()) && t6.skipBits(1), t6.skipUnsignedExpGolomb(), t6.skipUnsignedExpGolomb(), t6.skipBits(1), t6.readBoolean())) for (c4 = 3 !== r7 ? 8 : 12, p3 = 0; p3 < c4; p3++) t6.readBoolean() && a7(p3 < 6 ? 16 : 64, t6);
      if (t6.skipUnsignedExpGolomb(), 0 === (o6 = t6.readUnsignedExpGolomb())) t6.readUnsignedExpGolomb();
      else if (1 === o6) for (t6.skipBits(1), t6.skipExpGolomb(), t6.skipExpGolomb(), l7 = t6.readUnsignedExpGolomb(), p3 = 0; p3 < l7; p3++) t6.skipExpGolomb();
      if (t6.skipUnsignedExpGolomb(), t6.skipBits(1), h3 = t6.readUnsignedExpGolomb(), u5 = t6.readUnsignedExpGolomb(), 0 === (d6 = t6.readBits(1)) && t6.skipBits(1), t6.skipBits(1), t6.readBoolean() && (m6 = t6.readUnsignedExpGolomb(), g5 = t6.readUnsignedExpGolomb(), f6 = t6.readUnsignedExpGolomb(), y5 = t6.readUnsignedExpGolomb()), t6.readBoolean() && t6.readBoolean()) {
        switch (t6.readUnsignedByte()) {
          case 1:
            _3 = [1, 1];
            break;
          case 2:
            _3 = [12, 11];
            break;
          case 3:
            _3 = [10, 11];
            break;
          case 4:
            _3 = [16, 11];
            break;
          case 5:
            _3 = [40, 33];
            break;
          case 6:
            _3 = [24, 11];
            break;
          case 7:
            _3 = [20, 11];
            break;
          case 8:
            _3 = [32, 11];
            break;
          case 9:
            _3 = [80, 33];
            break;
          case 10:
            _3 = [18, 11];
            break;
          case 11:
            _3 = [15, 11];
            break;
          case 12:
            _3 = [64, 33];
            break;
          case 13:
            _3 = [160, 99];
            break;
          case 14:
            _3 = [4, 3];
            break;
          case 15:
            _3 = [3, 2];
            break;
          case 16:
            _3 = [2, 1];
            break;
          case 255:
            _3 = [t6.readUnsignedByte() << 8 | t6.readUnsignedByte(), t6.readUnsignedByte() << 8 | t6.readUnsignedByte()];
        }
        _3 && (_3[0], _3[1]);
      }
      return { profileIdc: i5, levelIdc: s7, profileCompatibility: n8, width: 16 * (h3 + 1) - 2 * m6 - 2 * g5, height: (2 - d6) * (u5 + 1) * 16 - 2 * f6 - 2 * y5, sarRatio: _3 };
    };
  }, bt2.prototype = new Et2();
  var Ct2, kt2 = { H264Stream: bt2, NalByteStream: vt2 }, It2 = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350], xt2 = function(e10, t5) {
    var i4 = e10[t5 + 6] << 21 | e10[t5 + 7] << 14 | e10[t5 + 8] << 7 | e10[t5 + 9];
    return i4 = i4 >= 0 ? i4 : 0, (16 & e10[t5 + 5]) >> 4 ? i4 + 20 : i4 + 10;
  }, At2 = function(e10, t5) {
    return e10.length - t5 < 10 || e10[t5] !== "I".charCodeAt(0) || e10[t5 + 1] !== "D".charCodeAt(0) || e10[t5 + 2] !== "3".charCodeAt(0) ? t5 : (t5 += xt2(e10, t5), At2(e10, t5));
  }, Dt2 = function(e10) {
    return e10[0] << 21 | e10[1] << 14 | e10[2] << 7 | e10[3];
  }, Pt2 = function(e10, t5, i4) {
    var s6, n7 = "";
    for (s6 = t5; s6 < i4; s6++) n7 += "%" + ("00" + e10[s6].toString(16)).slice(-2);
    return n7;
  }, Lt2 = function(e10, t5, i4) {
    return unescape(Pt2(e10, t5, i4));
  }, Ot2 = { isLikelyAacData: function(e10) {
    var t5 = At2(e10, 0);
    return e10.length >= t5 + 2 && !(255 & ~e10[t5]) && !(240 & ~e10[t5 + 1]) && 16 == (22 & e10[t5 + 1]);
  }, parseId3TagSize: xt2, parseAdtsSize: function(e10, t5) {
    var i4 = (224 & e10[t5 + 5]) >> 5, s6 = e10[t5 + 4] << 3;
    return 6144 & e10[t5 + 3] | s6 | i4;
  }, parseType: function(e10, t5) {
    return e10[t5] === "I".charCodeAt(0) && e10[t5 + 1] === "D".charCodeAt(0) && e10[t5 + 2] === "3".charCodeAt(0) ? "timed-metadata" : true & e10[t5] && !(240 & ~e10[t5 + 1]) ? "audio" : null;
  }, parseSampleRate: function(e10) {
    for (var t5 = 0; t5 + 5 < e10.length; ) {
      if (255 === e10[t5] && 240 == (246 & e10[t5 + 1])) return It2[(60 & e10[t5 + 2]) >>> 2];
      t5++;
    }
    return null;
  }, parseAacTimestamp: function(e10) {
    var t5, i4, s6;
    t5 = 10, 64 & e10[5] && (t5 += 4, t5 += Dt2(e10.subarray(10, 14)));
    do {
      if ((i4 = Dt2(e10.subarray(t5 + 4, t5 + 8))) < 1) return null;
      if ("PRIV" === String.fromCharCode(e10[t5], e10[t5 + 1], e10[t5 + 2], e10[t5 + 3])) {
        s6 = e10.subarray(t5 + 10, t5 + i4 + 10);
        for (var n7 = 0; n7 < s6.byteLength; n7++) if (0 === s6[n7]) {
          if ("com.apple.streaming.transportStreamTimestamp" === Lt2(s6, 0, n7)) {
            var r6 = s6.subarray(n7 + 1), a7 = (1 & r6[3]) << 30 | r6[4] << 22 | r6[5] << 14 | r6[6] << 6 | r6[7] >>> 2;
            return a7 *= 4, a7 += 3 & r6[7];
          }
          break;
        }
      }
      t5 += 10, t5 += i4;
    } while (t5 < e10.byteLength);
    return null;
  } }, Nt2 = Ot2;
  (Ct2 = function() {
    var e10 = new Uint8Array(), t5 = 0;
    Ct2.prototype.init.call(this), this.setTimestamp = function(e11) {
      t5 = e11;
    }, this.push = function(i4) {
      var s6, n7, r6, a7, o5 = 0, l7 = 0;
      for (e10.length ? (a7 = e10.length, (e10 = new Uint8Array(i4.byteLength + a7)).set(e10.subarray(0, a7)), e10.set(i4, a7)) : e10 = i4; e10.length - l7 >= 3; ) if (e10[l7] !== "I".charCodeAt(0) || e10[l7 + 1] !== "D".charCodeAt(0) || e10[l7 + 2] !== "3".charCodeAt(0)) if (255 & ~e10[l7] || 240 & ~e10[l7 + 1]) l7++;
      else {
        if (e10.length - l7 < 7) break;
        if (l7 + (o5 = Nt2.parseAdtsSize(e10, l7)) > e10.length) break;
        r6 = { type: "audio", data: e10.subarray(l7, l7 + o5), pts: t5, dts: t5 }, this.trigger("data", r6), l7 += o5;
      }
      else {
        if (e10.length - l7 < 10) break;
        if (l7 + (o5 = Nt2.parseId3TagSize(e10, l7)) > e10.length) break;
        n7 = { type: "timed-metadata", data: e10.subarray(l7, l7 + o5) }, this.trigger("data", n7), l7 += o5;
      }
      s6 = e10.length - l7, e10 = s6 > 0 ? e10.subarray(l7) : new Uint8Array();
    }, this.reset = function() {
      e10 = new Uint8Array(), this.trigger("reset");
    }, this.endTimeline = function() {
      e10 = new Uint8Array(), this.trigger("endedtimeline");
    };
  }).prototype = new $2();
  var Rt2, Mt2, Ut2, Bt2, Ft2 = Ct2, qt2 = ["audioobjecttype", "channelcount", "samplerate", "samplingfrequencyindex", "samplesize"], jt2 = ["width", "height", "profileIdc", "levelIdc", "profileCompatibility", "sarRatio"], $t2 = $2, Ht2 = ee2, Vt2 = se2, zt2 = me2, Wt2 = fe2, Gt2 = gt2, Xt2 = ue2, Kt2 = St2, Yt2 = kt2.H264Stream, Qt2 = Ft2, Jt2 = Ot2.isLikelyAacData, Zt2 = ue2.ONE_SECOND_IN_TS, ei2 = qt2, ti2 = jt2, ii2 = function(e10, t5) {
    t5.stream = e10, this.trigger("log", t5);
  }, si2 = function(e10, t5) {
    for (var i4 = Object.keys(t5), s6 = 0; s6 < i4.length; s6++) {
      var n7 = i4[s6];
      "headOfPipeline" !== n7 && t5[n7].on && t5[n7].on("log", ii2.bind(e10, n7));
    }
  }, ni2 = function(e10, t5) {
    var i4;
    if (e10.length !== t5.length) return false;
    for (i4 = 0; i4 < e10.length; i4++) if (e10[i4] !== t5[i4]) return false;
    return true;
  }, ri2 = function(e10, t5, i4, s6, n7, r6) {
    return { start: { dts: e10, pts: e10 + (i4 - t5) }, end: { dts: e10 + (s6 - t5), pts: e10 + (n7 - i4) }, prependedContentDuration: r6, baseMediaDecodeTime: e10 };
  };
  Mt2 = function(e10, t5) {
    var i4, s6 = [], n7 = 0, r6 = 0, a7 = 1 / 0;
    i4 = (t5 = t5 || {}).firstSequenceNumber || 0, Mt2.prototype.init.call(this), this.push = function(t6) {
      Wt2.collectDtsInfo(e10, t6), e10 && ei2.forEach(function(i5) {
        e10[i5] = t6[i5];
      }), s6.push(t6);
    }, this.setEarliestDts = function(e11) {
      n7 = e11;
    }, this.setVideoBaseMediaDecodeTime = function(e11) {
      a7 = e11;
    }, this.setAudioAppendStart = function(e11) {
      r6 = e11;
    }, this.flush = function() {
      var o5, l7, h3, u5, d6, c4, p3;
      0 !== s6.length ? (o5 = zt2.trimAdtsFramesByEarliestDts(s6, e10, n7), e10.baseMediaDecodeTime = Wt2.calculateTrackBaseMediaDecodeTime(e10, t5.keepOriginalTimestamps), p3 = zt2.prefixWithSilence(e10, o5, r6, a7), e10.samples = zt2.generateSampleTable(o5), h3 = Ht2.mdat(zt2.concatenateFrameData(o5)), s6 = [], l7 = Ht2.moof(i4, [e10]), u5 = new Uint8Array(l7.byteLength + h3.byteLength), i4++, u5.set(l7), u5.set(h3, l7.byteLength), Wt2.clearDtsInfo(e10), d6 = Math.ceil(1024 * Zt2 / e10.samplerate), o5.length && (c4 = o5.length * d6, this.trigger("segmentTimingInfo", ri2(Xt2.audioTsToVideoTs(e10.baseMediaDecodeTime, e10.samplerate), o5[0].dts, o5[0].pts, o5[0].dts + c4, o5[0].pts + c4, p3 || 0)), this.trigger("timingInfo", { start: o5[0].pts, end: o5[0].pts + c4 })), this.trigger("data", { track: e10, boxes: u5 }), this.trigger("done", "AudioSegmentStream")) : this.trigger("done", "AudioSegmentStream");
    }, this.reset = function() {
      Wt2.clearDtsInfo(e10), s6 = [], this.trigger("reset");
    };
  }, Mt2.prototype = new $t2(), Rt2 = function(e10, t5) {
    var i4, s6, n7, r6 = [], a7 = [];
    i4 = (t5 = t5 || {}).firstSequenceNumber || 0, Rt2.prototype.init.call(this), delete e10.minPTS, this.gopCache_ = [], this.push = function(t6) {
      Wt2.collectDtsInfo(e10, t6), "seq_parameter_set_rbsp" !== t6.nalUnitType || s6 || (s6 = t6.config, e10.sps = [t6.data], ti2.forEach(function(t7) {
        e10[t7] = s6[t7];
      }, this)), "pic_parameter_set_rbsp" !== t6.nalUnitType || n7 || (n7 = t6.data, e10.pps = [t6.data]), r6.push(t6);
    }, this.flush = function() {
      for (var s7, n8, o5, l7, h3, u5, d6, c4, p3 = 0; r6.length && "access_unit_delimiter_rbsp" !== r6[0].nalUnitType; ) r6.shift();
      if (0 === r6.length) return this.resetStream_(), void this.trigger("done", "VideoSegmentStream");
      if (s7 = Vt2.groupNalsIntoFrames(r6), (o5 = Vt2.groupFramesIntoGops(s7))[0][0].keyFrame || ((n8 = this.getGopForFusion_(r6[0], e10)) ? (p3 = n8.duration, o5.unshift(n8), o5.byteLength += n8.byteLength, o5.nalCount += n8.nalCount, o5.pts = n8.pts, o5.dts = n8.dts, o5.duration += n8.duration) : o5 = Vt2.extendFirstKeyFrame(o5)), a7.length) {
        var m6;
        if (!(m6 = t5.alignGopsAtEnd ? this.alignGopsAtEnd_(o5) : this.alignGopsAtStart_(o5))) return this.gopCache_.unshift({ gop: o5.pop(), pps: e10.pps, sps: e10.sps }), this.gopCache_.length = Math.min(6, this.gopCache_.length), r6 = [], this.resetStream_(), void this.trigger("done", "VideoSegmentStream");
        Wt2.clearDtsInfo(e10), o5 = m6;
      }
      Wt2.collectDtsInfo(e10, o5), e10.samples = Vt2.generateSampleTable(o5), h3 = Ht2.mdat(Vt2.concatenateNalData(o5)), e10.baseMediaDecodeTime = Wt2.calculateTrackBaseMediaDecodeTime(e10, t5.keepOriginalTimestamps), this.trigger("processedGopsInfo", o5.map(function(e11) {
        return { pts: e11.pts, dts: e11.dts, byteLength: e11.byteLength };
      })), d6 = o5[0], c4 = o5[o5.length - 1], this.trigger("segmentTimingInfo", ri2(e10.baseMediaDecodeTime, d6.dts, d6.pts, c4.dts + c4.duration, c4.pts + c4.duration, p3)), this.trigger("timingInfo", { start: o5[0].pts, end: o5[o5.length - 1].pts + o5[o5.length - 1].duration }), this.gopCache_.unshift({ gop: o5.pop(), pps: e10.pps, sps: e10.sps }), this.gopCache_.length = Math.min(6, this.gopCache_.length), r6 = [], this.trigger("baseMediaDecodeTime", e10.baseMediaDecodeTime), this.trigger("timelineStartInfo", e10.timelineStartInfo), l7 = Ht2.moof(i4, [e10]), u5 = new Uint8Array(l7.byteLength + h3.byteLength), i4++, u5.set(l7), u5.set(h3, l7.byteLength), this.trigger("data", { track: e10, boxes: u5 }), this.resetStream_(), this.trigger("done", "VideoSegmentStream");
    }, this.reset = function() {
      this.resetStream_(), r6 = [], this.gopCache_.length = 0, a7.length = 0, this.trigger("reset");
    }, this.resetStream_ = function() {
      Wt2.clearDtsInfo(e10), s6 = void 0, n7 = void 0;
    }, this.getGopForFusion_ = function(t6) {
      var i5, s7, n8, r7, a8, o5 = 45e3, l7 = 1e4, h3 = 1 / 0;
      for (a8 = 0; a8 < this.gopCache_.length; a8++) n8 = (r7 = this.gopCache_[a8]).gop, e10.pps && ni2(e10.pps[0], r7.pps[0]) && e10.sps && ni2(e10.sps[0], r7.sps[0]) && (n8.dts < e10.timelineStartInfo.dts || (i5 = t6.dts - n8.dts - n8.duration) >= -l7 && i5 <= o5 && (!s7 || h3 > i5) && (s7 = r7, h3 = i5));
      return s7 ? s7.gop : null;
    }, this.alignGopsAtStart_ = function(e11) {
      var t6, i5, s7, n8, r7, o5, l7, h3;
      for (r7 = e11.byteLength, o5 = e11.nalCount, l7 = e11.duration, t6 = i5 = 0; t6 < a7.length && i5 < e11.length && (s7 = a7[t6], n8 = e11[i5], s7.pts !== n8.pts); ) n8.pts > s7.pts ? t6++ : (i5++, r7 -= n8.byteLength, o5 -= n8.nalCount, l7 -= n8.duration);
      return 0 === i5 ? e11 : i5 === e11.length ? null : ((h3 = e11.slice(i5)).byteLength = r7, h3.duration = l7, h3.nalCount = o5, h3.pts = h3[0].pts, h3.dts = h3[0].dts, h3);
    }, this.alignGopsAtEnd_ = function(e11) {
      var t6, i5, s7, n8, r7, o5, l7;
      for (t6 = a7.length - 1, i5 = e11.length - 1, r7 = null, o5 = false; t6 >= 0 && i5 >= 0; ) {
        if (s7 = a7[t6], n8 = e11[i5], s7.pts === n8.pts) {
          o5 = true;
          break;
        }
        s7.pts > n8.pts ? t6-- : (t6 === a7.length - 1 && (r7 = i5), i5--);
      }
      if (!o5 && null === r7) return null;
      if (0 === (l7 = o5 ? i5 : r7)) return e11;
      var h3 = e11.slice(l7), u5 = h3.reduce(function(e12, t7) {
        return e12.byteLength += t7.byteLength, e12.duration += t7.duration, e12.nalCount += t7.nalCount, e12;
      }, { byteLength: 0, duration: 0, nalCount: 0 });
      return h3.byteLength = u5.byteLength, h3.duration = u5.duration, h3.nalCount = u5.nalCount, h3.pts = h3[0].pts, h3.dts = h3[0].dts, h3;
    }, this.alignGopsWith = function(e11) {
      a7 = e11;
    };
  }, Rt2.prototype = new $t2(), Bt2 = function(e10, t5) {
    this.numberOfTracks = 0, this.metadataStream = t5, void 0 !== (e10 = e10 || {}).remux ? this.remuxTracks = !!e10.remux : this.remuxTracks = true, "boolean" == typeof e10.keepOriginalTimestamps ? this.keepOriginalTimestamps = e10.keepOriginalTimestamps : this.keepOriginalTimestamps = false, this.pendingTracks = [], this.videoTrack = null, this.pendingBoxes = [], this.pendingCaptions = [], this.pendingMetadata = [], this.pendingBytes = 0, this.emittedTracks = 0, Bt2.prototype.init.call(this), this.push = function(e11) {
      return e11.content || e11.text ? this.pendingCaptions.push(e11) : e11.frames ? this.pendingMetadata.push(e11) : (this.pendingTracks.push(e11.track), this.pendingBytes += e11.boxes.byteLength, "video" === e11.track.type && (this.videoTrack = e11.track, this.pendingBoxes.push(e11.boxes)), void ("audio" === e11.track.type && (this.audioTrack = e11.track, this.pendingBoxes.unshift(e11.boxes))));
    };
  }, Bt2.prototype = new $t2(), Bt2.prototype.flush = function(e10) {
    var t5, i4, s6, n7, r6 = 0, a7 = { captions: [], captionStreams: {}, metadata: [], info: {} }, o5 = 0;
    if (this.pendingTracks.length < this.numberOfTracks) {
      if ("VideoSegmentStream" !== e10 && "AudioSegmentStream" !== e10) return;
      if (this.remuxTracks) return;
      if (0 === this.pendingTracks.length) return this.emittedTracks++, void (this.emittedTracks >= this.numberOfTracks && (this.trigger("done"), this.emittedTracks = 0));
    }
    if (this.videoTrack ? (o5 = this.videoTrack.timelineStartInfo.pts, ti2.forEach(function(e11) {
      a7.info[e11] = this.videoTrack[e11];
    }, this)) : this.audioTrack && (o5 = this.audioTrack.timelineStartInfo.pts, ei2.forEach(function(e11) {
      a7.info[e11] = this.audioTrack[e11];
    }, this)), this.videoTrack || this.audioTrack) {
      for (1 === this.pendingTracks.length ? a7.type = this.pendingTracks[0].type : a7.type = "combined", this.emittedTracks += this.pendingTracks.length, s6 = Ht2.initSegment(this.pendingTracks), a7.initSegment = new Uint8Array(s6.byteLength), a7.initSegment.set(s6), a7.data = new Uint8Array(this.pendingBytes), n7 = 0; n7 < this.pendingBoxes.length; n7++) a7.data.set(this.pendingBoxes[n7], r6), r6 += this.pendingBoxes[n7].byteLength;
      for (n7 = 0; n7 < this.pendingCaptions.length; n7++) (t5 = this.pendingCaptions[n7]).startTime = Xt2.metadataTsToSeconds(t5.startPts, o5, this.keepOriginalTimestamps), t5.endTime = Xt2.metadataTsToSeconds(t5.endPts, o5, this.keepOriginalTimestamps), a7.captionStreams[t5.stream] = true, a7.captions.push(t5);
      for (n7 = 0; n7 < this.pendingMetadata.length; n7++) (i4 = this.pendingMetadata[n7]).cueTime = Xt2.metadataTsToSeconds(i4.pts, o5, this.keepOriginalTimestamps), a7.metadata.push(i4);
      for (a7.metadata.dispatchType = this.metadataStream.dispatchType, this.pendingTracks.length = 0, this.videoTrack = null, this.pendingBoxes.length = 0, this.pendingCaptions.length = 0, this.pendingBytes = 0, this.pendingMetadata.length = 0, this.trigger("data", a7), n7 = 0; n7 < a7.captions.length; n7++) t5 = a7.captions[n7], this.trigger("caption", t5);
      for (n7 = 0; n7 < a7.metadata.length; n7++) i4 = a7.metadata[n7], this.trigger("id3Frame", i4);
    }
    this.emittedTracks >= this.numberOfTracks && (this.trigger("done"), this.emittedTracks = 0);
  }, Bt2.prototype.setRemux = function(e10) {
    this.remuxTracks = e10;
  }, Ut2 = function(e10) {
    var t5, i4, s6 = this, n7 = true;
    Ut2.prototype.init.call(this), e10 = e10 || {}, this.baseMediaDecodeTime = e10.baseMediaDecodeTime || 0, this.transmuxPipeline_ = {}, this.setupAacPipeline = function() {
      var n8 = {};
      this.transmuxPipeline_ = n8, n8.type = "aac", n8.metadataStream = new Gt2.MetadataStream(), n8.aacStream = new Qt2(), n8.audioTimestampRolloverStream = new Gt2.TimestampRolloverStream("audio"), n8.timedMetadataTimestampRolloverStream = new Gt2.TimestampRolloverStream("timed-metadata"), n8.adtsStream = new Kt2(), n8.coalesceStream = new Bt2(e10, n8.metadataStream), n8.headOfPipeline = n8.aacStream, n8.aacStream.pipe(n8.audioTimestampRolloverStream).pipe(n8.adtsStream), n8.aacStream.pipe(n8.timedMetadataTimestampRolloverStream).pipe(n8.metadataStream).pipe(n8.coalesceStream), n8.metadataStream.on("timestamp", function(e11) {
        n8.aacStream.setTimestamp(e11.timeStamp);
      }), n8.aacStream.on("data", function(r6) {
        "timed-metadata" !== r6.type && "audio" !== r6.type || n8.audioSegmentStream || (i4 = i4 || { timelineStartInfo: { baseMediaDecodeTime: s6.baseMediaDecodeTime }, codec: "adts", type: "audio" }, n8.coalesceStream.numberOfTracks++, n8.audioSegmentStream = new Mt2(i4, e10), n8.audioSegmentStream.on("log", s6.getLogTrigger_("audioSegmentStream")), n8.audioSegmentStream.on("timingInfo", s6.trigger.bind(s6, "audioTimingInfo")), n8.adtsStream.pipe(n8.audioSegmentStream).pipe(n8.coalesceStream), s6.trigger("trackinfo", { hasAudio: !!i4, hasVideo: !!t5 }));
      }), n8.coalesceStream.on("data", this.trigger.bind(this, "data")), n8.coalesceStream.on("done", this.trigger.bind(this, "done")), si2(this, n8);
    }, this.setupTsPipeline = function() {
      var n8 = {};
      this.transmuxPipeline_ = n8, n8.type = "ts", n8.metadataStream = new Gt2.MetadataStream(), n8.packetStream = new Gt2.TransportPacketStream(), n8.parseStream = new Gt2.TransportParseStream(), n8.elementaryStream = new Gt2.ElementaryStream(), n8.timestampRolloverStream = new Gt2.TimestampRolloverStream(), n8.adtsStream = new Kt2(), n8.h264Stream = new Yt2(), n8.captionStream = new Gt2.CaptionStream(e10), n8.coalesceStream = new Bt2(e10, n8.metadataStream), n8.headOfPipeline = n8.packetStream, n8.packetStream.pipe(n8.parseStream).pipe(n8.elementaryStream).pipe(n8.timestampRolloverStream), n8.timestampRolloverStream.pipe(n8.h264Stream), n8.timestampRolloverStream.pipe(n8.adtsStream), n8.timestampRolloverStream.pipe(n8.metadataStream).pipe(n8.coalesceStream), n8.h264Stream.pipe(n8.captionStream).pipe(n8.coalesceStream), n8.elementaryStream.on("data", function(r6) {
        var a7;
        if ("metadata" === r6.type) {
          for (a7 = r6.tracks.length; a7--; ) t5 || "video" !== r6.tracks[a7].type ? i4 || "audio" !== r6.tracks[a7].type || ((i4 = r6.tracks[a7]).timelineStartInfo.baseMediaDecodeTime = s6.baseMediaDecodeTime) : (t5 = r6.tracks[a7]).timelineStartInfo.baseMediaDecodeTime = s6.baseMediaDecodeTime;
          t5 && !n8.videoSegmentStream && (n8.coalesceStream.numberOfTracks++, n8.videoSegmentStream = new Rt2(t5, e10), n8.videoSegmentStream.on("log", s6.getLogTrigger_("videoSegmentStream")), n8.videoSegmentStream.on("timelineStartInfo", function(t6) {
            i4 && !e10.keepOriginalTimestamps && (i4.timelineStartInfo = t6, n8.audioSegmentStream.setEarliestDts(t6.dts - s6.baseMediaDecodeTime));
          }), n8.videoSegmentStream.on("processedGopsInfo", s6.trigger.bind(s6, "gopInfo")), n8.videoSegmentStream.on("segmentTimingInfo", s6.trigger.bind(s6, "videoSegmentTimingInfo")), n8.videoSegmentStream.on("baseMediaDecodeTime", function(e11) {
            i4 && n8.audioSegmentStream.setVideoBaseMediaDecodeTime(e11);
          }), n8.videoSegmentStream.on("timingInfo", s6.trigger.bind(s6, "videoTimingInfo")), n8.h264Stream.pipe(n8.videoSegmentStream).pipe(n8.coalesceStream)), i4 && !n8.audioSegmentStream && (n8.coalesceStream.numberOfTracks++, n8.audioSegmentStream = new Mt2(i4, e10), n8.audioSegmentStream.on("log", s6.getLogTrigger_("audioSegmentStream")), n8.audioSegmentStream.on("timingInfo", s6.trigger.bind(s6, "audioTimingInfo")), n8.audioSegmentStream.on("segmentTimingInfo", s6.trigger.bind(s6, "audioSegmentTimingInfo")), n8.adtsStream.pipe(n8.audioSegmentStream).pipe(n8.coalesceStream)), s6.trigger("trackinfo", { hasAudio: !!i4, hasVideo: !!t5 });
        }
      }), n8.coalesceStream.on("data", this.trigger.bind(this, "data")), n8.coalesceStream.on("id3Frame", function(e11) {
        e11.dispatchType = n8.metadataStream.dispatchType, s6.trigger("id3Frame", e11);
      }), n8.coalesceStream.on("caption", this.trigger.bind(this, "caption")), n8.coalesceStream.on("done", this.trigger.bind(this, "done")), si2(this, n8);
    }, this.setBaseMediaDecodeTime = function(s7) {
      var n8 = this.transmuxPipeline_;
      e10.keepOriginalTimestamps || (this.baseMediaDecodeTime = s7), i4 && (i4.timelineStartInfo.dts = void 0, i4.timelineStartInfo.pts = void 0, Wt2.clearDtsInfo(i4), n8.audioTimestampRolloverStream && n8.audioTimestampRolloverStream.discontinuity()), t5 && (n8.videoSegmentStream && (n8.videoSegmentStream.gopCache_ = []), t5.timelineStartInfo.dts = void 0, t5.timelineStartInfo.pts = void 0, Wt2.clearDtsInfo(t5), n8.captionStream.reset()), n8.timestampRolloverStream && n8.timestampRolloverStream.discontinuity();
    }, this.setAudioAppendStart = function(e11) {
      i4 && this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(e11);
    }, this.setRemux = function(t6) {
      var i5 = this.transmuxPipeline_;
      e10.remux = t6, i5 && i5.coalesceStream && i5.coalesceStream.setRemux(t6);
    }, this.alignGopsWith = function(e11) {
      t5 && this.transmuxPipeline_.videoSegmentStream && this.transmuxPipeline_.videoSegmentStream.alignGopsWith(e11);
    }, this.getLogTrigger_ = function(e11) {
      var t6 = this;
      return function(i5) {
        i5.stream = e11, t6.trigger("log", i5);
      };
    }, this.push = function(e11) {
      if (n7) {
        var t6 = Jt2(e11);
        t6 && "aac" !== this.transmuxPipeline_.type ? this.setupAacPipeline() : t6 || "ts" === this.transmuxPipeline_.type || this.setupTsPipeline(), n7 = false;
      }
      this.transmuxPipeline_.headOfPipeline.push(e11);
    }, this.flush = function() {
      n7 = true, this.transmuxPipeline_.headOfPipeline.flush();
    }, this.endTimeline = function() {
      this.transmuxPipeline_.headOfPipeline.endTimeline();
    }, this.reset = function() {
      this.transmuxPipeline_.headOfPipeline && this.transmuxPipeline_.headOfPipeline.reset();
    }, this.resetCaptions = function() {
      this.transmuxPipeline_.captionStream && this.transmuxPipeline_.captionStream.reset();
    };
  }, Ut2.prototype = new $t2();
  var ai2, oi2, li2, hi2, ui2, di2, ci2, pi2 = { Transmuxer: Ut2, VideoSegmentStream: Rt2, AudioSegmentStream: Mt2, AUDIO_PROPERTIES: ei2, VIDEO_PROPERTIES: ti2, generateSegmentTimingInfo: ri2 }, mi2 = { toUnsigned: function(e10) {
    return e10 >>> 0;
  }, toHexString: function(e10) {
    return ("00" + e10.toString(16)).slice(-2);
  } }, gi2 = function(e10) {
    var t5 = "";
    return t5 += String.fromCharCode(e10[0]), t5 += String.fromCharCode(e10[1]), t5 += String.fromCharCode(e10[2]), t5 += String.fromCharCode(e10[3]);
  }, fi2 = mi2.toUnsigned, yi2 = gi2, _i2 = function(e10, t5) {
    var i4, s6, n7, r6, a7, o5 = [];
    if (!t5.length) return null;
    for (i4 = 0; i4 < e10.byteLength; ) s6 = fi2(e10[i4] << 24 | e10[i4 + 1] << 16 | e10[i4 + 2] << 8 | e10[i4 + 3]), n7 = yi2(e10.subarray(i4 + 4, i4 + 8)), r6 = s6 > 1 ? i4 + s6 : e10.byteLength, n7 === t5[0] && (1 === t5.length ? o5.push(e10.subarray(i4 + 8, r6)) : (a7 = _i2(e10.subarray(i4 + 8, r6), t5.slice(1))).length && (o5 = o5.concat(a7))), i4 = r6;
    return o5;
  }, bi2 = _i2, vi2 = mi2.toUnsigned, Ti2 = V3.getUint64, Si2 = function(e10) {
    var t5 = { version: e10[0], flags: new Uint8Array(e10.subarray(1, 4)) };
    return 1 === t5.version ? t5.baseMediaDecodeTime = Ti2(e10.subarray(4)) : t5.baseMediaDecodeTime = vi2(e10[4] << 24 | e10[5] << 16 | e10[6] << 8 | e10[7]), t5;
  }, Ei2 = function(e10) {
    return { isLeading: (12 & e10[0]) >>> 2, dependsOn: 3 & e10[0], isDependedOn: (192 & e10[1]) >>> 6, hasRedundancy: (48 & e10[1]) >>> 4, paddingValue: (14 & e10[1]) >>> 1, isNonSyncSample: 1 & e10[1], degradationPriority: e10[2] << 8 | e10[3] };
  }, wi2 = function(e10) {
    var t5, i4 = { version: e10[0], flags: new Uint8Array(e10.subarray(1, 4)), samples: [] }, s6 = new DataView(e10.buffer, e10.byteOffset, e10.byteLength), n7 = 1 & i4.flags[2], r6 = 4 & i4.flags[2], a7 = 1 & i4.flags[1], o5 = 2 & i4.flags[1], l7 = 4 & i4.flags[1], h3 = 8 & i4.flags[1], u5 = s6.getUint32(4), d6 = 8;
    for (n7 && (i4.dataOffset = s6.getInt32(d6), d6 += 4), r6 && u5 && (t5 = { flags: Ei2(e10.subarray(d6, d6 + 4)) }, d6 += 4, a7 && (t5.duration = s6.getUint32(d6), d6 += 4), o5 && (t5.size = s6.getUint32(d6), d6 += 4), h3 && (1 === i4.version ? t5.compositionTimeOffset = s6.getInt32(d6) : t5.compositionTimeOffset = s6.getUint32(d6), d6 += 4), i4.samples.push(t5), u5--); u5--; ) t5 = {}, a7 && (t5.duration = s6.getUint32(d6), d6 += 4), o5 && (t5.size = s6.getUint32(d6), d6 += 4), l7 && (t5.flags = Ei2(e10.subarray(d6, d6 + 4)), d6 += 4), h3 && (1 === i4.version ? t5.compositionTimeOffset = s6.getInt32(d6) : t5.compositionTimeOffset = s6.getUint32(d6), d6 += 4), i4.samples.push(t5);
    return i4;
  }, Ci2 = function(e10) {
    var t5, i4 = new DataView(e10.buffer, e10.byteOffset, e10.byteLength), s6 = { version: e10[0], flags: new Uint8Array(e10.subarray(1, 4)), trackId: i4.getUint32(4) }, n7 = 1 & s6.flags[2], r6 = 2 & s6.flags[2], a7 = 8 & s6.flags[2], o5 = 16 & s6.flags[2], l7 = 32 & s6.flags[2], h3 = 65536 & s6.flags[0], u5 = 131072 & s6.flags[0];
    return t5 = 8, n7 && (t5 += 4, s6.baseDataOffset = i4.getUint32(12), t5 += 4), r6 && (s6.sampleDescriptionIndex = i4.getUint32(t5), t5 += 4), a7 && (s6.defaultSampleDuration = i4.getUint32(t5), t5 += 4), o5 && (s6.defaultSampleSize = i4.getUint32(t5), t5 += 4), l7 && (s6.defaultSampleFlags = i4.getUint32(t5)), h3 && (s6.durationIsEmpty = true), !n7 && u5 && (s6.baseDataOffsetIsMoof = true), s6;
  }, ki2 = "undefined" != typeof window ? window : void 0 !== e9 ? e9 : "undefined" != typeof self ? self : {}, Ii2 = be2.discardEmulationPreventionBytes, xi2 = Re2.CaptionStream, Ai2 = bi2, Di2 = Si2, Pi2 = wi2, Li2 = Ci2, Oi2 = ki2, Ni2 = function(e10, t5) {
    for (var i4 = e10, s6 = 0; s6 < t5.length; s6++) {
      var n7 = t5[s6];
      if (i4 < n7.size) return n7;
      i4 -= n7.size;
    }
    return null;
  }, Ri2 = function(e10, t5, i4) {
    var s6, n7, r6, a7, o5 = new DataView(e10.buffer, e10.byteOffset, e10.byteLength), l7 = { logs: [], seiNals: [] };
    for (n7 = 0; n7 + 4 < e10.length; n7 += r6) if (r6 = o5.getUint32(n7), n7 += 4, !(r6 <= 0)) switch (31 & e10[n7]) {
      case 6:
        var h3 = e10.subarray(n7 + 1, n7 + 1 + r6), u5 = Ni2(n7, t5);
        if (s6 = { nalUnitType: "sei_rbsp", size: r6, data: h3, escapedRBSP: Ii2(h3), trackId: i4 }, u5) s6.pts = u5.pts, s6.dts = u5.dts, a7 = u5;
        else {
          if (!a7) {
            l7.logs.push({ level: "warn", message: "We've encountered a nal unit without data at " + n7 + " for trackId " + i4 + ". See mux.js#223." });
            break;
          }
          s6.pts = a7.pts, s6.dts = a7.dts;
        }
        l7.seiNals.push(s6);
    }
    return l7;
  }, Mi2 = function(e10, t5, i4) {
    var s6 = t5, n7 = i4.defaultSampleDuration || 0, r6 = i4.defaultSampleSize || 0, a7 = i4.trackId, o5 = [];
    return e10.forEach(function(e11) {
      var t6 = Pi2(e11).samples;
      t6.forEach(function(e12) {
        void 0 === e12.duration && (e12.duration = n7), void 0 === e12.size && (e12.size = r6), e12.trackId = a7, e12.dts = s6, void 0 === e12.compositionTimeOffset && (e12.compositionTimeOffset = 0), "bigint" == typeof s6 ? (e12.pts = s6 + Oi2.BigInt(e12.compositionTimeOffset), s6 += Oi2.BigInt(e12.duration)) : (e12.pts = s6 + e12.compositionTimeOffset, s6 += e12.duration);
      }), o5 = o5.concat(t6);
    }), o5;
  }, Ui2 = function(e10, t5) {
    var i4 = Ai2(e10, ["moof", "traf"]), s6 = Ai2(e10, ["mdat"]), n7 = {}, r6 = [];
    return s6.forEach(function(e11, t6) {
      var s7 = i4[t6];
      r6.push({ mdat: e11, traf: s7 });
    }), r6.forEach(function(e11) {
      var i5, s7, r7 = e11.mdat, a7 = e11.traf, o5 = Ai2(a7, ["tfhd"]), l7 = Li2(o5[0]), h3 = l7.trackId, u5 = Ai2(a7, ["tfdt"]), d6 = u5.length > 0 ? Di2(u5[0]).baseMediaDecodeTime : 0, c4 = Ai2(a7, ["trun"]);
      t5 === h3 && c4.length > 0 && (i5 = Mi2(c4, d6, l7), s7 = Ri2(r7, i5, h3), n7[h3] || (n7[h3] = { seiNals: [], logs: [] }), n7[h3].seiNals = n7[h3].seiNals.concat(s7.seiNals), n7[h3].logs = n7[h3].logs.concat(s7.logs));
    }), n7;
  }, Bi2 = function(e10, t5, i4) {
    if (null === t5) return null;
    var s6 = Ui2(e10, t5)[t5] || {};
    return { seiNals: s6.seiNals, logs: s6.logs, timescale: i4 };
  }, Fi2 = function() {
    var e10, t5, i4, s6, n7, r6, a7 = false;
    this.isInitialized = function() {
      return a7;
    }, this.init = function(t6) {
      e10 = new xi2(), a7 = true, r6 = !!t6 && t6.isPartial, e10.on("data", function(e11) {
        e11.startTime = e11.startPts / s6, e11.endTime = e11.endPts / s6, n7.captions.push(e11), n7.captionStreams[e11.stream] = true;
      }), e10.on("log", function(e11) {
        n7.logs.push(e11);
      });
    }, this.isNewInit = function(e11, t6) {
      return !(e11 && 0 === e11.length || t6 && "object" == typeof t6 && 0 === Object.keys(t6).length) && (i4 !== e11[0] || s6 !== t6[i4]);
    }, this.parse = function(e11, r7, a8) {
      var o5;
      if (!this.isInitialized()) return null;
      if (!r7 || !a8) return null;
      if (this.isNewInit(r7, a8)) i4 = r7[0], s6 = a8[i4];
      else if (null === i4 || !s6) return t5.push(e11), null;
      for (; t5.length > 0; ) {
        var l7 = t5.shift();
        this.parse(l7, r7, a8);
      }
      return (o5 = Bi2(e11, i4, s6)) && o5.logs && (n7.logs = n7.logs.concat(o5.logs)), null !== o5 && o5.seiNals ? (this.pushNals(o5.seiNals), this.flushStream(), n7) : n7.logs.length ? { logs: n7.logs, captions: [], captionStreams: [] } : null;
    }, this.pushNals = function(t6) {
      if (!this.isInitialized() || !t6 || 0 === t6.length) return null;
      t6.forEach(function(t7) {
        e10.push(t7);
      });
    }, this.flushStream = function() {
      if (!this.isInitialized()) return null;
      r6 ? e10.partialFlush() : e10.flush();
    }, this.clearParsedCaptions = function() {
      n7.captions = [], n7.captionStreams = {}, n7.logs = [];
    }, this.resetCaptionStream = function() {
      if (!this.isInitialized()) return null;
      e10.reset();
    }, this.clearAllCaptions = function() {
      this.clearParsedCaptions(), this.resetCaptionStream();
    }, this.reset = function() {
      t5 = [], i4 = null, s6 = null, n7 ? this.clearParsedCaptions() : n7 = { captions: [], captionStreams: {}, logs: [] }, this.resetCaptionStream();
    }, this.reset();
  }, qi2 = Fi2, ji2 = { uint8ToCString: function(e10) {
    for (var t5 = 0, i4 = String.fromCharCode(e10[t5]), s6 = ""; "\0" !== i4; ) s6 += i4, t5++, i4 = String.fromCharCode(e10[t5]);
    return s6 += i4;
  } }.uint8ToCString, $i2 = V3.getUint64, Hi2 = function(e10) {
    var t5, i4, s6, n7, r6, a7, o5, l7 = 4, h3 = e10[0];
    if (0 === h3) l7 += (t5 = ji2(e10.subarray(l7))).length, l7 += (i4 = ji2(e10.subarray(l7))).length, s6 = (u5 = new DataView(e10.buffer)).getUint32(l7), l7 += 4, r6 = u5.getUint32(l7), l7 += 4, a7 = u5.getUint32(l7), l7 += 4, o5 = u5.getUint32(l7), l7 += 4;
    else if (1 === h3) {
      var u5;
      s6 = (u5 = new DataView(e10.buffer)).getUint32(l7), l7 += 4, n7 = $i2(e10.subarray(l7)), l7 += 8, a7 = u5.getUint32(l7), l7 += 4, o5 = u5.getUint32(l7), l7 += 4, l7 += (t5 = ji2(e10.subarray(l7))).length, l7 += (i4 = ji2(e10.subarray(l7))).length;
    }
    var d6 = { scheme_id_uri: t5, value: i4, timescale: s6 || 1, presentation_time: n7, presentation_time_delta: r6, event_duration: a7, id: o5, message_data: new Uint8Array(e10.subarray(l7, e10.byteLength)) };
    return zi2(h3, d6) ? d6 : void 0;
  }, Vi2 = function(e10, t5, i4, s6) {
    return e10 || 0 === e10 ? e10 / t5 : s6 + i4 / t5;
  }, zi2 = function(e10, t5) {
    var i4 = "\0" !== t5.scheme_id_uri, s6 = 0 === e10 && Wi2(t5.presentation_time_delta) && i4, n7 = 1 === e10 && Wi2(t5.presentation_time) && i4;
    return !(e10 > 1) && s6 || n7;
  }, Wi2 = function(e10) {
    return void 0 !== e10 || null !== e10;
  }, Gi2 = { parseEmsgBox: Hi2, scaleTime: Vi2 }, Xi2 = mi2.toUnsigned, Ki2 = mi2.toHexString, Yi2 = bi2, Qi2 = gi2, Ji2 = Gi2, Zi2 = Ci2, es2 = wi2, ts2 = Si2, is2 = V3.getUint64, ss2 = ki2, ns2 = Ze2.parseId3Frames;
  ai2 = function(e10) {
    var t5 = {};
    return Yi2(e10, ["moov", "trak"]).reduce(function(e11, t6) {
      var i4, s6, n7, r6, a7;
      return (i4 = Yi2(t6, ["tkhd"])[0]) ? (s6 = i4[0], r6 = Xi2(i4[n7 = 0 === s6 ? 12 : 20] << 24 | i4[n7 + 1] << 16 | i4[n7 + 2] << 8 | i4[n7 + 3]), (a7 = Yi2(t6, ["mdia", "mdhd"])[0]) ? (n7 = 0 === (s6 = a7[0]) ? 12 : 20, e11[r6] = Xi2(a7[n7] << 24 | a7[n7 + 1] << 16 | a7[n7 + 2] << 8 | a7[n7 + 3]), e11) : null) : null;
    }, t5);
  }, oi2 = function(e10, t5) {
    var i4 = Yi2(t5, ["moof", "traf"]).reduce(function(t6, i5) {
      var s6, n7 = Yi2(i5, ["tfhd"])[0], r6 = Xi2(n7[4] << 24 | n7[5] << 16 | n7[6] << 8 | n7[7]), a7 = e10[r6] || 9e4, o5 = Yi2(i5, ["tfdt"])[0], l7 = new DataView(o5.buffer, o5.byteOffset, o5.byteLength);
      let h3;
      return "bigint" == typeof (s6 = 1 === o5[0] ? is2(o5.subarray(4, 12)) : l7.getUint32(4)) ? h3 = s6 / ss2.BigInt(a7) : "number" != typeof s6 || isNaN(s6) || (h3 = s6 / a7), h3 < Number.MAX_SAFE_INTEGER && (h3 = Number(h3)), h3 < t6 && (t6 = h3), t6;
    }, 1 / 0);
    return "bigint" == typeof i4 || isFinite(i4) ? i4 : 0;
  }, li2 = function(e10, t5) {
    var i4, s6 = Yi2(t5, ["moof", "traf"]), n7 = 0, r6 = 0;
    if (s6 && s6.length) {
      var a7 = Yi2(s6[0], ["tfhd"])[0], o5 = Yi2(s6[0], ["trun"])[0], l7 = Yi2(s6[0], ["tfdt"])[0];
      if (a7) i4 = Zi2(a7).trackId;
      if (l7) n7 = ts2(l7).baseMediaDecodeTime;
      if (o5) {
        var h3 = es2(o5);
        h3.samples && h3.samples.length && (r6 = h3.samples[0].compositionTimeOffset || 0);
      }
    }
    var u5 = e10[i4] || 9e4;
    "bigint" == typeof n7 && (r6 = ss2.BigInt(r6), u5 = ss2.BigInt(u5));
    var d6 = (n7 + r6) / u5;
    return "bigint" == typeof d6 && d6 < Number.MAX_SAFE_INTEGER && (d6 = Number(d6)), d6;
  }, hi2 = function(e10) {
    var t5 = Yi2(e10, ["moov", "trak"]), i4 = [];
    return t5.forEach(function(e11) {
      var t6 = Yi2(e11, ["mdia", "hdlr"]), s6 = Yi2(e11, ["tkhd"]);
      t6.forEach(function(e12, t7) {
        var n7, r6, a7 = Qi2(e12.subarray(8, 12)), o5 = s6[t7];
        "vide" === a7 && (r6 = 0 === (n7 = new DataView(o5.buffer, o5.byteOffset, o5.byteLength)).getUint8(0) ? n7.getUint32(12) : n7.getUint32(20), i4.push(r6));
      });
    }), i4;
  }, di2 = function(e10) {
    var t5 = 0 === e10[0] ? 12 : 20;
    return Xi2(e10[t5] << 24 | e10[t5 + 1] << 16 | e10[t5 + 2] << 8 | e10[t5 + 3]);
  }, ui2 = function(e10) {
    var t5 = Yi2(e10, ["moov", "trak"]), i4 = [];
    return t5.forEach(function(e11) {
      var t6, s6, n7 = {}, r6 = Yi2(e11, ["tkhd"])[0];
      r6 && (s6 = (t6 = new DataView(r6.buffer, r6.byteOffset, r6.byteLength)).getUint8(0), n7.id = 0 === s6 ? t6.getUint32(12) : t6.getUint32(20));
      var a7 = Yi2(e11, ["mdia", "hdlr"])[0];
      if (a7) {
        var o5 = Qi2(a7.subarray(8, 12));
        n7.type = "vide" === o5 ? "video" : "soun" === o5 ? "audio" : o5;
      }
      var l7 = Yi2(e11, ["mdia", "minf", "stbl", "stsd"])[0];
      if (l7) {
        var h3 = l7.subarray(8);
        n7.codec = Qi2(h3.subarray(4, 8));
        var u5, d6 = Yi2(h3, [n7.codec])[0];
        d6 && (/^[asm]vc[1-9]$/i.test(n7.codec) ? (u5 = d6.subarray(78), "avcC" === Qi2(u5.subarray(4, 8)) && u5.length > 11 ? (n7.codec += ".", n7.codec += Ki2(u5[9]), n7.codec += Ki2(u5[10]), n7.codec += Ki2(u5[11])) : n7.codec = "avc1.4d400d") : /^mp4[a,v]$/i.test(n7.codec) ? (u5 = d6.subarray(28), "esds" === Qi2(u5.subarray(4, 8)) && u5.length > 20 && 0 !== u5[19] ? (n7.codec += "." + Ki2(u5[19]), n7.codec += "." + Ki2(u5[20] >>> 2 & 63).replace(/^0/, "")) : n7.codec = "mp4a.40.2") : n7.codec = n7.codec.toLowerCase());
      }
      var c4 = Yi2(e11, ["mdia", "mdhd"])[0];
      c4 && (n7.timescale = di2(c4)), i4.push(n7);
    }), i4;
  }, ci2 = function(e10, t5 = 0) {
    return Yi2(e10, ["emsg"]).map((e11) => {
      var i4 = Ji2.parseEmsgBox(new Uint8Array(e11)), s6 = ns2(i4.message_data);
      return { cueTime: Ji2.scaleTime(i4.presentation_time, i4.timescale, i4.presentation_time_delta, t5), duration: Ji2.scaleTime(i4.event_duration, i4.timescale), frames: s6 };
    });
  };
  var rs2 = { findBox: Yi2, parseType: Qi2, timescale: ai2, startTime: oi2, compositionStartTime: li2, videoTrackIds: hi2, tracks: ui2, getTimescaleFromMediaHeader: di2, getEmsgID3: ci2 }, as2 = Me2, os2 = function(e10) {
    var t5 = 31 & e10[1];
    return t5 <<= 8, t5 |= e10[2];
  }, ls2 = function(e10) {
    return !!(64 & e10[1]);
  }, hs2 = function(e10) {
    var t5 = 0;
    return (48 & e10[3]) >>> 4 > 1 && (t5 += e10[4] + 1), t5;
  }, us2 = function(e10) {
    if (!ls2(e10)) return null;
    var t5 = 4 + hs2(e10);
    if (t5 >= e10.byteLength) return null;
    var i4, s6 = null;
    return 192 & (i4 = e10[t5 + 7]) && ((s6 = {}).pts = (14 & e10[t5 + 9]) << 27 | (255 & e10[t5 + 10]) << 20 | (254 & e10[t5 + 11]) << 12 | (255 & e10[t5 + 12]) << 5 | (254 & e10[t5 + 13]) >>> 3, s6.pts *= 4, s6.pts += (6 & e10[t5 + 13]) >>> 1, s6.dts = s6.pts, 64 & i4 && (s6.dts = (14 & e10[t5 + 14]) << 27 | (255 & e10[t5 + 15]) << 20 | (254 & e10[t5 + 16]) << 12 | (255 & e10[t5 + 17]) << 5 | (254 & e10[t5 + 18]) >>> 3, s6.dts *= 4, s6.dts += (6 & e10[t5 + 18]) >>> 1)), s6;
  }, ds2 = function(e10) {
    switch (e10) {
      case 5:
        return "slice_layer_without_partitioning_rbsp_idr";
      case 6:
        return "sei_rbsp";
      case 7:
        return "seq_parameter_set_rbsp";
      case 8:
        return "pic_parameter_set_rbsp";
      case 9:
        return "access_unit_delimiter_rbsp";
      default:
        return null;
    }
  }, cs2 = { parseType: function(e10, t5) {
    var i4 = os2(e10);
    return 0 === i4 ? "pat" : i4 === t5 ? "pmt" : t5 ? "pes" : null;
  }, parsePat: function(e10) {
    var t5 = ls2(e10), i4 = 4 + hs2(e10);
    return t5 && (i4 += e10[i4] + 1), (31 & e10[i4 + 10]) << 8 | e10[i4 + 11];
  }, parsePmt: function(e10) {
    var t5 = {}, i4 = ls2(e10), s6 = 4 + hs2(e10);
    if (i4 && (s6 += e10[s6] + 1), 1 & e10[s6 + 5]) {
      var n7;
      n7 = 3 + ((15 & e10[s6 + 1]) << 8 | e10[s6 + 2]) - 4;
      for (var r6 = 12 + ((15 & e10[s6 + 10]) << 8 | e10[s6 + 11]); r6 < n7; ) {
        var a7 = s6 + r6;
        t5[(31 & e10[a7 + 1]) << 8 | e10[a7 + 2]] = e10[a7], r6 += 5 + ((15 & e10[a7 + 3]) << 8 | e10[a7 + 4]);
      }
      return t5;
    }
  }, parsePayloadUnitStartIndicator: ls2, parsePesType: function(e10, t5) {
    switch (t5[os2(e10)]) {
      case as2.H264_STREAM_TYPE:
        return "video";
      case as2.ADTS_STREAM_TYPE:
        return "audio";
      case as2.METADATA_STREAM_TYPE:
        return "timed-metadata";
      default:
        return null;
    }
  }, parsePesTime: us2, videoPacketContainsKeyFrame: function(e10) {
    for (var t5 = 4 + hs2(e10), i4 = e10.subarray(t5), s6 = 0, n7 = 0, r6 = false; n7 < i4.byteLength - 3; n7++) if (1 === i4[n7 + 2]) {
      s6 = n7 + 5;
      break;
    }
    for (; s6 < i4.byteLength; ) switch (i4[s6]) {
      case 0:
        if (0 !== i4[s6 - 1]) {
          s6 += 2;
          break;
        }
        if (0 !== i4[s6 - 2]) {
          s6++;
          break;
        }
        n7 + 3 !== s6 - 2 && "slice_layer_without_partitioning_rbsp_idr" === ds2(31 & i4[n7 + 3]) && (r6 = true);
        do {
          s6++;
        } while (1 !== i4[s6] && s6 < i4.length);
        n7 = s6 - 2, s6 += 3;
        break;
      case 1:
        if (0 !== i4[s6 - 1] || 0 !== i4[s6 - 2]) {
          s6 += 3;
          break;
        }
        "slice_layer_without_partitioning_rbsp_idr" === ds2(31 & i4[n7 + 3]) && (r6 = true), n7 = s6 - 2, s6 += 3;
        break;
      default:
        s6 += 3;
    }
    return i4 = i4.subarray(n7), s6 -= n7, n7 = 0, i4 && i4.byteLength > 3 && "slice_layer_without_partitioning_rbsp_idr" === ds2(31 & i4[n7 + 3]) && (r6 = true), r6;
  } }, ps2 = Me2, ms2 = Ve2.handleRollover, gs2 = {};
  gs2.ts = cs2, gs2.aac = Ot2;
  var fs2 = ue2.ONE_SECOND_IN_TS, ys2 = 188, _s2 = 71, bs2 = function(e10, t5) {
    for (var i4, s6 = 0, n7 = ys2; n7 < e10.byteLength; ) if (e10[s6] !== _s2 || e10[n7] !== _s2) s6++, n7++;
    else {
      switch (i4 = e10.subarray(s6, n7), gs2.ts.parseType(i4, t5.pid)) {
        case "pat":
          t5.pid = gs2.ts.parsePat(i4);
          break;
        case "pmt":
          var r6 = gs2.ts.parsePmt(i4);
          t5.table = t5.table || {}, Object.keys(r6).forEach(function(e11) {
            t5.table[e11] = r6[e11];
          });
      }
      s6 += ys2, n7 += ys2;
    }
  }, vs2 = function(e10, t5, i4) {
    for (var s6, n7, r6, a7, o5 = 0, l7 = ys2, h3 = false; l7 <= e10.byteLength; ) if (e10[o5] !== _s2 || e10[l7] !== _s2 && l7 !== e10.byteLength) o5++, l7++;
    else {
      if (s6 = e10.subarray(o5, l7), "pes" === gs2.ts.parseType(s6, t5.pid)) n7 = gs2.ts.parsePesType(s6, t5.table), r6 = gs2.ts.parsePayloadUnitStartIndicator(s6), "audio" === n7 && r6 && (a7 = gs2.ts.parsePesTime(s6)) && (a7.type = "audio", i4.audio.push(a7), h3 = true);
      if (h3) break;
      o5 += ys2, l7 += ys2;
    }
    for (o5 = (l7 = e10.byteLength) - ys2, h3 = false; o5 >= 0; ) if (e10[o5] !== _s2 || e10[l7] !== _s2 && l7 !== e10.byteLength) o5--, l7--;
    else {
      if (s6 = e10.subarray(o5, l7), "pes" === gs2.ts.parseType(s6, t5.pid)) n7 = gs2.ts.parsePesType(s6, t5.table), r6 = gs2.ts.parsePayloadUnitStartIndicator(s6), "audio" === n7 && r6 && (a7 = gs2.ts.parsePesTime(s6)) && (a7.type = "audio", i4.audio.push(a7), h3 = true);
      if (h3) break;
      o5 -= ys2, l7 -= ys2;
    }
  }, Ts2 = function(e10, t5, i4) {
    for (var s6, n7, r6, a7, o5, l7, h3, u5 = 0, d6 = ys2, c4 = false, p3 = { data: [], size: 0 }; d6 < e10.byteLength; ) if (e10[u5] !== _s2 || e10[d6] !== _s2) u5++, d6++;
    else {
      if (s6 = e10.subarray(u5, d6), "pes" === gs2.ts.parseType(s6, t5.pid)) {
        if (n7 = gs2.ts.parsePesType(s6, t5.table), r6 = gs2.ts.parsePayloadUnitStartIndicator(s6), "video" === n7 && (r6 && !c4 && (a7 = gs2.ts.parsePesTime(s6)) && (a7.type = "video", i4.video.push(a7), c4 = true), !i4.firstKeyFrame)) {
          if (r6 && 0 !== p3.size) {
            for (o5 = new Uint8Array(p3.size), l7 = 0; p3.data.length; ) h3 = p3.data.shift(), o5.set(h3, l7), l7 += h3.byteLength;
            if (gs2.ts.videoPacketContainsKeyFrame(o5)) {
              var m6 = gs2.ts.parsePesTime(o5);
              m6 ? (i4.firstKeyFrame = m6, i4.firstKeyFrame.type = "video") : console.warn("Failed to extract PTS/DTS from PES at first keyframe. This could be an unusual TS segment, or else mux.js did not parse your TS segment correctly. If you know your TS segments do contain PTS/DTS on keyframes please file a bug report! You can try ffprobe to double check for yourself.");
            }
            p3.size = 0;
          }
          p3.data.push(s6), p3.size += s6.byteLength;
        }
      }
      if (c4 && i4.firstKeyFrame) break;
      u5 += ys2, d6 += ys2;
    }
    for (u5 = (d6 = e10.byteLength) - ys2, c4 = false; u5 >= 0; ) if (e10[u5] !== _s2 || e10[d6] !== _s2) u5--, d6--;
    else {
      if (s6 = e10.subarray(u5, d6), "pes" === gs2.ts.parseType(s6, t5.pid)) n7 = gs2.ts.parsePesType(s6, t5.table), r6 = gs2.ts.parsePayloadUnitStartIndicator(s6), "video" === n7 && r6 && (a7 = gs2.ts.parsePesTime(s6)) && (a7.type = "video", i4.video.push(a7), c4 = true);
      if (c4) break;
      u5 -= ys2, d6 -= ys2;
    }
  }, Ss2 = function(e10, t5) {
    if (e10.audio && e10.audio.length) {
      var i4 = t5;
      (void 0 === i4 || isNaN(i4)) && (i4 = e10.audio[0].dts), e10.audio.forEach(function(e11) {
        e11.dts = ms2(e11.dts, i4), e11.pts = ms2(e11.pts, i4), e11.dtsTime = e11.dts / fs2, e11.ptsTime = e11.pts / fs2;
      });
    }
    if (e10.video && e10.video.length) {
      var s6 = t5;
      if ((void 0 === s6 || isNaN(s6)) && (s6 = e10.video[0].dts), e10.video.forEach(function(e11) {
        e11.dts = ms2(e11.dts, s6), e11.pts = ms2(e11.pts, s6), e11.dtsTime = e11.dts / fs2, e11.ptsTime = e11.pts / fs2;
      }), e10.firstKeyFrame) {
        var n7 = e10.firstKeyFrame;
        n7.dts = ms2(n7.dts, s6), n7.pts = ms2(n7.pts, s6), n7.dtsTime = n7.dts / fs2, n7.ptsTime = n7.pts / fs2;
      }
    }
  }, Es2 = function(e10) {
    for (var t5, i4 = false, s6 = 0, n7 = null, r6 = null, a7 = 0, o5 = 0; e10.length - o5 >= 3; ) {
      switch (gs2.aac.parseType(e10, o5)) {
        case "timed-metadata":
          if (e10.length - o5 < 10) {
            i4 = true;
            break;
          }
          if ((a7 = gs2.aac.parseId3TagSize(e10, o5)) > e10.length) {
            i4 = true;
            break;
          }
          null === r6 && (t5 = e10.subarray(o5, o5 + a7), r6 = gs2.aac.parseAacTimestamp(t5)), o5 += a7;
          break;
        case "audio":
          if (e10.length - o5 < 7) {
            i4 = true;
            break;
          }
          if ((a7 = gs2.aac.parseAdtsSize(e10, o5)) > e10.length) {
            i4 = true;
            break;
          }
          null === n7 && (t5 = e10.subarray(o5, o5 + a7), n7 = gs2.aac.parseSampleRate(t5)), s6++, o5 += a7;
          break;
        default:
          o5++;
      }
      if (i4) return null;
    }
    if (null === n7 || null === r6) return null;
    var l7 = fs2 / n7;
    return { audio: [{ type: "audio", dts: r6, pts: r6 }, { type: "audio", dts: r6 + 1024 * s6 * l7, pts: r6 + 1024 * s6 * l7 }] };
  }, ws2 = function(e10) {
    var t5 = { pid: null, table: null }, i4 = {};
    for (var s6 in bs2(e10, t5), t5.table) {
      if (t5.table.hasOwnProperty(s6)) switch (t5.table[s6]) {
        case ps2.H264_STREAM_TYPE:
          i4.video = [], Ts2(e10, t5, i4), 0 === i4.video.length && delete i4.video;
          break;
        case ps2.ADTS_STREAM_TYPE:
          i4.audio = [], vs2(e10, t5, i4), 0 === i4.audio.length && delete i4.audio;
      }
    }
    return i4;
  }, Cs2 = { inspect: function(e10, t5) {
    var i4;
    return (i4 = gs2.aac.isLikelyAacData(e10) ? Es2(e10) : ws2(e10)) && (i4.audio || i4.video) ? (Ss2(i4, t5), i4) : null;
  }, parseAudioPes_: vs2 };
  const ks2 = function(e10, t5) {
    t5.on("data", function(t6) {
      const i4 = t6.initSegment;
      t6.initSegment = { data: i4.buffer, byteOffset: i4.byteOffset, byteLength: i4.byteLength };
      const s6 = t6.data;
      t6.data = s6.buffer, e10.postMessage({ action: "data", segment: t6, byteOffset: s6.byteOffset, byteLength: s6.byteLength }, [t6.data]);
    }), t5.on("done", function(t6) {
      e10.postMessage({ action: "done" });
    }), t5.on("gopInfo", function(t6) {
      e10.postMessage({ action: "gopInfo", gopInfo: t6 });
    }), t5.on("videoSegmentTimingInfo", function(t6) {
      const i4 = { start: { decode: ue2.videoTsToSeconds(t6.start.dts), presentation: ue2.videoTsToSeconds(t6.start.pts) }, end: { decode: ue2.videoTsToSeconds(t6.end.dts), presentation: ue2.videoTsToSeconds(t6.end.pts) }, baseMediaDecodeTime: ue2.videoTsToSeconds(t6.baseMediaDecodeTime) };
      t6.prependedContentDuration && (i4.prependedContentDuration = ue2.videoTsToSeconds(t6.prependedContentDuration)), e10.postMessage({ action: "videoSegmentTimingInfo", videoSegmentTimingInfo: i4 });
    }), t5.on("audioSegmentTimingInfo", function(t6) {
      const i4 = { start: { decode: ue2.videoTsToSeconds(t6.start.dts), presentation: ue2.videoTsToSeconds(t6.start.pts) }, end: { decode: ue2.videoTsToSeconds(t6.end.dts), presentation: ue2.videoTsToSeconds(t6.end.pts) }, baseMediaDecodeTime: ue2.videoTsToSeconds(t6.baseMediaDecodeTime) };
      t6.prependedContentDuration && (i4.prependedContentDuration = ue2.videoTsToSeconds(t6.prependedContentDuration)), e10.postMessage({ action: "audioSegmentTimingInfo", audioSegmentTimingInfo: i4 });
    }), t5.on("id3Frame", function(t6) {
      e10.postMessage({ action: "id3Frame", id3Frame: t6 });
    }), t5.on("caption", function(t6) {
      e10.postMessage({ action: "caption", caption: t6 });
    }), t5.on("trackinfo", function(t6) {
      e10.postMessage({ action: "trackinfo", trackInfo: t6 });
    }), t5.on("audioTimingInfo", function(t6) {
      e10.postMessage({ action: "audioTimingInfo", audioTimingInfo: { start: ue2.videoTsToSeconds(t6.start), end: ue2.videoTsToSeconds(t6.end) } });
    }), t5.on("videoTimingInfo", function(t6) {
      e10.postMessage({ action: "videoTimingInfo", videoTimingInfo: { start: ue2.videoTsToSeconds(t6.start), end: ue2.videoTsToSeconds(t6.end) } });
    }), t5.on("log", function(t6) {
      e10.postMessage({ action: "log", log: t6 });
    });
  };
  class Is2 {
    constructor(e10, t5) {
      this.options = t5 || {}, this.self = e10, this.init();
    }
    init() {
      this.transmuxer && this.transmuxer.dispose(), this.transmuxer = new pi2.Transmuxer(this.options), ks2(this.self, this.transmuxer);
    }
    pushMp4Captions(e10) {
      this.captionParser || (this.captionParser = new qi2(), this.captionParser.init());
      const t5 = new Uint8Array(e10.data, e10.byteOffset, e10.byteLength), i4 = this.captionParser.parse(t5, e10.trackIds, e10.timescales);
      this.self.postMessage({ action: "mp4Captions", captions: i4 && i4.captions || [], logs: i4 && i4.logs || [], data: t5.buffer }, [t5.buffer]);
    }
    probeMp4StartTime({ timescales: e10, data: t5 }) {
      const i4 = rs2.startTime(e10, t5);
      this.self.postMessage({ action: "probeMp4StartTime", startTime: i4, data: t5 }, [t5.buffer]);
    }
    probeMp4Tracks({ data: e10 }) {
      const t5 = rs2.tracks(e10);
      this.self.postMessage({ action: "probeMp4Tracks", tracks: t5, data: e10 }, [e10.buffer]);
    }
    probeEmsgID3({ data: e10, offset: t5 }) {
      const i4 = rs2.getEmsgID3(e10, t5);
      this.self.postMessage({ action: "probeEmsgID3", id3Frames: i4, emsgData: e10 }, [e10.buffer]);
    }
    probeTs({ data: e10, baseStartTime: t5 }) {
      const i4 = "number" != typeof t5 || isNaN(t5) ? void 0 : t5 * ue2.ONE_SECOND_IN_TS, s6 = Cs2.inspect(e10, i4);
      let n7 = null;
      s6 && (n7 = { hasVideo: s6.video && 2 === s6.video.length || false, hasAudio: s6.audio && 2 === s6.audio.length || false }, n7.hasVideo && (n7.videoStart = s6.video[0].ptsTime), n7.hasAudio && (n7.audioStart = s6.audio[0].ptsTime)), this.self.postMessage({ action: "probeTs", result: n7, data: e10 }, [e10.buffer]);
    }
    clearAllMp4Captions() {
      this.captionParser && this.captionParser.clearAllCaptions();
    }
    clearParsedMp4Captions() {
      this.captionParser && this.captionParser.clearParsedCaptions();
    }
    push(e10) {
      const t5 = new Uint8Array(e10.data, e10.byteOffset, e10.byteLength);
      this.transmuxer.push(t5);
    }
    reset() {
      this.transmuxer.reset();
    }
    setTimestampOffset(e10) {
      const t5 = e10.timestampOffset || 0;
      this.transmuxer.setBaseMediaDecodeTime(Math.round(ue2.secondsToVideoTs(t5)));
    }
    setAudioAppendStart(e10) {
      this.transmuxer.setAudioAppendStart(Math.ceil(ue2.secondsToVideoTs(e10.appendStart)));
    }
    setRemux(e10) {
      this.transmuxer.setRemux(e10.remux);
    }
    flush(e10) {
      this.transmuxer.flush(), self.postMessage({ action: "done", type: "transmuxed" });
    }
    endTimeline() {
      this.transmuxer.endTimeline(), self.postMessage({ action: "endedtimeline", type: "transmuxed" });
    }
    alignGopsWith(e10) {
      this.transmuxer.alignGopsWith(e10.gopsToAlignWith.slice());
    }
  }
  self.onmessage = function(e10) {
    "init" === e10.data.action && e10.data.options ? this.messageHandlers = new Is2(self, e10.data.options) : (this.messageHandlers || (this.messageHandlers = new Is2(self)), e10.data && e10.data.action && "init" !== e10.data.action && this.messageHandlers[e10.data.action] && this.messageHandlers[e10.data.action](e10.data));
  };
}));
var _c = mc(yc);
var bc = (e9, t4, i3) => {
  const { type: s5, initSegment: n6, captions: r5, captionStreams: a6, metadata: o4, videoFrameDtsTime: l6, videoFramePtsTime: h2 } = e9.data.segment;
  t4.buffer.push({ captions: r5, captionStreams: a6, metadata: o4 });
  const u4 = e9.data.segment.boxes || { data: e9.data.segment.data }, d5 = { type: s5, data: new Uint8Array(u4.data, u4.data.byteOffset, u4.data.byteLength), initSegment: new Uint8Array(n6.data, n6.byteOffset, n6.byteLength) };
  void 0 !== l6 && (d5.videoFrameDtsTime = l6), void 0 !== h2 && (d5.videoFramePtsTime = h2), i3(d5);
};
var vc = ({ transmuxedData: e9, callback: t4 }) => {
  e9.buffer = [], t4(e9);
};
var Tc = (e9, t4) => {
  t4.gopInfo = e9.data.gopInfo;
};
var Sc = (e9) => {
  const { transmuxer: t4, bytes: i3, audioAppendStart: s5, gopsToAlignWith: n6, remux: r5, onData: a6, onTrackInfo: o4, onAudioTimingInfo: l6, onVideoTimingInfo: h2, onVideoSegmentTimingInfo: u4, onAudioSegmentTimingInfo: d5, onId3: c3, onCaptions: p2, onDone: m5, onEndedTimeline: g4, onTransmuxerLog: f5, isEndOfTimeline: y4, segment: _2, triggerSegmentEventFn: b3 } = e9, v5 = { buffer: [] };
  let T2 = y4;
  const S4 = (i4) => {
    t4.currentTransmux === e9 && ("data" === i4.data.action && bc(i4, v5, a6), "trackinfo" === i4.data.action && o4(i4.data.trackInfo), "gopInfo" === i4.data.action && Tc(i4, v5), "audioTimingInfo" === i4.data.action && l6(i4.data.audioTimingInfo), "videoTimingInfo" === i4.data.action && h2(i4.data.videoTimingInfo), "videoSegmentTimingInfo" === i4.data.action && u4(i4.data.videoSegmentTimingInfo), "audioSegmentTimingInfo" === i4.data.action && d5(i4.data.audioSegmentTimingInfo), "id3Frame" === i4.data.action && c3([i4.data.id3Frame], i4.data.id3Frame.dispatchType), "caption" === i4.data.action && p2(i4.data.caption), "endedtimeline" === i4.data.action && (T2 = false, g4()), "log" === i4.data.action && f5(i4.data.log), "transmuxed" === i4.data.type && (T2 || (t4.onmessage = null, vc({ transmuxedData: v5, callback: m5 }), Ec(t4))));
  }, E4 = () => {
    const e10 = { message: "Received an error message from the transmuxer worker", metadata: { errorType: du.Error.StreamingFailedToTransmuxSegment, segmentInfo: Vp({ segment: _2 }) } };
    m5(null, e10);
  };
  if (t4.onmessage = S4, t4.onerror = E4, s5 && t4.postMessage({ action: "setAudioAppendStart", appendStart: s5 }), Array.isArray(n6) && t4.postMessage({ action: "alignGopsWith", gopsToAlignWith: n6 }), void 0 !== r5 && t4.postMessage({ action: "setRemux", remux: r5 }), i3.byteLength) {
    const e10 = i3 instanceof ArrayBuffer ? i3 : i3.buffer, s6 = i3 instanceof ArrayBuffer ? 0 : i3.byteOffset;
    b3({ type: "segmenttransmuxingstart", segment: _2 }), t4.postMessage({ action: "push", data: e10, byteOffset: s6, byteLength: i3.byteLength }, [e10]);
  }
  y4 && t4.postMessage({ action: "endTimeline" }), t4.postMessage({ action: "flush" });
};
var Ec = (e9) => {
  e9.currentTransmux = null, e9.transmuxQueue.length && (e9.currentTransmux = e9.transmuxQueue.shift(), "function" == typeof e9.currentTransmux ? e9.currentTransmux() : Sc(e9.currentTransmux));
};
var wc = (e9, t4) => {
  e9.postMessage({ action: t4 }), Ec(e9);
};
var Cc = (e9, t4) => {
  if (!t4.currentTransmux) return t4.currentTransmux = e9, void wc(t4, e9);
  t4.transmuxQueue.push(wc.bind(null, t4, e9));
};
var kc = (e9) => {
  if (!e9.transmuxer.currentTransmux) return e9.transmuxer.currentTransmux = e9, void Sc(e9);
  e9.transmuxer.transmuxQueue.push(e9);
};
var Ic = { reset: (e9) => {
  Cc("reset", e9);
}, endTimeline: (e9) => {
  Cc("endTimeline", e9);
}, transmux: kc, createTransmuxer: (e9) => {
  const t4 = new _c();
  t4.currentTransmux = null, t4.transmuxQueue = [];
  const i3 = t4.terminate;
  return t4.terminate = () => (t4.currentTransmux = null, t4.transmuxQueue.length = 0, i3.call(t4)), t4.postMessage({ action: "init", options: e9 }), t4;
} };
var xc = function(e9) {
  const t4 = e9.transmuxer, i3 = e9.endAction || e9.action, s5 = e9.callback, n6 = Ue({}, e9, { endAction: null, transmuxer: null, callback: null }), r5 = (n7) => {
    n7.data.action === i3 && (t4.removeEventListener("message", r5), n7.data.data && (n7.data.data = new Uint8Array(n7.data.data, e9.byteOffset || 0, e9.byteLength || n7.data.data.byteLength), e9.data && (e9.data = n7.data.data)), s5(n7.data));
  };
  if (t4.addEventListener("message", r5), e9.data) {
    const i4 = e9.data instanceof ArrayBuffer;
    n6.byteOffset = i4 ? 0 : e9.data.byteOffset, n6.byteLength = e9.data.byteLength;
    const s6 = [i4 ? e9.data : e9.data.buffer];
    t4.postMessage(n6, s6);
  } else t4.postMessage(n6);
};
var Ac = { FAILURE: 2, TIMEOUT: -101, ABORTED: -102 };
var Dc = (e9) => {
  e9.forEach((e10) => {
    e10.abort();
  });
};
var Pc = (e9) => ({ bandwidth: e9.bandwidth, bytesReceived: e9.bytesReceived || 0, roundTripTime: e9.roundTripTime || 0 });
var Lc = (e9) => {
  const t4 = e9.target, i3 = { bandwidth: 1 / 0, bytesReceived: 0, roundTripTime: Date.now() - t4.requestTime || 0 };
  return i3.bytesReceived = e9.loaded, i3.bandwidth = Math.floor(i3.bytesReceived / i3.roundTripTime * 8 * 1e3), i3;
};
var Oc = (e9, t4) => {
  const { requestType: i3 } = t4, s5 = gd({ requestType: i3, request: t4, error: e9 });
  return t4.timedout ? { status: t4.status, message: "HLS request timed-out at URL: " + t4.uri, code: Ac.TIMEOUT, xhr: t4, metadata: s5 } : t4.aborted ? { status: t4.status, message: "HLS request aborted at URL: " + t4.uri, code: Ac.ABORTED, xhr: t4, metadata: s5 } : e9 ? { status: t4.status, message: "HLS request errored at URL: " + t4.uri, code: Ac.FAILURE, xhr: t4, metadata: s5 } : "arraybuffer" === t4.responseType && 0 === t4.response.byteLength ? { status: t4.status, message: "Empty HLS response at URL: " + t4.uri, code: Ac.FAILURE, xhr: t4, metadata: s5 } : null;
};
var Nc = (e9, t4, i3, s5) => (n6, r5) => {
  const a6 = r5.response, o4 = Oc(n6, r5);
  if (o4) return i3(o4, e9);
  if (16 !== a6.byteLength) return i3({ status: r5.status, message: "Invalid HLS key at URL: " + r5.uri, code: Ac.FAILURE, xhr: r5 }, e9);
  const l6 = new DataView(a6), h2 = new Uint32Array([l6.getUint32(0), l6.getUint32(4), l6.getUint32(8), l6.getUint32(12)]);
  for (let e10 = 0; e10 < t4.length; e10++) t4[e10].bytes = h2;
  const u4 = { uri: r5.uri };
  return s5({ type: "segmentkeyloadcomplete", segment: e9, keyInfo: u4 }), i3(null, e9);
};
var Rc = (e9, t4) => {
  const i3 = Qs(e9.map.bytes);
  if ("mp4" !== i3) {
    const s5 = e9.map.resolvedUri || e9.map.uri, n6 = i3 || "unknown";
    return t4({ internal: true, message: `Found unsupported ${n6} container for initialization segment at URL: ${s5}`, code: Ac.FAILURE, metadata: { mediaType: n6 } });
  }
  xc({ action: "probeMp4Tracks", data: e9.map.bytes, transmuxer: e9.transmuxer, callback: ({ tracks: i4, data: s5 }) => (e9.map.bytes = s5, i4.forEach(function(t5) {
    e9.map.tracks = e9.map.tracks || {}, e9.map.tracks[t5.type] || (e9.map.tracks[t5.type] = t5, "number" == typeof t5.id && t5.timescale && (e9.map.timescales = e9.map.timescales || {}, e9.map.timescales[t5.id] = t5.timescale));
  }), t4(null)) });
};
var Mc = ({ segment: e9, finishProcessingFn: t4, triggerSegmentEventFn: i3 }) => (s5, n6) => {
  const r5 = Oc(s5, n6);
  if (r5) return t4(r5, e9);
  const a6 = new Uint8Array(n6.response);
  if (i3({ type: "segmentloaded", segment: e9 }), e9.map.key) return e9.map.encryptedBytes = a6, t4(null, e9);
  e9.map.bytes = a6, Rc(e9, function(i4) {
    if (i4) return i4.xhr = n6, i4.status = n6.status, t4(i4, e9);
    t4(null, e9);
  });
};
var Uc = ({ segment: e9, finishProcessingFn: t4, responseType: i3, triggerSegmentEventFn: s5 }) => (n6, r5) => {
  const a6 = Oc(n6, r5);
  if (a6) return t4(a6, e9);
  s5({ type: "segmentloaded", segment: e9 });
  const o4 = "arraybuffer" !== i3 && r5.responseText ? dc(r5.responseText.substring(e9.lastReachedChar || 0)) : r5.response;
  return e9.stats = Pc(r5), e9.key ? e9.encryptedBytes = new Uint8Array(o4) : e9.bytes = new Uint8Array(o4), t4(null, e9);
};
var Bc = ({ segment: e9, bytes: t4, trackInfoFn: i3, timingInfoFn: s5, videoSegmentTimingInfoFn: n6, audioSegmentTimingInfoFn: r5, id3Fn: a6, captionsFn: o4, isEndOfTimeline: l6, endedTimelineFn: h2, dataFn: u4, doneFn: d5, onTransmuxerLog: c3, triggerSegmentEventFn: p2 }) => {
  const m5 = e9.map && e9.map.tracks || {}, g4 = Boolean(m5.audio && m5.video);
  let f5 = s5.bind(null, e9, "audio", "start");
  const y4 = s5.bind(null, e9, "audio", "end");
  let _2 = s5.bind(null, e9, "video", "start");
  const b3 = s5.bind(null, e9, "video", "end"), v5 = () => kc({ bytes: t4, transmuxer: e9.transmuxer, audioAppendStart: e9.audioAppendStart, gopsToAlignWith: e9.gopsToAlignWith, remux: g4, onData: (t5) => {
    t5.type = "combined" === t5.type ? "video" : t5.type, u4(e9, t5);
  }, onTrackInfo: (t5) => {
    i3 && (g4 && (t5.isMuxed = true), i3(e9, t5));
  }, onAudioTimingInfo: (e10) => {
    f5 && void 0 !== e10.start && (f5(e10.start), f5 = null), y4 && void 0 !== e10.end && y4(e10.end);
  }, onVideoTimingInfo: (e10) => {
    _2 && void 0 !== e10.start && (_2(e10.start), _2 = null), b3 && void 0 !== e10.end && b3(e10.end);
  }, onVideoSegmentTimingInfo: (t5) => {
    const i4 = { pts: { start: t5.start.presentation, end: t5.end.presentation }, dts: { start: t5.start.decode, end: t5.end.decode } };
    p2({ type: "segmenttransmuxingtiminginfoavailable", segment: e9, timingInfo: i4 }), n6(t5);
  }, onAudioSegmentTimingInfo: (t5) => {
    const i4 = { pts: { start: t5.start.pts, end: t5.end.pts }, dts: { start: t5.start.dts, end: t5.end.dts } };
    p2({ type: "segmenttransmuxingtiminginfoavailable", segment: e9, timingInfo: i4 }), r5(t5);
  }, onId3: (t5, i4) => {
    a6(e9, t5, i4);
  }, onCaptions: (t5) => {
    o4(e9, [t5]);
  }, isEndOfTimeline: l6, onEndedTimeline: () => {
    h2();
  }, onTransmuxerLog: c3, onDone: (t5, i4) => {
    d5 && (t5.type = "combined" === t5.type ? "video" : t5.type, p2({ type: "segmenttransmuxingcomplete", segment: e9 }), d5(i4, e9, t5));
  }, segment: e9, triggerSegmentEventFn: p2 });
  xc({ action: "probeTs", transmuxer: e9.transmuxer, data: t4, baseStartTime: e9.baseStartTime, callback: (s6) => {
    e9.bytes = t4 = s6.data;
    const n7 = s6.result;
    n7 && (i3(e9, { hasAudio: n7.hasAudio, hasVideo: n7.hasVideo, isMuxed: g4 }), i3 = null), v5();
  } });
};
var Fc = ({ segment: e9, bytes: t4, trackInfoFn: i3, timingInfoFn: s5, videoSegmentTimingInfoFn: n6, audioSegmentTimingInfoFn: r5, id3Fn: a6, captionsFn: o4, isEndOfTimeline: l6, endedTimelineFn: h2, dataFn: u4, doneFn: d5, onTransmuxerLog: c3, triggerSegmentEventFn: p2 }) => {
  let m5 = new Uint8Array(t4);
  if (Js(m5)) {
    e9.isFmp4 = true;
    const { tracks: n7 } = e9.map, r6 = { isFmp4: true, hasVideo: !!n7.video, hasAudio: !!n7.audio };
    n7.audio && n7.audio.codec && "enca" !== n7.audio.codec && (r6.audioCodec = n7.audio.codec), n7.video && n7.video.codec && "encv" !== n7.video.codec && (r6.videoCodec = n7.video.codec), n7.video && n7.audio && (r6.isMuxed = true), i3(e9, r6);
    const l7 = (t5, i4) => {
      u4(e9, { data: m5, type: r6.hasAudio && !r6.isMuxed ? "audio" : "video" }), i4 && i4.length && a6(e9, i4), t5 && t5.length && o4(e9, t5), d5(null, e9, {});
    };
    xc({ action: "probeMp4StartTime", timescales: e9.map.timescales, data: m5, transmuxer: e9.transmuxer, callback: ({ data: i4, startTime: a7 }) => {
      t4 = i4.buffer, e9.bytes = m5 = i4, r6.hasAudio && !r6.isMuxed && s5(e9, "audio", "start", a7), r6.hasVideo && s5(e9, "video", "start", a7), xc({ action: "probeEmsgID3", data: m5, transmuxer: e9.transmuxer, offset: a7, callback: ({ emsgData: i5, id3Frames: s6 }) => {
        t4 = i5.buffer, e9.bytes = m5 = i5, n7.video && i5.byteLength && e9.transmuxer ? xc({ action: "pushMp4Captions", endAction: "mp4Captions", transmuxer: e9.transmuxer, data: m5, timescales: e9.map.timescales, trackIds: [n7.video.id], callback: (i6) => {
          t4 = i6.data.buffer, e9.bytes = m5 = i6.data, i6.logs.forEach(function(e10) {
            c3(vu(e10, { stream: "mp4CaptionParser" }));
          }), l7(i6.captions, s6);
        } }) : l7(void 0, s6);
      } });
    } });
  } else if (e9.transmuxer) {
    if (void 0 === e9.container && (e9.container = Qs(m5)), "ts" !== e9.container && "aac" !== e9.container) return i3(e9, { hasAudio: false, hasVideo: false }), void d5(null, e9, {});
    Bc({ segment: e9, bytes: t4, trackInfoFn: i3, timingInfoFn: s5, videoSegmentTimingInfoFn: n6, audioSegmentTimingInfoFn: r5, id3Fn: a6, captionsFn: o4, isEndOfTimeline: l6, endedTimelineFn: h2, dataFn: u4, doneFn: d5, onTransmuxerLog: c3, triggerSegmentEventFn: p2 });
  } else d5(null, e9, {});
};
var qc = function({ id: e9, key: t4, encryptedBytes: i3, decryptionWorker: s5, segment: n6, doneFn: r5 }, a6) {
  const o4 = (t5) => {
    if (t5.data.source === e9) {
      s5.removeEventListener("message", o4);
      const e10 = t5.data.decrypted;
      a6(new Uint8Array(e10.bytes, e10.byteOffset, e10.byteLength));
    }
  };
  let l6;
  s5.onerror = () => {
    const e10 = "An error occurred in the decryption worker", t5 = Vp({ segment: n6 }), i4 = { message: e10, metadata: { error: new Error(e10), errorType: du.Error.StreamingFailedToDecryptSegment, segmentInfo: t5, keyInfo: { uri: n6.key.resolvedUri || n6.map.key.resolvedUri } } };
    r5(i4, n6);
  }, s5.addEventListener("message", o4), l6 = t4.bytes.slice ? t4.bytes.slice() : new Uint32Array(Array.prototype.slice.call(t4.bytes)), s5.postMessage(Md({ source: e9, encrypted: i3, key: l6, iv: t4.iv }), [i3.buffer, l6.buffer]);
};
var jc = ({ decryptionWorker: e9, segment: t4, trackInfoFn: i3, timingInfoFn: s5, videoSegmentTimingInfoFn: n6, audioSegmentTimingInfoFn: r5, id3Fn: a6, captionsFn: o4, isEndOfTimeline: l6, endedTimelineFn: h2, dataFn: u4, doneFn: d5, onTransmuxerLog: c3, triggerSegmentEventFn: p2 }) => {
  p2({ type: "segmentdecryptionstart" }), qc({ id: t4.requestId, key: t4.key, encryptedBytes: t4.encryptedBytes, decryptionWorker: e9, segment: t4, doneFn: d5 }, (e10) => {
    t4.bytes = e10, p2({ type: "segmentdecryptioncomplete", segment: t4 }), Fc({ segment: t4, bytes: t4.bytes, trackInfoFn: i3, timingInfoFn: s5, videoSegmentTimingInfoFn: n6, audioSegmentTimingInfoFn: r5, id3Fn: a6, captionsFn: o4, isEndOfTimeline: l6, endedTimelineFn: h2, dataFn: u4, doneFn: d5, onTransmuxerLog: c3, triggerSegmentEventFn: p2 });
  });
};
var $c = ({ activeXhrs: e9, decryptionWorker: t4, trackInfoFn: i3, timingInfoFn: s5, videoSegmentTimingInfoFn: n6, audioSegmentTimingInfoFn: r5, id3Fn: a6, captionsFn: o4, isEndOfTimeline: l6, endedTimelineFn: h2, dataFn: u4, doneFn: d5, onTransmuxerLog: c3, triggerSegmentEventFn: p2 }) => {
  let m5 = 0, g4 = false;
  return (f5, y4) => {
    if (!g4) {
      if (f5) return g4 = true, Dc(e9), d5(f5, y4);
      if (m5 += 1, m5 === e9.length) {
        const m6 = function() {
          if (y4.encryptedBytes) return jc({ decryptionWorker: t4, segment: y4, trackInfoFn: i3, timingInfoFn: s5, videoSegmentTimingInfoFn: n6, audioSegmentTimingInfoFn: r5, id3Fn: a6, captionsFn: o4, isEndOfTimeline: l6, endedTimelineFn: h2, dataFn: u4, doneFn: d5, onTransmuxerLog: c3, triggerSegmentEventFn: p2 });
          Fc({ segment: y4, bytes: y4.bytes, trackInfoFn: i3, timingInfoFn: s5, videoSegmentTimingInfoFn: n6, audioSegmentTimingInfoFn: r5, id3Fn: a6, captionsFn: o4, isEndOfTimeline: l6, endedTimelineFn: h2, dataFn: u4, doneFn: d5, onTransmuxerLog: c3, triggerSegmentEventFn: p2 });
        };
        if (y4.endOfAllRequests = Date.now(), y4.map && y4.map.encryptedBytes && !y4.map.bytes) return p2({ type: "segmentdecryptionstart", segment: y4 }), qc({ decryptionWorker: t4, id: y4.requestId + "-init", encryptedBytes: y4.map.encryptedBytes, key: y4.map.key, segment: y4, doneFn: d5 }, (t5) => {
          y4.map.bytes = t5, p2({ type: "segmentdecryptioncomplete", segment: y4 }), Rc(y4, (t6) => {
            if (t6) return Dc(e9), d5(t6, y4);
            m6();
          });
        });
        m6();
      }
    }
  };
};
var Hc = ({ loadendState: e9, abortFn: t4 }) => (i3) => {
  i3.target.aborted && t4 && !e9.calledAbortFn && (t4(), e9.calledAbortFn = true);
};
var Vc = ({ segment: e9, progressFn: t4, trackInfoFn: i3, timingInfoFn: s5, videoSegmentTimingInfoFn: n6, audioSegmentTimingInfoFn: r5, id3Fn: a6, captionsFn: o4, isEndOfTimeline: l6, endedTimelineFn: h2, dataFn: u4 }) => (i4) => {
  if (!i4.target.aborted) return e9.stats = vu(e9.stats, Lc(i4)), !e9.stats.firstBytesReceivedAt && e9.stats.bytesReceived && (e9.stats.firstBytesReceivedAt = Date.now()), t4(i4, e9);
};
var zc = ({ xhr: e9, xhrOptions: t4, decryptionWorker: i3, segment: s5, abortFn: n6, progressFn: r5, trackInfoFn: a6, timingInfoFn: o4, videoSegmentTimingInfoFn: l6, audioSegmentTimingInfoFn: h2, id3Fn: u4, captionsFn: d5, isEndOfTimeline: c3, endedTimelineFn: p2, dataFn: m5, doneFn: g4, onTransmuxerLog: f5, triggerSegmentEventFn: y4 }) => {
  const _2 = [], b3 = $c({ activeXhrs: _2, decryptionWorker: i3, trackInfoFn: a6, timingInfoFn: o4, videoSegmentTimingInfoFn: l6, audioSegmentTimingInfoFn: h2, id3Fn: u4, captionsFn: d5, isEndOfTimeline: c3, endedTimelineFn: p2, dataFn: m5, doneFn: g4, onTransmuxerLog: f5, triggerSegmentEventFn: y4 });
  if (s5.key && !s5.key.bytes) {
    const i4 = [s5.key];
    s5.map && !s5.map.bytes && s5.map.key && s5.map.key.resolvedUri === s5.key.resolvedUri && i4.push(s5.map.key);
    const n7 = vu(t4, { uri: s5.key.resolvedUri, responseType: "arraybuffer", requestType: "segment-key" }), r6 = Nc(s5, i4, b3, y4);
    y4({ type: "segmentkeyloadstart", segment: s5, keyInfo: { uri: s5.key.resolvedUri } });
    const a7 = e9(n7, r6);
    _2.push(a7);
  }
  if (s5.map && !s5.map.bytes) {
    if (s5.map.key && (!s5.key || s5.key.resolvedUri !== s5.map.key.resolvedUri)) {
      const i5 = vu(t4, { uri: s5.map.key.resolvedUri, responseType: "arraybuffer", requestType: "segment-key" }), n8 = Nc(s5, [s5.map.key], b3, y4);
      y4({ type: "segmentkeyloadstart", segment: s5, keyInfo: { uri: s5.map.key.resolvedUri } });
      const r7 = e9(i5, n8);
      _2.push(r7);
    }
    const i4 = vu(t4, { uri: s5.map.resolvedUri, responseType: "arraybuffer", headers: Ld(s5.map), requestType: "segment-media-initialization" }), n7 = Mc({ segment: s5, finishProcessingFn: b3, triggerSegmentEventFn: y4 });
    y4({ type: "segmentloadstart", segment: s5 });
    const r6 = e9(i4, n7);
    _2.push(r6);
  }
  const v5 = vu(t4, { uri: s5.part && s5.part.resolvedUri || s5.resolvedUri, responseType: "arraybuffer", headers: Ld(s5), requestType: "segment" }), T2 = Uc({ segment: s5, finishProcessingFn: b3, responseType: v5.responseType, triggerSegmentEventFn: y4 });
  y4({ type: "segmentloadstart", segment: s5 });
  const S4 = e9(v5, T2);
  S4.addEventListener("progress", Vc({ segment: s5, progressFn: r5, trackInfoFn: a6, timingInfoFn: o4, videoSegmentTimingInfoFn: l6, audioSegmentTimingInfoFn: h2, id3Fn: u4, captionsFn: d5, isEndOfTimeline: c3, endedTimelineFn: p2, dataFn: m5 })), _2.push(S4);
  const E4 = {};
  return _2.forEach((e10) => {
    e10.addEventListener("loadend", Hc({ loadendState: E4, abortFn: n6 }));
  }), () => Dc(_2);
};
var Wc = bu("CodecUtils");
var Gc = function(e9) {
  const t4 = e9.attributes || {};
  if (t4.CODECS) return at(t4.CODECS);
};
var Xc = (e9, t4) => {
  const i3 = t4.attributes || {};
  return e9 && e9.mediaGroups && e9.mediaGroups.AUDIO && i3.AUDIO && e9.mediaGroups.AUDIO[i3.AUDIO];
};
var Kc = (e9, t4) => {
  if (!Xc(e9, t4)) return true;
  const i3 = t4.attributes || {}, s5 = e9.mediaGroups.AUDIO[i3.AUDIO];
  for (const n6 in s5) if (!s5[n6].uri && !s5[n6].playlists) return true;
  return false;
};
var Yc = function(e9) {
  const t4 = {};
  return e9.forEach(({ mediaType: e10, type: i3, details: s5 }) => {
    t4[e10] = t4[e10] || [], t4[e10].push(rt(`${i3}${s5}`));
  }), Object.keys(t4).forEach(function(e10) {
    if (t4[e10].length > 1) return Wc(`multiple ${e10} codecs found as attributes: ${t4[e10].join(", ")}. Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.`), void (t4[e10] = null);
    t4[e10] = t4[e10][0];
  }), t4;
};
var Qc = function(e9) {
  let t4 = 0;
  return e9.audio && t4++, e9.video && t4++, t4;
};
var Jc = function(e9, t4) {
  const i3 = t4.attributes || {}, s5 = Yc(Gc(t4) || []);
  if (Xc(e9, t4) && !s5.audio && !Kc(e9, t4)) {
    const t5 = Yc(ot(e9, i3.AUDIO) || []);
    t5.audio && (s5.audio = t5.audio);
  }
  return s5;
};
var Zc = bu("PlaylistSelector");
var ep = function(e9) {
  if (!e9 || !e9.playlist) return;
  const t4 = e9.playlist;
  return JSON.stringify({ id: t4.id, bandwidth: e9.bandwidth, width: e9.width, height: e9.height, codecs: t4.attributes && t4.attributes.CODECS || "" });
};
var tp = function(e9, t4) {
  if (!e9) return "";
  const i3 = _.getComputedStyle(e9);
  return i3 ? i3[t4] : "";
};
var ip = function(e9, t4) {
  const i3 = e9.slice();
  e9.sort(function(e10, s5) {
    const n6 = t4(e10, s5);
    return 0 === n6 ? i3.indexOf(e10) - i3.indexOf(s5) : n6;
  });
};
var sp = function(e9, t4) {
  let i3, s5;
  return e9.attributes.BANDWIDTH && (i3 = e9.attributes.BANDWIDTH), i3 = i3 || _.Number.MAX_VALUE, t4.attributes.BANDWIDTH && (s5 = t4.attributes.BANDWIDTH), s5 = s5 || _.Number.MAX_VALUE, i3 - s5;
};
var np = function(e9, t4) {
  let i3, s5;
  return e9.attributes.RESOLUTION && e9.attributes.RESOLUTION.width && (i3 = e9.attributes.RESOLUTION.width), i3 = i3 || _.Number.MAX_VALUE, t4.attributes.RESOLUTION && t4.attributes.RESOLUTION.width && (s5 = t4.attributes.RESOLUTION.width), s5 = s5 || _.Number.MAX_VALUE, i3 === s5 && e9.attributes.BANDWIDTH && t4.attributes.BANDWIDTH ? e9.attributes.BANDWIDTH - t4.attributes.BANDWIDTH : i3 - s5;
};
var rp = function(e9, t4, i3, s5, n6, r5) {
  if (!e9) return;
  const a6 = { bandwidth: t4, width: i3, height: s5, limitRenditionByPlayerDimensions: n6 };
  let o4 = e9.playlists;
  id.isAudioOnly(e9) && (o4 = r5.getAudioTrackPlaylists_(), a6.audioOnly = true);
  let l6 = o4.map((e10) => {
    let t5;
    const i4 = e10.attributes && e10.attributes.RESOLUTION && e10.attributes.RESOLUTION.width, s6 = e10.attributes && e10.attributes.RESOLUTION && e10.attributes.RESOLUTION.height;
    return t5 = e10.attributes && e10.attributes.BANDWIDTH, t5 = t5 || _.Number.MAX_VALUE, { bandwidth: t5, width: i4, height: s6, playlist: e10 };
  });
  ip(l6, (e10, t5) => e10.bandwidth - t5.bandwidth), l6 = l6.filter((e10) => !id.isIncompatible(e10.playlist));
  let h2 = l6.filter((e10) => id.isEnabled(e10.playlist));
  h2.length || (h2 = l6.filter((e10) => !id.isDisabled(e10.playlist)));
  const u4 = h2.filter((e10) => e10.bandwidth * uc.BANDWIDTH_VARIANCE < t4);
  let d5 = u4[u4.length - 1];
  const c3 = u4.filter((e10) => e10.bandwidth === d5.bandwidth)[0];
  if (false === n6) {
    const e10 = c3 || h2[0] || l6[0];
    if (e10 && e10.playlist) {
      let t5 = "sortedPlaylistReps";
      return c3 && (t5 = "bandwidthBestRep"), h2[0] && (t5 = "enabledPlaylistReps"), Zc(`choosing ${ep(e10)} using ${t5} with options`, a6), e10.playlist;
    }
    return Zc("could not choose a playlist with options", a6), null;
  }
  const p2 = u4.filter((e10) => e10.width && e10.height);
  ip(p2, (e10, t5) => e10.width - t5.width);
  const m5 = p2.filter((e10) => e10.width === i3 && e10.height === s5);
  d5 = m5[m5.length - 1];
  const g4 = m5.filter((e10) => e10.bandwidth === d5.bandwidth)[0];
  let f5, y4, b3, v5;
  if (g4 || (f5 = p2.filter((e10) => e10.width > i3 || e10.height > s5), y4 = f5.filter((e10) => e10.width === f5[0].width && e10.height === f5[0].height), d5 = y4[y4.length - 1], b3 = y4.filter((e10) => e10.bandwidth === d5.bandwidth)[0]), r5.leastPixelDiffSelector) {
    const e10 = p2.map((e11) => (e11.pixelDiff = Math.abs(e11.width - i3) + Math.abs(e11.height - s5), e11));
    ip(e10, (e11, t5) => e11.pixelDiff === t5.pixelDiff ? t5.bandwidth - e11.bandwidth : e11.pixelDiff - t5.pixelDiff), v5 = e10[0];
  }
  const T2 = v5 || b3 || g4 || c3 || h2[0] || l6[0];
  if (T2 && T2.playlist) {
    let e10 = "sortedPlaylistReps";
    return v5 ? e10 = "leastPixelDiffRep" : b3 ? e10 = "resolutionPlusOneRep" : g4 ? e10 = "resolutionBestRep" : c3 ? e10 = "bandwidthBestRep" : h2[0] && (e10 = "enabledPlaylistReps"), Zc(`choosing ${ep(T2)} using ${e10} with options`, a6), T2.playlist;
  }
  return Zc("could not choose a playlist with options", a6), null;
};
var ap = function() {
  let e9 = this.useDevicePixelRatio && _.devicePixelRatio || 1;
  return isNaN(this.customPixelRatio) || (e9 = this.customPixelRatio), rp(this.playlists.main, this.systemBandwidth, parseInt(tp(this.tech_.el(), "width"), 10) * e9, parseInt(tp(this.tech_.el(), "height"), 10) * e9, this.limitRenditionByPlayerDimensions, this.playlistController_);
};
var op = function(e9) {
  let t4 = -1, i3 = -1;
  if (e9 < 0 || e9 > 1) throw new Error("Moving average bandwidth decay must be between 0 and 1.");
  return function() {
    let s5 = this.useDevicePixelRatio && _.devicePixelRatio || 1;
    return isNaN(this.customPixelRatio) || (s5 = this.customPixelRatio), t4 < 0 && (t4 = this.systemBandwidth, i3 = this.systemBandwidth), this.systemBandwidth > 0 && this.systemBandwidth !== i3 && (t4 = e9 * this.systemBandwidth + (1 - e9) * t4, i3 = this.systemBandwidth), rp(this.playlists.main, t4, parseInt(tp(this.tech_.el(), "width"), 10) * s5, parseInt(tp(this.tech_.el(), "height"), 10) * s5, this.limitRenditionByPlayerDimensions, this.playlistController_);
  };
};
var lp = function(e9) {
  const { main: t4, currentTime: i3, bandwidth: s5, duration: n6, segmentDuration: r5, timeUntilRebuffer: a6, currentTimeline: o4, syncController: l6 } = e9, h2 = t4.playlists.filter((e10) => !id.isIncompatible(e10));
  let u4 = h2.filter(id.isEnabled);
  u4.length || (u4 = h2.filter((e10) => !id.isDisabled(e10)));
  const d5 = u4.filter(id.hasAttribute.bind(null, "BANDWIDTH")).map((e10) => {
    const t5 = l6.getSyncPoint(e10, n6, o4, i3) ? 1 : 2;
    return { playlist: e10, rebufferingImpact: id.estimateSegmentRequestTime(r5, s5, e10) * t5 - a6 };
  }), c3 = d5.filter((e10) => e10.rebufferingImpact <= 0);
  return ip(c3, (e10, t5) => sp(t5.playlist, e10.playlist)), c3.length ? c3[0] : (ip(d5, (e10, t5) => e10.rebufferingImpact - t5.rebufferingImpact), d5[0] || null);
};
var hp = function() {
  const e9 = this.playlists.main.playlists.filter(id.isEnabled);
  ip(e9, (e10, t4) => sp(e10, t4));
  return e9.filter((e10) => !!Jc(this.playlists.main, e10).video)[0] || null;
};
var up = (e9) => {
  let t4, i3 = 0;
  return e9.bytes && (t4 = new Uint8Array(e9.bytes), e9.segments.forEach((e10) => {
    t4.set(e10, i3), i3 += e10.byteLength;
  })), t4;
};
function dp(e9) {
  try {
    return new URL(e9).pathname.split("/").slice(-2).join("/");
  } catch (t4) {
    return "";
  }
}
var cp = function(e9, t4, i3) {
  if (!e9[i3]) {
    t4.trigger({ type: "usage", name: "vhs-608" });
    let s5 = i3;
    /^cc708_/.test(i3) && (s5 = "SERVICE" + i3.split("_")[1]);
    const n6 = t4.textTracks().getTrackById(s5);
    if (n6) e9[i3] = n6;
    else {
      let n7 = i3, r5 = i3, a6 = false;
      const o4 = (t4.options_.vhs && t4.options_.vhs.captionServices || {})[s5];
      o4 && (n7 = o4.label, r5 = o4.language, a6 = o4.default), e9[i3] = t4.addRemoteTextTrack({ kind: "captions", id: s5, default: a6, label: n7, language: r5 }, false).track;
    }
  }
};
var pp = function({ inbandTextTracks: e9, captionArray: t4, timestampOffset: i3 }) {
  if (!t4) return;
  const s5 = _.WebKitDataCue || _.VTTCue;
  t4.forEach((t5) => {
    const n6 = t5.stream;
    t5.content ? t5.content.forEach((r5) => {
      const a6 = new s5(t5.startTime + i3, t5.endTime + i3, r5.text);
      a6.line = r5.line, a6.align = "left", a6.position = r5.position, a6.positionAlign = "line-left", e9[n6].addCue(a6);
    }) : e9[n6].addCue(new s5(t5.startTime + i3, t5.endTime + i3, t5.text));
  });
};
var mp = function(e9) {
  Object.defineProperties(e9.frame, { id: { get: () => (du.log.warn("cue.frame.id is deprecated. Use cue.value.key instead."), e9.value.key) }, value: { get: () => (du.log.warn("cue.frame.value is deprecated. Use cue.value.data instead."), e9.value.data) }, privateData: { get: () => (du.log.warn("cue.frame.privateData is deprecated. Use cue.value.data instead."), e9.value.data) } });
};
var gp = ({ inbandTextTracks: e9, metadataArray: t4, timestampOffset: i3, videoDuration: s5 }) => {
  if (!t4) return;
  const n6 = _.WebKitDataCue || _.VTTCue, r5 = e9.metadataTrack_;
  if (!r5) return;
  if (t4.forEach((e10) => {
    const t5 = e10.cueTime + i3;
    !("number" != typeof t5 || _.isNaN(t5) || t5 < 0) && t5 < 1 / 0 && e10.frames && e10.frames.length && e10.frames.forEach((e11) => {
      const i4 = new n6(t5, t5, e11.value || e11.url || e11.data || "");
      i4.frame = e11, i4.value = e11, mp(i4), r5.addCue(i4);
    });
  }), !r5.cues || !r5.cues.length) return;
  const a6 = r5.cues, o4 = [];
  for (let u4 = 0; u4 < a6.length; u4++) a6[u4] && o4.push(a6[u4]);
  const l6 = o4.reduce((e10, t5) => {
    const i4 = e10[t5.startTime] || [];
    return i4.push(t5), e10[t5.startTime] = i4, e10;
  }, {}), h2 = Object.keys(l6).sort((e10, t5) => Number(e10) - Number(t5));
  h2.forEach((e10, t5) => {
    const i4 = l6[e10], n7 = isFinite(s5) ? s5 : e10, r6 = Number(h2[t5 + 1]) || n7;
    i4.forEach((e11) => {
      e11.endTime = r6;
    });
  });
};
var fp = { id: "ID", class: "CLASS", startDate: "START-DATE", duration: "DURATION", endDate: "END-DATE", endOnNext: "END-ON-NEXT", plannedDuration: "PLANNED-DURATION", scte35Out: "SCTE35-OUT", scte35In: "SCTE35-IN" };
var yp = /* @__PURE__ */ new Set(["id", "class", "startDate", "duration", "endDate", "endOnNext", "startTime", "endTime", "processDateRange"]);
var _p = ({ inbandTextTracks: e9, dateRanges: t4 }) => {
  const i3 = e9.metadataTrack_;
  if (!i3) return;
  const s5 = _.WebKitDataCue || _.VTTCue;
  t4.forEach((e10) => {
    for (const t5 of Object.keys(e10)) {
      if (yp.has(t5)) continue;
      const n6 = new s5(e10.startTime, e10.endTime, "");
      n6.id = e10.id, n6.type = "com.apple.quicktime.HLS", n6.value = { key: fp[t5], data: e10[t5] }, "scte35Out" !== t5 && "scte35In" !== t5 || (n6.value.data = new Uint8Array(n6.value.data.match(/[\da-f]{2}/gi)).buffer), i3.addCue(n6);
    }
    e10.processDateRange();
  });
};
var bp = (e9, t4, i3) => {
  e9.metadataTrack_ || (e9.metadataTrack_ = i3.addRemoteTextTrack({ kind: "metadata", label: "Timed Metadata" }, false).track, du.browser.IS_ANY_SAFARI || (e9.metadataTrack_.inBandMetadataTrackDispatchType = t4));
};
var vp = function(e9, t4, i3) {
  let s5, n6;
  if (i3 && i3.cues) for (s5 = i3.cues.length; s5--; ) n6 = i3.cues[s5], n6.startTime >= e9 && n6.endTime <= t4 && i3.removeCue(n6);
};
var Tp = function(e9) {
  const t4 = e9.cues;
  if (!t4) return;
  const i3 = {};
  for (let s5 = t4.length - 1; s5 >= 0; s5--) {
    const n6 = t4[s5], r5 = `${n6.startTime}-${n6.endTime}-${n6.text}`;
    i3[r5] ? e9.removeCue(n6) : i3[r5] = n6;
  }
};
var Sp = (e9, t4, i3) => {
  if (null == t4 || !e9.length) return [];
  const s5 = Math.ceil((t4 - i3 + 3) * en.ONE_SECOND_IN_TS);
  let n6;
  for (n6 = 0; n6 < e9.length && !(e9[n6].pts > s5); n6++) ;
  return e9.slice(n6);
};
var Ep = (e9, t4, i3) => {
  if (!t4.length) return e9;
  if (i3) return t4.slice();
  const s5 = t4[0].pts;
  let n6 = 0;
  for (; n6 < e9.length && !(e9[n6].pts >= s5); n6++) ;
  return e9.slice(0, n6).concat(t4);
};
var wp = (e9, t4, i3, s5) => {
  const n6 = Math.ceil((t4 - s5) * en.ONE_SECOND_IN_TS), r5 = Math.ceil((i3 - s5) * en.ONE_SECOND_IN_TS), a6 = e9.slice();
  let o4 = e9.length;
  for (; o4-- && !(e9[o4].pts <= r5); ) ;
  if (-1 === o4) return a6;
  let l6 = o4 + 1;
  for (; l6-- && !(e9[l6].pts <= n6); ) ;
  return l6 = Math.max(l6, 0), a6.splice(l6, o4 - l6 + 1), a6;
};
var Cp = function(e9, t4) {
  if (!e9 && !t4 || !e9 && t4 || e9 && !t4) return false;
  if (e9 === t4) return true;
  const i3 = Object.keys(e9).sort(), s5 = Object.keys(t4).sort();
  if (i3.length !== s5.length) return false;
  for (let n6 = 0; n6 < i3.length; n6++) {
    const r5 = i3[n6];
    if (r5 !== s5[n6]) return false;
    if (e9[r5] !== t4[r5]) return false;
  }
  return true;
};
var kp = function(e9, t4, i3) {
  t4 = t4 || [];
  const s5 = [];
  let n6 = 0;
  for (let r5 = 0; r5 < t4.length; r5++) {
    const a6 = t4[r5];
    if (e9 === a6.timeline && (s5.push(r5), n6 += a6.duration, n6 > i3)) return r5;
  }
  return 0 === s5.length ? 0 : s5[s5.length - 1];
};
var Ip = 1;
var xp = 500;
var Ap = (e9) => "number" == typeof e9 && isFinite(e9);
var Dp = 1 / 60;
var Pp = (e9, t4, i3) => "main" === e9 && t4 && i3 ? i3.hasAudio || i3.hasVideo ? t4.hasVideo && !i3.hasVideo ? "Only audio found in segment when we expected video. We can't switch to audio only from a stream that had video. To get rid of this message, please add codec information to the manifest." : !t4.hasVideo && i3.hasVideo ? "Video found in segment when we expected only audio. We can't switch to a stream with video from an audio only stream. To get rid of this message, please add codec information to the manifest." : null : "Neither audio nor video found in segment." : null;
var Lp = (e9, t4, i3) => {
  let s5 = t4 - uc.BACK_BUFFER_LENGTH;
  e9.length && (s5 = Math.max(s5, e9.start(0)));
  const n6 = t4 - i3;
  return Math.min(n6, s5);
};
var Op = (e9) => {
  const { startOfSegment: t4, duration: i3, segment: s5, part: n6, playlist: { mediaSequence: r5, id: a6, segments: o4 = [] }, mediaIndex: l6, partIndex: h2, timeline: u4 } = e9, d5 = o4.length - 1;
  let c3 = "mediaIndex/partIndex increment";
  e9.getMediaInfoForTime ? c3 = `getMediaInfoForTime (${e9.getMediaInfoForTime})` : e9.isSyncRequest && (c3 = "getSyncSegmentCandidate (isSyncRequest)"), e9.independent && (c3 += ` with independent ${e9.independent}`);
  const p2 = "number" == typeof h2, m5 = e9.segment.uri ? "segment" : "pre-segment", g4 = p2 ? Fu({ preloadSegment: s5 }) - 1 : 0;
  return `${m5} [${r5 + l6}/${r5 + d5}]` + (p2 ? ` part [${h2}/${g4}]` : "") + ` segment start/end [${s5.start} => ${s5.end}]` + (p2 ? ` part start/end [${n6.start} => ${n6.end}]` : "") + ` startOfSegment [${t4}] duration [${i3}] timeline [${u4}] selected by [${c3}] playlist [${a6}]`;
};
var Np = (e9) => `${e9}TimingInfo`;
var Rp = ({ segmentTimeline: e9, currentTimeline: t4, startOfSegment: i3, buffered: s5, overrideCheck: n6 }) => n6 || e9 !== t4 ? e9 < t4 ? i3 : s5.length ? s5.end(s5.length - 1) : i3 : null;
var Mp = ({ timelineChangeController: e9, currentTimeline: t4, segmentTimeline: i3, loaderType: s5, audioDisabled: n6 }) => {
  if (t4 === i3) return false;
  if ("audio" === s5) {
    const t5 = e9.lastTimelineChange({ type: "main" });
    return !t5 || t5.to !== i3;
  }
  if ("main" === s5 && n6) {
    const t5 = e9.pendingTimelineChange({ type: "audio" });
    return !t5 || t5.to !== i3;
  }
  return false;
};
var Up = (e9) => {
  if (!e9) return false;
  const t4 = e9.pendingTimelineChange({ type: "audio" }), i3 = e9.pendingTimelineChange({ type: "main" }), s5 = t4 && i3, n6 = s5 && t4.to !== i3.to;
  return !(!s5 || -1 === t4.from || -1 === i3.from || !n6);
};
var Bp = (e9) => {
  e9 && (e9.pause(), e9.resetEverything(), e9.load());
};
var Fp = (e9) => {
  const t4 = e9.timelineChangeController_.pendingTimelineChange({ type: "audio" }), i3 = e9.timelineChangeController_.pendingTimelineChange({ type: "main" });
  return t4 && i3 && t4.to < i3.to;
};
var qp = (e9) => {
  const t4 = e9.pendingSegment_;
  if (!t4) return;
  if (Mp({ timelineChangeController: e9.timelineChangeController_, currentTimeline: e9.currentTimeline_, segmentTimeline: t4.timeline, loaderType: e9.loaderType_, audioDisabled: e9.audioDisabled_ }) && Up(e9.timelineChangeController_)) {
    if (Fp(e9)) return void e9.timelineChangeController_.trigger("audioTimelineBehind");
    Bp(e9);
  }
};
var jp = (e9) => {
  let t4 = 0;
  return ["video", "audio"].forEach(function(i3) {
    const s5 = e9[`${i3}TimingInfo`];
    if (!s5) return;
    const { start: n6, end: r5 } = s5;
    let a6;
    "bigint" == typeof n6 || "bigint" == typeof r5 ? a6 = _.BigInt(r5) - _.BigInt(n6) : "number" == typeof n6 && "number" == typeof r5 && (a6 = r5 - n6), void 0 !== a6 && a6 > t4 && (t4 = a6);
  }), "bigint" == typeof t4 && t4 < Number.MAX_SAFE_INTEGER && (t4 = Number(t4)), t4;
};
var $p = ({ segmentDuration: e9, maxDuration: t4 }) => !!e9 && Math.round(e9) > t4 + Eu;
var Hp = (e9, t4) => {
  if ("hls" !== t4) return null;
  const i3 = jp({ audioTimingInfo: e9.audioTimingInfo, videoTimingInfo: e9.videoTimingInfo });
  if (!i3) return null;
  const s5 = e9.playlist.targetDuration, n6 = $p({ segmentDuration: i3, maxDuration: 2 * s5 }), r5 = $p({ segmentDuration: i3, maxDuration: s5 }), a6 = `Segment with index ${e9.mediaIndex} from playlist ${e9.playlist.id} has a duration of ${i3} when the reported duration is ${e9.duration} and the target duration is ${s5}. For HLS content, a duration in excess of the target duration may result in playback issues. See the HLS specification section on EXT-X-TARGETDURATION for more details: https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1`;
  return n6 || r5 ? { severity: n6 ? "warn" : "info", message: a6 } : null;
};
var Vp = ({ type: e9, segment: t4 }) => {
  if (!t4) return;
  const i3 = Boolean(t4.key || t4.map && t4.map.ke), s5 = Boolean(t4.map && !t4.map.bytes), n6 = void 0 === t4.startOfSegment ? t4.start : t4.startOfSegment;
  return { type: e9 || t4.type, uri: t4.resolvedUri || t4.uri, start: n6, duration: t4.duration, isEncrypted: i3, isMediaInitialization: s5 };
};
var zp = class extends du.EventTarget {
  constructor(e9, t4 = {}) {
    if (super(), !e9) throw new TypeError("Initialization settings are required");
    if ("function" != typeof e9.currentTime) throw new TypeError("No currentTime getter specified");
    if (!e9.mediaSource) throw new TypeError("No MediaSource specified");
    this.bandwidth = e9.bandwidth, this.throughput = { rate: 0, count: 0 }, this.roundTrip = NaN, this.resetStats_(), this.mediaIndex = null, this.partIndex = null, this.hasPlayed_ = e9.hasPlayed, this.currentTime_ = e9.currentTime, this.seekable_ = e9.seekable, this.seeking_ = e9.seeking, this.duration_ = e9.duration, this.mediaSource_ = e9.mediaSource, this.vhs_ = e9.vhs, this.loaderType_ = e9.loaderType, this.currentMediaInfo_ = void 0, this.startingMediaInfo_ = void 0, this.segmentMetadataTrack_ = e9.segmentMetadataTrack, this.goalBufferLength_ = e9.goalBufferLength, this.sourceType_ = e9.sourceType, this.sourceUpdater_ = e9.sourceUpdater, this.inbandTextTracks_ = e9.inbandTextTracks, this.state_ = "INIT", this.timelineChangeController_ = e9.timelineChangeController, this.shouldSaveSegmentTimingInfo_ = true, this.parse708captions_ = e9.parse708captions, this.useDtsForTimestampOffset_ = e9.useDtsForTimestampOffset, this.captionServices_ = e9.captionServices, this.exactManifestTimings = e9.exactManifestTimings, this.addMetadataToTextTrack = e9.addMetadataToTextTrack, this.checkBufferTimeout_ = null, this.error_ = void 0, this.currentTimeline_ = -1, this.shouldForceTimestampOffsetAfterResync_ = false, this.pendingSegment_ = null, this.xhrOptions_ = null, this.pendingSegments_ = [], this.audioDisabled_ = false, this.isPendingTimestampOffset_ = false, this.gopBuffer_ = [], this.timeMapping_ = 0, this.safeAppend_ = false, this.appendInitSegment_ = { audio: true, video: true }, this.playlistOfLastInitSegment_ = { audio: null, video: null }, this.callQueue_ = [], this.loadQueue_ = [], this.metadataQueue_ = { id3: [], caption: [] }, this.waitingOnRemove_ = false, this.quotaExceededErrorRetryTimeout_ = null, this.activeInitSegmentId_ = null, this.initSegments_ = {}, this.cacheEncryptionKeys_ = e9.cacheEncryptionKeys, this.keyCache_ = {}, this.decrypter_ = e9.decrypter, this.syncController_ = e9.syncController, this.syncPoint_ = { segmentIndex: 0, time: 0 }, this.transmuxer_ = this.createTransmuxer_(), this.triggerSyncInfoUpdate_ = () => this.trigger("syncinfoupdate"), this.syncController_.on("syncinfoupdate", this.triggerSyncInfoUpdate_), this.mediaSource_.addEventListener("sourceopen", () => {
      this.isEndOfStream_() || (this.ended_ = false);
    }), this.fetchAtBuffer_ = false, this.logger_ = bu(`SegmentLoader[${this.loaderType_}]`), Object.defineProperty(this, "state", { get() {
      return this.state_;
    }, set(e10) {
      e10 !== this.state_ && (this.logger_(`${this.state_} -> ${e10}`), this.state_ = e10, this.trigger("statechange"));
    } }), this.sourceUpdater_.on("ready", () => {
      this.hasEnoughInfoToAppend_() ? this.processCallQueue_() : qp(this);
    }), this.sourceUpdater_.on("codecschange", (e10) => {
      this.trigger(Ue({ type: "codecschange" }, e10));
    }), "main" === this.loaderType_ && this.timelineChangeController_.on("pendingtimelinechange", () => {
      this.hasEnoughInfoToAppend_() ? this.processCallQueue_() : qp(this);
    }), "audio" === this.loaderType_ && this.timelineChangeController_.on("timelinechange", (e10) => {
      this.trigger(Ue({ type: "timelinechange" }, e10)), this.hasEnoughInfoToLoad_() ? this.processLoadQueue_() : qp(this), this.hasEnoughInfoToAppend_() ? this.processCallQueue_() : qp(this);
    });
  }
  get mediaSequenceSync_() {
    return this.syncController_.getMediaSequenceSync(this.loaderType_);
  }
  createTransmuxer_() {
    return Ic.createTransmuxer({ remux: false, alignGopsAtEnd: this.safeAppend_, keepOriginalTimestamps: true, parse708captions: this.parse708captions_, captionServices: this.captionServices_ });
  }
  resetStats_() {
    this.mediaBytesTransferred = 0, this.mediaRequests = 0, this.mediaRequestsAborted = 0, this.mediaRequestsTimedout = 0, this.mediaRequestsErrored = 0, this.mediaTransferDuration = 0, this.mediaSecondsLoaded = 0, this.mediaAppends = 0;
  }
  dispose() {
    this.trigger("dispose"), this.state = "DISPOSED", this.pause(), this.abort_(), this.transmuxer_ && this.transmuxer_.terminate(), this.resetStats_(), this.checkBufferTimeout_ && _.clearTimeout(this.checkBufferTimeout_), this.syncController_ && this.triggerSyncInfoUpdate_ && this.syncController_.off("syncinfoupdate", this.triggerSyncInfoUpdate_), this.off();
  }
  setAudio(e9) {
    this.audioDisabled_ = !e9, e9 ? this.appendInitSegment_.audio = true : this.sourceUpdater_.removeAudio(0, this.duration_());
  }
  abort() {
    "WAITING" === this.state ? (this.abort_(), this.state = "READY", this.paused() || this.monitorBuffer_()) : this.pendingSegment_ && (this.pendingSegment_ = null);
  }
  abort_() {
    this.pendingSegment_ && this.pendingSegment_.abortRequests && this.pendingSegment_.abortRequests(), this.pendingSegment_ = null, this.callQueue_ = [], this.loadQueue_ = [], this.metadataQueue_.id3 = [], this.metadataQueue_.caption = [], this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_), this.waitingOnRemove_ = false, _.clearTimeout(this.quotaExceededErrorRetryTimeout_), this.quotaExceededErrorRetryTimeout_ = null;
  }
  checkForAbort_(e9) {
    return "APPENDING" !== this.state || this.pendingSegment_ ? !this.pendingSegment_ || this.pendingSegment_.requestId !== e9 : (this.state = "READY", true);
  }
  error(e9) {
    return void 0 !== e9 && (this.logger_("error occurred:", e9), this.error_ = e9), this.pendingSegment_ = null, this.error_;
  }
  endOfStream() {
    this.ended_ = true, this.transmuxer_ && Ic.reset(this.transmuxer_), this.gopBuffer_.length = 0, this.pause(), this.trigger("ended");
  }
  buffered_() {
    const e9 = this.getMediaInfo_();
    if (!this.sourceUpdater_ || !e9) return Tu();
    if ("main" === this.loaderType_) {
      const { hasAudio: t4, hasVideo: i3, isMuxed: s5 } = e9;
      if (i3 && t4 && !this.audioDisabled_ && !s5) return this.sourceUpdater_.buffered();
      if (i3) return this.sourceUpdater_.videoBuffered();
    }
    return this.sourceUpdater_.audioBuffered();
  }
  initSegmentForMap(e9, t4 = false) {
    if (!e9) return null;
    const i3 = Ud(e9);
    let s5 = this.initSegments_[i3];
    return t4 && !s5 && e9.bytes && (this.initSegments_[i3] = s5 = { resolvedUri: e9.resolvedUri, byterange: e9.byterange, bytes: e9.bytes, tracks: e9.tracks, timescales: e9.timescales }), s5 || e9;
  }
  segmentKey(e9, t4 = false) {
    if (!e9) return null;
    const i3 = Bd(e9);
    let s5 = this.keyCache_[i3];
    this.cacheEncryptionKeys_ && t4 && !s5 && e9.bytes && (this.keyCache_[i3] = s5 = { resolvedUri: e9.resolvedUri, bytes: e9.bytes });
    const n6 = { resolvedUri: (s5 || e9).resolvedUri };
    return s5 && (n6.bytes = s5.bytes), n6;
  }
  couldBeginLoading_() {
    return this.playlist_ && !this.paused();
  }
  load() {
    if (this.monitorBuffer_(), this.playlist_) return "INIT" === this.state && this.couldBeginLoading_() ? this.init_() : void (!this.couldBeginLoading_() || "READY" !== this.state && "INIT" !== this.state || (this.state = "READY"));
  }
  init_() {
    return this.state = "READY", this.resetEverything(), this.monitorBuffer_();
  }
  playlist(e9, t4 = {}) {
    if (!e9) return;
    const i3 = this.playlist_, s5 = this.pendingSegment_;
    this.playlist_ = e9, this.xhrOptions_ = t4, "INIT" === this.state && (e9.syncInfo = { mediaSequence: e9.mediaSequence, time: 0 }, "main" === this.loaderType_ && this.syncController_.setDateTimeMappingForStart(e9));
    let n6 = null;
    if (i3 && (i3.id ? n6 = i3.id : i3.uri && (n6 = i3.uri)), this.logger_(`playlist update [${n6} => ${e9.id || e9.uri}]`), this.mediaSequenceSync_ && (this.mediaSequenceSync_.update(e9, this.currentTime_()), this.logger_(`Playlist update:
currentTime: ${this.currentTime_()}
bufferedEnd: ${Nu(this.buffered_())}
`, this.mediaSequenceSync_.diagnostics)), this.trigger("syncinfoupdate"), "INIT" === this.state && this.couldBeginLoading_()) return this.init_();
    if (!i3 || i3.uri !== e9.uri) {
      if (null !== this.mediaIndex) {
        !e9.endList && "number" == typeof e9.partTargetDuration ? this.resetLoader() : this.resyncLoader();
      }
      return this.currentMediaInfo_ = void 0, void this.trigger("playlistupdate");
    }
    const r5 = e9.mediaSequence - i3.mediaSequence;
    if (this.logger_(`live window shift [${r5}]`), null !== this.mediaIndex) if (this.mediaIndex -= r5, this.mediaIndex < 0) this.mediaIndex = null, this.partIndex = null;
    else {
      const e10 = this.playlist_.segments[this.mediaIndex];
      if (this.partIndex && (!e10.parts || !e10.parts.length || !e10.parts[this.partIndex])) {
        const e11 = this.mediaIndex;
        this.logger_(`currently processing part (index ${this.partIndex}) no longer exists.`), this.resetLoader(), this.mediaIndex = e11;
      }
    }
    s5 && (s5.mediaIndex -= r5, s5.mediaIndex < 0 ? (s5.mediaIndex = null, s5.partIndex = null) : (s5.mediaIndex >= 0 && (s5.segment = e9.segments[s5.mediaIndex]), s5.partIndex >= 0 && s5.segment.parts && (s5.part = s5.segment.parts[s5.partIndex]))), this.syncController_.saveExpiredSegmentInfo(i3, e9);
  }
  pause() {
    this.checkBufferTimeout_ && (_.clearTimeout(this.checkBufferTimeout_), this.checkBufferTimeout_ = null);
  }
  paused() {
    return null === this.checkBufferTimeout_;
  }
  resetEverything(e9) {
    this.ended_ = false, this.activeInitSegmentId_ = null, this.appendInitSegment_ = { audio: true, video: true }, this.resetLoader(), this.remove(0, 1 / 0, e9), this.transmuxer_ && (this.transmuxer_.postMessage({ action: "clearAllMp4Captions" }), this.transmuxer_.postMessage({ action: "reset" }));
  }
  resetLoader() {
    this.fetchAtBuffer_ = false, this.mediaSequenceSync_ && this.mediaSequenceSync_.resetAppendedStatus(), this.resyncLoader();
  }
  resyncLoader() {
    this.transmuxer_ && Ic.reset(this.transmuxer_), this.mediaIndex = null, this.partIndex = null, this.syncPoint_ = null, this.isPendingTimestampOffset_ = false;
    const e9 = this.currentMediaInfo_ && this.currentMediaInfo_.isFmp4;
    "hls" === this.sourceType_ && !e9 && (this.shouldForceTimestampOffsetAfterResync_ = true), this.callQueue_ = [], this.loadQueue_ = [], this.metadataQueue_.id3 = [], this.metadataQueue_.caption = [], this.abort(), this.transmuxer_ && this.transmuxer_.postMessage({ action: "clearParsedMp4Captions" });
  }
  remove(e9, t4, i3 = () => {
  }, s5 = false) {
    if (t4 === 1 / 0 && (t4 = this.duration_()), t4 <= e9) return void this.logger_("skipping remove because end ${end} is <= start ${start}");
    if (!this.sourceUpdater_ || !this.getMediaInfo_()) return void this.logger_("skipping remove because no source updater or starting media info");
    let n6 = 1;
    const r5 = () => {
      n6--, 0 === n6 && i3();
    };
    !s5 && this.audioDisabled_ || (n6++, this.sourceUpdater_.removeAudio(e9, t4, r5)), (s5 || "main" === this.loaderType_) && (this.gopBuffer_ = wp(this.gopBuffer_, e9, t4, this.timeMapping_), n6++, this.sourceUpdater_.removeVideo(e9, t4, r5));
    for (const a6 in this.inbandTextTracks_) vp(e9, t4, this.inbandTextTracks_[a6]);
    vp(e9, t4, this.segmentMetadataTrack_), r5();
  }
  monitorBuffer_() {
    this.checkBufferTimeout_ && _.clearTimeout(this.checkBufferTimeout_), this.checkBufferTimeout_ = _.setTimeout(this.monitorBufferTick_.bind(this), 1);
  }
  monitorBufferTick_() {
    "READY" === this.state && this.fillBuffer_(), this.checkBufferTimeout_ && _.clearTimeout(this.checkBufferTimeout_), this.checkBufferTimeout_ = _.setTimeout(this.monitorBufferTick_.bind(this), xp);
  }
  fillBuffer_() {
    if (this.sourceUpdater_.updating()) return;
    const e9 = this.chooseNextRequest_();
    if (!e9) return;
    const t4 = { segmentInfo: Vp({ type: this.loaderType_, segment: e9 }) };
    this.trigger({ type: "segmentselected", metadata: t4 }), "number" == typeof e9.timestampOffset && (this.isPendingTimestampOffset_ = false, this.timelineChangeController_.pendingTimelineChange({ type: this.loaderType_, from: this.currentTimeline_, to: e9.timeline })), this.loadSegment_(e9);
  }
  isEndOfStream_(e9 = this.mediaIndex, t4 = this.playlist_, i3 = this.partIndex) {
    if (!t4 || !this.mediaSource_) return false;
    const s5 = "number" == typeof e9 && t4.segments[e9], n6 = e9 + 1 === t4.segments.length, r5 = !s5 || !s5.parts || i3 + 1 === s5.parts.length;
    return t4.endList && "open" === this.mediaSource_.readyState && n6 && r5;
  }
  chooseNextRequest_() {
    const e9 = this.buffered_(), t4 = Nu(e9) || 0, i3 = Ru(e9, this.currentTime_()), s5 = !this.hasPlayed_() && i3 >= 1, n6 = i3 >= this.goalBufferLength_(), r5 = this.playlist_.segments;
    if (!r5.length || s5 || n6) return null;
    this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_(), this.loaderType_);
    const a6 = { partIndex: null, mediaIndex: null, startOfSegment: null, playlist: this.playlist_, isSyncRequest: Boolean(!this.syncPoint_) };
    if (a6.isSyncRequest) a6.mediaIndex = kp(this.currentTimeline_, r5, t4), this.logger_(`choose next request. Can not find sync point. Fallback to media Index: ${a6.mediaIndex}`);
    else if (null !== this.mediaIndex) {
      const e10 = r5[this.mediaIndex], i4 = "number" == typeof this.partIndex ? this.partIndex : -1;
      a6.startOfSegment = e10.end ? e10.end : t4, e10.parts && e10.parts[i4 + 1] ? (a6.mediaIndex = this.mediaIndex, a6.partIndex = i4 + 1) : a6.mediaIndex = this.mediaIndex + 1;
    } else {
      let e10, i4, s6;
      const n7 = this.fetchAtBuffer_ ? t4 : this.currentTime_();
      if (this.mediaSequenceSync_ && this.logger_(`chooseNextRequest_ request after Quality Switch:
For TargetTime: ${n7}.
CurrentTime: ${this.currentTime_()}
BufferedEnd: ${t4}
Fetch At Buffer: ${this.fetchAtBuffer_}
`, this.mediaSequenceSync_.diagnostics), this.mediaSequenceSync_ && this.mediaSequenceSync_.isReliable) {
        const t5 = this.getSyncInfoFromMediaSequenceSync_(n7);
        if (!t5) {
          const e11 = "No sync info found while using media sequence sync";
          return this.error({ message: e11, metadata: { errorType: du.Error.StreamingFailedToSelectNextSegment, error: new Error(e11) } }), this.logger_("chooseNextRequest_ - no sync info found using media sequence sync"), null;
        }
        this.logger_(`chooseNextRequest_ mediaSequence syncInfo (${t5.start} --> ${t5.end})`), e10 = t5.segmentIndex, i4 = t5.partIndex, s6 = t5.start;
      } else {
        this.logger_("chooseNextRequest_ - fallback to a regular segment selection algorithm, based on a syncPoint.");
        const t5 = id.getMediaInfoForTime({ exactManifestTimings: this.exactManifestTimings, playlist: this.playlist_, currentTime: n7, startingPartIndex: this.syncPoint_.partIndex, startingSegmentIndex: this.syncPoint_.segmentIndex, startTime: this.syncPoint_.time });
        e10 = t5.segmentIndex, i4 = t5.partIndex, s6 = t5.startTime;
      }
      a6.getMediaInfoForTime = this.fetchAtBuffer_ ? `bufferedEnd ${n7}` : `currentTime ${n7}`, a6.mediaIndex = e10, a6.startOfSegment = s6, a6.partIndex = i4, this.logger_(`choose next request. Playlist switched and we have a sync point. Media Index: ${a6.mediaIndex} `);
    }
    const o4 = r5[a6.mediaIndex];
    let l6 = o4 && "number" == typeof a6.partIndex && o4.parts && o4.parts[a6.partIndex];
    if (!o4 || "number" == typeof a6.partIndex && !l6) return null;
    "number" != typeof a6.partIndex && o4.parts && (a6.partIndex = 0, l6 = o4.parts[0]);
    const h2 = this.vhs_.playlists && this.vhs_.playlists.main && this.vhs_.playlists.main.independentSegments || this.playlist_.independentSegments;
    if (!i3 && l6 && !h2 && !l6.independent) if (0 === a6.partIndex) {
      const e10 = r5[a6.mediaIndex - 1], t5 = e10.parts && e10.parts.length && e10.parts[e10.parts.length - 1];
      t5 && t5.independent && (a6.mediaIndex -= 1, a6.partIndex = e10.parts.length - 1, a6.independent = "previous segment");
    } else o4.parts[a6.partIndex - 1].independent && (a6.partIndex -= 1, a6.independent = "previous part");
    const u4 = this.mediaSource_ && "ended" === this.mediaSource_.readyState;
    return a6.mediaIndex >= r5.length - 1 && u4 && !this.seeking_() ? null : (this.shouldForceTimestampOffsetAfterResync_ && (this.shouldForceTimestampOffsetAfterResync_ = false, a6.forceTimestampOffset = true, this.logger_("choose next request. Force timestamp offset after loader resync")), this.generateSegmentInfo_(a6));
  }
  getSyncInfoFromMediaSequenceSync_(e9) {
    if (!this.mediaSequenceSync_) return null;
    const t4 = Math.max(e9, this.mediaSequenceSync_.start);
    e9 !== t4 && this.logger_(`getSyncInfoFromMediaSequenceSync_. Pulled target time from ${e9} to ${t4}`);
    const i3 = this.mediaSequenceSync_.getSyncInfoForTime(t4);
    if (!i3) return null;
    if (!i3.isAppended) return i3;
    const s5 = this.mediaSequenceSync_.getSyncInfoForTime(i3.end);
    return s5 ? (s5.isAppended && this.logger_("getSyncInfoFromMediaSequenceSync_: We encounter unexpected scenario where next media sequence sync info is also appended!"), s5) : null;
  }
  generateSegmentInfo_(e9) {
    const { independent: t4, playlist: i3, mediaIndex: s5, startOfSegment: n6, isSyncRequest: r5, partIndex: a6, forceTimestampOffset: o4, getMediaInfoForTime: l6 } = e9, h2 = i3.segments[s5], u4 = "number" == typeof a6 && h2.parts[a6], d5 = { requestId: "segment-loader-" + Math.random(), uri: u4 && u4.resolvedUri || h2.resolvedUri, mediaIndex: s5, partIndex: u4 ? a6 : null, isSyncRequest: r5, startOfSegment: n6, playlist: i3, bytes: null, encryptedBytes: null, timestampOffset: null, timeline: h2.timeline, duration: u4 && u4.duration || h2.duration, segment: h2, part: u4, byteLength: 0, transmuxer: this.transmuxer_, getMediaInfoForTime: l6, independent: t4 }, c3 = void 0 !== o4 ? o4 : this.isPendingTimestampOffset_;
    d5.timestampOffset = this.timestampOffsetForSegment_({ segmentTimeline: h2.timeline, currentTimeline: this.currentTimeline_, startOfSegment: n6, buffered: this.buffered_(), overrideCheck: c3 });
    const p2 = Nu(this.sourceUpdater_.audioBuffered());
    return "number" == typeof p2 && (d5.audioAppendStart = p2 - this.sourceUpdater_.audioTimestampOffset()), this.sourceUpdater_.videoBuffered().length && (d5.gopsToAlignWith = Sp(this.gopBuffer_, this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_)), d5;
  }
  timestampOffsetForSegment_(e9) {
    return Rp(e9);
  }
  earlyAbortWhenNeeded_(e9) {
    if (this.vhs_.tech_.paused() || !this.xhrOptions_.timeout || !this.playlist_.attributes.BANDWIDTH) return;
    if (Date.now() - (e9.firstBytesReceivedAt || Date.now()) < 1e3) return;
    const t4 = this.currentTime_(), i3 = e9.bandwidth, s5 = this.pendingSegment_.duration, n6 = id.estimateSegmentRequestTime(s5, i3, this.playlist_, e9.bytesReceived), r5 = Pu(this.buffered_(), t4, this.vhs_.tech_.playbackRate()) - 1;
    if (n6 <= r5) return;
    const a6 = lp({ main: this.vhs_.playlists.main, currentTime: t4, bandwidth: i3, duration: this.duration_(), segmentDuration: s5, timeUntilRebuffer: r5, currentTimeline: this.currentTimeline_, syncController: this.syncController_ });
    if (!a6) return;
    const o4 = n6 - r5 - a6.rebufferingImpact;
    let l6 = 0.5;
    r5 <= Eu && (l6 = 1), !a6.playlist || a6.playlist.uri === this.playlist_.uri || o4 < l6 || (this.bandwidth = a6.playlist.attributes.BANDWIDTH * uc.BANDWIDTH_VARIANCE + 1, this.trigger("earlyabort"));
  }
  handleAbort_(e9) {
    this.logger_(`Aborting ${Op(e9)}`), this.mediaRequestsAborted += 1;
  }
  handleProgress_(e9, t4) {
    this.earlyAbortWhenNeeded_(t4.stats), this.checkForAbort_(t4.requestId) || this.trigger("progress");
  }
  handleTrackInfo_(e9, t4) {
    const { hasAudio: i3, hasVideo: s5 } = t4, n6 = { segmentInfo: Vp({ type: this.loaderType_, segment: e9 }), trackInfo: { hasAudio: i3, hasVideo: s5 } };
    this.trigger({ type: "segmenttransmuxingtrackinfoavailable", metadata: n6 }), this.earlyAbortWhenNeeded_(e9.stats), this.checkForAbort_(e9.requestId) || this.checkForIllegalMediaSwitch(t4) || (t4 = t4 || {}, Cp(this.currentMediaInfo_, t4) || (this.appendInitSegment_ = { audio: true, video: true }, this.startingMediaInfo_ = t4, this.currentMediaInfo_ = t4, this.logger_("trackinfo update", t4), this.trigger("trackinfo")), this.checkForAbort_(e9.requestId) || (this.pendingSegment_.trackInfo = t4, this.hasEnoughInfoToAppend_() ? this.processCallQueue_() : qp(this)));
  }
  handleTimingInfo_(e9, t4, i3, s5) {
    if (this.earlyAbortWhenNeeded_(e9.stats), this.checkForAbort_(e9.requestId)) return;
    const n6 = this.pendingSegment_, r5 = Np(t4);
    n6[r5] = n6[r5] || {}, n6[r5][i3] = s5, this.logger_(`timinginfo: ${t4} - ${i3} - ${s5}`), this.hasEnoughInfoToAppend_() ? this.processCallQueue_() : qp(this);
  }
  handleCaptions_(e9, t4) {
    if (this.earlyAbortWhenNeeded_(e9.stats), this.checkForAbort_(e9.requestId)) return;
    if (0 === t4.length) return void this.logger_("SegmentLoader received no captions from a caption event");
    if (!this.pendingSegment_.hasAppendedData_) return void this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, e9, t4));
    const i3 = null === this.sourceUpdater_.videoTimestampOffset() ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset(), s5 = {};
    t4.forEach((e10) => {
      s5[e10.stream] = s5[e10.stream] || { startTime: 1 / 0, captions: [], endTime: 0 };
      const t5 = s5[e10.stream];
      t5.startTime = Math.min(t5.startTime, e10.startTime + i3), t5.endTime = Math.max(t5.endTime, e10.endTime + i3), t5.captions.push(e10);
    }), Object.keys(s5).forEach((e10) => {
      const { startTime: t5, endTime: n6, captions: r5 } = s5[e10], a6 = this.inbandTextTracks_;
      this.logger_(`adding cues from ${t5} -> ${n6} for ${e10}`), cp(a6, this.vhs_.tech_, e10), vp(t5, n6, a6[e10]), pp({ captionArray: r5, inbandTextTracks: a6, timestampOffset: i3 });
    }), this.transmuxer_ && this.transmuxer_.postMessage({ action: "clearParsedMp4Captions" });
  }
  handleId3_(e9, t4, i3) {
    if (this.earlyAbortWhenNeeded_(e9.stats), this.checkForAbort_(e9.requestId)) return;
    this.pendingSegment_.hasAppendedData_ ? this.addMetadataToTextTrack(i3, t4, this.duration_()) : this.metadataQueue_.id3.push(this.handleId3_.bind(this, e9, t4, i3));
  }
  processMetadataQueue_() {
    this.metadataQueue_.id3.forEach((e9) => e9()), this.metadataQueue_.caption.forEach((e9) => e9()), this.metadataQueue_.id3 = [], this.metadataQueue_.caption = [];
  }
  processCallQueue_() {
    const e9 = this.callQueue_;
    this.callQueue_ = [], e9.forEach((e10) => e10());
  }
  processLoadQueue_() {
    const e9 = this.loadQueue_;
    this.loadQueue_ = [], e9.forEach((e10) => e10());
  }
  hasEnoughInfoToLoad_() {
    if ("audio" !== this.loaderType_) return true;
    const e9 = this.pendingSegment_;
    return !!e9 && (!this.getCurrentMediaInfo_() || !Mp({ timelineChangeController: this.timelineChangeController_, currentTimeline: this.currentTimeline_, segmentTimeline: e9.timeline, loaderType: this.loaderType_, audioDisabled: this.audioDisabled_ }));
  }
  getCurrentMediaInfo_(e9 = this.pendingSegment_) {
    return e9 && e9.trackInfo || this.currentMediaInfo_;
  }
  getMediaInfo_(e9 = this.pendingSegment_) {
    return this.getCurrentMediaInfo_(e9) || this.startingMediaInfo_;
  }
  getPendingSegmentPlaylist() {
    return this.pendingSegment_ ? this.pendingSegment_.playlist : null;
  }
  hasEnoughInfoToAppend_() {
    if (!this.sourceUpdater_.ready()) return false;
    if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) return false;
    const e9 = this.pendingSegment_, t4 = this.getCurrentMediaInfo_();
    if (!e9 || !t4) return false;
    const { hasAudio: i3, hasVideo: s5, isMuxed: n6 } = t4;
    return !(s5 && !e9.videoTimingInfo) && (!(i3 && !this.audioDisabled_ && !n6 && !e9.audioTimingInfo) && !Mp({ timelineChangeController: this.timelineChangeController_, currentTimeline: this.currentTimeline_, segmentTimeline: e9.timeline, loaderType: this.loaderType_, audioDisabled: this.audioDisabled_ }));
  }
  handleData_(e9, t4) {
    if (this.earlyAbortWhenNeeded_(e9.stats), this.checkForAbort_(e9.requestId)) return;
    if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) return qp(this), void this.callQueue_.push(this.handleData_.bind(this, e9, t4));
    const i3 = this.pendingSegment_;
    if (this.setTimeMapping_(i3.timeline), this.updateMediaSecondsLoaded_(i3.part || i3.segment), "closed" !== this.mediaSource_.readyState) {
      if (e9.map && (e9.map = this.initSegmentForMap(e9.map, true), i3.segment.map = e9.map), e9.key && this.segmentKey(e9.key, true), i3.isFmp4 = e9.isFmp4, i3.timingInfo = i3.timingInfo || {}, i3.isFmp4) this.trigger("fmp4"), i3.timingInfo.start = i3[Np(t4.type)].start;
      else {
        const e10 = this.getCurrentMediaInfo_(), t5 = "main" === this.loaderType_ && e10 && e10.hasVideo;
        let s5;
        t5 && (s5 = i3.videoTimingInfo.start), i3.timingInfo.start = this.trueSegmentStart_({ currentStart: i3.timingInfo.start, playlist: i3.playlist, mediaIndex: i3.mediaIndex, currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(), useVideoTimingInfo: t5, firstVideoFrameTimeForData: s5, videoTimingInfo: i3.videoTimingInfo, audioTimingInfo: i3.audioTimingInfo });
      }
      if (this.updateAppendInitSegmentStatus(i3, t4.type), this.updateSourceBufferTimestampOffset_(i3), i3.isSyncRequest) {
        this.updateTimingInfoEnd_(i3), this.syncController_.saveSegmentTimingInfo({ segmentInfo: i3, shouldSaveTimelineMapping: "main" === this.loaderType_ });
        const e10 = this.chooseNextRequest_();
        if (e10.mediaIndex !== i3.mediaIndex || e10.partIndex !== i3.partIndex) return void this.logger_("sync segment was incorrect, not appending");
        this.logger_("sync segment was correct, appending");
      }
      i3.hasAppendedData_ = true, this.processMetadataQueue_(), this.appendData_(i3, t4);
    }
  }
  updateAppendInitSegmentStatus(e9, t4) {
    "main" !== this.loaderType_ || "number" != typeof e9.timestampOffset || e9.changedTimestampOffset || (this.appendInitSegment_ = { audio: true, video: true }), this.playlistOfLastInitSegment_[t4] !== e9.playlist && (this.appendInitSegment_[t4] = true);
  }
  getInitSegmentAndUpdateState_({ type: e9, initSegment: t4, map: i3, playlist: s5 }) {
    if (i3) {
      const e10 = Ud(i3);
      if (this.activeInitSegmentId_ === e10) return null;
      t4 = this.initSegmentForMap(i3, true).bytes, this.activeInitSegmentId_ = e10;
    }
    return t4 && this.appendInitSegment_[e9] ? (this.playlistOfLastInitSegment_[e9] = s5, this.appendInitSegment_[e9] = false, this.activeInitSegmentId_ = null, t4) : null;
  }
  handleQuotaExceededError_({ segmentInfo: e9, type: t4, bytes: i3 }, s5) {
    const n6 = this.sourceUpdater_.audioBuffered(), r5 = this.sourceUpdater_.videoBuffered();
    n6.length > 1 && this.logger_("On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: " + Lu(n6).join(", ")), r5.length > 1 && this.logger_("On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: " + Lu(r5).join(", "));
    const a6 = n6.length ? n6.start(0) : 0, o4 = n6.length ? n6.end(n6.length - 1) : 0, l6 = r5.length ? r5.start(0) : 0, h2 = r5.length ? r5.end(r5.length - 1) : 0;
    if (o4 - a6 <= Ip && h2 - l6 <= Ip) return this.logger_(`On QUOTA_EXCEEDED_ERR, single segment too large to append to buffer, triggering an error. Appended byte length: ${i3.byteLength}, audio buffer: ${Lu(n6).join(", ")}, video buffer: ${Lu(r5).join(", ")}, `), this.error({ message: "Quota exceeded error with append of a single segment of content", excludeUntil: 1 / 0 }), void this.trigger("error");
    this.waitingOnRemove_ = true, this.callQueue_.push(this.appendToSourceBuffer_.bind(this, { segmentInfo: e9, type: t4, bytes: i3 }));
    const u4 = this.currentTime_() - Ip;
    this.logger_(`On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to ${u4}`), this.remove(0, u4, () => {
      this.logger_(`On QUOTA_EXCEEDED_ERR, retrying append in ${Ip}s`), this.waitingOnRemove_ = false, this.quotaExceededErrorRetryTimeout_ = _.setTimeout(() => {
        this.logger_("On QUOTA_EXCEEDED_ERR, re-processing call queue"), this.quotaExceededErrorRetryTimeout_ = null, this.processCallQueue_();
      }, 1e3 * Ip);
    }, true);
  }
  handleAppendError_({ segmentInfo: e9, type: t4, bytes: i3 }, s5) {
    s5 && (s5.code !== md ? (this.logger_("Received non QUOTA_EXCEEDED_ERR on append", s5), this.error({ message: `${t4} append of ${i3.length}b failed for segment #${e9.mediaIndex} in playlist ${e9.playlist.id}`, metadata: { errorType: du.Error.StreamingFailedToAppendSegment } }), this.trigger("appenderror")) : this.handleQuotaExceededError_({ segmentInfo: e9, type: t4, bytes: i3 }));
  }
  appendToSourceBuffer_({ segmentInfo: e9, type: t4, initSegment: i3, data: s5, bytes: n6 }) {
    if (!n6) {
      const e10 = [s5];
      let t5 = s5.byteLength;
      i3 && (e10.unshift(i3), t5 += i3.byteLength), n6 = up({ bytes: t5, segments: e10 });
    }
    const r5 = { segmentInfo: Vp({ type: this.loaderType_, segment: e9 }) };
    this.trigger({ type: "segmentappendstart", metadata: r5 }), this.sourceUpdater_.appendBuffer({ segmentInfo: e9, type: t4, bytes: n6 }, this.handleAppendError_.bind(this, { segmentInfo: e9, type: t4, bytes: n6 }));
  }
  handleSegmentTimingInfo_(e9, t4, i3) {
    if (!this.pendingSegment_ || t4 !== this.pendingSegment_.requestId) return;
    const s5 = this.pendingSegment_.segment, n6 = `${e9}TimingInfo`;
    s5[n6] || (s5[n6] = {}), s5[n6].transmuxerPrependedSeconds = i3.prependedContentDuration || 0, s5[n6].transmuxedPresentationStart = i3.start.presentation, s5[n6].transmuxedDecodeStart = i3.start.decode, s5[n6].transmuxedPresentationEnd = i3.end.presentation, s5[n6].transmuxedDecodeEnd = i3.end.decode, s5[n6].baseMediaDecodeTime = i3.baseMediaDecodeTime;
  }
  appendData_(e9, t4) {
    const { type: i3, data: s5 } = t4;
    if (!s5 || !s5.byteLength) return;
    if ("audio" === i3 && this.audioDisabled_) return;
    const n6 = this.getInitSegmentAndUpdateState_({ type: i3, initSegment: t4.initSegment, playlist: e9.playlist, map: e9.isFmp4 ? e9.segment.map : null });
    this.appendToSourceBuffer_({ segmentInfo: e9, type: i3, initSegment: n6, data: s5 });
  }
  loadSegment_(e9) {
    if (this.state = "WAITING", this.pendingSegment_ = e9, this.trimBackBuffer_(e9), "number" == typeof e9.timestampOffset && this.transmuxer_ && this.transmuxer_.postMessage({ action: "clearAllMp4Captions" }), !this.hasEnoughInfoToLoad_()) return qp(this), void this.loadQueue_.push(() => {
      const t4 = Ue({}, e9, { forceTimestampOffset: true });
      Ue(e9, this.generateSegmentInfo_(t4)), this.isPendingTimestampOffset_ = false, this.updateTransmuxerAndRequestSegment_(e9);
    });
    this.updateTransmuxerAndRequestSegment_(e9);
  }
  updateTransmuxerAndRequestSegment_(e9) {
    this.shouldUpdateTransmuxerTimestampOffset_(e9.timestampOffset) && (this.gopBuffer_.length = 0, e9.gopsToAlignWith = [], this.timeMapping_ = 0, this.transmuxer_.postMessage({ action: "reset" }), this.transmuxer_.postMessage({ action: "setTimestampOffset", timestampOffset: e9.timestampOffset }));
    const t4 = this.createSimplifiedSegmentObj_(e9), i3 = this.isEndOfStream_(e9.mediaIndex, e9.playlist, e9.partIndex), s5 = null !== this.mediaIndex, n6 = e9.timeline !== this.currentTimeline_ && e9.timeline > 0, r5 = i3 || s5 && n6;
    this.logger_(`Requesting
${dp(e9.uri)}
${Op(e9)}`), t4.map && !t4.map.bytes && (this.logger_("going to request init segment."), this.appendInitSegment_ = { video: true, audio: true }), e9.abortRequests = zc({ xhr: this.vhs_.xhr, xhrOptions: this.xhrOptions_, decryptionWorker: this.decrypter_, segment: t4, abortFn: this.handleAbort_.bind(this, e9), progressFn: this.handleProgress_.bind(this), trackInfoFn: this.handleTrackInfo_.bind(this), timingInfoFn: this.handleTimingInfo_.bind(this), videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, "video", e9.requestId), audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, "audio", e9.requestId), captionsFn: this.handleCaptions_.bind(this), isEndOfTimeline: r5, endedTimelineFn: () => {
      this.logger_("received endedtimeline callback");
    }, id3Fn: this.handleId3_.bind(this), dataFn: this.handleData_.bind(this), doneFn: this.segmentRequestFinished_.bind(this), onTransmuxerLog: ({ message: t5, level: i4, stream: s6 }) => {
      this.logger_(`${Op(e9)} logged from transmuxer stream ${s6} as a ${i4}: ${t5}`);
    }, triggerSegmentEventFn: ({ type: e10, segment: t5, keyInfo: i4, trackInfo: s6, timingInfo: n7 }) => {
      const r6 = { segmentInfo: Vp({ segment: t5 }) };
      i4 && (r6.keyInfo = i4), s6 && (r6.trackInfo = s6), n7 && (r6.timingInfo = n7), this.trigger({ type: e10, metadata: r6 });
    } });
  }
  trimBackBuffer_(e9) {
    const t4 = Lp(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10);
    t4 > 0 && this.remove(0, t4);
  }
  createSimplifiedSegmentObj_(e9) {
    const t4 = e9.segment, i3 = e9.part, s5 = e9.segment.key || e9.segment.map && e9.segment.map.key, n6 = e9.segment.map && !e9.segment.map.bytes, r5 = { resolvedUri: i3 ? i3.resolvedUri : t4.resolvedUri, byterange: i3 ? i3.byterange : t4.byterange, requestId: e9.requestId, transmuxer: e9.transmuxer, audioAppendStart: e9.audioAppendStart, gopsToAlignWith: e9.gopsToAlignWith, part: e9.part, type: this.loaderType_, start: e9.startOfSegment, duration: e9.duration, isEncrypted: s5, isMediaInitialization: n6 }, a6 = e9.playlist.segments[e9.mediaIndex - 1];
    if (a6 && a6.timeline === t4.timeline && (a6.videoTimingInfo ? r5.baseStartTime = a6.videoTimingInfo.transmuxedDecodeEnd : a6.audioTimingInfo && (r5.baseStartTime = a6.audioTimingInfo.transmuxedDecodeEnd)), t4.key) {
      const i4 = t4.key.iv || new Uint32Array([0, 0, 0, e9.mediaIndex + e9.playlist.mediaSequence]);
      r5.key = this.segmentKey(t4.key), r5.key.iv = i4;
    }
    return t4.map && (r5.map = this.initSegmentForMap(t4.map)), r5;
  }
  saveTransferStats_(e9) {
    this.mediaRequests += 1, e9 && (this.mediaBytesTransferred += e9.bytesReceived, this.mediaTransferDuration += e9.roundTripTime);
  }
  saveBandwidthRelatedStats_(e9, t4) {
    if (this.pendingSegment_.byteLength = t4.bytesReceived, e9 < Dp) return void this.logger_(`Ignoring segment's bandwidth because its duration of ${e9} is less than the min to record ${Dp}`);
    const i3 = { bandwidthInfo: { from: this.bandwidth, to: t4.bandwidth } };
    this.trigger({ type: "bandwidthupdated", metadata: i3 }), this.bandwidth = t4.bandwidth, this.roundTrip = t4.roundTripTime;
  }
  handleTimeout_() {
    this.mediaRequestsTimedout += 1, this.bandwidth = 1, this.roundTrip = NaN, this.trigger("bandwidthupdate"), this.trigger("timeout");
  }
  segmentRequestFinished_(e9, t4, i3) {
    if (this.callQueue_.length) return void this.callQueue_.push(this.segmentRequestFinished_.bind(this, e9, t4, i3));
    if (this.saveTransferStats_(t4.stats), !this.pendingSegment_) return;
    if (t4.requestId !== this.pendingSegment_.requestId) return;
    if (e9) {
      if (this.pendingSegment_ = null, this.state = "READY", e9.code === Ac.ABORTED) return;
      return this.pause(), e9.code === Ac.TIMEOUT ? void this.handleTimeout_() : (this.mediaRequestsErrored += 1, this.error(e9), void this.trigger("error"));
    }
    const s5 = this.pendingSegment_;
    this.saveBandwidthRelatedStats_(s5.duration, t4.stats), s5.endOfAllRequests = t4.endOfAllRequests, i3.gopInfo && (this.gopBuffer_ = Ep(this.gopBuffer_, i3.gopInfo, this.safeAppend_)), this.state = "APPENDING", this.trigger("appending"), this.waitForAppendsToComplete_(s5);
  }
  setTimeMapping_(e9) {
    const t4 = this.syncController_.mappingForTimeline(e9);
    null !== t4 && (this.timeMapping_ = t4);
  }
  updateMediaSecondsLoaded_(e9) {
    "number" == typeof e9.start && "number" == typeof e9.end ? this.mediaSecondsLoaded += e9.end - e9.start : this.mediaSecondsLoaded += e9.duration;
  }
  shouldUpdateTransmuxerTimestampOffset_(e9) {
    return null !== e9 && ("main" === this.loaderType_ && e9 !== this.sourceUpdater_.videoTimestampOffset() || !this.audioDisabled_ && e9 !== this.sourceUpdater_.audioTimestampOffset());
  }
  trueSegmentStart_({ currentStart: e9, playlist: t4, mediaIndex: i3, firstVideoFrameTimeForData: s5, currentVideoTimestampOffset: n6, useVideoTimingInfo: r5, videoTimingInfo: a6, audioTimingInfo: o4 }) {
    if (void 0 !== e9) return e9;
    if (!r5) return o4.start;
    const l6 = t4.segments[i3 - 1];
    return 0 !== i3 && l6 && void 0 !== l6.start && l6.end === s5 + n6 ? a6.start : s5;
  }
  waitForAppendsToComplete_(e9) {
    const t4 = this.getCurrentMediaInfo_(e9);
    if (!t4) return this.error({ message: "No starting media returned, likely due to an unsupported media format.", playlistExclusionDuration: 1 / 0 }), void this.trigger("error");
    const { hasAudio: i3, hasVideo: s5, isMuxed: n6 } = t4, r5 = "main" === this.loaderType_ && s5, a6 = !this.audioDisabled_ && i3 && !n6;
    if (e9.waitingOnAppends = 0, !e9.hasAppendedData_) return e9.timingInfo || "number" != typeof e9.timestampOffset || (this.isPendingTimestampOffset_ = true), e9.timingInfo = { start: 0 }, e9.waitingOnAppends++, this.isPendingTimestampOffset_ || (this.updateSourceBufferTimestampOffset_(e9), this.processMetadataQueue_()), void this.checkAppendsDone_(e9);
    r5 && e9.waitingOnAppends++, a6 && e9.waitingOnAppends++, r5 && this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, e9)), a6 && this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, e9));
  }
  checkAppendsDone_(e9) {
    this.checkForAbort_(e9.requestId) || (e9.waitingOnAppends--, 0 === e9.waitingOnAppends && this.handleAppendsDone_());
  }
  checkForIllegalMediaSwitch(e9) {
    const t4 = Pp(this.loaderType_, this.getCurrentMediaInfo_(), e9);
    return !!t4 && (this.error({ message: t4, playlistExclusionDuration: 1 / 0 }), this.trigger("error"), true);
  }
  updateSourceBufferTimestampOffset_(e9) {
    if (null === e9.timestampOffset || "number" != typeof e9.timingInfo.start || e9.changedTimestampOffset || "main" !== this.loaderType_) return;
    let t4 = false;
    e9.timestampOffset -= this.getSegmentStartTimeForTimestampOffsetCalculation_({ videoTimingInfo: e9.segment.videoTimingInfo, audioTimingInfo: e9.segment.audioTimingInfo, timingInfo: e9.timingInfo }), e9.changedTimestampOffset = true, e9.timestampOffset !== this.sourceUpdater_.videoTimestampOffset() && (this.sourceUpdater_.videoTimestampOffset(e9.timestampOffset), t4 = true), e9.timestampOffset !== this.sourceUpdater_.audioTimestampOffset() && (this.sourceUpdater_.audioTimestampOffset(e9.timestampOffset), t4 = true), t4 && this.trigger("timestampoffset");
  }
  getSegmentStartTimeForTimestampOffsetCalculation_({ videoTimingInfo: e9, audioTimingInfo: t4, timingInfo: i3 }) {
    return this.useDtsForTimestampOffset_ ? e9 && "number" == typeof e9.transmuxedDecodeStart ? e9.transmuxedDecodeStart : t4 && "number" == typeof t4.transmuxedDecodeStart ? t4.transmuxedDecodeStart : i3.start : i3.start;
  }
  updateTimingInfoEnd_(e9) {
    e9.timingInfo = e9.timingInfo || {};
    const t4 = this.getMediaInfo_(), i3 = "main" === this.loaderType_ && t4 && t4.hasVideo && e9.videoTimingInfo ? e9.videoTimingInfo : e9.audioTimingInfo;
    i3 && (e9.timingInfo.end = "number" == typeof i3.end ? i3.end : i3.start + e9.duration);
  }
  handleAppendsDone_() {
    if (this.pendingSegment_) {
      const e10 = { segmentInfo: Vp({ type: this.loaderType_, segment: this.pendingSegment_ }) };
      this.trigger({ type: "appendsdone", metadata: e10 });
    }
    if (!this.pendingSegment_) return this.state = "READY", void (this.paused() || this.monitorBuffer_());
    const e9 = this.pendingSegment_;
    e9.part && e9.part.syncInfo ? e9.part.syncInfo.markAppended() : e9.segment.syncInfo && e9.segment.syncInfo.markAppended(), this.updateTimingInfoEnd_(e9), this.shouldSaveSegmentTimingInfo_ && this.syncController_.saveSegmentTimingInfo({ segmentInfo: e9, shouldSaveTimelineMapping: "main" === this.loaderType_ });
    const t4 = Hp(e9, this.sourceType_);
    if (t4 && ("warn" === t4.severity ? du.log.warn(t4.message) : this.logger_(t4.message)), this.recordThroughput_(e9), this.pendingSegment_ = null, this.state = "READY", e9.isSyncRequest && (this.trigger("syncinfoupdate"), !e9.hasAppendedData_)) return void this.logger_(`Throwing away un-appended sync request ${Op(e9)}`);
    this.logger_(`Appended ${Op(e9)}`), this.addSegmentMetadataCue_(e9), this.fetchAtBuffer_ = true, this.currentTimeline_ !== e9.timeline && (this.timelineChangeController_.lastTimelineChange({ type: this.loaderType_, from: this.currentTimeline_, to: e9.timeline }), "main" !== this.loaderType_ || this.audioDisabled_ || this.timelineChangeController_.lastTimelineChange({ type: "audio", from: this.currentTimeline_, to: e9.timeline })), this.currentTimeline_ = e9.timeline, this.trigger("syncinfoupdate");
    const i3 = e9.segment, s5 = e9.part, n6 = i3.end && this.currentTime_() - i3.end > 3 * e9.playlist.targetDuration, r5 = s5 && s5.end && this.currentTime_() - s5.end > 3 * e9.playlist.partTargetDuration;
    if (n6 || r5) return this.logger_(`bad ${n6 ? "segment" : "part"} ${Op(e9)}`), void this.resetEverything();
    null !== this.mediaIndex && this.trigger("bandwidthupdate"), this.trigger("progress"), this.mediaIndex = e9.mediaIndex, this.partIndex = e9.partIndex, this.isEndOfStream_(e9.mediaIndex, e9.playlist, e9.partIndex) && this.endOfStream(), this.trigger("appended"), e9.hasAppendedData_ && this.mediaAppends++, this.paused() || this.monitorBuffer_();
  }
  recordThroughput_(e9) {
    if (e9.duration < Dp) return void this.logger_(`Ignoring segment's throughput because its duration of ${e9.duration} is less than the min to record ${Dp}`);
    const t4 = this.throughput.rate, i3 = Date.now() - e9.endOfAllRequests + 1, s5 = Math.floor(e9.byteLength / i3 * 8 * 1e3);
    this.throughput.rate += (s5 - t4) / ++this.throughput.count;
  }
  addSegmentMetadataCue_(e9) {
    if (!this.segmentMetadataTrack_) return;
    const t4 = e9.segment, i3 = t4.start, s5 = t4.end;
    if (!Ap(i3) || !Ap(s5)) return;
    vp(i3, s5, this.segmentMetadataTrack_);
    const n6 = _.WebKitDataCue || _.VTTCue, r5 = { custom: t4.custom, dateTimeObject: t4.dateTimeObject, dateTimeString: t4.dateTimeString, programDateTime: t4.programDateTime, bandwidth: e9.playlist.attributes.BANDWIDTH, resolution: e9.playlist.attributes.RESOLUTION, codecs: e9.playlist.attributes.CODECS, byteLength: e9.byteLength, uri: e9.uri, timeline: e9.timeline, playlist: e9.playlist.id, start: i3, end: s5 }, a6 = new n6(i3, s5, JSON.stringify(r5));
    a6.value = r5, this.segmentMetadataTrack_.addCue(a6);
  }
};
function Wp() {
}
var Gp = function(e9) {
  return "string" != typeof e9 ? e9 : e9.replace(/./, (e10) => e10.toUpperCase());
};
var Xp = ["video", "audio"];
var Kp = (e9, t4) => {
  const i3 = t4[`${e9}Buffer`];
  return i3 && i3.updating || t4.queuePending[e9];
};
var Yp = (e9, t4) => {
  for (let i3 = 0; i3 < t4.length; i3++) {
    const s5 = t4[i3];
    if ("mediaSource" === s5.type) return null;
    if (s5.type === e9) return i3;
  }
  return null;
};
var Qp = (e9, t4) => {
  if (0 === t4.queue.length) return;
  let i3 = 0, s5 = t4.queue[i3];
  if ("mediaSource" !== s5.type) {
    if ("mediaSource" !== e9 && t4.ready() && "closed" !== t4.mediaSource.readyState && !Kp(e9, t4)) {
      if (s5.type !== e9) {
        if (i3 = Yp(e9, t4.queue), null === i3) return;
        s5 = t4.queue[i3];
      }
      return t4.queue.splice(i3, 1), t4.queuePending[e9] = s5, s5.action(e9, t4), s5.doneFn ? void 0 : (t4.queuePending[e9] = null, void Qp(e9, t4));
    }
  } else t4.updating() || "closed" === t4.mediaSource.readyState || (t4.queue.shift(), s5.action(t4), s5.doneFn && s5.doneFn(), Qp("audio", t4), Qp("video", t4));
};
var Jp = (e9, t4) => {
  const i3 = t4[`${e9}Buffer`], s5 = Gp(e9);
  i3 && (i3.removeEventListener("updateend", t4[`on${s5}UpdateEnd_`]), i3.removeEventListener("error", t4[`on${s5}Error_`]), t4.codecs[e9] = null, t4[`${e9}Buffer`] = null);
};
var Zp = (e9, t4) => e9 && t4 && -1 !== Array.prototype.indexOf.call(e9.sourceBuffers, t4);
var em = { appendBuffer: (e9, t4, i3) => (s5, n6) => {
  const r5 = n6[`${s5}Buffer`];
  if (Zp(n6.mediaSource, r5)) {
    n6.logger_(`Appending segment ${t4.mediaIndex}'s ${e9.length} bytes to ${s5}Buffer`);
    try {
      r5.appendBuffer(e9);
    } catch (a6) {
      n6.logger_(`Error with code ${a6.code} ` + (a6.code === md ? "(QUOTA_EXCEEDED_ERR) " : "") + `when appending segment ${t4.mediaIndex} to ${s5}Buffer`), n6.queuePending[s5] = null, i3(a6);
    }
  }
}, remove: (e9, t4) => (i3, s5) => {
  const n6 = s5[`${i3}Buffer`];
  if (Zp(s5.mediaSource, n6)) {
    s5.logger_(`Removing ${e9} to ${t4} from ${i3}Buffer`);
    try {
      n6.remove(e9, t4);
    } catch (r5) {
      s5.logger_(`Remove ${e9} to ${t4} from ${i3}Buffer failed`);
    }
  }
}, timestampOffset: (e9) => (t4, i3) => {
  const s5 = i3[`${t4}Buffer`];
  Zp(i3.mediaSource, s5) && (i3.logger_(`Setting ${t4}timestampOffset to ${e9}`), s5.timestampOffset = e9);
}, callback: (e9) => (t4, i3) => {
  e9();
}, endOfStream: (e9) => (t4) => {
  if ("open" === t4.mediaSource.readyState) {
    t4.logger_(`Calling mediaSource endOfStream(${e9 || ""})`);
    try {
      t4.mediaSource.endOfStream(e9);
    } catch (i3) {
      du.log.warn("Failed to call media source endOfStream", i3);
    }
  }
}, duration: (e9) => (t4) => {
  t4.logger_(`Setting mediaSource duration to ${e9}`);
  try {
    t4.mediaSource.duration = e9;
  } catch (i3) {
    du.log.warn("Failed to set media source duration", i3);
  }
}, abort: () => (e9, t4) => {
  if ("open" !== t4.mediaSource.readyState) return;
  const i3 = t4[`${e9}Buffer`];
  if (Zp(t4.mediaSource, i3)) {
    t4.logger_(`calling abort on ${e9}Buffer`);
    try {
      i3.abort();
    } catch (s5) {
      du.log.warn(`Failed to abort on ${e9}Buffer`, s5);
    }
  }
}, addSourceBuffer: (e9, t4) => (i3) => {
  const s5 = Gp(e9), n6 = ut(t4);
  i3.logger_(`Adding ${e9}Buffer with codec ${t4} to mediaSource`);
  const r5 = i3.mediaSource.addSourceBuffer(n6);
  r5.addEventListener("updateend", i3[`on${s5}UpdateEnd_`]), r5.addEventListener("error", i3[`on${s5}Error_`]), i3.codecs[e9] = t4, i3[`${e9}Buffer`] = r5;
}, removeSourceBuffer: (e9) => (t4) => {
  const i3 = t4[`${e9}Buffer`];
  if (Jp(e9, t4), Zp(t4.mediaSource, i3)) {
    t4.logger_(`Removing ${e9}Buffer with codec ${t4.codecs[e9]} from mediaSource`);
    try {
      t4.mediaSource.removeSourceBuffer(i3);
    } catch (s5) {
      du.log.warn(`Failed to removeSourceBuffer ${e9}Buffer`, s5);
    }
  }
}, changeType: (e9) => (t4, i3) => {
  const s5 = i3[`${t4}Buffer`], n6 = ut(e9);
  if (!Zp(i3.mediaSource, s5)) return;
  const r5 = e9.substring(0, e9.indexOf(".")), a6 = i3.codecs[t4];
  if (a6.substring(0, a6.indexOf(".")) === r5) return;
  const o4 = { codecsChangeInfo: { from: a6, to: e9 } };
  i3.trigger({ type: "codecschange", metadata: o4 }), i3.logger_(`changing ${t4}Buffer codec from ${a6} to ${e9}`);
  try {
    s5.changeType(n6), i3.codecs[t4] = e9;
  } catch (l6) {
    o4.errorType = du.Error.StreamingCodecsChangeError, o4.error = l6, l6.metadata = o4, i3.error_ = l6, i3.trigger("error"), du.log.warn(`Failed to changeType on ${t4}Buffer`, l6);
  }
} };
var tm = ({ type: e9, sourceUpdater: t4, action: i3, doneFn: s5, name: n6 }) => {
  t4.queue.push({ type: e9, action: i3, doneFn: s5, name: n6 }), Qp(e9, t4);
};
var im = (e9, t4) => (i3) => {
  const s5 = Su(t4[`${e9}Buffered`]());
  if (t4.logger_(`received "updateend" event for ${e9} Source Buffer: `, s5), t4.queuePending[e9]) {
    const i4 = t4.queuePending[e9].doneFn;
    t4.queuePending[e9] = null, i4 && i4(t4[`${e9}Error_`]);
  }
  Qp(e9, t4);
};
var sm = class extends du.EventTarget {
  constructor(e9) {
    super(), this.mediaSource = e9, this.sourceopenListener_ = () => Qp("mediaSource", this), this.mediaSource.addEventListener("sourceopen", this.sourceopenListener_), this.logger_ = bu("SourceUpdater"), this.audioTimestampOffset_ = 0, this.videoTimestampOffset_ = 0, this.queue = [], this.queuePending = { audio: null, video: null }, this.delayedAudioAppendQueue_ = [], this.videoAppendQueued_ = false, this.codecs = {}, this.onVideoUpdateEnd_ = im("video", this), this.onAudioUpdateEnd_ = im("audio", this), this.onVideoError_ = (e10) => {
      this.videoError_ = e10;
    }, this.onAudioError_ = (e10) => {
      this.audioError_ = e10;
    }, this.createdSourceBuffers_ = false, this.initializedEme_ = false, this.triggeredReady_ = false;
  }
  initializedEme() {
    this.initializedEme_ = true, this.triggerReady();
  }
  hasCreatedSourceBuffers() {
    return this.createdSourceBuffers_;
  }
  hasInitializedAnyEme() {
    return this.initializedEme_;
  }
  ready() {
    return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();
  }
  createSourceBuffers(e9) {
    this.hasCreatedSourceBuffers() || (this.addOrChangeSourceBuffers(e9), this.createdSourceBuffers_ = true, this.trigger("createdsourcebuffers"), this.triggerReady());
  }
  triggerReady() {
    this.ready() && !this.triggeredReady_ && (this.triggeredReady_ = true, this.trigger("ready"));
  }
  addSourceBuffer(e9, t4) {
    tm({ type: "mediaSource", sourceUpdater: this, action: em.addSourceBuffer(e9, t4), name: "addSourceBuffer" });
  }
  abort(e9) {
    tm({ type: e9, sourceUpdater: this, action: em.abort(e9), name: "abort" });
  }
  removeSourceBuffer(e9) {
    this.canRemoveSourceBuffer() ? tm({ type: "mediaSource", sourceUpdater: this, action: em.removeSourceBuffer(e9), name: "removeSourceBuffer" }) : du.log.error("removeSourceBuffer is not supported!");
  }
  canRemoveSourceBuffer() {
    return !du.browser.IS_FIREFOX && _.MediaSource && _.MediaSource.prototype && "function" == typeof _.MediaSource.prototype.removeSourceBuffer;
  }
  static canChangeType() {
    return _.SourceBuffer && _.SourceBuffer.prototype && "function" == typeof _.SourceBuffer.prototype.changeType;
  }
  canChangeType() {
    return this.constructor.canChangeType();
  }
  changeType(e9, t4) {
    this.canChangeType() ? tm({ type: e9, sourceUpdater: this, action: em.changeType(t4), name: "changeType" }) : du.log.error("changeType is not supported!");
  }
  addOrChangeSourceBuffers(e9) {
    if (!e9 || "object" != typeof e9 || 0 === Object.keys(e9).length) throw new Error("Cannot addOrChangeSourceBuffers to undefined codecs");
    Object.keys(e9).forEach((t4) => {
      const i3 = e9[t4];
      if (!this.hasCreatedSourceBuffers()) return this.addSourceBuffer(t4, i3);
      this.canChangeType() && this.changeType(t4, i3);
    });
  }
  appendBuffer(e9, t4) {
    const { segmentInfo: i3, type: s5, bytes: n6 } = e9;
    if (this.processedAppend_ = true, "audio" === s5 && this.videoBuffer && !this.videoAppendQueued_) return this.delayedAudioAppendQueue_.push([e9, t4]), void this.logger_(`delayed audio append of ${n6.length} until video append`);
    const r5 = t4;
    if (tm({ type: s5, sourceUpdater: this, action: em.appendBuffer(n6, i3 || { mediaIndex: -1 }, r5), doneFn: t4, name: "appendBuffer" }), "video" === s5) {
      if (this.videoAppendQueued_ = true, !this.delayedAudioAppendQueue_.length) return;
      const e10 = this.delayedAudioAppendQueue_.slice();
      this.logger_(`queuing delayed audio ${e10.length} appendBuffers`), this.delayedAudioAppendQueue_.length = 0, e10.forEach((e11) => {
        this.appendBuffer.apply(this, e11);
      });
    }
  }
  audioBuffered() {
    return Zp(this.mediaSource, this.audioBuffer) && this.audioBuffer.buffered ? this.audioBuffer.buffered : Tu();
  }
  videoBuffered() {
    return Zp(this.mediaSource, this.videoBuffer) && this.videoBuffer.buffered ? this.videoBuffer.buffered : Tu();
  }
  buffered() {
    const e9 = Zp(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null, t4 = Zp(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;
    return t4 && !e9 ? this.audioBuffered() : e9 && !t4 ? this.videoBuffered() : Au(this.audioBuffered(), this.videoBuffered());
  }
  setDuration(e9, t4 = Wp) {
    tm({ type: "mediaSource", sourceUpdater: this, action: em.duration(e9), name: "duration", doneFn: t4 });
  }
  endOfStream(e9 = null, t4 = Wp) {
    "string" != typeof e9 && (e9 = void 0), tm({ type: "mediaSource", sourceUpdater: this, action: em.endOfStream(e9), name: "endOfStream", doneFn: t4 });
  }
  removeAudio(e9, t4, i3 = Wp) {
    this.audioBuffered().length && 0 !== this.audioBuffered().end(0) ? tm({ type: "audio", sourceUpdater: this, action: em.remove(e9, t4), doneFn: i3, name: "remove" }) : i3();
  }
  removeVideo(e9, t4, i3 = Wp) {
    this.videoBuffered().length && 0 !== this.videoBuffered().end(0) ? tm({ type: "video", sourceUpdater: this, action: em.remove(e9, t4), doneFn: i3, name: "remove" }) : i3();
  }
  updating() {
    return !(!Kp("audio", this) && !Kp("video", this));
  }
  audioTimestampOffset(e9) {
    return void 0 !== e9 && this.audioBuffer && this.audioTimestampOffset_ !== e9 && (tm({ type: "audio", sourceUpdater: this, action: em.timestampOffset(e9), name: "timestampOffset" }), this.audioTimestampOffset_ = e9), this.audioTimestampOffset_;
  }
  videoTimestampOffset(e9) {
    return void 0 !== e9 && this.videoBuffer && this.videoTimestampOffset_ !== e9 && (tm({ type: "video", sourceUpdater: this, action: em.timestampOffset(e9), name: "timestampOffset" }), this.videoTimestampOffset_ = e9), this.videoTimestampOffset_;
  }
  audioQueueCallback(e9) {
    this.audioBuffer && tm({ type: "audio", sourceUpdater: this, action: em.callback(e9), name: "callback" });
  }
  videoQueueCallback(e9) {
    this.videoBuffer && tm({ type: "video", sourceUpdater: this, action: em.callback(e9), name: "callback" });
  }
  dispose() {
    this.trigger("dispose"), Xp.forEach((e9) => {
      this.abort(e9), this.canRemoveSourceBuffer() ? this.removeSourceBuffer(e9) : this[`${e9}QueueCallback`](() => Jp(e9, this));
    }), this.videoAppendQueued_ = false, this.delayedAudioAppendQueue_.length = 0, this.sourceopenListener_ && this.mediaSource.removeEventListener("sourceopen", this.sourceopenListener_), this.off();
  }
};
var nm = (e9) => decodeURIComponent(escape(String.fromCharCode.apply(null, e9)));
var rm = (e9) => {
  const t4 = new Uint8Array(e9);
  return Array.from(t4).map((e10) => e10.toString(16).padStart(2, "0")).join("");
};
var am = new Uint8Array("\n\n".split("").map((e9) => e9.charCodeAt(0)));
var om = class extends Error {
  constructor() {
    super("Trying to parse received VTT cues, but there is no WebVTT. Make sure vtt.js is loaded.");
  }
};
var lm = class extends zp {
  constructor(e9, t4 = {}) {
    super(e9, t4), this.mediaSource_ = null, this.subtitlesTrack_ = null, this.featuresNativeTextTracks_ = e9.featuresNativeTextTracks, this.loadVttJs = e9.loadVttJs, this.shouldSaveSegmentTimingInfo_ = false;
  }
  createTransmuxer_() {
    return null;
  }
  buffered_() {
    if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) return Tu();
    const e9 = this.subtitlesTrack_.cues;
    return Tu([[e9[0].startTime, e9[e9.length - 1].startTime]]);
  }
  initSegmentForMap(e9, t4 = false) {
    if (!e9) return null;
    const i3 = Ud(e9);
    let s5 = this.initSegments_[i3];
    if (t4 && !s5 && e9.bytes) {
      const t5 = am.byteLength + e9.bytes.byteLength, n6 = new Uint8Array(t5);
      n6.set(e9.bytes), n6.set(am, e9.bytes.byteLength), this.initSegments_[i3] = s5 = { resolvedUri: e9.resolvedUri, byterange: e9.byterange, bytes: n6 };
    }
    return s5 || e9;
  }
  couldBeginLoading_() {
    return this.playlist_ && this.subtitlesTrack_ && !this.paused();
  }
  init_() {
    return this.state = "READY", this.resetEverything(), this.monitorBuffer_();
  }
  track(e9) {
    return void 0 === e9 || (this.subtitlesTrack_ = e9, "INIT" === this.state && this.couldBeginLoading_() && this.init_()), this.subtitlesTrack_;
  }
  remove(e9, t4) {
    vp(e9, t4, this.subtitlesTrack_);
  }
  fillBuffer_() {
    const e9 = this.chooseNextRequest_();
    if (e9) {
      if (null === this.syncController_.timestampOffsetForTimeline(e9.timeline)) {
        const e10 = () => {
          this.state = "READY", this.paused() || this.monitorBuffer_();
        };
        return this.syncController_.one("timestampoffset", e10), void (this.state = "WAITING_ON_TIMELINE");
      }
      this.loadSegment_(e9);
    }
  }
  timestampOffsetForSegment_() {
    return null;
  }
  chooseNextRequest_() {
    return this.skipEmptySegments_(super.chooseNextRequest_());
  }
  skipEmptySegments_(e9) {
    for (; e9 && e9.segment.empty; ) {
      if (e9.mediaIndex + 1 >= e9.playlist.segments.length) {
        e9 = null;
        break;
      }
      e9 = this.generateSegmentInfo_({ playlist: e9.playlist, mediaIndex: e9.mediaIndex + 1, startOfSegment: e9.startOfSegment + e9.duration, isSyncRequest: e9.isSyncRequest });
    }
    return e9;
  }
  stopForError(e9) {
    this.error(e9), this.state = "READY", this.pause(), this.trigger("error");
  }
  segmentRequestFinished_(e9, t4, i3) {
    if (!this.subtitlesTrack_) return void (this.state = "READY");
    if (this.saveTransferStats_(t4.stats), !this.pendingSegment_) return this.state = "READY", void (this.mediaRequestsAborted += 1);
    if (e9) return e9.code === Ac.TIMEOUT && this.handleTimeout_(), e9.code === Ac.ABORTED ? this.mediaRequestsAborted += 1 : this.mediaRequestsErrored += 1, void this.stopForError(e9);
    const s5 = this.pendingSegment_;
    this.saveBandwidthRelatedStats_(s5.duration, t4.stats), t4.key && this.segmentKey(t4.key, true), this.state = "APPENDING", this.trigger("appending");
    const n6 = s5.segment;
    if (n6.map && (n6.map.bytes = t4.map.bytes), s5.bytes = t4.bytes, "function" != typeof _.WebVTT && "function" == typeof this.loadVttJs) return this.state = "WAITING_ON_VTTJS", void this.loadVttJs().then(() => this.segmentRequestFinished_(e9, t4, i3), () => this.stopForError({ message: "Error loading vtt.js" }));
    n6.requested = true;
    try {
      this.parseVTTCues_(s5);
    } catch (r5) {
      return void this.stopForError({ message: r5.message, metadata: { errorType: du.Error.StreamingVttParserError, error: r5 } });
    }
    if (this.updateTimeMapping_(s5, this.syncController_.timelines[s5.timeline], this.playlist_), s5.cues.length ? s5.timingInfo = { start: s5.cues[0].startTime, end: s5.cues[s5.cues.length - 1].endTime } : s5.timingInfo = { start: s5.startOfSegment, end: s5.startOfSegment + s5.duration }, s5.isSyncRequest) return this.trigger("syncinfoupdate"), this.pendingSegment_ = null, void (this.state = "READY");
    s5.byteLength = s5.bytes.byteLength, this.mediaSecondsLoaded += n6.duration, s5.cues.forEach((e10) => {
      this.subtitlesTrack_.addCue(this.featuresNativeTextTracks_ ? new _.VTTCue(e10.startTime, e10.endTime, e10.text) : e10);
    }), Tp(this.subtitlesTrack_), this.handleAppendsDone_();
  }
  handleData_() {
  }
  updateTimingInfoEnd_() {
  }
  parseVTTCues_(e9) {
    let t4, i3 = false;
    if ("function" != typeof _.WebVTT) throw new om();
    "function" == typeof _.TextDecoder ? t4 = new _.TextDecoder("utf8") : (t4 = _.WebVTT.StringDecoder(), i3 = true);
    const s5 = new _.WebVTT.Parser(_, _.vttjs, t4);
    if (e9.cues = [], e9.timestampmap = { MPEGTS: 0, LOCAL: 0 }, s5.oncue = e9.cues.push.bind(e9.cues), s5.ontimestampmap = (t5) => {
      e9.timestampmap = t5;
    }, s5.onparsingerror = (e10) => {
      du.log.warn("Error encountered when parsing cues: " + e10.message);
    }, e9.segment.map) {
      let t5 = e9.segment.map.bytes;
      i3 && (t5 = nm(t5)), s5.parse(t5);
    }
    let n6 = e9.bytes;
    i3 && (n6 = nm(n6)), s5.parse(n6), s5.flush();
  }
  updateTimeMapping_(e9, t4, i3) {
    const s5 = e9.segment;
    if (!t4) return;
    if (!e9.cues.length) return void (s5.empty = true);
    const { MPEGTS: n6, LOCAL: r5 } = e9.timestampmap, a6 = n6 / en.ONE_SECOND_IN_TS - r5 + t4.mapping;
    if (e9.cues.forEach((e10) => {
      const i4 = e10.endTime - e10.startTime, s6 = this.handleRollover_(e10.startTime + a6, t4.time);
      e10.startTime = Math.max(s6, 0), e10.endTime = Math.max(s6 + i4, 0);
    }), !i3.syncInfo) {
      const t5 = e9.cues[0].startTime, n7 = e9.cues[e9.cues.length - 1].startTime;
      i3.syncInfo = { mediaSequence: i3.mediaSequence + e9.mediaIndex, time: Math.min(t5, n7 - s5.duration) };
    }
  }
  handleRollover_(e9, t4) {
    if (null === t4) return e9;
    let i3 = e9 * en.ONE_SECOND_IN_TS;
    const s5 = t4 * en.ONE_SECOND_IN_TS;
    let n6;
    for (n6 = s5 < i3 ? -8589934592 : 8589934592; Math.abs(i3 - s5) > 4294967296; ) i3 += n6;
    return i3 / en.ONE_SECOND_IN_TS;
  }
};
var hm = function(e9, t4) {
  const i3 = e9.cues;
  for (let s5 = 0; s5 < i3.length; s5++) {
    const e10 = i3[s5];
    if (t4 >= e10.adStartTime && t4 <= e10.adEndTime) return e10;
  }
  return null;
};
var um = function(e9, t4, i3 = 0) {
  if (!e9.segments) return;
  let s5, n6 = i3;
  for (let r5 = 0; r5 < e9.segments.length; r5++) {
    const i4 = e9.segments[r5];
    if (s5 || (s5 = hm(t4, n6 + i4.duration / 2)), s5) {
      if ("cueIn" in i4) {
        s5.endTime = n6, s5.adEndTime = n6, n6 += i4.duration, s5 = null;
        continue;
      }
      if (n6 < s5.endTime) {
        n6 += i4.duration;
        continue;
      }
      s5.endTime += i4.duration;
    } else if ("cueOut" in i4 && (s5 = new _.VTTCue(n6, n6 + i4.duration, i4.cueOut), s5.adStartTime = n6, s5.adEndTime = n6 + parseFloat(i4.cueOut), t4.addCue(s5)), "cueOutCont" in i4) {
      const [e10, r6] = i4.cueOutCont.split("/").map(parseFloat);
      s5 = new _.VTTCue(n6, n6 + i4.duration, ""), s5.adStartTime = n6 - e10, s5.adEndTime = s5.adStartTime + r6, t4.addCue(s5);
    }
    n6 += i4.duration;
  }
};
var dm = class {
  constructor({ start: e9, end: t4, segmentIndex: i3, partIndex: s5 = null, appended: n6 = false }) {
    this.start_ = e9, this.end_ = t4, this.segmentIndex_ = i3, this.partIndex_ = s5, this.appended_ = n6;
  }
  isInRange(e9) {
    return e9 >= this.start && e9 < this.end;
  }
  markAppended() {
    this.appended_ = true;
  }
  resetAppendedStatus() {
    this.appended_ = false;
  }
  get isAppended() {
    return this.appended_;
  }
  get start() {
    return this.start_;
  }
  get end() {
    return this.end_;
  }
  get segmentIndex() {
    return this.segmentIndex_;
  }
  get partIndex() {
    return this.partIndex_;
  }
};
var cm = class {
  constructor(e9, t4 = []) {
    this.segmentSyncInfo_ = e9, this.partsSyncInfo_ = t4;
  }
  get segmentSyncInfo() {
    return this.segmentSyncInfo_;
  }
  get partsSyncInfo() {
    return this.partsSyncInfo_;
  }
  get hasPartsSyncInfo() {
    return this.partsSyncInfo_.length > 0;
  }
  resetAppendStatus() {
    this.segmentSyncInfo_.resetAppendedStatus(), this.partsSyncInfo_.forEach((e9) => e9.resetAppendedStatus());
  }
};
var pm = class {
  constructor() {
    this.storage_ = /* @__PURE__ */ new Map(), this.diagnostics_ = "", this.isReliable_ = false, this.start_ = -1 / 0, this.end_ = 1 / 0;
  }
  get start() {
    return this.start_;
  }
  get end() {
    return this.end_;
  }
  get diagnostics() {
    return this.diagnostics_;
  }
  get isReliable() {
    return this.isReliable_;
  }
  resetAppendedStatus() {
    this.storage_.forEach((e9) => e9.resetAppendStatus());
  }
  update(e9, t4) {
    const { mediaSequence: i3, segments: s5 } = e9;
    if (this.isReliable_ = this.isReliablePlaylist_(i3, s5), this.isReliable_) return this.updateStorage_(s5, i3, this.calculateBaseTime_(i3, t4));
  }
  getSyncInfoForTime(e9) {
    for (const { segmentSyncInfo: t4, partsSyncInfo: i3 } of this.storage_.values()) if (i3.length) {
      for (const s5 of i3) if (s5.isInRange(e9)) return s5;
    } else if (t4.isInRange(e9)) return t4;
    return null;
  }
  getSyncInfoForMediaSequence(e9) {
    return this.storage_.get(e9);
  }
  updateStorage_(e9, t4, i3) {
    const s5 = /* @__PURE__ */ new Map();
    let n6 = "\n", r5 = i3, a6 = t4;
    this.start_ = r5, e9.forEach((e10, t5) => {
      const i4 = this.storage_.get(a6), o4 = r5, l6 = o4 + e10.duration, h2 = Boolean(i4 && i4.segmentSyncInfo && i4.segmentSyncInfo.isAppended), u4 = new dm({ start: o4, end: l6, appended: h2, segmentIndex: t5 });
      e10.syncInfo = u4;
      let d5 = r5;
      const c3 = (e10.parts || []).map((e11, s6) => {
        const r6 = d5, o5 = d5 + e11.duration, l7 = Boolean(i4 && i4.partsSyncInfo && i4.partsSyncInfo[s6] && i4.partsSyncInfo[s6].isAppended), h3 = new dm({ start: r6, end: o5, appended: l7, segmentIndex: t5, partIndex: s6 });
        return d5 = o5, n6 += `Media Sequence: ${a6}.${s6} | Range: ${r6} --> ${o5} | Appended: ${l7}
`, e11.syncInfo = h3, h3;
      });
      s5.set(a6, new cm(u4, c3)), n6 += `${dp(e10.resolvedUri)} | Media Sequence: ${a6} | Range: ${o4} --> ${l6} | Appended: ${h2}
`, a6++, r5 = l6;
    }), this.end_ = r5, this.storage_ = s5, this.diagnostics_ = n6;
  }
  calculateBaseTime_(e9, t4) {
    return this.storage_.size ? this.storage_.has(e9) ? this.storage_.get(e9).segmentSyncInfo.start : t4 : 0;
  }
  isReliablePlaylist_(e9, t4) {
    return null != e9 && Array.isArray(t4) && t4.length;
  }
};
var mm = class extends pm {
  constructor(e9) {
    super(), this.parent_ = e9;
  }
  calculateBaseTime_(e9, t4) {
    if (!this.storage_.size) {
      const t5 = this.parent_.getSyncInfoForMediaSequence(e9);
      return t5 ? t5.segmentSyncInfo.start : 0;
    }
    return super.calculateBaseTime_(e9, t4);
  }
};
var gm = 86400;
var fm = [{ name: "VOD", run: (e9, t4, i3, s5, n6) => {
  if (i3 !== 1 / 0) {
    return { time: 0, segmentIndex: 0, partIndex: null };
  }
  return null;
} }, { name: "MediaSequence", run: (e9, t4, i3, s5, n6, r5) => {
  const a6 = e9.getMediaSequenceSync(r5);
  if (!a6) return null;
  if (!a6.isReliable) return null;
  const o4 = a6.getSyncInfoForTime(n6);
  return o4 ? { time: o4.start, partIndex: o4.partIndex, segmentIndex: o4.segmentIndex } : null;
} }, { name: "ProgramDateTime", run: (e9, t4, i3, s5, n6) => {
  if (!Object.keys(e9.timelineToDatetimeMappings).length) return null;
  let r5 = null, a6 = null;
  const o4 = Uu(t4);
  n6 = n6 || 0;
  for (let l6 = 0; l6 < o4.length; l6++) {
    const i4 = o4[t4.endList || 0 === n6 ? l6 : o4.length - (l6 + 1)], s6 = i4.segment, h2 = e9.timelineToDatetimeMappings[s6.timeline];
    if (!h2 || !s6.dateTimeObject) continue;
    let u4 = s6.dateTimeObject.getTime() / 1e3 + h2;
    if (s6.parts && "number" == typeof i4.partIndex) for (let e10 = 0; e10 < i4.partIndex; e10++) u4 += s6.parts[e10].duration;
    const d5 = Math.abs(n6 - u4);
    if (null !== a6 && (0 === d5 || a6 < d5)) break;
    a6 = d5, r5 = { time: u4, segmentIndex: i4.segmentIndex, partIndex: i4.partIndex };
  }
  return r5;
} }, { name: "Segment", run: (e9, t4, i3, s5, n6) => {
  let r5 = null, a6 = null;
  n6 = n6 || 0;
  const o4 = Uu(t4);
  for (let l6 = 0; l6 < o4.length; l6++) {
    const e10 = o4[t4.endList || 0 === n6 ? l6 : o4.length - (l6 + 1)], i4 = e10.segment, h2 = e10.part && e10.part.start || i4 && i4.start;
    if (i4.timeline === s5 && void 0 !== h2) {
      const t5 = Math.abs(n6 - h2);
      if (null !== a6 && a6 < t5) break;
      (!r5 || null === a6 || a6 >= t5) && (a6 = t5, r5 = { time: h2, segmentIndex: e10.segmentIndex, partIndex: e10.partIndex });
    }
  }
  return r5;
} }, { name: "Discontinuity", run: (e9, t4, i3, s5, n6) => {
  let r5 = null;
  if (n6 = n6 || 0, t4.discontinuityStarts && t4.discontinuityStarts.length) {
    let i4 = null;
    for (let s6 = 0; s6 < t4.discontinuityStarts.length; s6++) {
      const a6 = t4.discontinuityStarts[s6], o4 = t4.discontinuitySequence + s6 + 1, l6 = e9.discontinuities[o4];
      if (l6) {
        const e10 = Math.abs(n6 - l6.time);
        if (null !== i4 && i4 < e10) break;
        (!r5 || null === i4 || i4 >= e10) && (i4 = e10, r5 = { time: l6.time, segmentIndex: a6, partIndex: null });
      }
    }
  }
  return r5;
} }, { name: "Playlist", run: (e9, t4, i3, s5, n6) => {
  if (t4.syncInfo) {
    return { time: t4.syncInfo.time, segmentIndex: t4.syncInfo.mediaSequence - t4.mediaSequence, partIndex: null };
  }
  return null;
} }];
var ym = class extends du.EventTarget {
  constructor(e9 = {}) {
    super(), this.timelines = [], this.discontinuities = [], this.timelineToDatetimeMappings = {};
    const t4 = new pm(), i3 = new mm(t4), s5 = new mm(t4);
    this.mediaSequenceStorage_ = { main: t4, audio: i3, vtt: s5 }, this.logger_ = bu("SyncController");
  }
  getMediaSequenceSync(e9) {
    return this.mediaSequenceStorage_[e9] || null;
  }
  getSyncPoint(e9, t4, i3, s5, n6) {
    if (t4 !== 1 / 0) {
      return fm.find(({ name: e10 }) => "VOD" === e10).run(this, e9, t4);
    }
    const r5 = this.runStrategies_(e9, t4, i3, s5, n6);
    if (!r5.length) return null;
    for (const a6 of r5) {
      const { syncPoint: t5, strategy: i4 } = a6, { segmentIndex: n7, time: r6 } = t5;
      if (n7 < 0) continue;
      const o4 = r6, l6 = o4 + e9.segments[n7].duration;
      if (this.logger_(`Strategy: ${i4}. Current time: ${s5}. selected segment: ${n7}. Time: [${o4} -> ${l6}]}`), s5 >= o4 && s5 < l6) return this.logger_("Found sync point with exact match: ", t5), t5;
    }
    return this.selectSyncPoint_(r5, { key: "time", value: s5 });
  }
  getExpiredTime(e9, t4) {
    if (!e9 || !e9.segments) return null;
    const i3 = this.runStrategies_(e9, t4, e9.discontinuitySequence, 0);
    if (!i3.length) return null;
    const s5 = this.selectSyncPoint_(i3, { key: "segmentIndex", value: 0 });
    return s5.segmentIndex > 0 && (s5.time *= -1), Math.abs(s5.time + zu({ defaultDuration: e9.targetDuration, durationList: e9.segments, startIndex: s5.segmentIndex, endIndex: 0 }));
  }
  runStrategies_(e9, t4, i3, s5, n6) {
    const r5 = [];
    for (let a6 = 0; a6 < fm.length; a6++) {
      const o4 = fm[a6], l6 = o4.run(this, e9, t4, i3, s5, n6);
      l6 && (l6.strategy = o4.name, r5.push({ strategy: o4.name, syncPoint: l6 }));
    }
    return r5;
  }
  selectSyncPoint_(e9, t4) {
    let i3 = e9[0].syncPoint, s5 = Math.abs(e9[0].syncPoint[t4.key] - t4.value), n6 = e9[0].strategy;
    for (let r5 = 1; r5 < e9.length; r5++) {
      const a6 = Math.abs(e9[r5].syncPoint[t4.key] - t4.value);
      a6 < s5 && (s5 = a6, i3 = e9[r5].syncPoint, n6 = e9[r5].strategy);
    }
    return this.logger_(`syncPoint for [${t4.key}: ${t4.value}] chosen with strategy [${n6}]: [time:${i3.time}, segmentIndex:${i3.segmentIndex}` + ("number" == typeof i3.partIndex ? `,partIndex:${i3.partIndex}` : "") + "]"), i3;
  }
  saveExpiredSegmentInfo(e9, t4) {
    const i3 = t4.mediaSequence - e9.mediaSequence;
    if (i3 > gm) du.log.warn(`Not saving expired segment info. Media sequence gap ${i3} is too large.`);
    else for (let s5 = i3 - 1; s5 >= 0; s5--) {
      const i4 = e9.segments[s5];
      if (i4 && void 0 !== i4.start) {
        t4.syncInfo = { mediaSequence: e9.mediaSequence + s5, time: i4.start }, this.logger_(`playlist refresh sync: [time:${t4.syncInfo.time}, mediaSequence: ${t4.syncInfo.mediaSequence}]`), this.trigger("syncinfoupdate");
        break;
      }
    }
  }
  setDateTimeMappingForStart(e9) {
    if (this.timelineToDatetimeMappings = {}, e9.segments && e9.segments.length && e9.segments[0].dateTimeObject) {
      const t4 = e9.segments[0], i3 = t4.dateTimeObject.getTime() / 1e3;
      this.timelineToDatetimeMappings[t4.timeline] = -i3;
    }
  }
  saveSegmentTimingInfo({ segmentInfo: e9, shouldSaveTimelineMapping: t4 }) {
    const i3 = this.calculateSegmentTimeMapping_(e9, e9.timingInfo, t4), s5 = e9.segment;
    i3 && (this.saveDiscontinuitySyncInfo_(e9), e9.playlist.syncInfo || (e9.playlist.syncInfo = { mediaSequence: e9.playlist.mediaSequence + e9.mediaIndex, time: s5.start }));
    const n6 = s5.dateTimeObject;
    s5.discontinuity && t4 && n6 && (this.timelineToDatetimeMappings[s5.timeline] = -n6.getTime() / 1e3);
  }
  timestampOffsetForTimeline(e9) {
    return void 0 === this.timelines[e9] ? null : this.timelines[e9].time;
  }
  mappingForTimeline(e9) {
    return void 0 === this.timelines[e9] ? null : this.timelines[e9].mapping;
  }
  calculateSegmentTimeMapping_(e9, t4, i3) {
    const s5 = e9.segment, n6 = e9.part;
    let r5, a6, o4 = this.timelines[e9.timeline];
    if ("number" == typeof e9.timestampOffset) o4 = { time: e9.startOfSegment, mapping: e9.startOfSegment - t4.start }, i3 && (this.timelines[e9.timeline] = o4, this.trigger("timestampoffset"), this.logger_(`time mapping for timeline ${e9.timeline}: [time: ${o4.time}] [mapping: ${o4.mapping}]`)), r5 = e9.startOfSegment, a6 = t4.end + o4.mapping;
    else {
      if (!o4) return false;
      r5 = t4.start + o4.mapping, a6 = t4.end + o4.mapping;
    }
    return n6 && (n6.start = r5, n6.end = a6), (!s5.start || r5 < s5.start) && (s5.start = r5), s5.end = a6, true;
  }
  saveDiscontinuitySyncInfo_(e9) {
    const t4 = e9.playlist, i3 = e9.segment;
    if (i3.discontinuity) this.discontinuities[i3.timeline] = { time: i3.start, accuracy: 0 };
    else if (t4.discontinuityStarts && t4.discontinuityStarts.length) for (let s5 = 0; s5 < t4.discontinuityStarts.length; s5++) {
      const n6 = t4.discontinuityStarts[s5], r5 = t4.discontinuitySequence + s5 + 1, a6 = n6 - e9.mediaIndex, o4 = Math.abs(a6);
      if (!this.discontinuities[r5] || this.discontinuities[r5].accuracy > o4) {
        let s6;
        s6 = a6 < 0 ? i3.start - zu({ defaultDuration: t4.targetDuration, durationList: t4.segments, startIndex: e9.mediaIndex, endIndex: n6 }) : i3.end + zu({ defaultDuration: t4.targetDuration, durationList: t4.segments, startIndex: e9.mediaIndex + 1, endIndex: n6 }), this.discontinuities[r5] = { time: s6, accuracy: o4 };
      }
    }
  }
  dispose() {
    this.trigger("dispose"), this.off();
  }
};
var _m = class extends du.EventTarget {
  constructor() {
    super(), this.pendingTimelineChanges_ = {}, this.lastTimelineChanges_ = {};
  }
  clearPendingTimelineChange(e9) {
    this.pendingTimelineChanges_[e9] = null, this.trigger("pendingtimelinechange");
  }
  pendingTimelineChange({ type: e9, from: t4, to: i3 }) {
    return "number" == typeof t4 && "number" == typeof i3 && (this.pendingTimelineChanges_[e9] = { type: e9, from: t4, to: i3 }, this.trigger("pendingtimelinechange")), this.pendingTimelineChanges_[e9];
  }
  lastTimelineChange({ type: e9, from: t4, to: i3 }) {
    if ("number" == typeof t4 && "number" == typeof i3) {
      this.lastTimelineChanges_[e9] = { type: e9, from: t4, to: i3 }, delete this.pendingTimelineChanges_[e9];
      const s5 = { timelineChangeInfo: { from: t4, to: i3 } };
      this.trigger({ type: "timelinechange", metadata: s5 });
    }
    return this.lastTimelineChanges_[e9];
  }
  dispose() {
    this.trigger("dispose"), this.pendingTimelineChanges_ = {}, this.lastTimelineChanges_ = {}, this.off();
  }
};
var bm = gc(fc(function() {
  var e9 = function() {
    function e10() {
      this.listeners = {};
    }
    var t5 = e10.prototype;
    return t5.on = function(e11, t6) {
      this.listeners[e11] || (this.listeners[e11] = []), this.listeners[e11].push(t6);
    }, t5.off = function(e11, t6) {
      if (!this.listeners[e11]) return false;
      var i4 = this.listeners[e11].indexOf(t6);
      return this.listeners[e11] = this.listeners[e11].slice(0), this.listeners[e11].splice(i4, 1), i4 > -1;
    }, t5.trigger = function(e11) {
      var t6 = this.listeners[e11];
      if (t6) if (2 === arguments.length) for (var i4 = t6.length, s6 = 0; s6 < i4; ++s6) t6[s6].call(this, arguments[1]);
      else for (var n7 = Array.prototype.slice.call(arguments, 1), r6 = t6.length, a7 = 0; a7 < r6; ++a7) t6[a7].apply(this, n7);
    }, t5.dispose = function() {
      this.listeners = {};
    }, t5.pipe = function(e11) {
      this.on("data", function(t6) {
        e11.push(t6);
      });
    }, e10;
  }();
  function t4(e10) {
    return e10.subarray(0, e10.byteLength - e10[e10.byteLength - 1]);
  }
  const i3 = function() {
    const e10 = [[[], [], [], [], []], [[], [], [], [], []]], t5 = e10[0], i4 = e10[1], s6 = t5[4], n7 = i4[4];
    let r6, a7, o5;
    const l7 = [], h3 = [];
    let u5, d6, c4, p3, m5, g4;
    for (r6 = 0; r6 < 256; r6++) h3[(l7[r6] = r6 << 1 ^ 283 * (r6 >> 7)) ^ r6] = r6;
    for (a7 = o5 = 0; !s6[a7]; a7 ^= u5 || 1, o5 = h3[o5] || 1) for (p3 = o5 ^ o5 << 1 ^ o5 << 2 ^ o5 << 3 ^ o5 << 4, p3 = p3 >> 8 ^ 255 & p3 ^ 99, s6[a7] = p3, n7[p3] = a7, c4 = l7[d6 = l7[u5 = l7[a7]]], g4 = 16843009 * c4 ^ 65537 * d6 ^ 257 * u5 ^ 16843008 * a7, m5 = 257 * l7[p3] ^ 16843008 * p3, r6 = 0; r6 < 4; r6++) t5[r6][a7] = m5 = m5 << 24 ^ m5 >>> 8, i4[r6][p3] = g4 = g4 << 24 ^ g4 >>> 8;
    for (r6 = 0; r6 < 5; r6++) t5[r6] = t5[r6].slice(0), i4[r6] = i4[r6].slice(0);
    return e10;
  };
  let s5 = null;
  class n6 {
    constructor(e10) {
      let t5, n7, r6;
      s5 || (s5 = i3()), this._tables = [[s5[0][0].slice(), s5[0][1].slice(), s5[0][2].slice(), s5[0][3].slice(), s5[0][4].slice()], [s5[1][0].slice(), s5[1][1].slice(), s5[1][2].slice(), s5[1][3].slice(), s5[1][4].slice()]];
      const a7 = this._tables[0][4], o5 = this._tables[1], l7 = e10.length;
      let h3 = 1;
      if (4 !== l7 && 6 !== l7 && 8 !== l7) throw new Error("Invalid aes key size");
      const u5 = e10.slice(0), d6 = [];
      for (this._key = [u5, d6], t5 = l7; t5 < 4 * l7 + 28; t5++) r6 = u5[t5 - 1], (t5 % l7 == 0 || 8 === l7 && t5 % l7 == 4) && (r6 = a7[r6 >>> 24] << 24 ^ a7[r6 >> 16 & 255] << 16 ^ a7[r6 >> 8 & 255] << 8 ^ a7[255 & r6], t5 % l7 == 0 && (r6 = r6 << 8 ^ r6 >>> 24 ^ h3 << 24, h3 = h3 << 1 ^ 283 * (h3 >> 7))), u5[t5] = u5[t5 - l7] ^ r6;
      for (n7 = 0; t5; n7++, t5--) r6 = u5[3 & n7 ? t5 : t5 - 4], d6[n7] = t5 <= 4 || n7 < 4 ? r6 : o5[0][a7[r6 >>> 24]] ^ o5[1][a7[r6 >> 16 & 255]] ^ o5[2][a7[r6 >> 8 & 255]] ^ o5[3][a7[255 & r6]];
    }
    decrypt(e10, t5, i4, s6, n7, r6) {
      const a7 = this._key[1];
      let o5, l7, h3, u5 = e10 ^ a7[0], d6 = s6 ^ a7[1], c4 = i4 ^ a7[2], p3 = t5 ^ a7[3];
      const m5 = a7.length / 4 - 2;
      let g4, f5 = 4;
      const y4 = this._tables[1], _2 = y4[0], b3 = y4[1], v5 = y4[2], T2 = y4[3], S4 = y4[4];
      for (g4 = 0; g4 < m5; g4++) o5 = _2[u5 >>> 24] ^ b3[d6 >> 16 & 255] ^ v5[c4 >> 8 & 255] ^ T2[255 & p3] ^ a7[f5], l7 = _2[d6 >>> 24] ^ b3[c4 >> 16 & 255] ^ v5[p3 >> 8 & 255] ^ T2[255 & u5] ^ a7[f5 + 1], h3 = _2[c4 >>> 24] ^ b3[p3 >> 16 & 255] ^ v5[u5 >> 8 & 255] ^ T2[255 & d6] ^ a7[f5 + 2], p3 = _2[p3 >>> 24] ^ b3[u5 >> 16 & 255] ^ v5[d6 >> 8 & 255] ^ T2[255 & c4] ^ a7[f5 + 3], f5 += 4, u5 = o5, d6 = l7, c4 = h3;
      for (g4 = 0; g4 < 4; g4++) n7[(3 & -g4) + r6] = S4[u5 >>> 24] << 24 ^ S4[d6 >> 16 & 255] << 16 ^ S4[c4 >> 8 & 255] << 8 ^ S4[255 & p3] ^ a7[f5++], o5 = u5, u5 = d6, d6 = c4, c4 = p3, p3 = o5;
    }
  }
  class r5 extends e9 {
    constructor() {
      super(e9), this.jobs = [], this.delay = 1, this.timeout_ = null;
    }
    processJob_() {
      this.jobs.shift()(), this.jobs.length ? this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay) : this.timeout_ = null;
    }
    push(e10) {
      this.jobs.push(e10), this.timeout_ || (this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay));
    }
  }
  const a6 = function(e10) {
    return e10 << 24 | (65280 & e10) << 8 | (16711680 & e10) >> 8 | e10 >>> 24;
  }, o4 = function(e10, t5, i4) {
    const s6 = new Int32Array(e10.buffer, e10.byteOffset, e10.byteLength >> 2), r6 = new n6(Array.prototype.slice.call(t5)), o5 = new Uint8Array(e10.byteLength), l7 = new Int32Array(o5.buffer);
    let h3, u5, d6, c4, p3, m5, g4, f5, y4;
    for (h3 = i4[0], u5 = i4[1], d6 = i4[2], c4 = i4[3], y4 = 0; y4 < s6.length; y4 += 4) p3 = a6(s6[y4]), m5 = a6(s6[y4 + 1]), g4 = a6(s6[y4 + 2]), f5 = a6(s6[y4 + 3]), r6.decrypt(p3, m5, g4, f5, l7, y4), l7[y4] = a6(l7[y4] ^ h3), l7[y4 + 1] = a6(l7[y4 + 1] ^ u5), l7[y4 + 2] = a6(l7[y4 + 2] ^ d6), l7[y4 + 3] = a6(l7[y4 + 3] ^ c4), h3 = p3, u5 = m5, d6 = g4, c4 = f5;
    return o5;
  };
  class l6 {
    constructor(e10, i4, s6, n7) {
      const o5 = l6.STEP, h3 = new Int32Array(e10.buffer), u5 = new Uint8Array(e10.byteLength);
      let d6 = 0;
      for (this.asyncStream_ = new r5(), this.asyncStream_.push(this.decryptChunk_(h3.subarray(d6, d6 + o5), i4, s6, u5)), d6 = o5; d6 < h3.length; d6 += o5) s6 = new Uint32Array([a6(h3[d6 - 4]), a6(h3[d6 - 3]), a6(h3[d6 - 2]), a6(h3[d6 - 1])]), this.asyncStream_.push(this.decryptChunk_(h3.subarray(d6, d6 + o5), i4, s6, u5));
      this.asyncStream_.push(function() {
        n7(null, t4(u5));
      });
    }
    static get STEP() {
      return 32e3;
    }
    decryptChunk_(e10, t5, i4, s6) {
      return function() {
        const n7 = o4(e10, t5, i4);
        s6.set(n7, e10.byteOffset);
      };
    }
  }
  var h2, u4 = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
  h2 = "undefined" != typeof window ? window : void 0 !== u4 ? u4 : "undefined" != typeof self ? self : {};
  var d5 = function(e10) {
    return "function" === ArrayBuffer.isView ? ArrayBuffer.isView(e10) : e10 && e10.buffer instanceof ArrayBuffer;
  }, c3 = h2.BigInt || Number;
  c3("0x1"), c3("0x100"), c3("0x10000"), c3("0x1000000"), c3("0x100000000"), c3("0x10000000000"), c3("0x1000000000000"), c3("0x100000000000000"), c3("0x10000000000000000"), function() {
    var e10 = new Uint16Array([65484]), t5 = new Uint8Array(e10.buffer, e10.byteOffset, e10.byteLength);
    255 === t5[0] || t5[0];
  }();
  const p2 = function(e10) {
    const t5 = {};
    return Object.keys(e10).forEach((i4) => {
      const s6 = e10[i4];
      d5(s6) ? t5[i4] = { bytes: s6.buffer, byteOffset: s6.byteOffset, byteLength: s6.byteLength } : t5[i4] = s6;
    }), t5;
  };
  self.onmessage = function(e10) {
    const t5 = e10.data, i4 = new Uint8Array(t5.encrypted.bytes, t5.encrypted.byteOffset, t5.encrypted.byteLength), s6 = new Uint32Array(t5.key.bytes, t5.key.byteOffset, t5.key.byteLength / 4), n7 = new Uint32Array(t5.iv.bytes, t5.iv.byteOffset, t5.iv.byteLength / 4);
    new l6(i4, s6, n7, function(e11, i5) {
      self.postMessage(p2({ source: t5.source, decrypted: i5 }), [i5.buffer]);
    });
  };
}));
var vm = mc(bm);
var Tm = (e9) => {
  let t4 = e9.default ? "main" : "alternative";
  return e9.characteristics && e9.characteristics.indexOf("public.accessibility.describes-video") >= 0 && (t4 = "main-desc"), t4;
};
var Sm = (e9, t4) => {
  e9.abort(), e9.pause(), t4 && t4.activePlaylistLoader && (t4.activePlaylistLoader.pause(), t4.activePlaylistLoader = null);
};
var Em = (e9, t4) => {
  t4.activePlaylistLoader = e9, e9.load();
};
var wm = (e9, t4) => () => {
  const { segmentLoaders: { [e9]: i3, main: s5 }, mediaTypes: { [e9]: n6 } } = t4, r5 = n6.activeTrack(), a6 = n6.getActiveGroup(), o4 = n6.activePlaylistLoader, l6 = n6.lastGroup_;
  a6 && l6 && a6.id === l6.id || (n6.lastGroup_ = a6, n6.lastTrack_ = r5, Sm(i3, n6), a6 && !a6.isMainPlaylist && (a6.playlistLoader ? (i3.resyncLoader(), Em(a6.playlistLoader, n6)) : o4 && s5.resetEverything()));
};
var Cm = (e9, t4) => () => {
  const { segmentLoaders: { [e9]: i3 }, mediaTypes: { [e9]: s5 } } = t4;
  s5.lastGroup_ = null, i3.abort(), i3.pause();
};
var km = (e9, t4) => () => {
  const { mainPlaylistLoader: i3, segmentLoaders: { [e9]: s5, main: n6 }, mediaTypes: { [e9]: r5 } } = t4, a6 = r5.activeTrack(), o4 = r5.getActiveGroup(), l6 = r5.activePlaylistLoader, h2 = r5.lastTrack_;
  if ((!h2 || !a6 || h2.id !== a6.id) && (r5.lastGroup_ = o4, r5.lastTrack_ = a6, Sm(s5, r5), o4)) {
    if (o4.isMainPlaylist) {
      if (!a6 || !h2 || a6.id === h2.id) return;
      const e10 = t4.vhs.playlistController_, s6 = e10.selectPlaylist();
      if (e10.media() === s6) return;
      return r5.logger_(`track change. Switching main audio from ${h2.id} to ${a6.id}`), i3.pause(), n6.resetEverything(), void e10.fastQualityChange_(s6);
    }
    if ("AUDIO" === e9) {
      if (!o4.playlistLoader) return n6.setAudio(true), void n6.resetEverything();
      s5.setAudio(true), n6.setAudio(false);
    }
    l6 !== o4.playlistLoader ? (s5.track && s5.track(a6), s5.resetEverything(), Em(o4.playlistLoader, r5)) : Em(o4.playlistLoader, r5);
  }
};
var Im = { AUDIO: (e9, t4) => () => {
  const { mediaTypes: { [e9]: i3 }, excludePlaylist: s5 } = t4, n6 = i3.activeTrack(), r5 = i3.activeGroup(), a6 = (r5.filter((e10) => e10.default)[0] || r5[0]).id, o4 = i3.tracks[a6];
  if (n6 !== o4) {
    du.log.warn("Problem encountered loading the alternate audio track.Switching back to default.");
    for (const e10 in i3.tracks) i3.tracks[e10].enabled = i3.tracks[e10] === o4;
    i3.onTrackChanged();
  } else s5({ error: { message: "Problem encountered loading the default audio track." } });
}, SUBTITLES: (e9, t4) => () => {
  const { mediaTypes: { [e9]: i3 } } = t4;
  du.log.warn("Problem encountered loading the subtitle track.Disabling subtitle track.");
  const s5 = i3.activeTrack();
  s5 && (s5.mode = "disabled"), i3.onTrackChanged();
} };
var xm = { AUDIO: (e9, t4, i3) => {
  if (!t4) return;
  const { tech: s5, requestOptions: n6, segmentLoaders: { [e9]: r5 } } = i3;
  t4.on("loadedmetadata", () => {
    const e10 = t4.media();
    r5.playlist(e10, n6), (!s5.paused() || e10.endList && "none" !== s5.preload()) && r5.load();
  }), t4.on("loadedplaylist", () => {
    r5.playlist(t4.media(), n6), s5.paused() || r5.load();
  }), t4.on("error", Im[e9](e9, i3));
}, SUBTITLES: (e9, t4, i3) => {
  const { tech: s5, requestOptions: n6, segmentLoaders: { [e9]: r5 }, mediaTypes: { [e9]: a6 } } = i3;
  t4.on("loadedmetadata", () => {
    const e10 = t4.media();
    r5.playlist(e10, n6), r5.track(a6.activeTrack()), (!s5.paused() || e10.endList && "none" !== s5.preload()) && r5.load();
  }), t4.on("loadedplaylist", () => {
    r5.playlist(t4.media(), n6), s5.paused() || r5.load();
  }), t4.on("error", Im[e9](e9, i3));
} };
var Am = { AUDIO: (e9, t4) => {
  const { vhs: i3, sourceType: s5, segmentLoaders: { [e9]: n6 }, requestOptions: r5, main: { mediaGroups: a6 }, mediaTypes: { [e9]: { groups: o4, tracks: l6, logger_: h2 } }, mainPlaylistLoader: u4 } = t4, d5 = td(u4.main);
  a6[e9] && 0 !== Object.keys(a6[e9]).length || (a6[e9] = { main: { default: { default: true } } }, d5 && (a6[e9].main.default.playlists = u4.main.playlists));
  for (const c3 in a6[e9]) {
    o4[c3] || (o4[c3] = []);
    for (const n7 in a6[e9][c3]) {
      let p2, m5 = a6[e9][c3][n7];
      if (d5 ? (h2(`AUDIO group '${c3}' label '${n7}' is a main playlist`), m5.isMainPlaylist = true, p2 = null) : p2 = "vhs-json" === s5 && m5.playlists ? new kd(m5.playlists[0], i3, r5) : m5.resolvedUri ? new kd(m5.resolvedUri, i3, r5) : m5.playlists && "dash" === s5 ? new hc(m5.playlists[0], i3, r5, u4) : null, m5 = vu({ id: n7, playlistLoader: p2 }, m5), xm[e9](e9, m5.playlistLoader, t4), o4[c3].push(m5), void 0 === l6[n7]) {
        const e10 = new du.AudioTrack({ id: n7, kind: Tm(m5), enabled: false, language: m5.language, default: m5.default, label: n7 });
        l6[n7] = e10;
      }
    }
  }
  n6.on("error", Im[e9](e9, t4));
}, SUBTITLES: (e9, t4) => {
  const { tech: i3, vhs: s5, sourceType: n6, segmentLoaders: { [e9]: r5 }, requestOptions: a6, main: { mediaGroups: o4 }, mediaTypes: { [e9]: { groups: l6, tracks: h2 } }, mainPlaylistLoader: u4 } = t4;
  for (const d5 in o4[e9]) {
    l6[d5] || (l6[d5] = []);
    for (const r6 in o4[e9][d5]) {
      if (!s5.options_.useForcedSubtitles && o4[e9][d5][r6].forced) continue;
      let c3, p2 = o4[e9][d5][r6];
      if ("hls" === n6) c3 = new kd(p2.resolvedUri, s5, a6);
      else if ("dash" === n6) {
        if (!p2.playlists.filter((e10) => e10.excludeUntil !== 1 / 0).length) return;
        c3 = new hc(p2.playlists[0], s5, a6, u4);
      } else "vhs-json" === n6 && (c3 = new kd(p2.playlists ? p2.playlists[0] : p2.resolvedUri, s5, a6));
      if (p2 = vu({ id: r6, playlistLoader: c3 }, p2), xm[e9](e9, p2.playlistLoader, t4), l6[d5].push(p2), void 0 === h2[r6]) {
        const e10 = i3.addRemoteTextTrack({ id: r6, kind: "subtitles", default: p2.default && p2.autoselect, language: p2.language, label: r6 }, false).track;
        h2[r6] = e10;
      }
    }
  }
  r5.on("error", Im[e9](e9, t4));
}, "CLOSED-CAPTIONS": (e9, t4) => {
  const { tech: i3, main: { mediaGroups: s5 }, mediaTypes: { [e9]: { groups: n6, tracks: r5 } } } = t4;
  for (const a6 in s5[e9]) {
    n6[a6] || (n6[a6] = []);
    for (const t5 in s5[e9][a6]) {
      const o4 = s5[e9][a6][t5];
      if (!/^(?:CC|SERVICE)/.test(o4.instreamId)) continue;
      const l6 = i3.options_.vhs && i3.options_.vhs.captionServices || {};
      let h2 = { label: t5, language: o4.language, instreamId: o4.instreamId, default: o4.default && o4.autoselect };
      if (l6[h2.instreamId] && (h2 = vu(h2, l6[h2.instreamId])), void 0 === h2.default && delete h2.default, n6[a6].push(vu({ id: t5 }, o4)), void 0 === r5[t5]) {
        const e10 = i3.addRemoteTextTrack({ id: h2.instreamId, kind: "captions", default: h2.default, language: h2.language, label: h2.label }, false).track;
        r5[t5] = e10;
      }
    }
  }
} };
var Dm = (e9, t4) => {
  for (let i3 = 0; i3 < e9.length; i3++) {
    if (Zu(t4, e9[i3])) return true;
    if (e9[i3].playlists && Dm(e9[i3].playlists, t4)) return true;
  }
  return false;
};
var Pm = (e9, t4) => (i3) => {
  const { mainPlaylistLoader: s5, mediaTypes: { [e9]: { groups: n6 } } } = t4, r5 = s5.media();
  if (!r5) return null;
  let a6 = null;
  r5.attributes[e9] && (a6 = n6[r5.attributes[e9]]);
  const o4 = Object.keys(n6);
  if (!a6) if ("AUDIO" === e9 && o4.length > 1 && td(t4.main)) for (let e10 = 0; e10 < o4.length; e10++) {
    const t5 = n6[o4[e10]];
    if (Dm(t5, r5)) {
      a6 = t5;
      break;
    }
  }
  else n6.main ? a6 = n6.main : 1 === o4.length && (a6 = n6[o4[0]]);
  return void 0 === i3 ? a6 : null !== i3 && a6 && a6.filter((e10) => e10.id === i3.id)[0] || null;
};
var Lm = { AUDIO: (e9, t4) => () => {
  const { mediaTypes: { [e9]: { tracks: i3 } } } = t4;
  for (const e10 in i3) if (i3[e10].enabled) return i3[e10];
  return null;
}, SUBTITLES: (e9, t4) => () => {
  const { mediaTypes: { [e9]: { tracks: i3 } } } = t4;
  for (const e10 in i3) if ("showing" === i3[e10].mode || "hidden" === i3[e10].mode) return i3[e10];
  return null;
} };
var Om = (e9, { mediaTypes: t4 }) => () => {
  const i3 = t4[e9].activeTrack();
  return i3 ? t4[e9].activeGroup(i3) : null;
};
var Nm = (e9) => {
  ["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach((t5) => {
    Am[t5](t5, e9);
  });
  const { mediaTypes: t4, mainPlaylistLoader: i3, tech: s5, vhs: n6, segmentLoaders: { AUDIO: r5, main: a6 } } = e9;
  ["AUDIO", "SUBTITLES"].forEach((i4) => {
    t4[i4].activeGroup = Pm(i4, e9), t4[i4].activeTrack = Lm[i4](i4, e9), t4[i4].onGroupChanged = wm(i4, e9), t4[i4].onGroupChanging = Cm(i4, e9), t4[i4].onTrackChanged = km(i4, e9), t4[i4].getActiveGroup = Om(i4, e9);
  });
  const o4 = t4.AUDIO.activeGroup();
  if (o4) {
    const e10 = (o4.filter((e11) => e11.default)[0] || o4[0]).id;
    t4.AUDIO.tracks[e10].enabled = true, t4.AUDIO.onGroupChanged(), t4.AUDIO.onTrackChanged();
    t4.AUDIO.getActiveGroup().playlistLoader ? (a6.setAudio(false), r5.setAudio(true)) : a6.setAudio(true);
  }
  i3.on("mediachange", () => {
    ["AUDIO", "SUBTITLES"].forEach((e10) => t4[e10].onGroupChanged());
  }), i3.on("mediachanging", () => {
    ["AUDIO", "SUBTITLES"].forEach((e10) => t4[e10].onGroupChanging());
  });
  const l6 = () => {
    t4.AUDIO.onTrackChanged(), s5.trigger({ type: "usage", name: "vhs-audio-change" });
  };
  s5.audioTracks().addEventListener("change", l6), s5.remoteTextTracks().addEventListener("change", t4.SUBTITLES.onTrackChanged), n6.on("dispose", () => {
    s5.audioTracks().removeEventListener("change", l6), s5.remoteTextTracks().removeEventListener("change", t4.SUBTITLES.onTrackChanged);
  }), s5.clearTracks("audio");
  for (const h2 in t4.AUDIO.tracks) s5.audioTracks().addTrack(t4.AUDIO.tracks[h2]);
};
var Rm = () => {
  const e9 = {};
  return ["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach((t4) => {
    e9[t4] = { groups: {}, tracks: {}, activePlaylistLoader: null, activeGroup: Wp, activeTrack: Wp, getActiveGroup: Wp, onGroupChanged: Wp, onTrackChanged: Wp, lastTrack_: null, logger_: bu(`MediaGroups[${t4}]`) };
  }), e9;
};
var Mm = class {
  constructor() {
    this.priority_ = [], this.pathwayClones_ = /* @__PURE__ */ new Map();
  }
  set version(e9) {
    1 === e9 && (this.version_ = e9);
  }
  set ttl(e9) {
    this.ttl_ = e9 || 300;
  }
  set reloadUri(e9) {
    e9 && (this.reloadUri_ = yu(this.reloadUri_, e9));
  }
  set priority(e9) {
    e9 && e9.length && (this.priority_ = e9);
  }
  set pathwayClones(e9) {
    e9 && e9.length && (this.pathwayClones_ = new Map(e9.map((e10) => [e10.ID, e10])));
  }
  get version() {
    return this.version_;
  }
  get ttl() {
    return this.ttl_;
  }
  get reloadUri() {
    return this.reloadUri_;
  }
  get priority() {
    return this.priority_;
  }
  get pathwayClones() {
    return this.pathwayClones_;
  }
};
var Um = class extends du.EventTarget {
  constructor(e9, t4) {
    super(), this.currentPathway = null, this.defaultPathway = null, this.queryBeforeStart = false, this.availablePathways_ = /* @__PURE__ */ new Set(), this.steeringManifest = new Mm(), this.proxyServerUrl_ = null, this.manifestType_ = null, this.ttlTimeout_ = null, this.request_ = null, this.currentPathwayClones = /* @__PURE__ */ new Map(), this.nextPathwayClones = /* @__PURE__ */ new Map(), this.excludedSteeringManifestURLs = /* @__PURE__ */ new Set(), this.logger_ = bu("Content Steering"), this.xhr_ = e9, this.getBandwidth_ = t4;
  }
  assignTagProperties(e9, t4) {
    this.manifestType_ = t4.serverUri ? "HLS" : "DASH";
    const i3 = t4.serverUri || t4.serverURL;
    if (!i3) return this.logger_(`steering manifest URL is ${i3}, cannot request steering manifest.`), void this.trigger("error");
    i3.startsWith("data:") ? this.decodeDataUriManifest_(i3.substring(i3.indexOf(",") + 1)) : (this.steeringManifest.reloadUri = yu(e9, i3), this.defaultPathway = t4.pathwayId || t4.defaultServiceLocation, this.queryBeforeStart = t4.queryBeforeStart, this.proxyServerUrl_ = t4.proxyServerURL, this.defaultPathway && !this.queryBeforeStart && this.trigger("content-steering"));
  }
  requestSteeringManifest(e9) {
    const t4 = this.steeringManifest.reloadUri;
    if (!t4) return;
    const i3 = e9 ? t4 : this.getRequestURI(t4);
    if (!i3) return this.logger_("No valid content steering manifest URIs. Stopping content steering."), this.trigger("error"), void this.dispose();
    const s5 = { contentSteeringInfo: { uri: i3 } };
    this.trigger({ type: "contentsteeringloadstart", metadata: s5 }), this.request_ = this.xhr_({ uri: i3, requestType: "content-steering-manifest" }, (e10, t5) => {
      if (e10) {
        if (410 === t5.status) return this.logger_(`manifest request 410 ${e10}.`), this.logger_(`There will be no more content steering requests to ${i3} this session.`), void this.excludedSteeringManifestURLs.add(i3);
        if (429 === t5.status) {
          const i4 = t5.responseHeaders["retry-after"];
          return this.logger_(`manifest request 429 ${e10}.`), this.logger_(`content steering will retry in ${i4} seconds.`), void this.startTTLTimeout_(parseInt(i4, 10));
        }
        return this.logger_(`manifest failed to load ${e10}.`), void this.startTTLTimeout_();
      }
      let n6;
      this.trigger({ type: "contentsteeringloadcomplete", metadata: s5 });
      try {
        n6 = JSON.parse(this.request_.responseText);
      } catch (a6) {
        const e11 = { errorType: du.Error.StreamingContentSteeringParserError, error: a6 };
        this.trigger({ type: "error", metadata: e11 });
      }
      this.assignSteeringProperties_(n6);
      const r5 = { contentSteeringInfo: s5.contentSteeringInfo, contentSteeringManifest: { version: this.steeringManifest.version, reloadUri: this.steeringManifest.reloadUri, priority: this.steeringManifest.priority } };
      this.trigger({ type: "contentsteeringparsed", metadata: r5 }), this.startTTLTimeout_();
    });
  }
  setProxyServerUrl_(e9) {
    const t4 = new _.URL(e9), i3 = new _.URL(this.proxyServerUrl_);
    return i3.searchParams.set("url", encodeURI(t4.toString())), this.setSteeringParams_(i3.toString());
  }
  decodeDataUriManifest_(e9) {
    const t4 = JSON.parse(_.atob(e9));
    this.assignSteeringProperties_(t4);
  }
  setSteeringParams_(e9) {
    const t4 = new _.URL(e9), i3 = this.getPathway(), s5 = this.getBandwidth_();
    if (i3) {
      const e10 = `_${this.manifestType_}_pathway`;
      t4.searchParams.set(e10, i3);
    }
    if (s5) {
      const e10 = `_${this.manifestType_}_throughput`;
      t4.searchParams.set(e10, s5);
    }
    return t4.toString();
  }
  assignSteeringProperties_(e9) {
    if (this.steeringManifest.version = e9.VERSION, !this.steeringManifest.version) return this.logger_(`manifest version is ${e9.VERSION}, which is not supported.`), void this.trigger("error");
    this.steeringManifest.ttl = e9.TTL, this.steeringManifest.reloadUri = e9["RELOAD-URI"], this.steeringManifest.priority = e9["PATHWAY-PRIORITY"] || e9["SERVICE-LOCATION-PRIORITY"], this.steeringManifest.pathwayClones = e9["PATHWAY-CLONES"], this.nextPathwayClones = this.steeringManifest.pathwayClones, this.availablePathways_.size || (this.logger_("There are no available pathways for content steering. Ending content steering."), this.trigger("error"), this.dispose());
    const t4 = ((e10) => {
      for (const t5 of e10) if (this.availablePathways_.has(t5)) return t5;
      return [...this.availablePathways_][0];
    })(this.steeringManifest.priority);
    this.currentPathway !== t4 && (this.currentPathway = t4, this.trigger("content-steering"));
  }
  getPathway() {
    return this.currentPathway || this.defaultPathway;
  }
  getRequestURI(e9) {
    if (!e9) return null;
    const t4 = (e10) => this.excludedSteeringManifestURLs.has(e10);
    if (this.proxyServerUrl_) {
      const i4 = this.setProxyServerUrl_(e9);
      if (!t4(i4)) return i4;
    }
    const i3 = this.setSteeringParams_(e9);
    return t4(i3) ? null : i3;
  }
  startTTLTimeout_(e9 = this.steeringManifest.ttl) {
    const t4 = 1e3 * e9;
    this.ttlTimeout_ = _.setTimeout(() => {
      this.requestSteeringManifest();
    }, t4);
  }
  clearTTLTimeout_() {
    _.clearTimeout(this.ttlTimeout_), this.ttlTimeout_ = null;
  }
  abort() {
    this.request_ && this.request_.abort(), this.request_ = null;
  }
  dispose() {
    this.off("content-steering"), this.off("error"), this.abort(), this.clearTTLTimeout_(), this.currentPathway = null, this.defaultPathway = null, this.queryBeforeStart = null, this.proxyServerUrl_ = null, this.manifestType_ = null, this.ttlTimeout_ = null, this.request_ = null, this.excludedSteeringManifestURLs = /* @__PURE__ */ new Set(), this.availablePathways_ = /* @__PURE__ */ new Set(), this.steeringManifest = new Mm();
  }
  addAvailablePathway(e9) {
    e9 && this.availablePathways_.add(e9);
  }
  clearAvailablePathways() {
    this.availablePathways_.clear();
  }
  excludePathway(e9) {
    return this.availablePathways_.delete(e9);
  }
  didDASHTagChange(e9, t4) {
    return !t4 && this.steeringManifest.reloadUri || t4 && (yu(e9, t4.serverURL) !== this.steeringManifest.reloadUri || t4.defaultServiceLocation !== this.defaultPathway || t4.queryBeforeStart !== this.queryBeforeStart || t4.proxyServerURL !== this.proxyServerUrl_);
  }
  getAvailablePathways() {
    return this.availablePathways_;
  }
};
var Bm = 10;
var Fm;
var qm = ["mediaRequests", "mediaRequestsAborted", "mediaRequestsTimedout", "mediaRequestsErrored", "mediaTransferDuration", "mediaBytesTransferred", "mediaAppends"];
var jm = function(e9) {
  return this.audioSegmentLoader_[e9] + this.mainSegmentLoader_[e9];
};
var $m = function({ currentPlaylist: e9, buffered: t4, currentTime: i3, nextPlaylist: s5, bufferLowWaterLine: n6, bufferHighWaterLine: r5, duration: a6, bufferBasedABR: o4, log: l6 }) {
  if (!s5) return du.log.warn("We received no playlist to switch to. Please check your stream."), false;
  const h2 = `allowing switch ${e9 && e9.id || "null"} -> ${s5.id}`;
  if (!e9) return l6(`${h2} as current playlist is not set`), true;
  if (s5.id === e9.id) return false;
  const u4 = Boolean(ku(t4, i3).length);
  if (!e9.endList) return u4 || "number" != typeof e9.partTargetDuration ? (l6(`${h2} as current playlist is live`), true) : (l6(`not ${h2} as current playlist is live llhls, but currentTime isn't in buffered.`), false);
  const d5 = Ru(t4, i3), c3 = o4 ? uc.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : uc.MAX_BUFFER_LOW_WATER_LINE;
  if (a6 < c3) return l6(`${h2} as duration < max low water line (${a6} < ${c3})`), true;
  const p2 = s5.attributes.BANDWIDTH, m5 = e9.attributes.BANDWIDTH;
  if (p2 < m5 && (!o4 || d5 < r5)) {
    let e10 = `${h2} as next bandwidth < current bandwidth (${p2} < ${m5})`;
    return o4 && (e10 += ` and forwardBuffer < bufferHighWaterLine (${d5} < ${r5})`), l6(e10), true;
  }
  if ((!o4 || p2 > m5) && d5 >= n6) {
    let e10 = `${h2} as forwardBuffer >= bufferLowWaterLine (${d5} >= ${n6})`;
    return o4 && (e10 += ` and next bandwidth > current bandwidth (${p2} > ${m5})`), l6(e10), true;
  }
  return l6(`not ${h2} as no switching criteria met`), false;
};
var Hm = class extends du.EventTarget {
  constructor(e9) {
    super();
    const { src: t4, withCredentials: i3, tech: s5, bandwidth: n6, externVhs: r5, useCueTags: a6, playlistExclusionDuration: o4, enableLowInitialPlaylist: l6, sourceType: h2, cacheEncryptionKeys: u4, bufferBasedABR: d5, leastPixelDiffSelector: c3, captionServices: p2, experimentalUseMMS: m5 } = e9;
    if (!t4) throw new Error("A non-empty playlist URL or JSON manifest string is required");
    let { maxPlaylistRetries: g4 } = e9;
    null == g4 && (g4 = 1 / 0), Fm = r5, this.bufferBasedABR = Boolean(d5), this.leastPixelDiffSelector = Boolean(c3), this.withCredentials = i3, this.tech_ = s5, this.vhs_ = s5.vhs, this.player_ = e9.player_, this.sourceType_ = h2, this.useCueTags_ = a6, this.playlistExclusionDuration = o4, this.maxPlaylistRetries = g4, this.enableLowInitialPlaylist = l6, this.useCueTags_ && (this.cueTagsTrack_ = this.tech_.addTextTrack("metadata", "ad-cues"), this.cueTagsTrack_.inBandMetadataTrackDispatchType = ""), this.requestOptions_ = { withCredentials: i3, maxPlaylistRetries: g4, timeout: null }, this.on("error", this.pauseLoading), this.mediaTypes_ = Rm(), m5 && _.ManagedMediaSource ? (this.tech_.el_.disableRemotePlayback = true, this.mediaSource = new _.ManagedMediaSource(), du.log("Using ManagedMediaSource")) : _.MediaSource && (this.mediaSource = new _.MediaSource()), this.handleDurationChange_ = this.handleDurationChange_.bind(this), this.handleSourceOpen_ = this.handleSourceOpen_.bind(this), this.handleSourceEnded_ = this.handleSourceEnded_.bind(this), this.mediaSource.addEventListener("durationchange", this.handleDurationChange_), this.mediaSource.addEventListener("sourceopen", this.handleSourceOpen_), this.mediaSource.addEventListener("sourceended", this.handleSourceEnded_), this.seekable_ = Tu(), this.hasPlayed_ = false, this.syncController_ = new ym(e9), this.segmentMetadataTrack_ = s5.addRemoteTextTrack({ kind: "metadata", label: "segment-metadata" }, false).track, this.decrypter_ = new vm(), this.sourceUpdater_ = new sm(this.mediaSource), this.inbandTextTracks_ = {}, this.timelineChangeController_ = new _m(), this.keyStatusMap_ = /* @__PURE__ */ new Map();
    const f5 = { vhs: this.vhs_, parse708captions: e9.parse708captions, useDtsForTimestampOffset: e9.useDtsForTimestampOffset, captionServices: p2, mediaSource: this.mediaSource, currentTime: this.tech_.currentTime.bind(this.tech_), seekable: () => this.seekable(), seeking: () => this.tech_.seeking(), duration: () => this.duration(), hasPlayed: () => this.hasPlayed_, goalBufferLength: () => this.goalBufferLength(), bandwidth: n6, syncController: this.syncController_, decrypter: this.decrypter_, sourceType: this.sourceType_, inbandTextTracks: this.inbandTextTracks_, cacheEncryptionKeys: u4, sourceUpdater: this.sourceUpdater_, timelineChangeController: this.timelineChangeController_, exactManifestTimings: e9.exactManifestTimings, addMetadataToTextTrack: this.addMetadataToTextTrack.bind(this) };
    this.mainPlaylistLoader_ = "dash" === this.sourceType_ ? new hc(t4, this.vhs_, vu(this.requestOptions_, { addMetadataToTextTrack: this.addMetadataToTextTrack.bind(this) })) : new kd(t4, this.vhs_, vu(this.requestOptions_, { addDateRangesToTextTrack: this.addDateRangesToTextTrack_.bind(this) })), this.setupMainPlaylistLoaderListeners_(), this.mainSegmentLoader_ = new zp(vu(f5, { segmentMetadataTrack: this.segmentMetadataTrack_, loaderType: "main" }), e9), this.audioSegmentLoader_ = new zp(vu(f5, { loaderType: "audio" }), e9), this.subtitleSegmentLoader_ = new lm(vu(f5, { loaderType: "vtt", featuresNativeTextTracks: this.tech_.featuresNativeTextTracks, loadVttJs: () => new Promise((e10, t5) => {
      function i4() {
        s5.off("vttjserror", n7), e10();
      }
      function n7() {
        s5.off("vttjsloaded", i4), t5();
      }
      s5.one("vttjsloaded", i4), s5.one("vttjserror", n7), s5.addWebVttScript_();
    }) }), e9);
    const y4 = () => this.mainSegmentLoader_.bandwidth;
    this.contentSteeringController_ = new Um(this.vhs_.xhr, y4), this.setupSegmentLoaderListeners_(), this.bufferBasedABR && (this.mainPlaylistLoader_.one("loadedplaylist", () => this.startABRTimer_()), this.tech_.on("pause", () => this.stopABRTimer_()), this.tech_.on("play", () => this.startABRTimer_())), qm.forEach((e10) => {
      this[e10 + "_"] = jm.bind(this, e10);
    }), this.logger_ = bu("pc"), this.triggeredFmp4Usage = false, "none" === this.tech_.preload() ? (this.loadOnPlay_ = () => {
      this.loadOnPlay_ = null, this.mainPlaylistLoader_.load();
    }, this.tech_.one("play", this.loadOnPlay_)) : this.mainPlaylistLoader_.load(), this.timeToLoadedData__ = -1, this.mainAppendsToLoadedData__ = -1, this.audioAppendsToLoadedData__ = -1;
    const b3 = "none" === this.tech_.preload() ? "play" : "loadstart";
    this.tech_.one(b3, () => {
      const e10 = Date.now();
      this.tech_.one("loadeddata", () => {
        this.timeToLoadedData__ = Date.now() - e10, this.mainAppendsToLoadedData__ = this.mainSegmentLoader_.mediaAppends, this.audioAppendsToLoadedData__ = this.audioSegmentLoader_.mediaAppends;
      });
    });
  }
  mainAppendsToLoadedData_() {
    return this.mainAppendsToLoadedData__;
  }
  audioAppendsToLoadedData_() {
    return this.audioAppendsToLoadedData__;
  }
  appendsToLoadedData_() {
    const e9 = this.mainAppendsToLoadedData_(), t4 = this.audioAppendsToLoadedData_();
    return -1 === e9 || -1 === t4 ? -1 : e9 + t4;
  }
  timeToLoadedData_() {
    return this.timeToLoadedData__;
  }
  checkABR_(e9 = "abr") {
    const t4 = this.selectPlaylist();
    t4 && this.shouldSwitchToMedia_(t4) && this.switchMedia_(t4, e9);
  }
  switchMedia_(e9, t4, i3) {
    const s5 = this.media(), n6 = s5 && (s5.id || s5.uri), r5 = e9 && (e9.id || e9.uri);
    if (n6 && n6 !== r5) {
      this.logger_(`switch media ${n6} -> ${r5} from ${t4}`);
      const i4 = { renditionInfo: { id: r5, bandwidth: e9.attributes.BANDWIDTH, resolution: e9.attributes.RESOLUTION, codecs: e9.attributes.CODECS }, cause: t4 };
      this.trigger({ type: "renditionselected", metadata: i4 }), this.tech_.trigger({ type: "usage", name: `vhs-rendition-change-${t4}` });
    }
    this.mainPlaylistLoader_.media(e9, i3);
  }
  switchMediaForDASHContentSteering_() {
    ["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach((e9) => {
      const t4 = this.mediaTypes_[e9], i3 = t4 ? t4.activeGroup() : null, s5 = this.contentSteeringController_.getPathway();
      if (i3 && s5) {
        const t5 = (i3.length ? i3[0].playlists : i3.playlists).filter((e10) => e10.attributes.serviceLocation === s5);
        t5.length && this.mediaTypes_[e9].activePlaylistLoader.media(t5[0]);
      }
    });
  }
  startABRTimer_() {
    this.stopABRTimer_(), this.abrTimer_ = _.setInterval(() => this.checkABR_(), 250);
  }
  stopABRTimer_() {
    this.tech_.scrubbing && this.tech_.scrubbing() || (_.clearInterval(this.abrTimer_), this.abrTimer_ = null);
  }
  getAudioTrackPlaylists_() {
    const e9 = this.main(), t4 = e9 && e9.playlists || [];
    if (!e9 || !e9.mediaGroups || !e9.mediaGroups.AUDIO) return t4;
    const i3 = e9.mediaGroups.AUDIO, s5 = Object.keys(i3);
    let n6;
    if (Object.keys(this.mediaTypes_.AUDIO.groups).length) n6 = this.mediaTypes_.AUDIO.activeTrack();
    else {
      const e10 = i3.main || s5.length && i3[s5[0]];
      for (const t5 in e10) if (e10[t5].default) {
        n6 = { label: t5 };
        break;
      }
    }
    if (!n6) return t4;
    const r5 = [];
    for (const a6 in i3) if (i3[a6][n6.label]) {
      const t5 = i3[a6][n6.label];
      if (t5.playlists && t5.playlists.length) r5.push.apply(r5, t5.playlists);
      else if (t5.uri) r5.push(t5);
      else if (e9.playlists.length) for (let i4 = 0; i4 < e9.playlists.length; i4++) {
        const t6 = e9.playlists[i4];
        t6.attributes && t6.attributes.AUDIO && t6.attributes.AUDIO === a6 && r5.push(t6);
      }
    }
    return r5.length ? r5 : t4;
  }
  setupMainPlaylistLoaderListeners_() {
    this.mainPlaylistLoader_.on("loadedmetadata", () => {
      const e9 = this.mainPlaylistLoader_.media(), t4 = 1.5 * e9.targetDuration * 1e3;
      Ju(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media()) ? this.requestOptions_.timeout = 0 : this.requestOptions_.timeout = t4, e9.endList && "none" !== this.tech_.preload() && (this.mainSegmentLoader_.playlist(e9, this.requestOptions_), this.mainSegmentLoader_.load()), Nm({ sourceType: this.sourceType_, segmentLoaders: { AUDIO: this.audioSegmentLoader_, SUBTITLES: this.subtitleSegmentLoader_, main: this.mainSegmentLoader_ }, tech: this.tech_, requestOptions: this.requestOptions_, mainPlaylistLoader: this.mainPlaylistLoader_, vhs: this.vhs_, main: this.main(), mediaTypes: this.mediaTypes_, excludePlaylist: this.excludePlaylist.bind(this) }), this.triggerPresenceUsage_(this.main(), e9), this.setupFirstPlay(), !this.mediaTypes_.AUDIO.activePlaylistLoader || this.mediaTypes_.AUDIO.activePlaylistLoader.media() ? this.trigger("selectedinitialmedia") : this.mediaTypes_.AUDIO.activePlaylistLoader.one("loadedmetadata", () => {
        this.trigger("selectedinitialmedia");
      });
    }), this.mainPlaylistLoader_.on("loadedplaylist", () => {
      this.loadOnPlay_ && this.tech_.off("play", this.loadOnPlay_);
      let e9 = this.mainPlaylistLoader_.media();
      if (!e9) {
        let t4;
        if (this.attachContentSteeringListeners_(), this.initContentSteeringController_(), this.excludeUnsupportedVariants_(), this.enableLowInitialPlaylist && (t4 = this.selectInitialPlaylist()), t4 || (t4 = this.selectPlaylist()), !t4 || !this.shouldSwitchToMedia_(t4)) return;
        this.initialMedia_ = t4, this.switchMedia_(this.initialMedia_, "initial");
        if (!("vhs-json" === this.sourceType_ && this.initialMedia_.segments)) return;
        e9 = this.initialMedia_;
      }
      this.handleUpdatedMediaPlaylist(e9);
    }), this.mainPlaylistLoader_.on("error", () => {
      const e9 = this.mainPlaylistLoader_.error;
      this.excludePlaylist({ playlistToExclude: e9.playlist, error: e9 });
    }), this.mainPlaylistLoader_.on("mediachanging", () => {
      this.mainSegmentLoader_.abort(), this.mainSegmentLoader_.pause();
    }), this.mainPlaylistLoader_.on("mediachange", () => {
      const e9 = this.mainPlaylistLoader_.media(), t4 = 1.5 * e9.targetDuration * 1e3;
      Ju(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media()) ? this.requestOptions_.timeout = 0 : this.requestOptions_.timeout = t4, "dash" === this.sourceType_ && this.mainPlaylistLoader_.load(), this.mainSegmentLoader_.pause(), this.mainSegmentLoader_.playlist(e9, this.requestOptions_), this.waitingForFastQualityPlaylistReceived_ ? this.runFastQualitySwitch_() : this.mainSegmentLoader_.load(), this.tech_.trigger({ type: "mediachange", bubbles: true });
    }), this.mainPlaylistLoader_.on("playlistunchanged", () => {
      const e9 = this.mainPlaylistLoader_.media();
      if ("playlist-unchanged" === e9.lastExcludeReason_) return;
      this.stuckAtPlaylistEnd_(e9) && (this.excludePlaylist({ error: { message: "Playlist no longer updating.", reason: "playlist-unchanged" } }), this.tech_.trigger("playliststuck"));
    }), this.mainPlaylistLoader_.on("renditiondisabled", () => {
      this.tech_.trigger({ type: "usage", name: "vhs-rendition-disabled" });
    }), this.mainPlaylistLoader_.on("renditionenabled", () => {
      this.tech_.trigger({ type: "usage", name: "vhs-rendition-enabled" });
    });
    ["manifestrequeststart", "manifestrequestcomplete", "manifestparsestart", "manifestparsecomplete", "playlistrequeststart", "playlistrequestcomplete", "playlistparsestart", "playlistparsecomplete", "renditiondisabled", "renditionenabled"].forEach((e9) => {
      this.mainPlaylistLoader_.on(e9, (e10) => {
        this.player_.trigger(Ue({}, e10));
      });
    });
  }
  handleUpdatedMediaPlaylist(e9) {
    this.useCueTags_ && this.updateAdCues_(e9), this.mainSegmentLoader_.pause(), this.mainSegmentLoader_.playlist(e9, this.requestOptions_), this.waitingForFastQualityPlaylistReceived_ && this.runFastQualitySwitch_(), this.updateDuration(!e9.endList), this.tech_.paused() || (this.mainSegmentLoader_.load(), this.audioSegmentLoader_ && this.audioSegmentLoader_.load());
  }
  triggerPresenceUsage_(e9, t4) {
    const i3 = e9.mediaGroups || {};
    let s5 = true;
    const n6 = Object.keys(i3.AUDIO);
    for (const r5 in i3.AUDIO) for (const e10 in i3.AUDIO[r5]) {
      i3.AUDIO[r5][e10].uri || (s5 = false);
    }
    s5 && this.tech_.trigger({ type: "usage", name: "vhs-demuxed" }), Object.keys(i3.SUBTITLES).length && this.tech_.trigger({ type: "usage", name: "vhs-webvtt" }), Fm.Playlist.isAes(t4) && this.tech_.trigger({ type: "usage", name: "vhs-aes" }), n6.length && Object.keys(i3.AUDIO[n6[0]]).length > 1 && this.tech_.trigger({ type: "usage", name: "vhs-alternate-audio" }), this.useCueTags_ && this.tech_.trigger({ type: "usage", name: "vhs-playlist-cue-tags" });
  }
  shouldSwitchToMedia_(e9) {
    const t4 = this.mainPlaylistLoader_.media() || this.mainPlaylistLoader_.pendingMedia_, i3 = this.tech_.currentTime(), s5 = this.bufferLowWaterLine(), n6 = this.bufferHighWaterLine(), r5 = this.tech_.buffered();
    return $m({ buffered: r5, currentTime: i3, currentPlaylist: t4, nextPlaylist: e9, bufferLowWaterLine: s5, bufferHighWaterLine: n6, duration: this.duration(), bufferBasedABR: this.bufferBasedABR, log: this.logger_ });
  }
  setupSegmentLoaderListeners_() {
    this.mainSegmentLoader_.on("bandwidthupdate", () => {
      this.checkABR_("bandwidthupdate"), this.tech_.trigger("bandwidthupdate");
    }), this.mainSegmentLoader_.on("timeout", () => {
      this.bufferBasedABR && this.mainSegmentLoader_.load();
    }), this.bufferBasedABR || this.mainSegmentLoader_.on("progress", () => {
      this.trigger("progress");
    }), this.mainSegmentLoader_.on("error", () => {
      const e10 = this.mainSegmentLoader_.error();
      this.excludePlaylist({ playlistToExclude: e10.playlist, error: e10 });
    }), this.mainSegmentLoader_.on("appenderror", () => {
      this.error = this.mainSegmentLoader_.error_, this.trigger("error");
    }), this.mainSegmentLoader_.on("syncinfoupdate", () => {
      this.onSyncInfoUpdate_();
    }), this.mainSegmentLoader_.on("timestampoffset", () => {
      this.tech_.trigger({ type: "usage", name: "vhs-timestamp-offset" });
    }), this.audioSegmentLoader_.on("syncinfoupdate", () => {
      this.onSyncInfoUpdate_();
    }), this.audioSegmentLoader_.on("appenderror", () => {
      this.error = this.audioSegmentLoader_.error_, this.trigger("error");
    }), this.mainSegmentLoader_.on("ended", () => {
      this.logger_("main segment loader ended"), this.onEndOfStream();
    }), this.timelineChangeController_.on("audioTimelineBehind", () => {
      const e10 = this.audioSegmentLoader_.pendingSegment_;
      if (!e10 || !e10.segment || !e10.segment.syncInfo) return;
      const t4 = e10.segment.syncInfo.end + 0.01;
      this.tech_.setCurrentTime(t4);
    }), this.mainSegmentLoader_.on("earlyabort", (e10) => {
      this.bufferBasedABR || (this.delegateLoaders_("all", ["abort"]), this.excludePlaylist({ error: { message: "Aborted early because there isn't enough bandwidth to complete the request without rebuffering." }, playlistExclusionDuration: Bm }));
    });
    const e9 = () => {
      if (!this.sourceUpdater_.hasCreatedSourceBuffers()) return this.tryToCreateSourceBuffers_();
      const e10 = this.getCodecsOrExclude_();
      e10 && this.sourceUpdater_.addOrChangeSourceBuffers(e10);
    };
    this.mainSegmentLoader_.on("trackinfo", e9), this.audioSegmentLoader_.on("trackinfo", e9), this.mainSegmentLoader_.on("fmp4", () => {
      this.triggeredFmp4Usage || (this.tech_.trigger({ type: "usage", name: "vhs-fmp4" }), this.triggeredFmp4Usage = true);
    }), this.audioSegmentLoader_.on("fmp4", () => {
      this.triggeredFmp4Usage || (this.tech_.trigger({ type: "usage", name: "vhs-fmp4" }), this.triggeredFmp4Usage = true);
    }), this.audioSegmentLoader_.on("ended", () => {
      this.logger_("audioSegmentLoader ended"), this.onEndOfStream();
    });
    ["segmentselected", "segmentloadstart", "segmentloaded", "segmentkeyloadstart", "segmentkeyloadcomplete", "segmentdecryptionstart", "segmentdecryptioncomplete", "segmenttransmuxingstart", "segmenttransmuxingcomplete", "segmenttransmuxingtrackinfoavailable", "segmenttransmuxingtiminginfoavailable", "segmentappendstart", "appendsdone", "bandwidthupdated", "timelinechange", "codecschange"].forEach((e10) => {
      this.mainSegmentLoader_.on(e10, (e11) => {
        this.player_.trigger(Ue({}, e11));
      }), this.audioSegmentLoader_.on(e10, (e11) => {
        this.player_.trigger(Ue({}, e11));
      }), this.subtitleSegmentLoader_.on(e10, (e11) => {
        this.player_.trigger(Ue({}, e11));
      });
    });
  }
  mediaSecondsLoaded_() {
    return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);
  }
  load() {
    this.mainSegmentLoader_.load(), this.mediaTypes_.AUDIO.activePlaylistLoader && this.audioSegmentLoader_.load(), this.mediaTypes_.SUBTITLES.activePlaylistLoader && this.subtitleSegmentLoader_.load();
  }
  fastQualityChange_(e9 = this.selectPlaylist()) {
    e9 && e9 === this.mainPlaylistLoader_.media() ? this.logger_("skipping fastQualityChange because new media is same as old") : (this.switchMedia_(e9, "fast-quality"), this.waitingForFastQualityPlaylistReceived_ = true);
  }
  runFastQualitySwitch_() {
    this.waitingForFastQualityPlaylistReceived_ = false, this.mainSegmentLoader_.pause(), this.mainSegmentLoader_.resetEverything(() => {
      this.mainSegmentLoader_.load();
    });
  }
  play() {
    if (this.setupFirstPlay()) return;
    this.tech_.ended() && this.tech_.setCurrentTime(0), this.hasPlayed_ && this.load();
    const e9 = this.tech_.seekable();
    return this.tech_.duration() === 1 / 0 && this.tech_.currentTime() < e9.start(0) ? this.tech_.setCurrentTime(e9.end(e9.length - 1)) : void 0;
  }
  setupFirstPlay() {
    const e9 = this.mainPlaylistLoader_.media();
    if (!e9 || this.tech_.paused() || this.hasPlayed_) return false;
    if (!e9.endList || e9.start) {
      const t4 = this.seekable();
      if (!t4.length) return false;
      const i3 = t4.end(0);
      let s5 = i3;
      if (e9.start) {
        const n6 = e9.start.timeOffset;
        s5 = n6 < 0 ? Math.max(i3 + n6, t4.start(0)) : Math.min(i3, n6);
      }
      this.trigger("firstplay"), this.tech_.setCurrentTime(s5);
    }
    return this.hasPlayed_ = true, this.load(), true;
  }
  handleSourceOpen_() {
    if (this.tryToCreateSourceBuffers_(), this.tech_.autoplay()) {
      const e9 = this.tech_.play();
      void 0 !== e9 && "function" == typeof e9.then && e9.then(null, (e10) => {
      });
    }
    this.trigger("sourceopen");
  }
  handleSourceEnded_() {
    if (!this.inbandTextTracks_.metadataTrack_) return;
    const e9 = this.inbandTextTracks_.metadataTrack_.cues;
    if (!e9 || !e9.length) return;
    const t4 = this.duration();
    e9[e9.length - 1].endTime = isNaN(t4) || Math.abs(t4) === 1 / 0 ? Number.MAX_VALUE : t4;
  }
  handleDurationChange_() {
    this.tech_.trigger("durationchange");
  }
  onEndOfStream() {
    let e9 = this.mainSegmentLoader_.ended_;
    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
      const t4 = this.mainSegmentLoader_.getCurrentMediaInfo_();
      e9 = !t4 || t4.hasVideo ? e9 && this.audioSegmentLoader_.ended_ : this.audioSegmentLoader_.ended_;
    }
    e9 && (this.stopABRTimer_(), this.sourceUpdater_.endOfStream());
  }
  stuckAtPlaylistEnd_(e9) {
    if (!this.seekable().length) return false;
    const t4 = this.syncController_.getExpiredTime(e9, this.duration());
    if (null === t4) return false;
    const i3 = Fm.Playlist.playlistEnd(e9, t4), s5 = this.tech_.currentTime(), n6 = this.tech_.buffered();
    if (!n6.length) return i3 - s5 <= wu;
    const r5 = n6.end(n6.length - 1);
    return r5 - s5 <= wu && i3 - r5 <= wu;
  }
  excludePlaylist({ playlistToExclude: e9 = this.mainPlaylistLoader_.media(), error: t4 = {}, playlistExclusionDuration: i3 }) {
    if (e9 = e9 || this.mainPlaylistLoader_.media(), i3 = i3 || t4.playlistExclusionDuration || this.playlistExclusionDuration, !e9) return this.error = t4, void ("open" !== this.mediaSource.readyState ? this.trigger("error") : this.sourceUpdater_.endOfStream("network"));
    e9.playlistErrors_++;
    const s5 = this.mainPlaylistLoader_.main.playlists, n6 = s5.filter(Ku), r5 = 1 === n6.length && n6[0] === e9;
    if (1 === s5.length && i3 !== 1 / 0) return du.log.warn(`Problem encountered with playlist ${e9.id}. Trying again since it is the only playlist.`), this.tech_.trigger("retryplaylist"), this.mainPlaylistLoader_.load(r5);
    if (r5) {
      if (this.main().contentSteering) {
        const t6 = this.pathwayAttribute_(e9), i4 = 1e3 * this.contentSteeringController_.steeringManifest.ttl;
        return this.contentSteeringController_.excludePathway(t6), this.excludeThenChangePathway_(), void setTimeout(() => {
          this.contentSteeringController_.addAvailablePathway(t6);
        }, i4);
      }
      let t5 = false;
      s5.forEach((i4) => {
        if (i4 === e9) return;
        const s6 = i4.excludeUntil;
        void 0 !== s6 && s6 !== 1 / 0 && (t5 = true, delete i4.excludeUntil);
      }), t5 && (du.log.warn("Removing other playlists from the exclusion list because the last rendition is about to be excluded."), this.tech_.trigger("retryplaylist"));
    }
    let a6;
    a6 = e9.playlistErrors_ > this.maxPlaylistRetries ? 1 / 0 : Date.now() + 1e3 * i3, e9.excludeUntil = a6, t4.reason && (e9.lastExcludeReason_ = t4.reason), this.tech_.trigger("excludeplaylist"), this.tech_.trigger({ type: "usage", name: "vhs-rendition-excluded" });
    const o4 = this.selectPlaylist();
    if (!o4) return this.error = "Playback cannot continue. No available working or supported playlists.", void this.trigger("error");
    const l6 = t4.internal ? this.logger_ : du.log.warn, h2 = t4.message ? " " + t4.message : "";
    l6(`${t4.internal ? "Internal problem" : "Problem"} encountered with playlist ${e9.id}.${h2} Switching to playlist ${o4.id}.`), o4.attributes.AUDIO !== e9.attributes.AUDIO && this.delegateLoaders_("audio", ["abort", "pause"]), o4.attributes.SUBTITLES !== e9.attributes.SUBTITLES && this.delegateLoaders_("subtitle", ["abort", "pause"]), this.delegateLoaders_("main", ["abort", "pause"]);
    const u4 = o4.targetDuration / 2 * 1e3 || 5e3, d5 = "number" == typeof o4.lastRequest && Date.now() - o4.lastRequest <= u4;
    return this.switchMedia_(o4, "exclude", r5 || d5);
  }
  pauseLoading() {
    this.delegateLoaders_("all", ["abort", "pause"]), this.stopABRTimer_();
  }
  delegateLoaders_(e9, t4) {
    const i3 = [], s5 = "all" === e9;
    (s5 || "main" === e9) && i3.push(this.mainPlaylistLoader_);
    const n6 = [];
    (s5 || "audio" === e9) && n6.push("AUDIO"), (s5 || "subtitle" === e9) && (n6.push("CLOSED-CAPTIONS"), n6.push("SUBTITLES")), n6.forEach((e10) => {
      const t5 = this.mediaTypes_[e10] && this.mediaTypes_[e10].activePlaylistLoader;
      t5 && i3.push(t5);
    }), ["main", "audio", "subtitle"].forEach((t5) => {
      const s6 = this[`${t5}SegmentLoader_`];
      !s6 || e9 !== t5 && "all" !== e9 || i3.push(s6);
    }), i3.forEach((e10) => t4.forEach((t5) => {
      "function" == typeof e10[t5] && e10[t5]();
    }));
  }
  setCurrentTime(e9) {
    const t4 = ku(this.tech_.buffered(), e9);
    return this.mainPlaylistLoader_ && this.mainPlaylistLoader_.media() && this.mainPlaylistLoader_.media().segments ? t4 && t4.length ? e9 : (this.mainSegmentLoader_.pause(), this.mainSegmentLoader_.resetEverything(), this.mediaTypes_.AUDIO.activePlaylistLoader && (this.audioSegmentLoader_.pause(), this.audioSegmentLoader_.resetEverything()), this.mediaTypes_.SUBTITLES.activePlaylistLoader && (this.subtitleSegmentLoader_.pause(), this.subtitleSegmentLoader_.resetEverything()), void this.load()) : 0;
  }
  duration() {
    if (!this.mainPlaylistLoader_) return 0;
    const e9 = this.mainPlaylistLoader_.media();
    return e9 ? e9.endList ? this.mediaSource ? this.mediaSource.duration : Fm.Playlist.duration(e9) : 1 / 0 : 0;
  }
  seekable() {
    return this.seekable_;
  }
  onSyncInfoUpdate_() {
    let e9;
    if (!this.mainPlaylistLoader_) return;
    let t4 = this.mainPlaylistLoader_.media();
    if (!t4) return;
    let i3 = this.syncController_.getExpiredTime(t4, this.duration());
    if (null === i3) return;
    const s5 = this.mainPlaylistLoader_.main, n6 = Fm.Playlist.seekable(t4, i3, Fm.Playlist.liveEdgeDelay(s5, t4));
    if (0 === n6.length) return;
    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
      if (t4 = this.mediaTypes_.AUDIO.activePlaylistLoader.media(), i3 = this.syncController_.getExpiredTime(t4, this.duration()), null === i3) return;
      if (e9 = Fm.Playlist.seekable(t4, i3, Fm.Playlist.liveEdgeDelay(s5, t4)), 0 === e9.length) return;
    }
    let r5, a6;
    if (this.seekable_ && this.seekable_.length && (r5 = this.seekable_.end(0), a6 = this.seekable_.start(0)), e9 ? e9.start(0) > n6.end(0) || n6.start(0) > e9.end(0) ? this.seekable_ = n6 : this.seekable_ = Tu([[e9.start(0) > n6.start(0) ? e9.start(0) : n6.start(0), e9.end(0) < n6.end(0) ? e9.end(0) : n6.end(0)]]) : this.seekable_ = n6, this.seekable_ && this.seekable_.length && this.seekable_.end(0) === r5 && this.seekable_.start(0) === a6) return;
    this.logger_(`seekable updated [${Du(this.seekable_)}]`);
    const o4 = { seekableRanges: this.seekable_ };
    this.trigger({ type: "seekablerangeschanged", metadata: o4 }), this.tech_.trigger("seekablechanged");
  }
  updateDuration(e9) {
    if (this.updateDuration_ && (this.mediaSource.removeEventListener("sourceopen", this.updateDuration_), this.updateDuration_ = null), "open" !== this.mediaSource.readyState) return this.updateDuration_ = this.updateDuration.bind(this, e9), void this.mediaSource.addEventListener("sourceopen", this.updateDuration_);
    if (e9) {
      const e10 = this.seekable();
      if (!e10.length) return;
      return void ((isNaN(this.mediaSource.duration) || this.mediaSource.duration < e10.end(e10.length - 1)) && this.sourceUpdater_.setDuration(e10.end(e10.length - 1)));
    }
    const t4 = this.tech_.buffered();
    let i3 = Fm.Playlist.duration(this.mainPlaylistLoader_.media());
    t4.length > 0 && (i3 = Math.max(i3, t4.end(t4.length - 1))), this.mediaSource.duration !== i3 && this.sourceUpdater_.setDuration(i3);
  }
  dispose() {
    this.trigger("dispose"), this.decrypter_.terminate(), this.mainPlaylistLoader_.dispose(), this.mainSegmentLoader_.dispose(), this.contentSteeringController_.dispose(), this.keyStatusMap_.clear(), this.loadOnPlay_ && this.tech_.off("play", this.loadOnPlay_), ["AUDIO", "SUBTITLES"].forEach((e9) => {
      const t4 = this.mediaTypes_[e9].groups;
      for (const i3 in t4) t4[i3].forEach((e10) => {
        e10.playlistLoader && e10.playlistLoader.dispose();
      });
    }), this.audioSegmentLoader_.dispose(), this.subtitleSegmentLoader_.dispose(), this.sourceUpdater_.dispose(), this.timelineChangeController_.dispose(), this.stopABRTimer_(), this.updateDuration_ && this.mediaSource.removeEventListener("sourceopen", this.updateDuration_), this.mediaSource.removeEventListener("durationchange", this.handleDurationChange_), this.mediaSource.removeEventListener("sourceopen", this.handleSourceOpen_), this.mediaSource.removeEventListener("sourceended", this.handleSourceEnded_), this.off();
  }
  main() {
    return this.mainPlaylistLoader_.main;
  }
  media() {
    return this.mainPlaylistLoader_.media() || this.initialMedia_;
  }
  areMediaTypesKnown_() {
    const e9 = !!this.mediaTypes_.AUDIO.activePlaylistLoader, t4 = !!this.mainSegmentLoader_.getCurrentMediaInfo_(), i3 = !e9 || !!this.audioSegmentLoader_.getCurrentMediaInfo_();
    return !(!t4 || !i3);
  }
  getCodecsOrExclude_() {
    const e9 = { main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {}, audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {} }, t4 = this.mainSegmentLoader_.getPendingSegmentPlaylist() || this.media();
    e9.video = e9.main;
    const i3 = Jc(this.main(), t4), s5 = {}, n6 = !!this.mediaTypes_.AUDIO.activePlaylistLoader;
    if (e9.main.hasVideo && (s5.video = i3.video || e9.main.videoCodec || mt), e9.main.isMuxed && (s5.video += `,${i3.audio || e9.main.audioCodec || pt}`), (e9.main.hasAudio && !e9.main.isMuxed || e9.audio.hasAudio || n6) && (s5.audio = i3.audio || e9.main.audioCodec || e9.audio.audioCodec || pt, e9.audio.isFmp4 = e9.main.hasAudio && !e9.main.isMuxed ? e9.main.isFmp4 : e9.audio.isFmp4), !s5.audio && !s5.video) return void this.excludePlaylist({ playlistToExclude: t4, error: { message: "Could not determine codecs for playlist." }, playlistExclusionDuration: 1 / 0 });
    const r5 = (e10, t5) => e10 ? dt(t5) : ct(t5), a6 = {};
    let o4;
    if (["video", "audio"].forEach(function(t5) {
      if (s5.hasOwnProperty(t5) && !r5(e9[t5].isFmp4, s5[t5])) {
        const i4 = e9[t5].isFmp4 ? "browser" : "muxer";
        a6[i4] = a6[i4] || [], a6[i4].push(s5[t5]), "audio" === t5 && (o4 = i4);
      }
    }), n6 && o4 && t4.attributes.AUDIO) {
      const e10 = t4.attributes.AUDIO;
      this.main().playlists.forEach((i4) => {
        (i4.attributes && i4.attributes.AUDIO) === e10 && i4 !== t4 && (i4.excludeUntil = 1 / 0);
      }), this.logger_(`excluding audio group ${e10} as ${o4} does not support codec(s): "${s5.audio}"`);
    }
    if (!Object.keys(a6).length) {
      if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {
        const e10 = [];
        if (["video", "audio"].forEach((t5) => {
          const i4 = (at(this.sourceUpdater_.codecs[t5] || "")[0] || {}).type, n7 = (at(s5[t5] || "")[0] || {}).type;
          i4 && n7 && i4.toLowerCase() !== n7.toLowerCase() && e10.push(`"${this.sourceUpdater_.codecs[t5]}" -> "${s5[t5]}"`);
        }), e10.length) return void this.excludePlaylist({ playlistToExclude: t4, error: { message: `Codec switching not supported: ${e10.join(", ")}.`, internal: true }, playlistExclusionDuration: 1 / 0 });
      }
      return s5;
    }
    {
      const e10 = Object.keys(a6).reduce((e11, t5) => (e11 && (e11 += ", "), e11 += `${t5} does not support codec(s): "${a6[t5].join(",")}"`), "") + ".";
      this.excludePlaylist({ playlistToExclude: t4, error: { internal: true, message: e10 }, playlistExclusionDuration: 1 / 0 });
    }
  }
  tryToCreateSourceBuffers_() {
    if ("open" !== this.mediaSource.readyState || this.sourceUpdater_.hasCreatedSourceBuffers()) return;
    if (!this.areMediaTypesKnown_()) return;
    const e9 = this.getCodecsOrExclude_();
    if (!e9) return;
    this.sourceUpdater_.createSourceBuffers(e9);
    const t4 = [e9.video, e9.audio].filter(Boolean).join(",");
    this.excludeIncompatibleVariants_(t4);
  }
  excludeUnsupportedVariants_() {
    const e9 = this.main().playlists, t4 = [];
    Object.keys(e9).forEach((i3) => {
      const s5 = e9[i3];
      if (-1 !== t4.indexOf(s5.id)) return;
      t4.push(s5.id);
      const n6 = Jc(this.main, s5), r5 = [];
      !n6.audio || ct(n6.audio) || dt(n6.audio) || r5.push(`audio codec ${n6.audio}`), !n6.video || ct(n6.video) || dt(n6.video) || r5.push(`video codec ${n6.video}`), n6.text && "stpp.ttml.im1t" === n6.text && r5.push(`text codec ${n6.text}`), r5.length && (s5.excludeUntil = 1 / 0, this.logger_(`excluding ${s5.id} for unsupported: ${r5.join(", ")}`));
    });
  }
  excludeIncompatibleVariants_(e9) {
    const t4 = [], i3 = this.main().playlists, s5 = Yc(at(e9)), n6 = Qc(s5), r5 = s5.video && at(s5.video)[0] || null, a6 = s5.audio && at(s5.audio)[0] || null;
    Object.keys(i3).forEach((e10) => {
      const s6 = i3[e10];
      if (-1 !== t4.indexOf(s6.id) || s6.excludeUntil === 1 / 0) return;
      t4.push(s6.id);
      const o4 = [], l6 = Jc(this.mainPlaylistLoader_.main, s6), h2 = Qc(l6);
      if (l6.audio || l6.video) {
        if (h2 !== n6 && o4.push(`codec count "${h2}" !== "${n6}"`), !this.sourceUpdater_.canChangeType()) {
          const e11 = l6.video && at(l6.video)[0] || null, t5 = l6.audio && at(l6.audio)[0] || null;
          e11 && r5 && e11.type.toLowerCase() !== r5.type.toLowerCase() && o4.push(`video codec "${e11.type}" !== "${r5.type}"`), t5 && a6 && t5.type.toLowerCase() !== a6.type.toLowerCase() && o4.push(`audio codec "${t5.type}" !== "${a6.type}"`);
        }
        o4.length && (s6.excludeUntil = 1 / 0, this.logger_(`excluding ${s6.id}: ${o4.join(" && ")}`));
      }
    });
  }
  updateAdCues_(e9) {
    let t4 = 0;
    const i3 = this.seekable();
    i3.length && (t4 = i3.start(0)), um(e9, this.cueTagsTrack_, t4);
  }
  goalBufferLength() {
    const e9 = this.tech_.currentTime(), t4 = uc.GOAL_BUFFER_LENGTH, i3 = uc.GOAL_BUFFER_LENGTH_RATE, s5 = Math.max(t4, uc.MAX_GOAL_BUFFER_LENGTH);
    return Math.min(t4 + e9 * i3, s5);
  }
  bufferLowWaterLine() {
    const e9 = this.tech_.currentTime(), t4 = uc.BUFFER_LOW_WATER_LINE, i3 = uc.BUFFER_LOW_WATER_LINE_RATE, s5 = Math.max(t4, uc.MAX_BUFFER_LOW_WATER_LINE), n6 = Math.max(t4, uc.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);
    return Math.min(t4 + e9 * i3, this.bufferBasedABR ? n6 : s5);
  }
  bufferHighWaterLine() {
    return uc.BUFFER_HIGH_WATER_LINE;
  }
  addDateRangesToTextTrack_(e9) {
    bp(this.inbandTextTracks_, "com.apple.streaming", this.tech_), _p({ inbandTextTracks: this.inbandTextTracks_, dateRanges: e9 });
  }
  addMetadataToTextTrack(e9, t4, i3) {
    const s5 = this.sourceUpdater_.videoBuffer ? this.sourceUpdater_.videoTimestampOffset() : this.sourceUpdater_.audioTimestampOffset();
    bp(this.inbandTextTracks_, e9, this.tech_), gp({ inbandTextTracks: this.inbandTextTracks_, metadataArray: t4, timestampOffset: s5, videoDuration: i3 });
  }
  pathwayAttribute_(e9) {
    return e9.attributes["PATHWAY-ID"] || e9.attributes.serviceLocation;
  }
  initContentSteeringController_() {
    const e9 = this.main();
    if (e9.contentSteering) {
      for (const t4 of e9.playlists) this.contentSteeringController_.addAvailablePathway(this.pathwayAttribute_(t4));
      this.contentSteeringController_.assignTagProperties(e9.uri, e9.contentSteering), this.contentSteeringController_.queryBeforeStart ? this.contentSteeringController_.requestSteeringManifest(true) : this.tech_.one("canplay", () => {
        this.contentSteeringController_.requestSteeringManifest();
      });
    }
  }
  resetContentSteeringController_() {
    this.contentSteeringController_.clearAvailablePathways(), this.contentSteeringController_.dispose(), this.initContentSteeringController_();
  }
  attachContentSteeringListeners_() {
    this.contentSteeringController_.on("content-steering", this.excludeThenChangePathway_.bind(this));
    ["contentsteeringloadstart", "contentsteeringloadcomplete", "contentsteeringparsed"].forEach((e9) => {
      this.contentSteeringController_.on(e9, (e10) => {
        this.trigger(Ue({}, e10));
      });
    }), "dash" === this.sourceType_ && this.mainPlaylistLoader_.on("loadedplaylist", () => {
      const e9 = this.main();
      (this.contentSteeringController_.didDASHTagChange(e9.uri, e9.contentSteering) || (() => {
        const t4 = this.contentSteeringController_.getAvailablePathways(), i3 = [];
        for (const s5 of e9.playlists) {
          const e10 = s5.attributes.serviceLocation;
          if (e10 && (i3.push(e10), !t4.has(e10))) return true;
        }
        return !(i3.length || !t4.size);
      })()) && this.resetContentSteeringController_();
    });
  }
  excludeThenChangePathway_() {
    const e9 = this.contentSteeringController_.getPathway();
    if (!e9) return;
    this.handlePathwayClones_();
    const t4 = this.main().playlists, i3 = /* @__PURE__ */ new Set();
    let s5 = false;
    Object.keys(t4).forEach((n6) => {
      const r5 = t4[n6], a6 = this.pathwayAttribute_(r5), o4 = a6 && e9 !== a6;
      r5.excludeUntil === 1 / 0 && "content-steering" === r5.lastExcludeReason_ && !o4 && (delete r5.excludeUntil, delete r5.lastExcludeReason_, s5 = true);
      const l6 = !r5.excludeUntil && r5.excludeUntil !== 1 / 0;
      !i3.has(r5.id) && o4 && l6 && (i3.add(r5.id), r5.excludeUntil = 1 / 0, r5.lastExcludeReason_ = "content-steering", this.logger_(`excluding ${r5.id} for ${r5.lastExcludeReason_}`));
    }), "DASH" === this.contentSteeringController_.manifestType_ && Object.keys(this.mediaTypes_).forEach((t5) => {
      const i4 = this.mediaTypes_[t5];
      if (i4.activePlaylistLoader) {
        const t6 = i4.activePlaylistLoader.media_;
        t6 && t6.attributes.serviceLocation !== e9 && (s5 = true);
      }
    }), s5 && this.changeSegmentPathway_();
  }
  handlePathwayClones_() {
    const e9 = this.main().playlists, t4 = this.contentSteeringController_.currentPathwayClones, i3 = this.contentSteeringController_.nextPathwayClones;
    if (t4 && t4.size || i3 && i3.size) {
      for (const [e10, s5] of t4.entries()) {
        i3.get(e10) || (this.mainPlaylistLoader_.updateOrDeleteClone(s5), this.contentSteeringController_.excludePathway(e10));
      }
      for (const [s5, n6] of i3.entries()) {
        const i4 = t4.get(s5);
        if (i4) this.equalPathwayClones_(i4, n6) || (this.mainPlaylistLoader_.updateOrDeleteClone(n6, true), this.contentSteeringController_.addAvailablePathway(s5));
        else {
          e9.filter((e10) => e10.attributes["PATHWAY-ID"] === n6["BASE-ID"]).forEach((e10) => {
            this.mainPlaylistLoader_.addClonePathway(n6, e10);
          }), this.contentSteeringController_.addAvailablePathway(s5);
        }
      }
      this.contentSteeringController_.currentPathwayClones = new Map(JSON.parse(JSON.stringify([...i3])));
    }
  }
  equalPathwayClones_(e9, t4) {
    if (e9["BASE-ID"] !== t4["BASE-ID"] || e9.ID !== t4.ID || e9["URI-REPLACEMENT"].HOST !== t4["URI-REPLACEMENT"].HOST) return false;
    const i3 = e9["URI-REPLACEMENT"].PARAMS, s5 = t4["URI-REPLACEMENT"].PARAMS;
    for (const n6 in i3) if (i3[n6] !== s5[n6]) return false;
    for (const n6 in s5) if (i3[n6] !== s5[n6]) return false;
    return true;
  }
  changeSegmentPathway_() {
    const e9 = this.selectPlaylist();
    this.pauseLoading(), "DASH" === this.contentSteeringController_.manifestType_ && this.switchMediaForDASHContentSteering_(), this.switchMedia_(e9, "content-steering");
  }
  excludeNonUsablePlaylistsByKeyId_() {
    if (!this.mainPlaylistLoader_ || !this.mainPlaylistLoader_.main) return;
    let e9 = 0;
    const t4 = "non-usable";
    this.mainPlaylistLoader_.main.playlists.forEach((i3) => {
      const s5 = this.mainPlaylistLoader_.getKeyIdSet(i3);
      s5 && s5.size && s5.forEach((s6) => {
        const n6 = "usable", r5 = this.keyStatusMap_.has(s6) && this.keyStatusMap_.get(s6) === n6, a6 = i3.lastExcludeReason_ === t4 && i3.excludeUntil === 1 / 0;
        r5 ? r5 && a6 && (delete i3.excludeUntil, delete i3.lastExcludeReason_, this.logger_(`enabling playlist ${i3.id} because key ID ${s6} is ${n6}`)) : (i3.excludeUntil !== 1 / 0 && i3.lastExcludeReason_ !== t4 && (i3.excludeUntil = 1 / 0, i3.lastExcludeReason_ = t4, this.logger_(`excluding playlist ${i3.id} because the key ID ${s6} doesn't exist in the keyStatusMap or is not ${n6}`)), e9++);
      });
    }), e9 >= this.mainPlaylistLoader_.main.playlists.length && this.mainPlaylistLoader_.main.playlists.forEach((e10) => {
      const i3 = e10 && e10.attributes && e10.attributes.RESOLUTION && e10.attributes.RESOLUTION.height < 720, s5 = e10.excludeUntil === 1 / 0 && e10.lastExcludeReason_ === t4;
      i3 && s5 && (delete e10.excludeUntil, du.log.warn(`enabling non-HD playlist ${e10.id} because all playlists were excluded due to ${t4} key IDs`));
    });
  }
  addKeyStatus_(e9, t4) {
    const i3 = ("string" == typeof e9 ? e9 : rm(e9)).slice(0, 32).toLowerCase();
    this.logger_(`KeyStatus '${t4}' with key ID ${i3} added to the keyStatusMap`), this.keyStatusMap_.set(i3, t4);
  }
  updatePlaylistByKeyStatus(e9, t4) {
    this.addKeyStatus_(e9, t4), this.waitingForFastQualityPlaylistReceived_ || this.excludeNonUsableThenChangePlaylist_(), this.mainPlaylistLoader_.off("loadedplaylist", this.excludeNonUsableThenChangePlaylist_.bind(this)), this.mainPlaylistLoader_.on("loadedplaylist", this.excludeNonUsableThenChangePlaylist_.bind(this));
  }
  excludeNonUsableThenChangePlaylist_() {
    this.excludeNonUsablePlaylistsByKeyId_(), this.fastQualityChange_();
  }
};
var Vm = (e9, t4, i3) => (s5) => {
  const n6 = e9.main.playlists[t4], r5 = Xu(n6), a6 = Ku(n6);
  if (void 0 === s5) return a6;
  s5 ? delete n6.disabled : n6.disabled = true;
  const o4 = { renditionInfo: { id: t4, bandwidth: n6.attributes.BANDWIDTH, resolution: n6.attributes.RESOLUTION, codecs: n6.attributes.CODECS }, cause: "fast-quality" };
  return s5 === a6 || r5 || (i3(n6), s5 ? e9.trigger({ type: "renditionenabled", metadata: o4 }) : e9.trigger({ type: "renditiondisabled", metadata: o4 })), s5;
};
var zm = class {
  constructor(e9, t4, i3) {
    const { playlistController_: s5 } = e9, n6 = s5.fastQualityChange_.bind(s5);
    if (t4.attributes) {
      const e10 = t4.attributes.RESOLUTION;
      this.width = e10 && e10.width, this.height = e10 && e10.height, this.bandwidth = t4.attributes.BANDWIDTH, this.frameRate = t4.attributes["FRAME-RATE"];
    }
    this.codecs = Jc(s5.main(), t4), this.playlist = t4, this.id = i3, this.enabled = Vm(e9.playlists, t4.id, n6);
  }
};
var Wm = function(e9) {
  e9.representations = () => {
    const t4 = e9.playlistController_.main(), i3 = td(t4) ? e9.playlistController_.getAudioTrackPlaylists_() : t4.playlists;
    return i3 ? i3.filter((e10) => !Xu(e10)).map((t5, i4) => new zm(e9, t5, t5.id)) : [];
  };
};
var Gm = ["seeking", "seeked", "pause", "playing", "error"];
var Xm = class extends du.EventTarget {
  constructor(e9) {
    super(), this.playlistController_ = e9.playlistController, this.tech_ = e9.tech, this.seekable = e9.seekable, this.allowSeeksWithinUnsafeLiveWindow = e9.allowSeeksWithinUnsafeLiveWindow, this.liveRangeSafeTimeDelta = e9.liveRangeSafeTimeDelta, this.media = e9.media, this.playedRanges_ = [], this.consecutiveUpdates = 0, this.lastRecordedTime = null, this.checkCurrentTimeTimeout_ = null, this.logger_ = bu("PlaybackWatcher"), this.logger_("initialize");
    const t4 = () => this.monitorCurrentTime_(), i3 = () => this.monitorCurrentTime_(), s5 = () => this.techWaiting_(), n6 = () => this.resetTimeUpdate_(), r5 = this.playlistController_, a6 = ["main", "subtitle", "audio"], o4 = {};
    a6.forEach((e10) => {
      o4[e10] = { reset: () => this.resetSegmentDownloads_(e10), updateend: () => this.checkSegmentDownloads_(e10) }, r5[`${e10}SegmentLoader_`].on("appendsdone", o4[e10].updateend), r5[`${e10}SegmentLoader_`].on("playlistupdate", o4[e10].reset), this.tech_.on(["seeked", "seeking"], o4[e10].reset);
    });
    const l6 = (e10) => {
      ["main", "audio"].forEach((t5) => {
        r5[`${t5}SegmentLoader_`][e10]("appended", this.seekingAppendCheck_);
      });
    };
    this.seekingAppendCheck_ = () => {
      this.fixesBadSeeks_() && (this.consecutiveUpdates = 0, this.lastRecordedTime = this.tech_.currentTime(), l6("off"));
    }, this.clearSeekingAppendCheck_ = () => l6("off"), this.watchForBadSeeking_ = () => {
      this.clearSeekingAppendCheck_(), l6("on");
    }, this.tech_.on("seeked", this.clearSeekingAppendCheck_), this.tech_.on("seeking", this.watchForBadSeeking_), this.tech_.on("waiting", s5), this.tech_.on(Gm, n6), this.tech_.on("canplay", i3), this.tech_.one("play", t4), this.dispose = () => {
      this.clearSeekingAppendCheck_(), this.logger_("dispose"), this.tech_.off("waiting", s5), this.tech_.off(Gm, n6), this.tech_.off("canplay", i3), this.tech_.off("play", t4), this.tech_.off("seeking", this.watchForBadSeeking_), this.tech_.off("seeked", this.clearSeekingAppendCheck_), a6.forEach((e10) => {
        r5[`${e10}SegmentLoader_`].off("appendsdone", o4[e10].updateend), r5[`${e10}SegmentLoader_`].off("playlistupdate", o4[e10].reset), this.tech_.off(["seeked", "seeking"], o4[e10].reset);
      }), this.checkCurrentTimeTimeout_ && _.clearTimeout(this.checkCurrentTimeTimeout_), this.resetTimeUpdate_();
    };
  }
  monitorCurrentTime_() {
    this.checkCurrentTime_(), this.checkCurrentTimeTimeout_ && _.clearTimeout(this.checkCurrentTimeTimeout_), this.checkCurrentTimeTimeout_ = _.setTimeout(this.monitorCurrentTime_.bind(this), 250);
  }
  resetSegmentDownloads_(e9) {
    const t4 = this.playlistController_[`${e9}SegmentLoader_`];
    this[`${e9}StalledDownloads_`] > 0 && this.logger_(`resetting possible stalled download count for ${e9} loader`), this[`${e9}StalledDownloads_`] = 0, this[`${e9}Buffered_`] = t4.buffered_();
  }
  checkSegmentDownloads_(e9) {
    const t4 = this.playlistController_, i3 = t4[`${e9}SegmentLoader_`], s5 = i3.buffered_(), n6 = Ou(this[`${e9}Buffered_`], s5);
    if (this[`${e9}Buffered_`] = s5, n6) {
      const i4 = { bufferedRanges: s5 };
      return t4.trigger({ type: "bufferedrangeschanged", metadata: i4 }), void this.resetSegmentDownloads_(e9);
    }
    this[`${e9}StalledDownloads_`]++, this.logger_(`found #${this[`${e9}StalledDownloads_`]} ${e9} appends that did not increase buffer (possible stalled download)`, { playlistId: i3.playlist_ && i3.playlist_.id, buffered: Lu(s5) }), this[`${e9}StalledDownloads_`] < 10 || (this.logger_(`${e9} loader stalled download exclusion`), this.resetSegmentDownloads_(e9), this.tech_.trigger({ type: "usage", name: `vhs-${e9}-download-exclusion` }), "subtitle" !== e9 && t4.excludePlaylist({ error: { message: `Excessive ${e9} segment downloading detected.` }, playlistExclusionDuration: 1 / 0 }));
  }
  checkCurrentTime_() {
    if (this.tech_.paused() || this.tech_.seeking()) return;
    const e9 = this.tech_.currentTime(), t4 = this.tech_.buffered();
    if (this.lastRecordedTime === e9 && (!t4.length || e9 + wu >= t4.end(t4.length - 1))) return this.techWaiting_();
    if (this.consecutiveUpdates >= 5 && e9 === this.lastRecordedTime) this.consecutiveUpdates++, this.waiting_();
    else if (e9 === this.lastRecordedTime) this.consecutiveUpdates++;
    else {
      this.playedRanges_.push(Tu([this.lastRecordedTime, e9]));
      const t5 = { playedRanges: this.playedRanges_ };
      this.playlistController_.trigger({ type: "playedrangeschanged", metadata: t5 }), this.consecutiveUpdates = 0, this.lastRecordedTime = e9;
    }
  }
  resetTimeUpdate_() {
    this.consecutiveUpdates = 0;
  }
  fixesBadSeeks_() {
    if (!this.tech_.seeking()) return false;
    const e9 = this.seekable(), t4 = this.tech_.currentTime();
    let i3;
    if (this.afterSeekableWindow_(e9, t4, this.media(), this.allowSeeksWithinUnsafeLiveWindow)) {
      i3 = e9.end(e9.length - 1);
    }
    if (this.beforeSeekableWindow_(e9, t4)) {
      const t5 = e9.start(0);
      i3 = t5 + (t5 === e9.end(0) ? 0 : wu);
    }
    if (void 0 !== i3) return this.logger_(`Trying to seek outside of seekable at time ${t4} with seekable range ${Du(e9)}. Seeking to ${i3}.`), this.tech_.setCurrentTime(i3), true;
    const s5 = this.playlistController_.sourceUpdater_, n6 = this.tech_.buffered(), r5 = s5.audioBuffer ? s5.audioBuffered() : null, a6 = s5.videoBuffer ? s5.videoBuffered() : null, o4 = this.media(), l6 = o4.partTargetDuration ? o4.partTargetDuration : 2 * (o4.targetDuration - Eu), h2 = [r5, a6];
    for (let d5 = 0; d5 < h2.length; d5++) {
      if (!h2[d5]) continue;
      if (Ru(h2[d5], t4) < l6) return false;
    }
    const u4 = Iu(n6, t4);
    return 0 !== u4.length && (i3 = u4.start(0) + wu, this.logger_(`Buffered region starts (${u4.start(0)})  just beyond seek point (${t4}). Seeking to ${i3}.`), this.tech_.setCurrentTime(i3), true);
  }
  waiting_() {
    if (this.techWaiting_()) return;
    const e9 = this.tech_.currentTime(), t4 = this.tech_.buffered(), i3 = ku(t4, e9);
    return i3.length && e9 + 3 <= i3.end(0) ? (this.resetTimeUpdate_(), this.tech_.setCurrentTime(e9), this.logger_(`Stopped at ${e9} while inside a buffered region [${i3.start(0)} -> ${i3.end(0)}]. Attempting to resume playback by seeking to the current time.`), void this.tech_.trigger({ type: "usage", name: "vhs-unknown-waiting" })) : void 0;
  }
  techWaiting_() {
    const e9 = this.seekable(), t4 = this.tech_.currentTime();
    if (this.tech_.seeking()) return true;
    if (this.beforeSeekableWindow_(e9, t4)) {
      const i4 = e9.end(e9.length - 1);
      return this.logger_(`Fell out of live window at time ${t4}. Seeking to live point (seekable end) ${i4}`), this.resetTimeUpdate_(), this.tech_.setCurrentTime(i4), this.tech_.trigger({ type: "usage", name: "vhs-live-resync" }), true;
    }
    const i3 = this.tech_.vhs.playlistController_.sourceUpdater_, s5 = this.tech_.buffered();
    if (this.videoUnderflow_({ audioBuffered: i3.audioBuffered(), videoBuffered: i3.videoBuffered(), currentTime: t4 })) return this.resetTimeUpdate_(), this.tech_.setCurrentTime(t4), this.tech_.trigger({ type: "usage", name: "vhs-video-underflow" }), true;
    const n6 = Iu(s5, t4);
    return n6.length > 0 && (this.logger_(`Stopped at ${t4} and seeking to ${n6.start(0)}`), this.resetTimeUpdate_(), this.skipTheGap_(t4), true);
  }
  afterSeekableWindow_(e9, t4, i3, s5 = false) {
    if (!e9.length) return false;
    let n6 = e9.end(e9.length - 1) + wu;
    const r5 = !i3.endList, a6 = "number" == typeof i3.partTargetDuration;
    return r5 && (a6 || s5) && (n6 = e9.end(e9.length - 1) + 3 * i3.targetDuration), t4 > n6;
  }
  beforeSeekableWindow_(e9, t4) {
    return !!(e9.length && e9.start(0) > 0 && t4 < e9.start(0) - this.liveRangeSafeTimeDelta);
  }
  videoUnderflow_({ videoBuffered: e9, audioBuffered: t4, currentTime: i3 }) {
    if (!e9) return;
    let s5;
    if (e9.length && t4.length) {
      const n6 = ku(e9, i3 - 3), r5 = ku(e9, i3), a6 = ku(t4, i3);
      a6.length && !r5.length && n6.length && (s5 = { start: n6.end(0), end: a6.end(0) });
    } else {
      Iu(e9, i3).length || (s5 = this.gapFromVideoUnderflow_(e9, i3));
    }
    return !!s5 && (this.logger_(`Encountered a gap in video from ${s5.start} to ${s5.end}. Seeking to current time ${i3}`), true);
  }
  skipTheGap_(e9) {
    const t4 = this.tech_.buffered(), i3 = this.tech_.currentTime(), s5 = Iu(t4, i3);
    if (this.resetTimeUpdate_(), 0 === s5.length || i3 !== e9) return;
    this.logger_("skipTheGap_:", "currentTime:", i3, "scheduled currentTime:", e9, "nextRange start:", s5.start(0)), this.tech_.setCurrentTime(s5.start(0) + Eu);
    const n6 = { gapInfo: { from: i3, to: s5.start(0) } };
    this.playlistController_.trigger({ type: "gapjumped", metadata: n6 }), this.tech_.trigger({ type: "usage", name: "vhs-gap-skip" });
  }
  gapFromVideoUnderflow_(e9, t4) {
    const i3 = xu(e9);
    for (let s5 = 0; s5 < i3.length; s5++) {
      const e10 = i3.start(s5), n6 = i3.end(s5);
      if (t4 - e10 < 4 && t4 - e10 > 2) return { start: e10, end: n6 };
    }
    return null;
  }
};
var Km = { errorInterval: 30, getSource(e9) {
  return e9(this.tech({ IWillNotUseThisInPlugins: true }).currentSource_ || this.currentSource());
} };
var Ym = function(e9, t4) {
  let i3 = 0, s5 = 0;
  const n6 = vu(Km, t4);
  e9.ready(() => {
    e9.trigger({ type: "usage", name: "vhs-error-reload-initialized" });
  });
  const r5 = function() {
    s5 && e9.currentTime(s5);
  }, a6 = function(t5) {
    null != t5 && (s5 = e9.duration() !== 1 / 0 && e9.currentTime() || 0, e9.one("loadedmetadata", r5), e9.src(t5), e9.trigger({ type: "usage", name: "vhs-error-reload" }), e9.play());
  }, o4 = function() {
    if (Date.now() - i3 < 1e3 * n6.errorInterval) e9.trigger({ type: "usage", name: "vhs-error-reload-canceled" });
    else {
      if (n6.getSource && "function" == typeof n6.getSource) return i3 = Date.now(), n6.getSource.call(e9, a6);
      du.log.error("ERROR: reloadSourceOnError - The option getSource must be a function!");
    }
  }, l6 = function() {
    e9.off("loadedmetadata", r5), e9.off("error", o4), e9.off("dispose", l6);
  }, h2 = function(t5) {
    l6(), Ym(e9, t5);
  };
  e9.on("error", o4), e9.on("dispose", l6), e9.reloadSourceOnError = h2;
};
var Qm = function(e9) {
  Ym(this, e9);
};
var Jm = "3.14.2";
var Zm = "7.0.3";
var eg = "1.3.0";
var tg = "7.2.0";
var ig = "4.0.2";
var sg = { PlaylistLoader: kd, Playlist: id, utils: $d, STANDARD_PLAYLIST_SELECTOR: ap, INITIAL_PLAYLIST_SELECTOR: hp, lastBandwidthSelector: ap, movingAverageBandwidthSelector: op, comparePlaylistBandwidth: sp, comparePlaylistResolution: np, xhr: Dd() };
Object.keys(uc).forEach((e9) => {
  Object.defineProperty(sg, e9, { get: () => (du.log.warn(`using Vhs.${e9} is UNSAFE be sure you know what you are doing`), uc[e9]), set(t4) {
    du.log.warn(`using Vhs.${e9} is UNSAFE be sure you know what you are doing`), "number" != typeof t4 || t4 < 0 ? du.log.warn(`value of Vhs.${e9} must be greater than or equal to 0`) : uc[e9] = t4;
  } });
});
var ng = "videojs-vhs";
var rg = function(e9, t4) {
  const i3 = t4.media();
  let s5 = -1;
  for (let n6 = 0; n6 < e9.length; n6++) if (e9[n6].id === i3.id) {
    s5 = n6;
    break;
  }
  e9.selectedIndex_ = s5, e9.trigger({ selectedIndex: s5, type: "change" });
};
var ag = function(e9, t4) {
  t4.representations().forEach((t5) => {
    e9.addQualityLevel(t5);
  }), rg(e9, t4.playlists);
};
sg.canPlaySource = function() {
  return du.log.warn("VHS is no longer a tech. Please remove it from your player's techOrder.");
};
var og = (e9, t4, i3) => {
  if (!e9) return e9;
  let s5 = {};
  t4 && t4.attributes && t4.attributes.CODECS && (s5 = Yc(at(t4.attributes.CODECS))), i3 && i3.attributes && i3.attributes.CODECS && (s5.audio = i3.attributes.CODECS);
  const n6 = ut(s5.video), r5 = ut(s5.audio), a6 = {};
  for (const o4 in e9) a6[o4] = {}, r5 && (a6[o4].audioContentType = r5), n6 && (a6[o4].videoContentType = n6), t4.contentProtection && t4.contentProtection[o4] && t4.contentProtection[o4].pssh && (a6[o4].pssh = t4.contentProtection[o4].pssh), "string" == typeof e9[o4] && (a6[o4].url = e9[o4]);
  return vu(e9, a6);
};
var lg = (e9, t4) => e9.reduce((e10, i3) => {
  if (!i3.contentProtection) return e10;
  const s5 = t4.reduce((e11, t5) => {
    const s6 = i3.contentProtection[t5];
    return s6 && s6.pssh && (e11[t5] = { pssh: s6.pssh }), e11;
  }, {});
  return Object.keys(s5).length && e10.push(s5), e10;
}, []);
var hg = ({ player: e9, sourceKeySystems: t4, audioMedia: i3, mainPlaylists: s5 }) => {
  if (!e9.eme.initializeMediaKeys) return Promise.resolve();
  const n6 = i3 ? s5.concat([i3]) : s5, r5 = lg(n6, Object.keys(t4)), a6 = [], o4 = [];
  return r5.forEach((t5) => {
    o4.push(new Promise((t6, i4) => {
      e9.tech_.one("keysessioncreated", t6);
    })), a6.push(new Promise((i4, s6) => {
      e9.eme.initializeMediaKeys({ keySystems: t5 }, (e10) => {
        e10 ? s6(e10) : i4();
      });
    }));
  }), Promise.race([Promise.all(a6), Promise.race(o4)]);
};
var ug = ({ player: e9, sourceKeySystems: t4, media: i3, audioMedia: s5 }) => {
  const n6 = og(t4, i3, s5);
  return !!n6 && (e9.currentSource().keySystems = n6, !(n6 && !e9.eme) || (du.log.warn("DRM encrypted source cannot be decrypted without a DRM plugin"), false));
};
var dg = () => {
  if (!_.localStorage) return null;
  const e9 = _.localStorage.getItem(ng);
  if (!e9) return null;
  try {
    return JSON.parse(e9);
  } catch (t4) {
    return null;
  }
};
var cg = (e9) => {
  if (!_.localStorage) return false;
  let t4 = dg();
  t4 = t4 ? vu(t4, e9) : e9;
  try {
    _.localStorage.setItem(ng, JSON.stringify(t4));
  } catch (i3) {
    return false;
  }
  return t4;
};
var pg = (e9) => 0 === e9.toLowerCase().indexOf("data:application/vnd.videojs.vhs+json,") ? JSON.parse(e9.substring(e9.indexOf(",") + 1)) : e9;
var mg = (e9, t4) => {
  e9._requestCallbackSet || (e9._requestCallbackSet = /* @__PURE__ */ new Set()), e9._requestCallbackSet.add(t4);
};
var gg = (e9, t4) => {
  e9._responseCallbackSet || (e9._responseCallbackSet = /* @__PURE__ */ new Set()), e9._responseCallbackSet.add(t4);
};
var fg = (e9, t4) => {
  e9._requestCallbackSet && (e9._requestCallbackSet.delete(t4), e9._requestCallbackSet.size || delete e9._requestCallbackSet);
};
var yg = (e9, t4) => {
  e9._responseCallbackSet && (e9._responseCallbackSet.delete(t4), e9._responseCallbackSet.size || delete e9._responseCallbackSet);
};
sg.supportsNativeHls = function() {
  if (!ne || !ne.createElement) return false;
  const e9 = ne.createElement("video");
  if (!du.getTech("Html5").isSupported()) return false;
  return ["application/vnd.apple.mpegurl", "audio/mpegurl", "audio/x-mpegurl", "application/x-mpegurl", "video/x-mpegurl", "video/mpegurl", "application/mpegurl"].some(function(t4) {
    return /maybe|probably/i.test(e9.canPlayType(t4));
  });
}(), sg.supportsNativeDash = !!(ne && ne.createElement && du.getTech("Html5").isSupported()) && /maybe|probably/i.test(ne.createElement("video").canPlayType("application/dash+xml")), sg.supportsTypeNatively = (e9) => "hls" === e9 ? sg.supportsNativeHls : "dash" === e9 && sg.supportsNativeDash, sg.isSupported = function() {
  return du.log.warn("VHS is no longer a tech. Please remove it from your player's techOrder.");
}, sg.xhr.onRequest = function(e9) {
  mg(sg.xhr, e9);
}, sg.xhr.onResponse = function(e9) {
  gg(sg.xhr, e9);
}, sg.xhr.offRequest = function(e9) {
  fg(sg.xhr, e9);
}, sg.xhr.offResponse = function(e9) {
  yg(sg.xhr, e9);
};
var _g = du.getComponent("Component");
var bg = class extends _g {
  constructor(e9, t4, i3) {
    if (super(t4, i3.vhs), "number" == typeof i3.initialBandwidth && (this.options_.bandwidth = i3.initialBandwidth), this.logger_ = bu("VhsHandler"), t4.options_ && t4.options_.playerId) {
      const e10 = du.getPlayer(t4.options_.playerId);
      this.player_ = e10;
    }
    if (this.tech_ = t4, this.source_ = e9, this.stats = {}, this.ignoreNextSeekingEvent_ = false, this.setOptions_(), this.options_.overrideNative && t4.overrideNativeAudioTracks && t4.overrideNativeVideoTracks) t4.overrideNativeAudioTracks(true), t4.overrideNativeVideoTracks(true);
    else if (this.options_.overrideNative && (t4.featuresNativeVideoTracks || t4.featuresNativeAudioTracks)) throw new Error("Overriding native VHS requires emulated tracks. See https://git.io/vMpjB");
    this.on(ne, ["fullscreenchange", "webkitfullscreenchange", "mozfullscreenchange", "MSFullscreenChange"], (e10) => {
      const t5 = ne.fullscreenElement || ne.webkitFullscreenElement || ne.mozFullScreenElement || ne.msFullscreenElement;
      t5 && t5.contains(this.tech_.el()) ? this.playlistController_.fastQualityChange_() : this.playlistController_.checkABR_();
    }), this.on(this.tech_, "seeking", function() {
      this.ignoreNextSeekingEvent_ ? this.ignoreNextSeekingEvent_ = false : this.setCurrentTime(this.tech_.currentTime());
    }), this.on(this.tech_, "error", function() {
      this.tech_.error() && this.playlistController_ && this.playlistController_.pauseLoading();
    }), this.on(this.tech_, "play", this.play);
  }
  setOptions_(e9 = {}) {
    if (this.options_ = vu(this.options_, e9), this.options_.withCredentials = this.options_.withCredentials || false, this.options_.limitRenditionByPlayerDimensions = false !== this.options_.limitRenditionByPlayerDimensions, this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false, this.options_.useBandwidthFromLocalStorage = void 0 !== this.source_.useBandwidthFromLocalStorage ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false, this.options_.useForcedSubtitles = this.options_.useForcedSubtitles || false, this.options_.useNetworkInformationApi = this.options_.useNetworkInformationApi || false, this.options_.useDtsForTimestampOffset = this.options_.useDtsForTimestampOffset || false, this.options_.customTagParsers = this.options_.customTagParsers || [], this.options_.customTagMappers = this.options_.customTagMappers || [], this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false, this.options_.llhls = false !== this.options_.llhls, this.options_.bufferBasedABR = this.options_.bufferBasedABR || false, "number" != typeof this.options_.playlistExclusionDuration && (this.options_.playlistExclusionDuration = 60), "number" != typeof this.options_.bandwidth && this.options_.useBandwidthFromLocalStorage) {
      const e10 = dg();
      e10 && e10.bandwidth && (this.options_.bandwidth = e10.bandwidth, this.tech_.trigger({ type: "usage", name: "vhs-bandwidth-from-local-storage" })), e10 && e10.throughput && (this.options_.throughput = e10.throughput, this.tech_.trigger({ type: "usage", name: "vhs-throughput-from-local-storage" }));
    }
    "number" != typeof this.options_.bandwidth && (this.options_.bandwidth = uc.INITIAL_BANDWIDTH), this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === uc.INITIAL_BANDWIDTH, ["withCredentials", "useDevicePixelRatio", "customPixelRatio", "limitRenditionByPlayerDimensions", "bandwidth", "customTagParsers", "customTagMappers", "cacheEncryptionKeys", "playlistSelector", "initialPlaylistSelector", "bufferBasedABR", "liveRangeSafeTimeDelta", "llhls", "useForcedSubtitles", "useNetworkInformationApi", "useDtsForTimestampOffset", "exactManifestTimings", "leastPixelDiffSelector"].forEach((e10) => {
      void 0 !== this.source_[e10] && (this.options_[e10] = this.source_[e10]);
    }), this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions, this.useDevicePixelRatio = this.options_.useDevicePixelRatio;
    const t4 = this.options_.customPixelRatio;
    "number" == typeof t4 && t4 >= 0 && (this.customPixelRatio = t4);
  }
  setOptions(e9 = {}) {
    this.setOptions_(e9);
  }
  src(e9, t4) {
    if (!e9) return;
    this.setOptions_(), this.options_.src = pg(this.source_.src), this.options_.tech = this.tech_, this.options_.externVhs = sg, this.options_.sourceType = yt(t4), this.options_.seekTo = (e10) => {
      this.tech_.setCurrentTime(e10);
    }, this.options_.player_ = this.player_, this.playlistController_ = new Hm(this.options_);
    const i3 = vu({ liveRangeSafeTimeDelta: wu }, this.options_, { seekable: () => this.seekable(), media: () => this.playlistController_.media(), playlistController: this.playlistController_ });
    this.playbackWatcher_ = new Xm(i3), this.attachStreamingEventListeners_(), this.playlistController_.on("error", () => {
      const e10 = du.players[this.tech_.options_.playerId];
      let t5 = this.playlistController_.error;
      "object" != typeof t5 || t5.code ? "string" == typeof t5 && (t5 = { message: t5, code: 3 }) : t5.code = 3, e10.error(t5);
    });
    const s5 = this.options_.bufferBasedABR ? sg.movingAverageBandwidthSelector(0.55) : sg.STANDARD_PLAYLIST_SELECTOR;
    this.playlistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : s5.bind(this), this.playlistController_.selectInitialPlaylist = sg.INITIAL_PLAYLIST_SELECTOR.bind(this), this.playlists = this.playlistController_.mainPlaylistLoader_, this.mediaSource = this.playlistController_.mediaSource, Object.defineProperties(this, { selectPlaylist: { get() {
      return this.playlistController_.selectPlaylist;
    }, set(e10) {
      this.playlistController_.selectPlaylist = e10.bind(this);
    } }, throughput: { get() {
      return this.playlistController_.mainSegmentLoader_.throughput.rate;
    }, set(e10) {
      this.playlistController_.mainSegmentLoader_.throughput.rate = e10, this.playlistController_.mainSegmentLoader_.throughput.count = 1;
    } }, bandwidth: { get() {
      let e10 = this.playlistController_.mainSegmentLoader_.bandwidth;
      const t5 = _.navigator.connection || _.navigator.mozConnection || _.navigator.webkitConnection, i4 = 1e7;
      if (this.options_.useNetworkInformationApi && t5) {
        const s6 = 1e3 * t5.downlink * 1e3;
        e10 = s6 >= i4 && e10 >= i4 ? Math.max(e10, s6) : s6;
      }
      return e10;
    }, set(e10) {
      this.playlistController_.mainSegmentLoader_.bandwidth = e10, this.playlistController_.mainSegmentLoader_.throughput = { rate: 0, count: 0 };
    } }, systemBandwidth: { get() {
      const e10 = 1 / (this.bandwidth || 1);
      let t5;
      t5 = this.throughput > 0 ? 1 / this.throughput : 0;
      return Math.floor(1 / (e10 + t5));
    }, set() {
      du.log.error('The "systemBandwidth" property is read-only');
    } } }), this.options_.bandwidth && (this.bandwidth = this.options_.bandwidth), this.options_.throughput && (this.throughput = this.options_.throughput), Object.defineProperties(this.stats, { bandwidth: { get: () => this.bandwidth || 0, enumerable: true }, mediaRequests: { get: () => this.playlistController_.mediaRequests_() || 0, enumerable: true }, mediaRequestsAborted: { get: () => this.playlistController_.mediaRequestsAborted_() || 0, enumerable: true }, mediaRequestsTimedout: { get: () => this.playlistController_.mediaRequestsTimedout_() || 0, enumerable: true }, mediaRequestsErrored: { get: () => this.playlistController_.mediaRequestsErrored_() || 0, enumerable: true }, mediaTransferDuration: { get: () => this.playlistController_.mediaTransferDuration_() || 0, enumerable: true }, mediaBytesTransferred: { get: () => this.playlistController_.mediaBytesTransferred_() || 0, enumerable: true }, mediaSecondsLoaded: { get: () => this.playlistController_.mediaSecondsLoaded_() || 0, enumerable: true }, mediaAppends: { get: () => this.playlistController_.mediaAppends_() || 0, enumerable: true }, mainAppendsToLoadedData: { get: () => this.playlistController_.mainAppendsToLoadedData_() || 0, enumerable: true }, audioAppendsToLoadedData: { get: () => this.playlistController_.audioAppendsToLoadedData_() || 0, enumerable: true }, appendsToLoadedData: { get: () => this.playlistController_.appendsToLoadedData_() || 0, enumerable: true }, timeToLoadedData: { get: () => this.playlistController_.timeToLoadedData_() || 0, enumerable: true }, buffered: { get: () => Lu(this.tech_.buffered()), enumerable: true }, currentTime: { get: () => this.tech_.currentTime(), enumerable: true }, currentSource: { get: () => this.tech_.currentSource_, enumerable: true }, currentTech: { get: () => this.tech_.name_, enumerable: true }, duration: { get: () => this.tech_.duration(), enumerable: true }, main: { get: () => this.playlists.main, enumerable: true }, playerDimensions: { get: () => this.tech_.currentDimensions(), enumerable: true }, seekable: { get: () => Lu(this.tech_.seekable()), enumerable: true }, timestamp: { get: () => Date.now(), enumerable: true }, videoPlaybackQuality: { get: () => this.tech_.getVideoPlaybackQuality(), enumerable: true } }), this.tech_.one("canplay", this.playlistController_.setupFirstPlay.bind(this.playlistController_)), this.tech_.on("bandwidthupdate", () => {
      this.options_.useBandwidthFromLocalStorage && cg({ bandwidth: this.bandwidth, throughput: Math.round(this.throughput) });
    }), this.playlistController_.on("selectedinitialmedia", () => {
      Wm(this);
    }), this.playlistController_.sourceUpdater_.on("createdsourcebuffers", () => {
      this.setupEme_();
    }), this.on(this.playlistController_, "progress", function() {
      this.tech_.trigger("progress");
    }), this.on(this.playlistController_, "firstplay", function() {
      this.ignoreNextSeekingEvent_ = true;
    }), this.setupQualityLevels_(), this.tech_.el() && (this.mediaSourceUrl_ = _.URL.createObjectURL(this.playlistController_.mediaSource), this.tech_.src(this.mediaSourceUrl_));
  }
  createKeySessions_() {
    const e9 = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;
    this.logger_("waiting for EME key session creation"), hg({ player: this.player_, sourceKeySystems: this.source_.keySystems, audioMedia: e9 && e9.media(), mainPlaylists: this.playlists.main.playlists }).then(() => {
      this.logger_("created EME key session"), this.playlistController_.sourceUpdater_.initializedEme();
    }).catch((e10) => {
      this.logger_("error while creating EME key session", e10), this.player_.error({ message: "Failed to initialize media keys for EME", code: 3 });
    });
  }
  handleWaitingForKey_() {
    this.logger_("waitingforkey fired, attempting to create any new key sessions"), this.createKeySessions_();
  }
  setupEme_() {
    const e9 = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader, t4 = ug({ player: this.player_, sourceKeySystems: this.source_.keySystems, media: this.playlists.media(), audioMedia: e9 && e9.media() });
    this.player_.tech_.on("keystatuschange", (e10) => {
      this.playlistController_.updatePlaylistByKeyStatus(e10.keyId, e10.status);
    }), this.handleWaitingForKey_ = this.handleWaitingForKey_.bind(this), this.player_.tech_.on("waitingforkey", this.handleWaitingForKey_), t4 ? this.createKeySessions_() : this.playlistController_.sourceUpdater_.initializedEme();
  }
  setupQualityLevels_() {
    const e9 = du.players[this.tech_.options_.playerId];
    e9 && e9.qualityLevels && !this.qualityLevels_ && (this.qualityLevels_ = e9.qualityLevels(), this.playlistController_.on("selectedinitialmedia", () => {
      ag(this.qualityLevels_, this);
    }), this.playlists.on("mediachange", () => {
      rg(this.qualityLevels_, this.playlists);
    }));
  }
  static version() {
    return { "@videojs/http-streaming": Jm, "mux.js": Zm, "mpd-parser": eg, "m3u8-parser": tg, "aes-decrypter": ig };
  }
  version() {
    return this.constructor.version();
  }
  canChangeType() {
    return sm.canChangeType();
  }
  play() {
    this.playlistController_.play();
  }
  setCurrentTime(e9) {
    this.playlistController_.setCurrentTime(e9);
  }
  duration() {
    return this.playlistController_.duration();
  }
  seekable() {
    return this.playlistController_.seekable();
  }
  dispose() {
    this.playbackWatcher_ && this.playbackWatcher_.dispose(), this.playlistController_ && this.playlistController_.dispose(), this.qualityLevels_ && this.qualityLevels_.dispose(), this.tech_ && this.tech_.vhs && delete this.tech_.vhs, this.mediaSourceUrl_ && _.URL.revokeObjectURL && (_.URL.revokeObjectURL(this.mediaSourceUrl_), this.mediaSourceUrl_ = null), this.tech_ && this.tech_.off("waitingforkey", this.handleWaitingForKey_), super.dispose();
  }
  convertToProgramTime(e9, t4) {
    return Yd({ playlist: this.playlistController_.media(), time: e9, callback: t4 });
  }
  seekToProgramTime(e9, t4, i3 = true, s5 = 2) {
    return Qd({ programTime: e9, playlist: this.playlistController_.media(), retryCount: s5, pauseAfterSeek: i3, seekTo: this.options_.seekTo, tech: this.options_.tech, callback: t4 });
  }
  setupXhrHooks_() {
    this.xhr.onRequest = (e9) => {
      mg(this.xhr, e9);
    }, this.xhr.onResponse = (e9) => {
      gg(this.xhr, e9);
    }, this.xhr.offRequest = (e9) => {
      fg(this.xhr, e9);
    }, this.xhr.offResponse = (e9) => {
      yg(this.xhr, e9);
    }, this.player_.trigger("xhr-hooks-ready");
  }
  attachStreamingEventListeners_() {
    const e9 = ["gapjumped", "playedrangeschanged"];
    ["seekablerangeschanged", "bufferedrangeschanged", "contentsteeringloadstart", "contentsteeringloadcomplete", "contentsteeringparsed"].forEach((e10) => {
      this.playlistController_.on(e10, (e11) => {
        this.player_.trigger(Ue({}, e11));
      });
    }), e9.forEach((e10) => {
      this.playbackWatcher_.on(e10, (e11) => {
        this.player_.trigger(Ue({}, e11));
      });
    });
  }
};
var vg = { name: "videojs-http-streaming", VERSION: Jm, canHandleSource(e9, t4 = {}) {
  const i3 = vu(du.options, t4);
  return !(!i3.vhs.experimentalUseMMS && !dt("avc1.4d400d,mp4a.40.2", false)) && vg.canPlayType(e9.type, i3);
}, handleSource(e9, t4, i3 = {}) {
  const s5 = vu(du.options, i3);
  return t4.vhs = new bg(e9, t4, s5), t4.vhs.xhr = Dd(), t4.vhs.setupXhrHooks_(), t4.vhs.src(e9.src, e9.type), t4.vhs;
}, canPlayType(e9, t4) {
  const i3 = yt(e9);
  if (!i3) return "";
  const s5 = vg.getOverrideNative(t4);
  return !sg.supportsTypeNatively(i3) || s5 ? "maybe" : "";
}, getOverrideNative(e9 = {}) {
  const { vhs: t4 = {} } = e9, i3 = !(du.browser.IS_ANY_SAFARI || du.browser.IS_IOS), { overrideNative: s5 = i3 } = t4;
  return s5;
} };
(() => dt("avc1.4d400d,mp4a.40.2", true))() && du.getTech("Html5").registerSourceHandler(vg, 0), du.VhsHandler = bg, du.VhsSourceHandler = vg, du.Vhs = sg, du.use || du.registerComponent("Vhs", sg), du.options.vhs = du.options.vhs || {}, du.getPlugin && du.getPlugin("reloadSourceOnError") || du.registerPlugin("reloadSourceOnError", Qm);
var Tg = class extends b {
  constructor() {
    super(), this._defaultConfigs = { autoplay: false, fluid: false, fullscreen: false, loop: false, muted: false, preload: "auto", responsive: false, startTime: 0 }, this._prevPlayingState = false, this.currentMetadata = null, this.element = null, this.mimeType = null, this.sensorModel = null, this.state = "not-ready", this.waitingTimestamp = null, this._initController = () => {
      !this._controller && this.playerUrl && (this.element = document.createElement("video"), du.log.level("error"), this._controller = du(this.element, this._defaultConfigs), this._controller.muted(this.muted), this._controller.loop(this.loop), this._controller.playbackRate(this.rate), this._controller.ready(this._handleReady), this._controller.on("canplay", this._handleCanPlay), this._controller.on("durationchange", this._handleDurationChange), this._controller.on("ended", this._handleEnded), this._controller.on("error", this._handleError), this._controller.on("loadeddata", this._handleDataLoaded), this._controller.on("loadedmetadata", this._handleLoadedMetadata), this._controller.on("loadstart", this._handleLoadStart), this._controller.on("play", this._handlePlay), this._controller.on("timeupdate", this._handleTimeUpdate), this._controller.on("waiting", this._handleWaiting), this._controller.on("xhr-hooks-ready", this._handleXHRhooksReady));
    }, this._handleReady = () => {
      this.state = "ready";
    }, this._handleCanPlay = () => {
      this._prevPlayingState = "playing" === this.state, this.state = "can-play";
    }, this._handleCueChange = () => {
      var _a2, _b, _c2, _d2, _e2, _f, _g2;
      if (!((_b = (_a2 = this.subtitleTrack) == null ? void 0 : _a2.activeCues) == null ? void 0 : _b.length)) return;
      const e9 = (_c2 = this.subtitleTrack) == null ? void 0 : _c2.activeCues[0], t4 = e9.text ? JSON.parse(e9.text) : null;
      if (!((_d2 = t4 == null ? void 0 : t4.data) == null ? void 0 : _d2.length)) return;
      const i3 = ((_e2 = t4.data[0]) == null ? void 0 : _e2.value) ?? [], s5 = /* @__PURE__ */ new Map();
      for (const n6 of i3) {
        if (Array.isArray(n6.value)) if (90064 === n6.tagId) s5.set(n6.tagId, n6);
        else {
          n6.value.forEach((e10) => {
            s5.set(e10.tagId, e10);
          });
        }
        else s5.set(n6.tagId, n6);
      }
      s5.set(u3.EsriVideoWidth, { name: "Video Width", tagId: u3.EsriVideoWidth, value: (_f = this._controller) == null ? void 0 : _f.videoWidth() }), s5.set(u3.EsriVideoHeight, { name: "Video Height", tagId: u3.EsriVideoHeight, value: (_g2 = this._controller) == null ? void 0 : _g2.videoHeight() }), this.currentMetadata = new Map(s5), this.sensorModel = new y2({ videoMetadata: this.currentMetadata });
    }, this._handleDataLoaded = () => {
      var _a2, _b;
      this.state = "data-loaded", this._set("videoWidth", (_a2 = this._controller) == null ? void 0 : _a2.videoWidth()), this._set("videoHeight", (_b = this._controller) == null ? void 0 : _b.videoHeight());
    }, this._handleDurationChange = () => this.notifyChange("duration"), this._handleEnded = () => {
      if (!this.loop) return this._set("ended", true), this.notifyChange("buffered"), this.notifyChange("currentTime"), this.notifyChange("duration"), this.notifyChange("waiting"), void (this.state = "can-play");
      this.setCurrentTime(0), this.play();
    }, this._handleError = () => {
      var _a2;
      n.getLogger(this).error("video stream error ::", (_a2 = this._controller) == null ? void 0 : _a2.error());
    }, this._handleLoadStart = () => {
      this.state = "can-play";
    }, this._handleLoadedMetadata = () => {
      this.notifyChange("subtitleTrack"), this.notifyChange("buffered");
    }, this._handlePlay = () => this.notifyChange("ended"), this._handleTimeUpdate = () => {
      var _a2, _b;
      this.notifyChange("currentTime"), this.notifyChange("buffered"), this.notifyChange("bufferedPercent"), this._set("videoWidth", (_a2 = this._controller) == null ? void 0 : _a2.videoWidth()), this._set("videoHeight", (_b = this._controller) == null ? void 0 : _b.videoHeight());
    }, this._handleWaiting = () => {
      var _a2;
      this.waitingTimestamp = (_a2 = this._controller) == null ? void 0 : _a2.currentTime();
    }, this._handleXHRhooksReady = () => {
      var _a2, _b;
      const e9 = (e10) => (e10.xhr = new s3(), e10);
      (_b = (_a2 = this._controller) == null ? void 0 : _a2.tech(true)) == null ? void 0 : _b.vhs.xhr.onRequest(e9);
    };
  }
  initialize() {
    this.addHandles([d(() => this.playerUrl, (e9) => {
      var _a2;
      e9 && (this._initController(), this.mimeType = C(e9), (_a2 = this._controller) == null ? void 0 : _a2.src({ type: this.mimeType, src: this.playerUrl }));
    }, P), d(() => this.subtitleTrack, () => {
      this.subtitleTrack && (this.subtitleTrack.mode = "showing");
    })]), this.addHandles(v(() => this.subtitleTrack, "cuechange", this._handleCueChange));
  }
  destroy() {
    var _a2;
    (_a2 = this._controller) == null ? void 0 : _a2.dispose();
  }
  get buffered() {
    var _a2;
    return ((_a2 = this._controller) == null ? void 0 : _a2.bufferedEnd()) ?? 0;
  }
  get bufferedPercent() {
    var _a2;
    return ((_a2 = this._controller) == null ? void 0 : _a2.bufferedPercent()) ?? 0;
  }
  get currentTime() {
    var _a2;
    return ((_a2 = this._controller) == null ? void 0 : _a2.currentTime()) ?? 0;
  }
  get duration() {
    var _a2;
    return ((_a2 = this._controller) == null ? void 0 : _a2.duration()) ?? 0;
  }
  get ended() {
    var _a2;
    return ((_a2 = this._controller) == null ? void 0 : _a2.ended()) ?? this._get("ended") ?? true;
  }
  set ended(e9) {
    var _a2;
    (_a2 = this._controller) == null ? void 0 : _a2.ended(e9), this._set("ended", e9);
  }
  get loop() {
    var _a2;
    return ((_a2 = this._controller) == null ? void 0 : _a2.loop()) ?? this._get("loop") ?? false;
  }
  set loop(e9) {
    var _a2;
    (_a2 = this._controller) == null ? void 0 : _a2.loop(e9), this._set("loop", e9);
  }
  get muted() {
    var _a2;
    return ((_a2 = this._controller) == null ? void 0 : _a2.muted()) ?? this._get("muted") ?? false;
  }
  set muted(e9) {
    var _a2;
    (_a2 = this._controller) == null ? void 0 : _a2.muted(e9), this._set("muted", e9);
  }
  get playerUrl() {
    var _a2;
    return ((_a2 = this._controller) == null ? void 0 : _a2.src()) || "";
  }
  set playerUrl(e9) {
    this._set("playerUrl", e9);
  }
  get playing() {
    return !this.ended && ("can-play" === this.state ? this._prevPlayingState : "playing" === this.state);
  }
  get rate() {
    var _a2;
    return ((_a2 = this._controller) == null ? void 0 : _a2.playbackRate()) ?? this._get("rate") ?? 1;
  }
  set rate(e9) {
    var _a2;
    (_a2 = this._controller) == null ? void 0 : _a2.playbackRate(e9), this._set("rate", e9);
  }
  get started() {
    var _a2;
    return ((_a2 = this._controller) == null ? void 0 : _a2.hasStarted()) || false;
  }
  get subtitleTrack() {
    var _a2;
    const e9 = (_a2 = this._controller) == null ? void 0 : _a2.textTracks();
    return (e9 == null ? void 0 : e9.length) ? Array.from(e9).find((e10) => "subtitles" === e10.kind) : null;
  }
  get waiting() {
    return !this.waitingTimestamp && (this.waitingTimestamp === this.currentTime || (this.waitingTimestamp = null, false));
  }
  pause() {
    var _a2;
    (_a2 = this._controller) == null ? void 0 : _a2.pause(), this.state = "paused";
  }
  play() {
    var _a2;
    (_a2 = this._controller) == null ? void 0 : _a2.play(), this.state = "playing";
  }
  reset() {
    this._controller && (this.pause(), this.setCurrentTime(0), this._set("ended", true));
  }
  setCurrentTime(e9) {
    var _a2;
    const t4 = r3(e9, 0, this.duration);
    (_a2 = this._controller) == null ? void 0 : _a2.currentTime(t4), this.notifyChange("currentTime");
  }
};
r([m()], Tg.prototype, "buffered", null), r([m()], Tg.prototype, "bufferedPercent", null), r([m({ readOnly: true })], Tg.prototype, "currentTime", null), r([m()], Tg.prototype, "currentMetadata", void 0), r([m({ readOnly: true })], Tg.prototype, "duration", null), r([m()], Tg.prototype, "element", void 0), r([m({ readOnly: true })], Tg.prototype, "ended", null), r([m()], Tg.prototype, "loop", null), r([m()], Tg.prototype, "mimeType", void 0), r([m()], Tg.prototype, "muted", null), r([m()], Tg.prototype, "playerUrl", null), r([m({ readOnly: true })], Tg.prototype, "playing", null), r([m()], Tg.prototype, "rate", null), r([m()], Tg.prototype, "sensorModel", void 0), r([m({ readOnly: true })], Tg.prototype, "started", null), r([m()], Tg.prototype, "state", void 0), r([m()], Tg.prototype, "subtitleTrack", null), r([m({ readOnly: true })], Tg.prototype, "videoHeight", void 0), r([m({ readOnly: true })], Tg.prototype, "videoWidth", void 0), r([m({ readOnly: true })], Tg.prototype, "waiting", null), r([m()], Tg.prototype, "waitingTimestamp", void 0), Tg = r([a("esri.layers.video.VideoController")], Tg);
var Sg = Tg;

// node_modules/@arcgis/core/layers/VideoLayer.js
var w4 = class extends l(t2(S(e2(f2)))) {
  constructor(e9) {
    super(e9), this._trailPoints = [], this.capabilities = null, this.connectionInfo = null, this.controller = new Sg(), this.copyright = null, this.created = null, this.description = null, this.elevationSource = null, this.frame = null, this.frameCount = null, this.fullExtent = null, this.initialExtent = null, this.layerId = null, this.playbackInfo = null, this.posterUrl = null, this.qualities = null, this.serviceItemId = null, this.sourceJSON = null, this.sourceQuality = null, this.sourceType = null, this.spatialReference = g.WGS84, this.telemetryDisplay = null, this.title = null, this.type = "video", this.url = null, this.videoLayersInfo = null, this.videoTimeExtent = null;
  }
  initialize() {
    this.telemetryDisplay = new l2({ frame: false, frameCenter: false, frameOutline: true, lineOfSight: true, sensorLocation: true, sensorTrail: true }), this.addHandles([d(() => this.metadata, () => {
      this.notifyChange("telemetry"), this.notifyChange("groundControlPoints"), this.notifyChange("frameHorizonPoints");
    }), d(() => {
      var _a2;
      return (_a2 = this.telemetry) == null ? void 0 : _a2.sensorLocation;
    }, (e9) => this._setSensorTrail(e9), P)]);
  }
  load(e9) {
    const t4 = null != e9 ? e9.signal : null;
    return this.addResolvingPromise(this._fetchService(t4)), Promise.resolve(this);
  }
  get buffered() {
    return this.controller.buffered;
  }
  readCapabilitiesFromService(e9, t4) {
    return A(t4);
  }
  readConnectionInfo(e9, t4) {
    const r5 = Object.values(t4.connectionUrl);
    return (r5 == null ? void 0 : r5.length) && (this.controller.playerUrl = r5[0]), t4.connectionUrl;
  }
  get currentTime() {
    return this.controller.currentTime;
  }
  get duration() {
    return this.controller.duration;
  }
  get ended() {
    return this.controller.ended;
  }
  get frameHorizonPoints() {
    return f3(this.metadata);
  }
  get groundControlPoints() {
    return g2(this.metadata);
  }
  get loop() {
    return this.controller.loop;
  }
  set loop(e9) {
    this.controller.loop = e9;
  }
  get metadata() {
    var _a2;
    return (_a2 = this.controller) == null ? void 0 : _a2.currentMetadata;
  }
  get mimeType() {
    var _a2;
    return (_a2 = this.controller) == null ? void 0 : _a2.mimeType;
  }
  get muted() {
    return this.controller.muted;
  }
  set muted(e9) {
    this.controller.muted = e9;
  }
  get playbackRate() {
    return this.controller.rate;
  }
  set playbackRate(e9) {
    this.controller.rate = e9;
  }
  get playerUrl() {
    return this.controller.playerUrl;
  }
  get playing() {
    return this.controller.playing;
  }
  get state() {
    return this.controller.state;
  }
  get telemetry() {
    return d4(this.metadata);
  }
  get videoElement() {
    var _a2;
    return (_a2 = this.controller) == null ? void 0 : _a2.element;
  }
  get videoHeight() {
    var _a2;
    return (_a2 = this.controller) == null ? void 0 : _a2.videoHeight;
  }
  readLayerInfosFromService(e9, t4) {
    return m4(t4);
  }
  get videoWidth() {
    var _a2;
    return (_a2 = this.controller) == null ? void 0 : _a2.videoWidth;
  }
  get waiting() {
    return this.controller.waiting;
  }
  play() {
    this.controller.play();
  }
  pause() {
    this.controller.pause();
  }
  reset() {
    this.controller.reset();
  }
  setCurrentTime(e9) {
    if (!this.duration) return;
    const t4 = r3(e9, 0, this.duration);
    this.controller.setCurrentTime(t4);
  }
  toGround(e9, t4) {
    var _a2, _b;
    return ((_b = (_a2 = this.controller) == null ? void 0 : _a2.sensorModel) == null ? void 0 : _b.metadataSupportsTransforms) ? this.controller.sensorModel.transformImageToGeo(e9, t4) : null;
  }
  toVideo(e9) {
    var _a2, _b;
    if (!((_b = (_a2 = this.controller) == null ? void 0 : _a2.sensorModel) == null ? void 0 : _b.metadataSupportsTransforms)) return null;
    const t4 = this.controller.sensorModel.transformGeoToImage(e9.x, e9.y, e9.z);
    return { x: t4[0], y: t4[1] };
  }
  async _fetchService(e9) {
    var _a2, _b;
    if (this.sourceJSON) return void this.read(this.sourceJSON, { origin: "service", url: this.parsedUrl });
    const o4 = d3((_a2 = this.parsedUrl) == null ? void 0 : _a2.path);
    if (null == o4) throw new s("arcgis-layers:url-mismatch", "The url is not a valid arcgis resource");
    let i3 = null;
    const { data: l6, ssl: s5 } = await U(o4.url.path, { query: { f: "json", ...this.parsedUrl.query, ...this.customParameters }, signal: e9 }), n6 = l6;
    if (this.url = o4.url.path, s5 && (this.url = this.url.replace(/^http:/i, "https:")), !(n6 == null ? void 0 : n6.currentVersion)) return n6.currentVersion = "11.2", this.sourceJSON = n6, void this.read(this.sourceJSON, { origin: "service", url: this.parsedUrl });
    let a6 = o4 == null ? void 0 : o4.sublayer;
    if (null == a6 && ((_b = n6.layers) == null ? void 0 : _b.length) && (a6 = n6.layers[0].id), null == a6) throw new s("arcgis-layers:url-mismatch", "The url is not a valid arcgis resource");
    this.url = `${o4.url.path}/${a6}`, i3 = await U(this.url, { query: { f: "json", ...this.customParameters }, signal: e9 });
    const p2 = { ...n6, ...i3.data };
    this.sourceJSON = p2, this.read(this.sourceJSON, { origin: "service", url: this.parsedUrl });
  }
  _setSensorTrail(e9) {
    if (!e9) return;
    const t4 = l5(e9, this._trailPoints);
    this._trailPoints = [...t4];
    const r5 = this._trailPoints.map((e10) => e10.toArray()), o4 = new d2({ hasZ: e9.hasZ, paths: [r5] });
    this.telemetry.sensorTrail = o4.clone();
  }
};
r([m({ readOnly: true })], w4.prototype, "buffered", null), r([m({ readOnly: true, json: { read: false } })], w4.prototype, "capabilities", void 0), r([o("service", "capabilities", ["supportsAppend", "supportsCoverageQuery", "supportsExportClip", "supportsExportFrameset", "supportsMensuration", "supportsUpdate"])], w4.prototype, "readCapabilitiesFromService", null), r([m({ readOnly: true })], w4.prototype, "connectionInfo", void 0), r([o("connectionInfo", ["connectionUrl"])], w4.prototype, "readConnectionInfo", null), r([m()], w4.prototype, "controller", void 0), r([m({ type: String })], w4.prototype, "copyright", void 0), r([m({ readOnly: true, type: Date })], w4.prototype, "created", void 0), r([m({ type: Number })], w4.prototype, "currentTime", null), r([m({ type: String })], w4.prototype, "description", void 0), r([m({ type: Number })], w4.prototype, "duration", null), r([m({ readOnly: true })], w4.prototype, "elevationSource", void 0), r([m({ type: Boolean })], w4.prototype, "ended", null), r([m({ type: u2 })], w4.prototype, "frame", void 0), r([m({ readOnly: true, type: Number })], w4.prototype, "frameCount", void 0), r([m({ type: w })], w4.prototype, "fullExtent", void 0), r([m({ readOnly: true })], w4.prototype, "frameHorizonPoints", null), r([m({ readOnly: true })], w4.prototype, "groundControlPoints", null), r([m({ type: w })], w4.prototype, "initialExtent", void 0), r([m({ readOnly: true, json: { read: { source: "id" } } })], w4.prototype, "layerId", void 0), r([m({ type: Boolean })], w4.prototype, "loop", null), r([m({ readOnly: true })], w4.prototype, "metadata", null), r([m({ readOnly: true })], w4.prototype, "mimeType", null), r([m({ type: Boolean })], w4.prototype, "muted", null), r([m({ type: a2 })], w4.prototype, "playbackInfo", void 0), r([m({ type: Number })], w4.prototype, "playbackRate", null), r([m({ type: String })], w4.prototype, "playerUrl", null), r([m({ readOnly: true })], w4.prototype, "playing", null), r([m({ readOnly: true, json: { read: { source: "poster" } } })], w4.prototype, "posterUrl", void 0), r([m({ readOnly: true })], w4.prototype, "qualities", void 0), r([m({ readOnly: true })], w4.prototype, "serviceItemId", void 0), r([m()], w4.prototype, "sourceJSON", void 0), r([m({ readOnly: true })], w4.prototype, "sourceQuality", void 0), r([m({ readOnly: true, json: { name: "serviceType" } })], w4.prototype, "sourceType", void 0), r([m()], w4.prototype, "spatialReference", void 0), r([m({ readOnly: true, type: String })], w4.prototype, "state", null), r([m({ readOnly: true, type: n4 })], w4.prototype, "telemetry", null), r([m({ type: l2 })], w4.prototype, "telemetryDisplay", void 0), r([m({ readOnly: false, json: { read: { source: "name" } } })], w4.prototype, "title", void 0), r([m({ readOnly: true })], w4.prototype, "type", void 0), r([m(y)], w4.prototype, "url", void 0), r([m({ readOnly: true })], w4.prototype, "videoElement", null), r([m({ readOnly: true })], w4.prototype, "videoHeight", null), r([m({ readOnly: true, json: { read: false } })], w4.prototype, "videoLayersInfo", void 0), r([o("service", "videoLayersInfo", ["id", "name", "poster", "serviceType", "type"])], w4.prototype, "readLayerInfosFromService", null), r([m({ readOnly: true, nonNullable: false, json: { read: { reader: s4, source: "time" } } })], w4.prototype, "videoTimeExtent", void 0), r([m({ readOnly: true })], w4.prototype, "videoWidth", null), r([m({ readOnly: true })], w4.prototype, "waiting", null), w4 = r([a("esri.layers.VideoLayer")], w4);
var E3 = w4;
export {
  E3 as default
};
//# sourceMappingURL=VideoLayer-JY7TI7WD.js.map
