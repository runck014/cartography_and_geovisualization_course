import {
  o
} from "./chunk-LXJGKQ4D.js";
import {
  f as f2,
  i
} from "./chunk-D2JPDRZZ.js";
import {
  p
} from "./chunk-F26LCWNQ.js";
import {
  c
} from "./chunk-DRBJFCLQ.js";
import {
  U
} from "./chunk-X7VTUWCX.js";
import {
  f
} from "./chunk-VU6O6TFT.js";
import {
  m
} from "./chunk-GD4XDYZL.js";
import {
  a4 as a,
  w
} from "./chunk-33ECLFFF.js";
import {
  r
} from "./chunk-MV5XBD6C.js";

// node_modules/@arcgis/core/rest/support/ProjectParameters.js
var a2 = class extends f {
  constructor(r2) {
    super(r2), this.geometries = [], this.outSpatialReference = null, this.transformation = null, this.transformForward = null;
  }
  toJSON() {
    const r2 = this.geometries.map((r3) => r3.toJSON()), o2 = this.geometries[0], t = {};
    return t.outSR = c(this.outSpatialReference), t.inSR = c(o2.spatialReference), t.geometries = JSON.stringify({ geometryType: p(o2), geometries: r2 }), this.transformation && (t.transformation = this.transformation.wkid || JSON.stringify(this.transformation)), null != this.transformForward && (t.transformForward = this.transformForward), t;
  }
};
r([m()], a2.prototype, "geometries", void 0), r([m({ json: { read: { source: "outSR" } } })], a2.prototype, "outSpatialReference", void 0), r([m()], a2.prototype, "transformation", void 0), r([m()], a2.prototype, "transformForward", void 0), a2 = r([a("esri.rest.support.ProjectParameters")], a2);
var p2 = a2;

// node_modules/@arcgis/core/rest/geometryService/project.js
var i2 = w(p2);
async function n(o2, m2, n2) {
  m2 = i2(m2);
  const u = f2(o2), c2 = { ...u.query, f: "json", ...m2.toJSON() }, j = m2.outSpatialReference, a3 = p(m2.geometries[0]), f3 = i(c2, n2);
  return U(u.path + "/project", f3).then(({ data: { geometries: r2 } }) => o(r2, a3, j));
}

export {
  p2 as p,
  n
};
//# sourceMappingURL=chunk-ANP4SJL6.js.map
