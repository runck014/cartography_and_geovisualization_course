import {
  N as N4,
  R as R5,
  b as b6,
  j as j10,
  q as q5,
  v as v6,
  y as y7
} from "./chunk-O63Z2LLQ.js";
import {
  i as i8
} from "./chunk-BURNMHZB.js";
import {
  s as s11
} from "./chunk-FRUIXJXH.js";
import {
  $ as $2,
  B as B3,
  D as D2,
  F as F3,
  M as M5,
  U as U3,
  a as a13,
  b as b5,
  d as d11,
  d2 as d12,
  f as f7,
  g as g6,
  h as h6,
  h2 as h7,
  i as i7,
  j as j8,
  j2 as j9,
  l as l10,
  m as m5,
  o as o7,
  p as p7,
  s as s10,
  w as w6,
  x as x4,
  y as y6
} from "./chunk-IBWVVVMM.js";
import {
  x as x3
} from "./chunk-KEVBU5NX.js";
import {
  a as a12,
  i as i6
} from "./chunk-MH3T54VT.js";
import {
  h as h4
} from "./chunk-U4YUBCIE.js";
import {
  v as v5
} from "./chunk-IUDC3IP2.js";
import {
  C as C4,
  a as a11,
  q as q4,
  y as y5
} from "./chunk-OGTKWQYH.js";
import {
  I as I5
} from "./chunk-MSYZU3PB.js";
import "./chunk-VVL7KRSE.js";
import {
  K as K3,
  W as W2,
  Z as Z2
} from "./chunk-P5FRKGMR.js";
import "./chunk-BIXAM2NQ.js";
import {
  e as e10,
  n as n10,
  n2 as n11
} from "./chunk-R7BLUDCP.js";
import {
  E as E2,
  a as a10,
  b as b3,
  j as j7,
  l as l9,
  m as m4,
  p as p6,
  u as u9,
  x as x2
} from "./chunk-3ZPRTR7X.js";
import {
  $,
  I as I4,
  O as O3,
  U as U2,
  _ as _7
} from "./chunk-JVGNMUKK.js";
import {
  e as e7
} from "./chunk-BXIXSFGX.js";
import {
  D,
  H as H2,
  J as J4,
  M as M3,
  O as O2,
  Q as Q3,
  V as V2,
  a as a7,
  f as f5,
  h as h3,
  k as k2,
  l as l6,
  p as p4,
  q as q2,
  t as t3,
  z as z3
} from "./chunk-I2OLSNCI.js";
import "./chunk-G5RWJWRO.js";
import {
  c as c4
} from "./chunk-U7ZFK3X2.js";
import {
  a as a9,
  w as w5
} from "./chunk-VMQKPMJK.js";
import {
  a as a6
} from "./chunk-7QP2TGTK.js";
import "./chunk-D67YPTQ2.js";
import {
  L as L4,
  R as R4
} from "./chunk-LTCEJX6G.js";
import {
  e as e6
} from "./chunk-L6HI4BLZ.js";
import "./chunk-5FROWG6B.js";
import "./chunk-NW7VXBHZ.js";
import "./chunk-7DJDQMBH.js";
import "./chunk-6OGF6BAB.js";
import "./chunk-UFFVFTYV.js";
import {
  n as n12,
  o as o9
} from "./chunk-54SL3UDC.js";
import {
  _ as _8,
  t as t4
} from "./chunk-FFLL3HFJ.js";
import {
  e as e11,
  r as r13
} from "./chunk-256XKGQW.js";
import {
  o as o8
} from "./chunk-XK5EJSYF.js";
import {
  u as u10
} from "./chunk-ICIPRMPO.js";
import {
  h as h5
} from "./chunk-NEDBRPQY.js";
import {
  F as F2,
  g as g5
} from "./chunk-WVLGRCY6.js";
import "./chunk-JMJOGITH.js";
import {
  l as l8
} from "./chunk-BOSRS73G.js";
import "./chunk-MCZMPI2A.js";
import {
  _ as _5,
  a as a8,
  e as e8,
  n as n9,
  r as r11,
  s as s9
} from "./chunk-ECMDQ4LS.js";
import "./chunk-D6FJTDNK.js";
import {
  B as B2,
  E,
  I as I3,
  L as L5,
  M as M4,
  T,
  _ as _6,
  b as b2,
  d as d10,
  e as e9,
  f as f6,
  j as j6,
  k as k3,
  l as l7,
  m as m3,
  o as o6,
  p as p5,
  q as q3,
  r as r12,
  u as u8,
  v as v4,
  y as y4
} from "./chunk-LP6TMAPE.js";
import {
  A as A5,
  H,
  I as I2,
  J as J3,
  K as K2,
  P as P3,
  Q as Q2,
  R as R3,
  Z,
  _ as _4,
  c as c3,
  g as g4,
  j as j5,
  o as o5,
  p as p3,
  q,
  r as r10,
  s as s8,
  u as u7,
  v as v3,
  w as w4,
  y as y3
} from "./chunk-RENLZYKC.js";
import {
  B,
  e as e3,
  r as r4
} from "./chunk-WGQW332V.js";
import {
  n as n3
} from "./chunk-J7T52XOR.js";
import {
  i2,
  n2
} from "./chunk-MRQ4EVYK.js";
import {
  l as l3,
  u as u2
} from "./chunk-3FXXSWHF.js";
import "./chunk-MR727DXB.js";
import {
  U,
  w as w3
} from "./chunk-VLKWWBLY.js";
import {
  R as R2
} from "./chunk-GNY4KZ34.js";
import {
  d as d9
} from "./chunk-43W2AR4R.js";
import {
  n as n8,
  r as r9,
  u as u6
} from "./chunk-AFULL6KA.js";
import {
  L as L3,
  _ as _3,
  a as a5,
  j as j4,
  s as s7
} from "./chunk-URFLFG2R.js";
import {
  J as J2
} from "./chunk-A66MNK5C.js";
import "./chunk-EPAKCM4A.js";
import "./chunk-YMJZWW2N.js";
import "./chunk-7Q4JSL7R.js";
import "./chunk-VBJTBJYL.js";
import "./chunk-ES2OYM5K.js";
import {
  h as h2
} from "./chunk-DKMSVKV3.js";
import "./chunk-YIIXBP6I.js";
import "./chunk-GZFJKWTS.js";
import "./chunk-HFPXZJAJ.js";
import "./chunk-6TU4HBID.js";
import "./chunk-WGIZLWW7.js";
import {
  a as a4,
  n as n5
} from "./chunk-B3SR7LF7.js";
import "./chunk-PUOCGOJB.js";
import "./chunk-XQH2QDB2.js";
import {
  n as n7
} from "./chunk-LPNAPHOF.js";
import "./chunk-DBQLTBDH.js";
import "./chunk-AMH7OVBF.js";
import "./chunk-SUZN3TAH.js";
import {
  d as d8
} from "./chunk-VILGTHTP.js";
import "./chunk-ATEWWVHG.js";
import {
  d as d6
} from "./chunk-LEOFRCUR.js";
import {
  S,
  d as d7,
  y as y2
} from "./chunk-CP4GPQHD.js";
import "./chunk-IZSNXKMJ.js";
import "./chunk-IOKAACTA.js";
import {
  l as l5
} from "./chunk-VFTH6C2E.js";
import "./chunk-M5RSIRGD.js";
import "./chunk-UYSPJCCV.js";
import "./chunk-SMFCDOAJ.js";
import "./chunk-2HEBE37N.js";
import "./chunk-5A4G4OVM.js";
import "./chunk-MGMVRMXQ.js";
import "./chunk-GNWAZIVF.js";
import {
  e as e5
} from "./chunk-2TEGRXBS.js";
import "./chunk-44C2A72D.js";
import "./chunk-DIKY6MBW.js";
import {
  c as c2,
  e as e4,
  f as f4,
  g as g3,
  i as i4,
  u as u4
} from "./chunk-YVSEBNS4.js";
import "./chunk-GGCWKF4X.js";
import "./chunk-6D5XULXX.js";
import "./chunk-445IB4DS.js";
import "./chunk-Y2XCZQML.js";
import "./chunk-SW4DFX7N.js";
import "./chunk-2PK57UYA.js";
import "./chunk-F26LCWNQ.js";
import {
  J,
  K,
  N as N3
} from "./chunk-H4N5QOMX.js";
import "./chunk-F2LC36UV.js";
import {
  N as N2,
  _ as _2,
  n as n6,
  r as r8,
  t as t2,
  u as u5
} from "./chunk-6Y2LNRVP.js";
import {
  d as d5,
  u as u3,
  v2
} from "./chunk-VNRDIGVF.js";
import {
  M,
  a as a3,
  j as j3,
  z as z2
} from "./chunk-QRJFHPMB.js";
import {
  n as n4
} from "./chunk-G6REFQRQ.js";
import "./chunk-Z2DWZ5IF.js";
import {
  n
} from "./chunk-VEUN2EF3.js";
import {
  l as l2,
  o as o4
} from "./chunk-UN4ISSP7.js";
import "./chunk-E2RPCJOE.js";
import {
  A as A2,
  C as C2,
  P as P2,
  d as d3,
  p,
  w
} from "./chunk-TKY5RBM3.js";
import "./chunk-NHJGPXZH.js";
import "./chunk-JS7R723S.js";
import {
  V
} from "./chunk-SIQNRYEG.js";
import {
  o as o3
} from "./chunk-TTDEVHSF.js";
import {
  d as d2
} from "./chunk-QSRFVAIF.js";
import "./chunk-X6JBJVM2.js";
import "./chunk-Q7TEBZSN.js";
import {
  b as b4
} from "./chunk-JU6MEO4D.js";
import "./chunk-CY5MS6DC.js";
import "./chunk-C6FFJ4QS.js";
import "./chunk-Q4Q32WYV.js";
import {
  R,
  i as i3,
  j,
  j2
} from "./chunk-A3J7W53Y.js";
import "./chunk-HLF5XJSV.js";
import {
  g as g2
} from "./chunk-L6D73M4D.js";
import "./chunk-P5H5PJSC.js";
import "./chunk-H6RIEXAG.js";
import {
  i as i5
} from "./chunk-Y6AYXNMP.js";
import {
  M as M2,
  l as l4,
  m as m2,
  r as r7,
  s as s6
} from "./chunk-6YWQXXBX.js";
import {
  A as A3,
  A2 as A4,
  C as C3,
  I2 as I,
  L as L2,
  N2 as N,
  O2 as O,
  Q,
  W2 as W,
  _,
  ce,
  d as d4,
  f as f3,
  g,
  ie,
  p as p2,
  r as r5,
  r2 as r6,
  re,
  s2 as s3,
  s3 as s4,
  s4 as s5,
  se,
  te,
  v,
  w as w2,
  x,
  z
} from "./chunk-DRBJFCLQ.js";
import "./chunk-7O7KFKCG.js";
import "./chunk-E2X3OBBC.js";
import "./chunk-X7VTUWCX.js";
import "./chunk-QS62R4CH.js";
import {
  f as f2
} from "./chunk-VU6O6TFT.js";
import {
  P,
  b2 as b,
  i3 as i,
  m,
  r as r3,
  y
} from "./chunk-GD4XDYZL.js";
import {
  a4 as a2,
  h,
  r as r2
} from "./chunk-33ECLFFF.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import "./chunk-L6CCOEVE.js";
import {
  A,
  L,
  d,
  e,
  f,
  k,
  o2,
  s as s2,
  t
} from "./chunk-GRW2QIBT.js";
import {
  e as e2,
  l,
  o,
  u
} from "./chunk-R2PAF6JT.js";
import "./chunk-6WE7SNQY.js";
import {
  a,
  s2 as s
} from "./chunk-PKLD5YJF.js";
import {
  C,
  F,
  c
} from "./chunk-XKQWTZMW.js";
import "./chunk-R4AWRGAT.js";
import "./chunk-5674S6ZB.js";
import "./chunk-V2NNZQEU.js";
import "./chunk-V6OQZUXX.js";
import "./chunk-A4OFG7JM.js";

// node_modules/@arcgis/core/views/interactive/sketch/normalizedPoint.js
var l11;
function f8(n38, t21, e27) {
  return c5(n38, t21, e27);
}
function c5(t21 = 0, e27 = 0, o19 = 0) {
  return r8(t21, e27, o19);
}
function a14(n38) {
  return n38;
}
function s12(n38) {
  return n38;
}
function d13(t21, e27, o19) {
  return a14(r8(t21, e27, o19));
}
function v7(n38) {
  const [t21, e27, o19] = n38;
  return n38.length > 3 ? [t21, e27, o19, n38[3]] : [t21, e27, o19];
}
function E3(n38, t21, e27, u18 = c5()) {
  return u18[0] = n38.x, u18[1] = n38.y, u18[2] = n38.z ?? 0, null == t21 || ("2d" === t21.type ? u18[2] = 0 : u18[2] = m4(t21, n38, e27, j7) ?? 0), u18;
}
function h8(n38, o19, { z: i25, m: l23 }, f18, c18) {
  const { spatialReference: a28, elevationInfo: s26 } = f18;
  let d28;
  if (null == i25 && null == l23) d28 = void 0;
  else if (null == o19 || "2d" === o19.type) d28 = i25 ?? void 0;
  else {
    d28 = x2(o19, n38, a28, j7, s26) ?? 0;
  }
  const [v15, p22] = n38;
  return c18 ? n10(c18, v15, p22, d28, a28) : c18 = e10(v15, p22, d28, a28), null != l23 && (c18.m = l23, c18.hasM = true), c18;
}
!function(n38) {
  n38[n38.NONE = 0] = "NONE", n38[n38.TARGET = 1] = "TARGET";
}(l11 || (l11 = {}));
var g7 = e10(0, 0, 0, null);

// node_modules/@arcgis/core/views/interactive/snapping/Settings.js
var o10 = class extends f2 {
  constructor() {
    super(...arguments), this.enabled = true;
  }
};
r([m({ type: Boolean })], o10.prototype, "enabled", void 0), o10 = r([a2("esri.views.interactive.snapping.Settings.DefaultSnappingAlgorithm")], o10);
var l12 = class extends f2 {
  constructor(e27) {
    super(e27), this.lineSnapper = new o10(), this.parallelLineSnapper = new o10(), this.rightAngleSnapper = new o10(), this.rightAngleTriangleSnapper = new o10(), this.shortLineThreshold = 15, this.distance = 5, this.pointThreshold = 1e-6, this.intersectionParallelLineThreshold = 1e-6, this.parallelLineThreshold = 1e-6, this.verticalLineThresholdMeters = 0.3, this.touchSensitivityMultiplier = 1.5, this.pointOnLineThreshold = 1e-6, this.orange = new l5([255, 127, 0]), this.orangeTransparent = new l5([255, 127, 0, 0.5]), this.lineHintWidthReference = 3, this.lineHintWidthTarget = 3, this.lineHintFadedExtensions = 0.3, this.parallelLineHintWidth = 2, this.parallelLineHintLength = 24, this.parallelLineHintOffset = 1.5, this.rightAngleHintSize = 24, this.rightAngleHintOutlineSize = 1.5, this.satisfiesConstraintScreenThreshold = 1;
  }
};
r([m({ type: o10, constructOnly: true, nonNullable: true, json: { write: true } })], l12.prototype, "lineSnapper", void 0), r([m({ type: o10, constructOnly: true, nonNullable: true, json: { write: true } })], l12.prototype, "parallelLineSnapper", void 0), r([m({ type: o10, constructOnly: true, nonNullable: true, json: { write: true } })], l12.prototype, "rightAngleSnapper", void 0), r([m({ type: o10, constructOnly: true, nonNullable: true, json: { write: true } })], l12.prototype, "rightAngleTriangleSnapper", void 0), r([m({ type: Number, nonNullable: true, range: { min: -1, max: 50, step: 1 }, json: { write: true } })], l12.prototype, "shortLineThreshold", void 0), r([m({ type: Number, nonNullable: true, range: { min: -1, max: 50, step: 1 }, json: { write: true } })], l12.prototype, "distance", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 1e-5 }, json: { write: true } })], l12.prototype, "pointThreshold", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 1e-5 }, json: { write: true } })], l12.prototype, "intersectionParallelLineThreshold", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 1e-5 }, json: { write: true } })], l12.prototype, "parallelLineThreshold", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 1 }, json: { write: true } })], l12.prototype, "verticalLineThresholdMeters", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 10 }, json: { write: true } })], l12.prototype, "touchSensitivityMultiplier", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 1e-5 }, json: { write: true } })], l12.prototype, "pointOnLineThreshold", void 0), r([m({ type: l5, nonNullable: true })], l12.prototype, "orange", void 0), r([m({ type: l5, nonNullable: true })], l12.prototype, "orangeTransparent", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 10 }, json: { write: true } })], l12.prototype, "lineHintWidthReference", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 10 }, json: { write: true } })], l12.prototype, "lineHintWidthTarget", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 1 }, json: { write: true } })], l12.prototype, "lineHintFadedExtensions", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 10 }, json: { write: true } })], l12.prototype, "parallelLineHintWidth", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 50 }, json: { write: true } })], l12.prototype, "parallelLineHintLength", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 5 }, json: { write: true } })], l12.prototype, "parallelLineHintOffset", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 46 }, json: { write: true } })], l12.prototype, "rightAngleHintSize", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 6 }, json: { write: true } })], l12.prototype, "rightAngleHintOutlineSize", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 5 }, json: { write: true } })], l12.prototype, "satisfiesConstraintScreenThreshold", void 0), l12 = r([a2("esri.views.interactive.snapping.Settings.Defaults")], l12);
var p8 = new l12();

// node_modules/@arcgis/core/views/interactive/snapping/SnappingDomain.js
var E4;
!function(E15) {
  E15[E15.FEATURE = 1] = "FEATURE", E15[E15.SELF = 2] = "SELF", E15[E15.ALL = 3] = "ALL";
}(E4 || (E4 = {}));

// node_modules/@arcgis/core/views/interactive/snapping/hints/SnappingHint.js
var s13 = class {
  constructor(s26, t21) {
    this.isDraped = s26, this.domain = t21;
  }
};

// node_modules/@arcgis/core/views/interactive/snapping/hints/IntersectionSnappingHint.js
var o11 = class _o extends s13 {
  constructor(n38, i25, o19 = E4.ALL) {
    super(i25, o19), this.intersectionPoint = n38;
  }
  equals(t21) {
    return t21 instanceof _o && H(this.intersectionPoint, t21.intersectionPoint);
  }
};

// node_modules/@arcgis/core/views/interactive/snapping/hints/LineSnappingHint.js
var n13 = class _n extends s13 {
  constructor(t21, e27, s26, n38, r26 = E4.ALL, a28 = true, h18 = true) {
    super(n38, r26), this.type = t21, this.lineStart = e27, this.lineEnd = s26, this.fadeLeft = a28, this.fadeRight = h18;
  }
  equals(e27) {
    return e27 instanceof _n && (this.type === e27.type && H(this.lineStart, e27.lineStart) && H(this.lineEnd, e27.lineEnd) && this.fadeLeft === e27.fadeLeft && this.fadeRight === e27.fadeRight);
  }
  get length() {
    return p3(this.lineStart, this.lineEnd);
  }
};

// node_modules/@arcgis/core/views/interactive/snapping/hints/ParallelSnappingHint.js
var r14 = class _r extends s13 {
  constructor(t21, i25, r26, s26 = E4.ALL) {
    super(r26, s26), this.lineStart = t21, this.lineEnd = i25;
  }
  equals(n38) {
    return n38 instanceof _r && (H(this.lineStart, n38.lineStart) && H(this.lineEnd, n38.lineEnd));
  }
};

// node_modules/@arcgis/core/views/interactive/snapping/hints/PointSnappingHint.js
var n14 = class _n extends s13 {
  constructor(t21, s26, n38) {
    super(s26, n38), this.point = t21;
  }
  equals(s26) {
    return s26 instanceof _n && H(this.point, s26.point);
  }
};

// node_modules/@arcgis/core/views/interactive/snapping/hints/RightAngleSnappingHint.js
var s14 = class _s extends s13 {
  constructor(e27, r26, s26, i25, o19 = E4.ALL) {
    super(i25, o19), this.previousVertex = e27, this.centerVertex = r26, this.nextVertex = s26;
  }
  equals(t21) {
    return t21 instanceof _s && (H(this.previousVertex, t21.previousVertex) && H(this.centerVertex, t21.centerVertex) && H(this.nextVertex, t21.nextVertex));
  }
};

// node_modules/@arcgis/core/views/interactive/snapping/SnappingVisualizer.js
var r15 = class {
  draw(r26, p22) {
    const h18 = a15(r26), f18 = this.sortUniqueHints(h18), u18 = [];
    for (const i25 of f18) i25 instanceof o11 && u18.push(this.visualizeIntersectionPoint(i25, p22)), i25 instanceof n13 && u18.push(this.visualizeLine(i25, p22)), i25 instanceof r14 && u18.push(this.visualizeParallelSign(i25, p22)), i25 instanceof s14 && u18.push(this.visualizeRightAngleQuad(i25, p22)), i25 instanceof n14 && u18.push(this.visualizePoint(i25, p22));
    return t(u18);
  }
  sortUniqueHints(i25) {
    return i25;
  }
};
function a15(i25) {
  const n38 = [];
  for (const t21 of i25) {
    let i26 = true;
    for (const s26 of n38) if (t21.equals(s26)) {
      i26 = false;
      break;
    }
    i26 && n38.push(t21);
  }
  return n38;
}

// node_modules/@arcgis/core/views/2d/interactive/SnappingVisualizer2D.js
var d14 = class extends r15 {
  constructor(e27) {
    super(), this._graphicsLayer = e27, this._symbolPairingsByType = /* @__PURE__ */ new Map();
  }
  visualizeIntersectionPoint(e27, t21) {
    return this._visualizeSnappingIndicator(new j2({ x: e27.intersectionPoint[0], y: e27.intersectionPoint[1], spatialReference: t21.spatialReference }), this._getOrCreateSymbol("intersectionPoint", t21.view.effectiveTheme.accentColor));
  }
  visualizePoint(e27, t21) {
    return this._visualizeSnappingIndicator(new j2({ x: e27.point[0], y: e27.point[1], spatialReference: t21.spatialReference }), this._getOrCreateSymbol("point", t21.view.effectiveTheme.accentColor));
  }
  visualizeLine(e27, t21) {
    return this._visualizeSnappingIndicator(new d5({ paths: [[[...e27.lineStart], [...e27.lineEnd]]], spatialReference: h(g2, t21.spatialReference) }), this._getOrCreateSymbol("line", t21.view.effectiveTheme.accentColor));
  }
  visualizeParallelSign(e27, t21) {
    return this._visualizeSnappingIndicator(new d5({ paths: [[[...e27.lineStart], [...e27.lineEnd]]], spatialReference: h(g2, t21.spatialReference) }), this._getOrCreateSymbol("parallelSign", t21.view.effectiveTheme.accentColor));
  }
  visualizeRightAngleQuad(e27, t21) {
    const r26 = n9(), s26 = n9(), m15 = n6();
    e9(r26, s12(e27.centerVertex), s12(e27.previousVertex)), e9(s26, s12(e27.nextVertex), s12(e27.previousVertex)), y4(m15, r26, s26);
    const p22 = `rightAngleQuad${m15[2] < 0 ? 45 : 225}`;
    return this._visualizeSnappingIndicator(new d5({ paths: [[[...e27.previousVertex], [...e27.centerVertex], [...e27.nextVertex]]], spatialReference: h(g2, t21.spatialReference) }), this._getOrCreateSymbol(p22, t21.view.effectiveTheme.accentColor));
  }
  _visualizeSnappingIndicator(r26, i25) {
    const o19 = new d8({ geometry: r26, symbol: i25 });
    return this._graphicsLayer.add(o19), e(() => {
      this._graphicsLayer.remove(o19);
    });
  }
  _getOrCreateSymbol(e27, t21) {
    var _a;
    const r26 = this._symbolPairingsByType;
    return ((_a = r26.get(e27)) == null ? void 0 : _a.color) !== t21 && r26.set(e27, { color: t21, symbol: M6(e27, t21) }), r26.get(e27).symbol;
  }
};
function M6(e27, t21) {
  const i25 = [...t21.toRgb(), 255 * t21.a];
  switch (e27) {
    case "point":
      return new y2({ outline: { width: 0.5, color: [0, 0, 0, 1] }, size: 10, color: t21 });
    case "intersectionPoint":
      return new y2({ outline: new d7({ width: 1.5, color: t21 }), size: 15, color: [0, 0, 0, 0] });
    case "line":
      return new d6({ data: { type: "CIMSymbolReference", symbol: { type: "CIMLineSymbol", symbolLayers: [{ type: "CIMSolidStroke", enable: true, capStyle: U.Butt, joinStyle: w3.Round, miterLimit: 10, width: e4(p8.lineHintWidthTarget), color: i25 }] } } });
    case "parallelSign":
      return new d6({ data: { type: "CIMSymbolReference", symbol: { type: "CIMLineSymbol", symbolLayers: [{ type: "CIMVectorMarker", enable: true, anchorPoint: { x: 0, y: -1, z: 0 }, anchorPointUnits: "Relative", size: 5, markerPlacement: { type: "CIMMarkerPlacementOnLine", placePerPart: true, angleToLine: true, relativeTo: "LineMiddle" }, frame: { xmin: -5, ymin: -1.5, xmax: 5, ymax: 1.5 }, markerGraphics: [{ type: "CIMMarkerGraphic", geometry: { rings: [[[7, 0], [-7, 0], [-7, 1.5], [7, 1.5]]] }, symbol: { type: "CIMPolygonSymbol", symbolLayers: [{ type: "CIMSolidFill", enable: true, color: i25 }] } }], scaleSymbolsProportionally: true, respectFrame: true }, { type: "CIMVectorMarker", enable: true, anchorPoint: { x: 0, y: 1, z: 0 }, anchorPointUnits: "Relative", size: 5, markerPlacement: { type: "CIMMarkerPlacementOnLine", placePerPart: true, angleToLine: true, relativeTo: "LineMiddle" }, frame: { xmin: -5, ymin: -1.5, xmax: 5, ymax: 1.5 }, markerGraphics: [{ type: "CIMMarkerGraphic", geometry: { rings: [[[7, 0], [-7, 0], [-7, -1.5], [7, -1.5]]] }, symbol: { type: "CIMPolygonSymbol", symbolLayers: [{ type: "CIMSolidFill", enable: true, color: i25 }] } }], scaleSymbolsProportionally: true, respectFrame: true }] } } });
    case "rightAngleQuad45":
    case "rightAngleQuad225": {
      const o19 = "rightAngleQuad45" === e27 ? 45 : 225;
      return new d6({ data: { type: "CIMSymbolReference", symbol: { type: "CIMLineSymbol", symbolLayers: [{ type: "CIMVectorMarker", enable: true, anchorPoint: { x: 0.5, y: 0.5, z: 0 }, anchorPointUnits: "Relative", size: e4(p8.rightAngleHintSize), rotation: o19, markerPlacement: { type: "CIMMarkerPlacementOnVertices", placePerPart: true, angleToLine: true, placeOnEndPoints: false }, frame: { xmin: -5, ymin: -5, xmax: 5, ymax: 5 }, markerGraphics: [{ type: "CIMMarkerGraphic", geometry: { paths: [[[5, -5], [-5, -5], [-5, 5], [5, 5], [5, -5]]] }, symbol: { type: "CIMLineSymbol", symbolLayers: [{ type: "CIMSolidStroke", enable: true, capStyle: "Butt", joinStyle: "Round", miterLimit: 10, width: e4(p8.rightAngleHintOutlineSize), color: i25 }, { type: "CIMSolidFill", enable: true, color: [...t21.toRgb(), 255 * t21.a * 0.4] }] } }], scaleSymbolsProportionally: true, respectFrame: true }] } } });
    }
  }
}

// node_modules/@arcgis/core/views/2d/interactive/editingTools/draw/symbols.js
var t5 = new d6({ data: { type: "CIMSymbolReference", symbol: { type: "CIMLineSymbol", symbolLayers: [{ type: "CIMSolidStroke", effects: [{ type: "CIMGeometricEffectDashes", dashTemplate: [3.75, 3.75], lineDashEnding: "HalfPattern", controlPointEnding: "NoConstraint" }], enable: true, capStyle: "Butt", joinStyle: "Round", miterLimit: 10, width: 1.6, color: [255, 255, 255, 255] }, { type: "CIMSolidStroke", enable: true, capStyle: "Butt", joinStyle: "Round", miterLimit: 10, width: 2, color: [0, 0, 0, 255] }] } } });
var l13 = new y2({ style: "circle", size: 6, color: [127, 127, 127, 1], outline: { color: [50, 50, 50], width: 1 } });
var i9 = new y2({ style: "circle", size: 6, color: [255, 127, 0, 1], outline: { color: [50, 50, 50], width: 1 } });

// node_modules/@arcgis/core/undoredo/OperationStatus.js
var e12;
!function(e27) {
  e27[e27.NeverApplied = 0] = "NeverApplied", e27[e27.Applied = 1] = "Applied", e27[e27.Undone = 2] = "Undone";
}(e12 || (e12 = {}));

// node_modules/@arcgis/core/undoredo/UndoRedoError.js
var r16;
!function(r26) {
  r26.UndoRedoUpdating = "UndoRedoUpdating", r26.UndoInvalidError = "UndoInvalidError", r26.RedoInvalidError = "RedoInvalidError", r26.ApplyInvalidError = "ApplyInvalidError";
}(r16 || (r16 = {}));
var o12 = { [r16.UndoRedoUpdating]: "Cannot perform operation whilst undo redo is updating", [r16.UndoInvalidError]: "There are no items to Undo", [r16.RedoInvalidError]: "There are no items to Redo", [r16.ApplyInvalidError]: "Cannot apply an item that is already applied" };
var d15 = class extends Error {
  constructor() {
    super(o12[r16.UndoRedoUpdating]), this.type = "undo-redo-updating-error";
  }
};
var n15 = class extends Error {
  constructor() {
    super(o12[r16.UndoInvalidError]), this.type = "undo-redo-undo-error";
  }
};
var e13 = class extends Error {
  constructor() {
    super(o12[r16.RedoInvalidError]), this.type = "undo-redo-redo-error";
  }
};
var t6 = class extends Error {
  constructor() {
    super(o12[r16.ApplyInvalidError]), this.type = "undo-redo-apply-error";
  }
};

// node_modules/@arcgis/core/undoredo/UndoableOperation.js
var a16;
!function(t21) {
  t21[t21.Apply = 0] = "Apply", t21[t21.Undo = 1] = "Undo", t21[t21.Redo = 2] = "Redo";
}(a16 || (a16 = {}));
var n16 = class extends b {
  constructor() {
    super(...arguments), this.name = "", this.tag = Symbol(), this.status = e12.NeverApplied;
  }
  get canUndo() {
    return this.status === e12.Applied;
  }
  get canRedo() {
    return this.status === e12.Undone;
  }
  async executeUndoRedoOperation(t21) {
    switch (t21) {
      case a16.Apply:
        if (this.status !== e12.NeverApplied) throw new t6();
        return await this.apply(), void (this.status = e12.Applied);
      case a16.Undo:
        if (this.status !== e12.Applied) throw new n15();
        return await this.undo(), void (this.status = e12.Undone);
      case a16.Redo:
        if (this.status !== e12.Undone) throw new n15();
        return await this.redo(), void (this.status = e12.Applied);
    }
  }
};
r([m()], n16.prototype, "name", void 0), r([m()], n16.prototype, "tag", void 0), n16 = r([a2("esri.undoredo.UndoableOperation")], n16);

// node_modules/@arcgis/core/UndoRedo.js
var u11 = class extends b {
  constructor() {
    super(...arguments), this._stack = new V(), this._stackPosition = -1, this._updatingHandles = new h5();
  }
  get updating() {
    return this._updatingHandles.updating;
  }
  get canUndo() {
    return this.hasUndo && !this.updating;
  }
  get hasUndo() {
    return this._stackPosition >= 0;
  }
  get canRedo() {
    return this.hasRedo && !this.updating;
  }
  get hasRedo() {
    return this._stackPosition < this._stack.length - 1;
  }
  _truncateForwardStack() {
    this._stack.splice(this._stackPosition + 1, this._stack.length - this._stackPosition).forEach((t21) => t21.destroy());
  }
  _drainStack() {
    this._stack.drain((t21) => t21.destroy()), this._stackPosition = -1;
  }
  async undo() {
    if (!this.hasUndo) throw new n15();
    if (this.updating) throw new d15();
    const t21 = this._stack.getItemAt(this._stackPosition);
    t21 && await this._updatingHandles.addPromise((async () => {
      await t21.executeUndoRedoOperation(a16.Undo), --this._stackPosition, t21.canRedo || this._truncateForwardStack();
    })());
  }
  async redo() {
    if (!this.hasRedo) throw new e13();
    if (this.updating) throw new d15();
    const t21 = this._stack.getItemAt(this._stackPosition + 1);
    if (!t21) throw new e13();
    await this._updatingHandles.addPromise((async () => {
      await t21.executeUndoRedoOperation(a16.Redo), ++this._stackPosition;
    })());
  }
  peekUndo() {
    if (this.canUndo) return this._stack.getItemAt(this._stackPosition);
  }
  peekRedo() {
    if (this.canRedo) return this._stack.getItemAt(this._stackPosition + 1);
  }
  async inject(t21) {
    if (this.updating) throw new d15();
    await this._updatingHandles.addPromise((async () => {
      t21.status === e12.NeverApplied && await t21.executeUndoRedoOperation(a16.Apply), t21.canUndo ? (this._stack.splice(this._stackPosition + 1, 0, t21), this._stackPosition++) : this._stackPosition > -1 && (this._stack.splice(0, this._stackPosition + 1).forEach((t22) => t22.destroy()), this._stackPosition = -1);
    })());
  }
  async add(t21) {
    if (this.updating) throw new d15();
    await this._updatingHandles.addPromise((async () => {
      t21.status === e12.NeverApplied && await t21.executeUndoRedoOperation(a16.Apply), this._stackPosition >= -1 && this._truncateForwardStack(), t21.canUndo ? (this._stack.push(t21), this._stackPosition = this._stack.length - 1) : this._drainStack();
    })());
  }
  async removeTagged(t21, s26 = false) {
    if (this.updating && !s26) return;
    await w(() => !this.updating);
    const a28 = new V();
    for (let i25 = 0; i25 < this._stack.length; i25++) {
      const s27 = this._stack.getItemAt(i25);
      s27 && (s27.tag === t21 ? (s27.destroy(), i25 === this._stackPosition && (this._stackPosition = a28.length - 1)) : a28.push(s27));
    }
    this._stack = a28, this._stackPosition > a28.length - 1 && (this._stackPosition = a28.length - 1);
  }
  async clear(t21 = false) {
    if (this.updating && !t21) throw new d15();
    await w(() => !this.updating), this._drainStack();
  }
};
r([m()], u11.prototype, "_stack", void 0), r([m()], u11.prototype, "_stackPosition", void 0), r([m()], u11.prototype, "updating", null), r([m({ readOnly: true })], u11.prototype, "canUndo", null), r([m({ readOnly: true })], u11.prototype, "hasUndo", null), r([m({ readOnly: true })], u11.prototype, "canRedo", null), r([m({ readOnly: true })], u11.prototype, "hasRedo", null), u11 = r([a2("esri.UndoRedo")], u11);

// node_modules/@arcgis/core/geometry/coordinateFormatter.js
function _9() {
  return r5();
}
function w7() {
  return _();
}
function E5(n38, e27) {
  const t21 = [];
  n38 = (n38 = (n38 = n38.replaceAll(/[\u00B0\u00BA]/g, "^")).replaceAll("′", "'")).replaceAll("″", '"');
  const o19 = R6(e27);
  return f3.dmsToGeog(o19, 1, [n38], t21) ? new j2(t21[0][0], t21[0][1], e27 || g2.WGS84) : null;
}
function g8(n38) {
  var _a, _b;
  return n38 && _9() ? o4(n38) ?? ((_a = E5(`0° 0' 0" N | ${n38}`)) == null ? void 0 : _a.longitude) ?? ((_b = E5(`0 | ${n38}`)) == null ? void 0 : _b.longitude) ?? null : null;
}
function m6(n38) {
  var _a, _b;
  return n38 && _9() ? o4(n38) ?? ((_a = E5(`${n38} | 0° 0' 0" E`)) == null ? void 0 : _a.latitude) ?? ((_b = E5(`${n38} | 0`)) == null ? void 0 : _b.latitude) ?? null : null;
}
function R6(e27) {
  let t21 = null;
  if (e27 || (e27 = g2.WGS84), e27.wkid) {
    if (t21 = p2.geogcs(e27.wkid), !t21) throw new s("coordinate-formatter:invalid-spatial-reference", "wkid is not valid");
  } else {
    if (!e27.wkt2 && !e27.wkt) throw new s("coordinate-formatter:invalid-spatial-reference", "wkid and wkt are missing");
    if (t21 = p2.fromString(s3.PE_TYPE_GEOGCS, e27.wkt2 || e27.wkt), !t21) throw new s("coordinate-formatter:invalid-spatial-reference", "wkt is not valid");
  }
  return t21;
}

// node_modules/@arcgis/core/views/draw/support/CreateOperationGeometry.js
var l15 = class {
  constructor() {
    this.committedVertices = null, this.cursorVertex = null, this.full = null, this.outline = null, this.cursorEdge = null, this.circle = null, this.rectangle = null;
  }
};

// node_modules/@arcgis/core/geometry/Circle.js
var f9;
var g9 = f9 = class extends v2 {
  constructor(e27) {
    super(e27), this.center = null, this.geodesic = false, this.numberOfPoints = 60, this.radius = 1e3, this.radiusUnit = "meters";
  }
  initialize() {
    const e27 = this.center, o19 = this.numberOfPoints;
    if (this.hasZ = (e27 == null ? void 0 : e27.hasZ) ?? false, 0 !== this.rings.length || !e27) return;
    const c18 = I(this.radius, this.radiusUnit, "meters"), n38 = e27.spatialReference;
    let p22, l23 = "geographic";
    if (n38.isWebMercator ? l23 = "webMercator" : (null != (n38.wkid && r6[n38.wkid]) || (n38.wkt2 || n38.wkt) && ie(n38.wkt2 || n38.wkt)) && (l23 = "projected"), this.geodesic) {
      let r26;
      switch (l23) {
        case "webMercator":
          r26 = j(e27);
          break;
        case "projected":
          console.error("Creating a geodesic circle requires the center to be specified in web mercator or geographic coordinate system");
          break;
        case "geographic":
          r26 = e27;
      }
      p22 = this._createGeodesicCircle(r26, c18, o19), "webMercator" === l23 && (p22 = R(p22));
    } else {
      let r26;
      "webMercator" === l23 || "projected" === l23 ? r26 = c18 / Q(e27.spatialReference) : "geographic" === l23 && (r26 = L2(c18, "meters", s5(e27.spatialReference).radius)), p22 = this._createPlanarCircle(e27, r26, o19);
    }
    this.spatialReference = p22.spatialReference, this.addRing(p22.rings[0]);
  }
  clone() {
    const { center: e27, numberOfPoints: r26, radius: t21, radiusUnit: s26, geodesic: i25 } = this;
    return new f9({ center: e27 == null ? void 0 : e27.clone(), numberOfPoints: r26, radius: t21, radiusUnit: s26, geodesic: i25 });
  }
  _createGeodesicCircle(e27, r26, t21) {
    let s26 = 0;
    const i25 = [];
    for (; s26 < 360; ) {
      const o19 = [0, 0], c18 = [e27.x, e27.y];
      j10(o19, c18, s26, r26, g2.WGS84), this.hasZ && o19.push(e27.z), i25.push(o19), s26 += 360 / t21;
    }
    return i25.push(i25[0]), new v2({ rings: [i25] });
  }
  _createPlanarCircle(e27, r26, t21) {
    const s26 = [], i25 = 2 * Math.PI / t21;
    for (let o19 = 0; o19 < t21; ++o19) {
      const t22 = i25 * o19, c18 = [e27.x + Math.cos(-t22) * r26, e27.y + Math.sin(-t22) * r26];
      this.hasZ && c18.push(e27.z), s26.push(c18);
    }
    return s26.push(s26[0]), new v2({ spatialReference: e27.spatialReference, rings: [s26] });
  }
};
r([m({ type: j2 })], g9.prototype, "center", void 0), r([m()], g9.prototype, "geodesic", void 0), r([m()], g9.prototype, "numberOfPoints", void 0), r([m()], g9.prototype, "radius", void 0), r([m()], g9.prototype, "radiusUnit", void 0), g9 = f9 = r([a2("esri.geometry.Circle")], g9);
var b7 = g9;

// node_modules/@arcgis/core/views/draw/support/surfaceCoordinateSystems.js
function w8(t21, r26, e27 = null) {
  return null != e27 ? [t21, r26, e27] : [t21, r26];
}
function g10(t21, r26, e27 = null) {
  return null != e27 ? { x: t21, y: r26, z: e27 } : { x: t21, y: r26 };
}
var R7 = class {
  constructor(t21) {
    this.spatialReference = t21;
  }
  mapToLocalMultiple(r26) {
    return r26.map((t21) => this.mapToLocal(t21)).filter(F);
  }
  get doUnnormalization() {
    return false;
  }
};
var W3 = class extends R7 {
  constructor(t21, a28, o19 = null) {
    super(a28), this._defaultZ = o19, this.transform = e11(), this.transformInv = e11(), this.transform = r13(t21), u10(this.transformInv, this.transform);
  }
  makeMapPoint(t21, r26) {
    return w8(t21, r26, this._defaultZ);
  }
  mapToLocal(t21) {
    return g10(this.transform[0] * t21[0] + this.transform[2] * t21[1] + this.transform[4], this.transform[1] * t21[0] + this.transform[3] * t21[1] + this.transform[5]);
  }
  localToMap(t21) {
    return w8(this.transformInv[0] * t21.x + this.transformInv[2] * t21.y + this.transformInv[4], this.transformInv[1] * t21.x + this.transformInv[3] * t21.y + this.transformInv[5], this._defaultZ);
  }
};
var v8 = class extends R7 {
  constructor(t21, r26) {
    super(t21.spatialReference), this.view = t21, this.defaultZ = null, this.pWS = n6(), this.tangentFrameUpWS = n6(), this.tangentFrameRightWS = n6(), this.tangentFrameForwardWS = n6(), this.localFrameRightWS = n6(), this.localFrameUpWS = n6(), this.worldToLocalTransform = e6(), this.localToWorldTransform = e6(), this.scale = 1, this.scale = t21.resolution, this.referenceMapPoint = r26, this.defaultZ = r26.hasZ ? r26.z : null;
    const e27 = t21.state.camera.viewRight;
    this.view.renderCoordsHelper.toRenderCoords(this.referenceMapPoint, this.pWS), this.view.renderCoordsHelper.worldBasisAtPosition(this.pWS, n4.X, this.tangentFrameRightWS), this.view.renderCoordsHelper.worldBasisAtPosition(this.pWS, n4.Y, this.tangentFrameUpWS), this.view.renderCoordsHelper.worldBasisAtPosition(this.pWS, n4.Z, this.tangentFrameForwardWS);
    const s26 = n6();
    g4(s26, this.tangentFrameForwardWS, P3(e27, this.tangentFrameForwardWS)), c3(this.localFrameRightWS, e27, s26), A5(this.localFrameRightWS, this.localFrameRightWS), _4(this.localFrameUpWS, this.tangentFrameForwardWS, this.localFrameRightWS), R4(this.worldToLocalTransform, this.localFrameRightWS, this.tangentFrameRightWS), L4(this.localToWorldTransform, this.worldToLocalTransform);
  }
  get doUnnormalization() {
    return "global" === this.view.viewingMode;
  }
  makeMapPoint(t21, r26) {
    return w8(t21, r26, this.defaultZ);
  }
  mapToLocal(t21) {
    const r26 = n6();
    this.view.renderCoordsHelper.toRenderCoords(new j2({ x: t21[0], y: t21[1], spatialReference: this.spatialReference }), r26), Q2(r26, r26, this.worldToLocalTransform);
    const e27 = this.view.renderCoordsHelper.fromRenderCoords(r26, new j2({ spatialReference: this.view.spatialReference }));
    return null != e27 ? g10(e27.x / this.scale, e27.y / this.scale) : null;
  }
  localToMap(t21) {
    const r26 = n6();
    this.view.renderCoordsHelper.toRenderCoords(new j2({ x: t21.x * this.scale, y: t21.y * this.scale, spatialReference: this.spatialReference }), r26), Q2(r26, r26, this.localToWorldTransform);
    const e27 = this.view.renderCoordsHelper.fromRenderCoords(r26, new j2({ spatialReference: this.view.spatialReference }));
    return null != e27 ? w8(e27.x, e27.y, this.defaultZ) : null;
  }
};
function F4(t21, r26) {
  if ("2d" === t21.type) return new W3(t21.state.transform, t21.spatialReference, r26.length > 2 ? r26[2] : null);
  if ("3d" === t21.type) {
    const e27 = r26.length > 2 ? new j2({ x: r26[0], y: r26[1], z: r26[2], spatialReference: t21.spatialReference }) : new j2({ x: r26[0], y: r26[1], spatialReference: t21.spatialReference });
    return new v8(t21, e27);
  }
  return null;
}

// node_modules/@arcgis/core/views/draw/support/createUtils.js
function g11(t21, e27) {
  const o19 = new j2({ x: t21[0], y: t21[1], spatialReference: e27 });
  return t21.length > 2 && (o19.z = t21[2]), o19;
}
function d16(t21, e27) {
  return new u3({ points: t21, spatialReference: e27 });
}
function R8(t21, e27, o19) {
  const n38 = new d5({ paths: t21, spatialReference: e27 });
  return o19 && M(n38), n38;
}
function j11(e27, n38, r26, a28 = true) {
  const l23 = a(e27);
  l23.forEach((e28) => {
    const o19 = e28[0], n39 = e28[e28.length - 1];
    c(o19, n39) && 1 !== e28.length || e28.push(e28[0]);
  });
  let i25 = new v2({ rings: l23, spatialReference: n38 });
  return i25.rings.forEach((t21) => {
    a3(t21) || t21.reverse();
  }), r26 && M(i25), a28 && i25.isSelfIntersecting && g(n38) && (i25 = y5(i25)), i25;
}
function T2(t21, o19, n38) {
  const r26 = o19.mapToLocalMultiple(t21), a28 = [], l23 = { x: r26[0].x, y: r26[0].y }, s26 = { x: r26[1].x, y: r26[1].y }, i25 = Math.round(s26.x - l23.x), c18 = Math.round(s26.y - l23.y), y21 = Math.max(Math.abs(i25), Math.abs(c18));
  if (n38) {
    const t22 = { x: l23.x + y21, y: l23.y + y21 }, e27 = { x: l23.x - y21, y: l23.y - y21 };
    a28.push(g10(t22.x, e27.y), g10(e27.x, e27.y), g10(e27.x, t22.y), g10(t22.x, t22.y));
  } else {
    const t22 = { x: i25 > 0 ? l23.x + y21 : l23.x - y21, y: c18 > 0 ? l23.y + y21 : l23.y - y21 };
    a28.push(g10(l23.x, l23.y), g10(t22.x, l23.y), g10(t22.x, t22.y), g10(l23.x, t22.y));
  }
  return U4(j11([a28.map((t22) => o19.localToMap(t22)).filter(F)], o19.spatialReference, o19.doUnnormalization, true), a28, o19);
}
function b8(t21, o19, n38) {
  let r26 = o19.mapToLocalMultiple(t21);
  if (1 === r26.length) {
    const t22 = 48, e27 = r26[0];
    r26 = [g10(e27.x - t22, e27.y + t22), g10(e27.x + t22, e27.y - t22), g10(e27.x + t22, e27.y - t22), g10(e27.x - t22, e27.y + t22)];
  }
  const a28 = [], l23 = { x: r26[0].x, y: r26[0].y }, s26 = { x: r26[1].x, y: r26[1].y };
  if (n38) {
    const t22 = Math.round(s26.x - l23.x), e27 = Math.round(s26.y - l23.y);
    a28.push(g10(l23.x - t22, l23.y - e27), g10(s26.x, l23.y - e27), g10(s26.x, s26.y), g10(l23.x - t22, s26.y));
  } else a28.push(g10(l23.x, l23.y), g10(s26.x, l23.y), g10(s26.x, s26.y), g10(l23.x, s26.y));
  return U4(j11([a28.map((t22) => o19.localToMap(t22)).filter(F)], o19.spatialReference, o19.doUnnormalization, true), a28, o19);
}
function U4(t21, e27, o19) {
  const n38 = P4(e27[3], e27[2], o19), r26 = P4(e27[1], e27[2], o19), a28 = P4(e27[0], e27[1], o19), l23 = P4(e27[0], e27[3], o19);
  return { geometry: t21, midpoints: null != n38 && null != r26 && null != a28 && null != l23 ? { top: n38, right: r26, bottom: a28, left: l23 } : null };
}
function P4(t21, e27, o19) {
  w9[0] = t21.x, w9[1] = t21.y, w9[2] = 0, I6[0] = e27.x, I6[1] = e27.y, I6[2] = 0, I2(w9, w9, I6, 0.5), z4.x = w9[0], z4.y = I6[1], z4.z = I6[2];
  const n38 = o19.localToMap(z4);
  return null != n38 ? g11(n38, o19.spatialReference) : null;
}
var z4 = g10(0, 0, 0);
var w9 = n6();
var I6 = n6();
function L6(t21, e27, o19, r26) {
  const a28 = e27.mapToLocalMultiple(t21);
  let s26 = null, c18 = null;
  if (o19) s26 = a28[0], c18 = a28[1];
  else {
    const t22 = a28[0], e28 = a28[1], o20 = Math.round(e28.x - t22.x), n38 = Math.round(e28.y - t22.y), r27 = Math.max(Math.abs(o20), Math.abs(n38));
    s26 = g10(o20 > 0 ? t22.x + r27 / 2 : t22.x - r27 / 2, n38 > 0 ? t22.y + r27 / 2 : t22.y - r27 / 2), c18 = g10(Math.abs(o20) > Math.abs(n38) ? s26.x - r27 / 2 : s26.x, Math.abs(o20) > Math.abs(n38) ? s26.y : s26.y - r27 / 2);
  }
  const y21 = e27.localToMap(s26), f18 = e27.localToMap(c18);
  if (null == y21 || null == f18) return null;
  e27.doUnnormalization && z2([[y21, f18]], e27.spatialReference);
  const x15 = g11(y21, e27.spatialReference), h18 = g11(f18, e27.spatialReference), M15 = z(e27.spatialReference);
  let d28 = 0;
  if (g(e27.spatialReference)) d28 = M15 * a11(x15, h18, null);
  else {
    const t22 = s26.x - c18.x, e28 = s26.y - c18.y;
    d28 = M15 * Math.sqrt(t22 * t22 + e28 * e28) * (r26 || 1);
  }
  const R19 = new b7({ center: x15, radius: d28, radiusUnit: "meters", spatialReference: e27.spatialReference });
  return { geometry: j11(R19.rings, R19.spatialReference, false), center: x15, edge: h18 };
}
function v9(t21, o19, n38) {
  const r26 = o19.mapToLocalMultiple(t21), a28 = r26[0], l23 = r26[1], s26 = Math.round(l23.x - a28.x), i25 = Math.round(l23.y - a28.y), c18 = g10(n38 ? a28.x : a28.x + s26 / 2, n38 ? a28.y : a28.y + i25 / 2), y21 = n38 ? s26 : s26 / 2, p22 = n38 ? i25 : i25 / 2, u18 = 60, f18 = [], x15 = 2 * Math.PI / u18;
  function h18(t22) {
    const e27 = Math.cos(t22), o20 = Math.sin(t22);
    return g10(y21 * e27 + c18.x, p22 * o20 + c18.y);
  }
  for (let e27 = 0; e27 < u18; e27++) f18.push(h18(e27 * x15));
  f18.push(f18[0]);
  const { spatialReference: M15, doUnnormalization: d28 } = o19, R19 = j11([f18.map((t22) => o19.localToMap(t22)).filter(F)], M15, d28, false), T10 = o19.localToMap(h18(Math.PI / 2)), b20 = o19.localToMap(h18(0)), U14 = o19.localToMap(h18(-Math.PI / 2)), P13 = o19.localToMap(h18(Math.PI));
  return { geometry: R19, midpoints: null != T10 && null != b20 && null != U14 && null != P13 ? { top: g11(T10, M15), right: g11(b20, M15), bottom: g11(U14, M15), left: g11(P13, M15) } : null };
}

// node_modules/@arcgis/core/views/draw/support/helpMessageUtils.js
function e14(e27, l23) {
  switch (e27) {
    case "point":
    case "multipoint":
      return n18();
    case "polyline":
      return t7(l23);
    case "polygon":
      return o13(l23);
    default:
      return;
  }
}
function n18(e27) {
  return "point";
}
function t7(e27) {
  return (null != e27 && "polyline" === e27.type && e27.paths.length ? e27.paths[0].length : 0) < 2 ? "polylineZeroVertices" : "polylineOneVertex";
}
function o13(e27) {
  const n38 = null != e27 && "polygon" === e27.type && e27.rings.length ? e27.rings[0].length : 0;
  return n38 < 3 ? "polylineZeroVertices" : n38 < 4 ? "polygonOneVertex" : "polygonTwoVertices";
}

// node_modules/@arcgis/core/views/draw/support/helpMessageUtils3d.js
function i10(o19, i25) {
  const l23 = o19 == null ? void 0 : o19.geometry;
  if (!o19 || "mesh" !== (l23 == null ? void 0 : l23.type) || !i25) return;
  const { renderCoordsHelper: p22, elevationProvider: u18 } = i25, { camera: h18 } = i25.state, { extent: d28 } = l23, { center: x15, spatialReference: g22 } = d28, v15 = z(g22), j24 = W(g22), z14 = z(p22.spatialReference), y21 = d28.width * v15, C14 = d28.height * j24, R19 = (d28.zmax ?? 0) * j24, U14 = R19 - (d28.zmin ?? 0) * j24, b20 = Math.max(y21, C14, U14) / z14, { x: w19, y: P13 } = x15, S13 = x15.z ?? 0;
  o5(f10, w19, P13, S13), p22.toRenderCoords(f10, g22, f10);
  const T10 = b20 / h18.computeScreenPixelSizeAt(f10);
  if (T10 > h18.width * a17) return "meshTooClose";
  if (T10 < m7) return "meshTooFar";
  const k14 = a10(o19), { absoluteZ: A16 } = b3(w19, P13, R19, g22, i25, k14);
  return A16 < (u18.getElevation(w19, P13, S13, g22, "ground") ?? 0) * j24 + U14 * c6 ? "meshUnderground" : "mesh";
}
var m7 = 20;
var a17 = 1;
var c6 = 0.1;
var f10 = n6();

// node_modules/@arcgis/core/views/support/geometry2dUtils.js
function m8(t21, n38) {
  return t21[0] * n38[1] - t21[1] * n38[0];
}
function b9(t21, n38) {
  const r26 = t21.start, e27 = t21.end, s26 = n38.start, c18 = n38.end, i25 = e9(x5, e27, r26), f18 = e9(M7, c18, s26), a28 = m8(i25, f18);
  if (Math.abs(a28) <= v10) return [];
  const p22 = e9(g12, r26, s26), h18 = m8(f18, p22) / a28, E15 = m8(i25, p22) / a28;
  if (h18 >= 0) {
    if (E15 >= 0 || n38.type === j12.LINE) return [d10(A6, r26, i25, h18)];
  } else if (t21.type === j12.LINE && (E15 >= 0 || n38.type === j12.LINE)) return [d10(A6, r26, i25, h18)];
  return [];
}
function d17(t21, n38, s26) {
  const c18 = [], i25 = e9(x5, t21.end, t21.start), f18 = e9(M7, t21.start, n38), a28 = p5(i25), p22 = 2 * j6(i25, f18), m15 = p22 * p22 - 4 * a28 * (p5(f18) - s26 * s26);
  if (0 === m15) {
    const n39 = -p22 / (2 * a28);
    (t21.type === j12.LINE || n39 >= 0) && c18.push(d10(A6, t21.start, i25, n39));
  } else if (m15 > 0) {
    const n39 = Math.sqrt(m15), r26 = (-p22 + n39) / (2 * a28);
    (t21.type === j12.LINE || r26 >= 0) && c18.push(d10(A6, t21.start, i25, r26));
    const e27 = (-p22 - n39) / (2 * a28);
    (t21.type === j12.LINE || e27 >= 0) && c18.push(d10(g12, t21.start, i25, e27));
  }
  return c18;
}
var j12;
!function(t21) {
  t21[t21.RAY = 0] = "RAY", t21[t21.LINE = 1] = "LINE";
}(j12 || (j12 = {}));
var v10 = 1e-6;
var x5 = n9();
var M7 = n9();
var g12 = n9();
var A6 = n9();

// node_modules/@arcgis/core/views/support/geometry3dUtils.js
function U5({ start: t21, end: o19, type: c18 }, i25, u18) {
  const a28 = [], f18 = e9(et, o19, t21), m15 = e9(ot, t21, i25), L13 = p5(f18), h18 = 2 * j6(f18, m15), A16 = h18 * h18 - 4 * L13 * (p5(m15) - u18 * u18);
  if (0 === A16) {
    const n38 = -h18 / (2 * L13);
    (c18 === rt.PLANE || n38 >= 0) && a28.push(d10(n9(), t21, f18, n38));
  } else if (A16 > 0) {
    const n38 = Math.sqrt(A16), r26 = (-h18 + n38) / (2 * L13);
    (c18 === rt.PLANE || r26 >= 0) && a28.push(d10(n9(), t21, f18, r26));
    const s26 = (-h18 - n38) / (2 * L13);
    (c18 === rt.PLANE || s26 >= 0) && a28.push(d10(n9(), t21, f18, s26));
  }
  return a28;
}
function k4(t21, r26) {
  const e27 = t21.start, c18 = t21.end, i25 = e9(et, c18, e27), u18 = o5(it, -i25[1], i25[0], 0), a28 = r26.start, f18 = r26.end, p22 = R3(ut, f18, a28), m15 = P3(p22, u18), L13 = o5(at, e27[0], e27[1], 0), E15 = R3(ft, L13, a28), N11 = P3(E15, u18), y21 = e5();
  if (Math.abs(m15) < y21) return Math.abs(N11), [];
  const P13 = q(pt, a28, p22, N11 / m15);
  if (r26.type === j12.RAY) {
    const t22 = R3(mt, P13, a28);
    if (P3(t22, p22) < -y21) return [];
  }
  if (t21.type === rt.HALF_PLANE) {
    const t22 = B2(ot, P13, e27);
    if (j6(t22, i25) < -y21) return [];
  }
  return [t2(P13)];
}
function w10(t21, n38) {
  return T3(X(ht, n38[2], t21), n38);
}
function z5(t21, n38) {
  const r26 = 0;
  return S3(X(ht, r26, t21), X(At, r26, n38)).map(([t22, n39]) => r11(t22, n39));
}
function C5(t21, n38, r26) {
  return J5(t21, X(ht, t21[2], n38), r26);
}
function B4(t21, r26, s26, o19 = n6()) {
  const i25 = e9(et, t21, r26), u18 = q3(i25);
  return d10(o19, r26, i25, 0 === u18 ? 1 : s26 / u18), o19[2] = t21[2], o19;
}
function J5(t21, { start: n38, end: r26, type: s26 }, e27 = n6()) {
  const o19 = R3(ct, t21, n38), c18 = R3(it, r26, n38), i25 = P3(o19, c18) / P3(c18, c18);
  return q(e27, n38, c18, s26 === j12.RAY ? Math.max(i25, 0) : i25);
}
var O4 = (() => {
  const t21 = n6(), n38 = n6(), r26 = n6();
  return ({ start: s26, end: e27 }, { center: o19, radius: c18, normal: i25, slicePlane: u18 }) => {
    const a28 = l6(o19, i25, Lt);
    if ($3(Q3(a28, s26), 0) && $3(Q3(a28, e27), 0)) {
      q2(i25, t21, n38);
      const a29 = (s27, e28) => (c3(r26, e28, o19), o6(s27, P3(r26, t21), P3(r26, n38)), s27), p23 = d17({ start: a29(et, s26), end: a29(ot, e27), type: j12.LINE }, a8, c18), m15 = [];
      for (const [r27, s27] of p23) {
        const e28 = s8(n6(), o19);
        q(e28, e28, t21, r27), q(e28, e28, n38, s27), u18 && !nt(u18, e28) || m15.push(e28);
      }
      return m15;
    }
    const p22 = n6();
    return k2(a28, s26, e27, p22) ? !$3(p3(p22, o19), c18) || u18 && !nt(u18, p22) ? [] : [p22] : [];
  };
})();
function Q4({ start: t21, end: e27, type: o19 }, c18, i25) {
  const u18 = [], a28 = c3(ct, e27, t21), f18 = e9(ot, t21, c18), p22 = p5(a28), m15 = 2 * j6(a28, f18), L13 = m15 * m15 - 4 * p22 * (p5(f18) - i25 * i25);
  if (0 === L13) {
    const n38 = -m15 / (2 * p22);
    (o19 === j12.LINE || n38 >= 0) && u18.push(q(n6(), t21, a28, n38));
  } else if (L13 > 0) {
    const n38 = Math.sqrt(L13), r26 = (-m15 + n38) / (2 * p22);
    (o19 === j12.LINE || r26 >= 0) && u18.push(q(n6(), t21, a28, r26));
    const s26 = (-m15 - n38) / (2 * p22);
    (o19 === j12.LINE || s26 >= 0) && u18.push(q(n6(), t21, a28, s26));
  }
  return u18;
}
function S3(t21, n38) {
  const r26 = t21.start, s26 = t21.end, e27 = n38.start, o19 = n38.end, c18 = R3(ct, s26, r26), i25 = R3(it, o19, e27), u18 = R3(ut, e27, r26), a28 = _4(at, c18, i25);
  if (!$3(P3(u18, a28), 0)) return [];
  const f18 = Z(a28);
  if ($3(f18, 0)) return [];
  const p22 = _4(ft, u18, i25), m15 = P3(p22, a28) / f18, L13 = q(pt, r26, c18, m15);
  if (t21.type === j12.RAY) {
    const t22 = R3(mt, L13, r26);
    if (P3(c18, t22) < -e5()) return [];
  }
  if (n38.type === j12.RAY) {
    const t22 = R3(mt, L13, e27);
    if (P3(i25, t22) < -e5()) return [];
  }
  return [t2(L13)];
}
function T3({ start: t21, end: n38, type: r26 }, s26) {
  const e27 = R3(ct, s26, t21), o19 = R3(it, n38, t21), c18 = _4(ut, o19, e27), i25 = Z(c18) / Z(o19), u18 = e5();
  if (i25 < u18) switch (r26) {
    case j12.LINE:
      return [t2(s26)];
    case j12.RAY:
      return P3(o19, e27) < -u18 ? [] : [t2(s26)];
  }
  return [];
}
function W4(t21, n38, r26, s26) {
  const [e27, o19] = t21, [c18, i25] = r26, u18 = c18 - e27, f18 = i25 - o19, p22 = u18 * u18 + f18 * f18, L13 = Math.sqrt(p22);
  if (L13 > n38 + s26) return [];
  if (L13 < Math.abs(n38 - s26)) return [];
  if ($3(L13, 0) && $3(n38, s26)) return [];
  const h18 = (n38 * n38 - s26 * s26 + p22) / (2 * L13), A16 = Math.sqrt(n38 * n38 - h18 * h18), d28 = A16 * f18 / L13, l23 = A16 * u18 / L13, [E15, N11] = _6(et, t21, r26, h18 / L13);
  return $3(d28, l23) ? [r11(E15, N11)] : [r11(E15 + d28, N11 - l23), r11(E15 - d28, N11 + l23)];
}
function X(t21, n38, { start: r26, end: s26, type: e27 }) {
  return o5(t21.start, r26[0], r26[1], n38), o5(t21.end, s26[0], s26[1], n38), t21.type = st[e27], t21;
}
function Z3(t21, n38) {
  return $3(t21[2], n38[2]);
}
function $3(n38, r26) {
  return m2(Math.abs(n38 - r26), 0, e5());
}
function tt(t21, n38) {
  return n38.filter((n39) => nt(t21, n39));
}
function nt(t21, n38) {
  return z3(t21, n38);
}
var rt;
!function(t21) {
  t21[t21.PLANE = 0] = "PLANE", t21[t21.HALF_PLANE = 1] = "HALF_PLANE";
}(rt || (rt = {}));
var st = { [rt.PLANE]: j12.LINE, [rt.HALF_PLANE]: j12.RAY };
var et = n9();
var ot = n9();
var ct = n6();
var it = n6();
var ut = n6();
var at = n6();
var ft = n6();
var pt = n6();
var mt = n6();
var Lt = M3();
var ht = { start: n6(), end: n6(), type: j12.LINE };
var At = { start: n6(), end: n6(), type: j12.LINE };

// node_modules/@arcgis/core/views/interactive/sketch/constraints.js
var mt2 = class {
  intersect(t21) {
    return Ft(this, t21);
  }
  closestPoints(t21) {
    return [this.closestTo(t21)];
  }
};
var gt = class extends mt2 {
  constructor(t21) {
    super(), this.point = t21;
  }
  equals(t21) {
    return this === t21 || Le(t21) && H(this.point, t21.point);
  }
  closestTo() {
    return v7(this.point);
  }
};
var _t = class extends mt2 {
  constructor(t21, e27, s26) {
    super(), this.start = t21, this.end = e27, this.lineLike = { start: t21, end: e27, type: s26 };
  }
  equals(t21) {
    return this === t21 || ke(t21) && this.lineLike.type === t21.lineLike.type && H(this.start, t21.start) && H(this.end, t21.end);
  }
  closestTo(t21) {
    const e27 = c5();
    return J5(t21, this.lineLike, e27), e27;
  }
};
var Lt2 = class extends _t {
  constructor(t21, e27) {
    super(t21, e27, j12.LINE);
  }
};
var kt = class extends _t {
  constructor(t21, e27) {
    super(t21, e27, j12.RAY);
  }
};
var xt = class extends mt2 {
  constructor(t21) {
    super(), this.constraints = t21;
  }
  equals(t21) {
    return this === t21 || _e(t21) && c(this.constraints, t21.constraints, (t22, e27) => t22.equals(e27));
  }
  closestTo(t21) {
    let e27, s26 = 1 / 0;
    for (const r26 of this.constraints) {
      const n38 = r26.closestTo(t21), i25 = v3(t21, n38);
      i25 < s26 && (s26 = i25, e27 = n38);
    }
    return v7(e27 ?? t21);
  }
  closestPoints(t21) {
    return this.constraints.flatMap((e27) => e27 === this ? [] : e27.closestPoints(t21));
  }
};
var yt = class extends mt2 {
  constructor(t21, e27) {
    super(), this.center = t21, this.radius = e27;
  }
  equals(t21) {
    return this === t21 || Pe(t21) && this.center[0] === t21.center[0] && this.center[1] === t21.center[1] && this.radius === t21.radius;
  }
  closestTo(t21) {
    const e27 = c5();
    return B4(t21, this.center, this.radius, e27), e27;
  }
};
var Pt = class extends mt2 {
  constructor(t21, e27) {
    super(), this.center = t21, this.radius = e27;
  }
  equals(t21) {
    return this === t21 || ze(t21) && H(this.center, t21.center) && this.radius === t21.radius;
  }
  closestTo(t21) {
    const e27 = c5();
    return B4(t21, this.center, this.radius, e27), e27[2] = this.center[2], e27;
  }
  asCircle() {
    return new zt(v7(this.center), this.radius, d13(0, 0, 1));
  }
};
var zt = class extends mt2 {
  constructor(t21, e27, s26, r26 = void 0) {
    super(), this.center = t21, this.radius = e27, this.normal = s26, this.slicePlane = r26;
  }
  equals(t21) {
    return this === t21 || Me(t21) && H(this.center, t21.center) && H(this.normal, t21.normal) && this.radius === t21.radius;
  }
  closestTo(t21) {
    const { center: e27, radius: s26 } = this;
    H2(this.getPlane(Tt), t21, Mt);
    const r26 = R3(Mt, Mt, e27), n38 = j5(r26);
    if ($3(n38, 0)) return v7(t21);
    const i25 = s26 / Math.sqrt(n38), o19 = c5();
    q(o19, e27, r26, i25);
    const { slicePlane: c18 } = this;
    if (c18 && !nt(c18, o19)) {
      const e28 = Jt(c18, this);
      return (e28 == null ? void 0 : e28.closestTo(t21)) ?? v7(t21);
    }
    return o19;
  }
  getPlane(t21 = M3()) {
    return l6(this.center, this.normal, t21);
  }
};
var Mt = n6();
var Tt = M3();
var qt = class extends mt2 {
  constructor(t21) {
    super(), this.z = t21;
  }
  equals(t21) {
    return this === t21 || xe(t21) && this.z === t21.z;
  }
  closestTo(t21) {
    return d13(t21[0], t21[1], this.z);
  }
  getPlane(t21 = M3()) {
    return o5(wt, 0, 0, this.z), l6(wt, N2, t21);
  }
};
var wt = n6();
var jt = class extends mt2 {
  constructor(t21, e27, s26) {
    super(), this.start = t21, this.end = e27, this.planeLike = { start: s12(t21), end: s12(e27), type: s26 };
  }
  equals(t21) {
    return this === t21 || ye(t21) && this.planeLike.type === t21.planeLike.type && H(this.start, t21.start) && H(this.end, t21.end);
  }
  closestTo(t21) {
    const e27 = c5();
    return C5(t21, this.planeLike, e27), e27;
  }
  closestEndTo(t21) {
    const { start: e27, end: s26 } = this.planeLike;
    return Math.sign(j6(e9(vt, s26, e27), e9(At2, s12(t21), e27))) > 0 ? this.end : this.start;
  }
  getPlane(t21 = M3()) {
    const e27 = s8(Dt, this.end);
    return e27[2] += 1, p4(this.start, this.end, e27, t21);
  }
  getSlicePlane(t21 = M3()) {
    const { start: e27, end: s26, type: r26 } = this.planeLike;
    if (r26 === rt.PLANE) return;
    const n38 = o5(Dt, e27[0], e27[1], 0), i25 = o5(bt, s26[0], s26[1], 0), o19 = c3(bt, i25, n38);
    return l6(n38, o19, t21), t21;
  }
};
var vt = n9();
var At2 = n9();
var Dt = n6();
var bt = n6();
var Et = class extends jt {
  constructor(t21, e27) {
    super(t21, e27, rt.HALF_PLANE);
  }
};
var Nt = class extends mt2 {
  constructor(t21, e27) {
    super(), this.sphere = O3(t21, e27);
  }
  equals(t21) {
    return this === t21 || Te(t21) && _7(this.sphere, t21.sphere);
  }
  closestTo(t21) {
    const e27 = c5();
    return $(this.sphere, t21, e27), e27;
  }
  get center() {
    return U2(this.sphere);
  }
  get radius() {
    return this.sphere[3];
  }
};
var Ut = class extends mt2 {
  constructor(t21, e27, s26) {
    super(), this.start = t21, this.end = e27, this.getZ = s26, this.planeLike = { start: s12(t21), end: s12(e27), type: rt.PLANE };
  }
  equals(t21) {
    return this === t21 || qe(t21) && H(this.start, t21.start) && H(this.end, t21.end) && this.getZ === t21.getZ;
  }
  closestTo(t21) {
    return Ht(this, t21);
  }
  addIfOnTheGround(t21, e27) {
    for (const s26 of e27) {
      const e28 = this.getZ(s26[0], s26[1]) ?? 0;
      $3(s26[2], e28) && (s26[2] = e28, t21.push(s26));
    }
  }
};
var Zt = class extends mt2 {
  constructor(t21, e27, s26) {
    super(), this._x = t21, this._y = e27, this._z = s26;
  }
  equals(t21) {
    return this === t21 || je(t21) && this._x === t21._x && this._y === t21._y && this._z === t21._z;
  }
  closestTo([t21, e27, s26]) {
    return f8(this._x ?? t21, this._y ?? e27, this._z ?? s26);
  }
};
var It = class extends mt2 {
  constructor(t21, e27, s26, r26, n38) {
    super(), this._origin = t21, this._spatialReference = e27, this._distanceMeters = s26, this._z = r26, this._directionDegrees = n38;
  }
  equals(t21) {
    return this === t21 || we(t21) && E(this._origin, t21._origin) && this._spatialReference === t21._spatialReference && this._distanceMeters === t21._distanceMeters && this._z === t21._z && this._directionDegrees === t21._directionDegrees;
  }
  closestTo([t21, e27, s26]) {
    return o6(St, t21, e27), E(St, this._origin) || this._applyDirectionAndDistance(St), f8(St[0], St[1], this._z ?? s26);
  }
  _applyDirectionAndDistance(t21) {
    if (null != this._directionDegrees && null != this._distanceMeters) j10(t21, this._origin, this._directionDegrees, this._distanceMeters, this._spatialReference);
    else if (null != this._directionDegrees) Gt(t21, this._origin, this._directionDegrees, t21, this._spatialReference);
    else if (null != this._distanceMeters) {
      const { azimuth: e27 } = q5(Ct, this._origin, t21, this._spatialReference);
      j10(t21, this._origin, e27 ?? 0, this._distanceMeters, this._spatialReference);
    }
  }
};
var St = [0, 0];
var Ct = new b6();
function Gt(t21, e27, s26, r26, n38) {
  let { azimuth: i25, distance: o19 } = q5(Ot, e27, r26, n38);
  i25 ?? (i25 = 0);
  let c18 = o19 * Math.cos((i25 - s26) * i5);
  c18 = Math.max(0, c18), j10(t21, e27, s26, c18, n38);
}
var Ot = new b6();
function Ht(t21, e27) {
  const s26 = c5();
  return C5(e27, t21.planeLike, s26), s26[2] = t21.getZ(s26[0], s26[1]) ?? ve, s26;
}
function Ft(t21, e27) {
  if (_e(t21)) {
    const s26 = [];
    for (const r26 of t21.constraints) {
      const t22 = r26.intersect(e27);
      t22 && s26.push(t22);
    }
    return ge(s26);
  }
  if (_e(e27)) return Ft(e27, t21);
  if (qe(t21)) return le(t21, e27);
  if (qe(e27)) return le(e27, t21);
  if (Le(t21)) {
    const { point: s26 } = t21;
    if (Le(e27)) return H(s26, e27.point) ? t21 : void 0;
    const r26 = e27.closestTo(s26);
    return J3(r26, s26) ? t21 : void 0;
  }
  if (ke(t21)) {
    if (Le(e27)) return Ft(e27, t21);
    if (ke(e27)) return pe(S3(t21.lineLike, e27.lineLike));
    if (xe(e27)) return Vt(t21, e27);
    if (ye(e27)) return pe(k4(e27.planeLike, t21.lineLike));
    if (Pe(e27)) return pe(Q4(t21.lineLike, e27.center, e27.radius));
    if (Me(e27)) return pe(O4(t21.lineLike, e27));
    if (ze(e27)) return Yt(t21, e27);
    if (Te(e27)) return Bt(t21, e27);
  } else if (xe(t21)) {
    if (Le(e27) || ke(e27)) return Ft(e27, t21);
    if (xe(e27)) return Kt(t21, e27);
    if (ye(e27)) return Qt(t21, e27);
    if (Pe(e27)) return Wt(t21, e27);
    if (Me(e27)) return $t(t21, e27);
    if (ze(e27)) return Xt(t21, e27);
    if (Te(e27)) return te2(t21, e27);
  } else if (ye(t21)) {
    if (Le(e27) || ke(e27) || xe(e27)) return Ft(e27, t21);
    if (ye(e27)) return de(z5(t21.planeLike, e27.planeLike));
    if (Pe(e27)) return de(U5(t21.planeLike, e27.center, e27.radius));
    if (Me(e27)) return se2(t21, e27);
    if (ze(e27)) return ee(t21, e27);
    if (Te(e27)) return re2(t21, e27);
  } else if (Pe(t21)) {
    if (Le(e27) || ke(e27) || xe(e27) || ye(e27)) return Ft(e27, t21);
    if (Pe(e27)) return de(W4(s12(t21.center), t21.radius, s12(e27.center), e27.radius));
    if (Me(e27)) return ne();
    if (ze(e27)) return ie2(t21, e27);
    if (Te(e27)) return oe();
  } else if (Me(t21)) {
    if (Le(e27) || ke(e27) || xe(e27) || ye(e27) || Pe(e27)) return Ft(e27, t21);
    if (Me(e27)) return ce2();
    if (ze(e27)) return ce2(e27.asCircle());
    if (Te(e27)) return ue();
  } else if (ze(t21)) {
    if (Le(e27) || ke(e27) || xe(e27) || ye(e27) || Pe(e27) || Me(e27)) return Ft(e27, t21);
    if (ze(e27)) return ae(e27, t21);
    if (Te(e27)) return he();
  } else if (Te(t21)) {
    if (Le(e27) || ke(e27) || xe(e27) || ye(e27) || Pe(e27) || ze(e27)) return Ft(e27, t21);
    if (Te(e27)) return fe();
  }
}
var Vt = (() => {
  const t21 = M3();
  return (e27, s26) => {
    const { start: r26, end: n38 } = e27;
    if (Z3(r26, n38) && $3(r26[2], s26.z)) return e27;
    const i25 = c5();
    return k2(s26.getPlane(t21), r26, n38, i25) ? new gt(i25) : void 0;
  };
})();
function Yt({ lineLike: t21 }, { center: e27, radius: s26 }) {
  const r26 = e27[2];
  return pe(Q4(t21, e27, s26).filter((t22) => $3(t22[2], r26)));
}
function Bt({ lineLike: t21 }, { sphere: e27 }) {
  return pe(I4(e27, t21.start, t21.end));
}
var Jt = (() => {
  const t21 = n8(), e27 = n6(), r26 = n6();
  return (n38, i25, o19) => {
    const { normal: c18, center: u18, radius: h18 } = i25;
    q2(c18, e27, r26);
    const f18 = O2(n38), l23 = h18 * P3(f18, e27), d28 = h18 * P3(f18, r26);
    s7(t21, u18[0], u18[1], u18[2], 1);
    const p22 = j4(n38, t21), m15 = Math.hypot(l23, d28), g22 = $3(m15, 0);
    if ($3(Q3(n38, u18), 0)) {
      if (g22) return i25;
      if ($3(h18, 0)) return !o19 || nt(o19, u18) ? new gt(v7(u18)) : void 0;
      _4(e27, f18, c18), A5(e27, e27);
      const t22 = new Array(), s26 = t2(u18);
      q(s26, s26, e27, h18), o19 && !nt(o19, s26) || t22.push(s26);
      const r27 = t2(u18);
      return q(r27, r27, e27, -h18), o19 && !nt(o19, r27) || t22.push(r27), pe(t22);
    }
    if (g22) return;
    const _13 = -p22 / m15;
    if (Math.abs(_13) > 1 || $3(_13, 1)) return;
    const z14 = Math.atan(l23 / d28), M15 = l4(_13) - z14, w19 = Math.PI - M15, j24 = new Array(), v15 = n6();
    q(v15, u18, e27, h18 * Math.cos(M15)), q(v15, v15, r26, h18 * Math.sin(M15)), j24.push(v15);
    const A16 = n6();
    return q(A16, u18, e27, h18 * Math.cos(w19)), q(A16, A16, r26, h18 * Math.sin(w19)), j24.push(A16), pe(o19 ? tt(o19, j24) : j24);
  };
})();
function Kt(t21, e27) {
  return $3(t21.z, e27.z) ? t21 : void 0;
}
function Qt({ z: t21 }, { planeLike: e27 }) {
  const [s26, r26] = e27.start, [n38, i25] = e27.end, o19 = d13(s26, r26, t21), c18 = d13(n38, i25, t21);
  return e27.type === rt.PLANE ? new Lt2(o19, c18) : new kt(o19, c18);
}
function Wt(t21, e27) {
  const [s26, r26] = e27.center;
  return new Pt(d13(s26, r26, t21.z), e27.radius);
}
function Xt(t21, e27) {
  return $3(e27.center[2], t21.z) ? e27 : void 0;
}
var $t = (() => {
  const t21 = M3();
  return (e27, s26) => Jt(e27.getPlane(t21), s26, s26.slicePlane);
})();
function te2(t21, { center: e27, radius: s26 }) {
  const r26 = Math.abs(e27[2] - t21.z);
  if (r26 > s26 && !$3(r26, s26)) return;
  const n38 = d13(e27[0], e27[1], t21.z), i25 = Math.sqrt(s26 ** 2 - r26 ** 2);
  return $3(i25, 0) ? void 0 : new Pt(n38, i25);
}
var ee = (() => {
  const t21 = M3();
  return (e27, { center: s26, radius: r26 }) => {
    const n38 = U5(e27.planeLike, s26, r26), i25 = s26[2];
    e27.getSlicePlane(t21);
    const o19 = new Array();
    for (const [c18, u18] of n38) {
      const e28 = [c18, u18, i25];
      nt(t21, e28) && o19.push(e28);
    }
    return pe(o19);
  };
})();
var se2 = (() => {
  const t21 = M3(), e27 = M3();
  return (s26, r26) => Jt(s26.getPlane(t21), r26, s26.getSlicePlane(e27));
})();
var re2 = (() => {
  const t21 = M3();
  return (e27, { center: s26, radius: r26 }) => {
    const n38 = e27.getPlane(t21), i25 = V2(n38, s26), o19 = Math.abs(i25);
    if (o19 > r26 && !$3(o19, r26)) return;
    const c18 = Math.sqrt(r26 ** 2 - i25 ** 2);
    if ($3(c18, 0)) {
      const t22 = c5();
      return H2(n38, s26, t22), new gt(t22);
    }
    const u18 = c5(), h18 = t2(O2(n38));
    return q(u18, s26, h18, i25), new zt(u18, c18, h18, e27.getSlicePlane());
  };
})();
function ne(t21, e27) {
}
function ie2(t21, e27) {
  const s26 = b2(s12(t21.center), s12(e27.center));
  if ($3(s26, 0) && $3(t21.radius, e27.radius)) return e27;
  return me(W4(s12(t21.center), t21.radius, s12(e27.center), e27.radius), e27.center[2]);
}
function oe(t21, e27) {
}
function ce2(t21, e27) {
}
function ue(t21, e27) {
}
function ae(t21, e27) {
  if (!Z3(t21.center, e27.center)) return;
  const s26 = b2(s12(t21.center), s12(e27.center));
  if ($3(s26, 0) && $3(t21.radius, e27.radius)) return t21;
  return me(W4(s12(t21.center), t21.radius, s12(e27.center), e27.radius), t21.center[2]);
}
function he(t21, e27) {
}
function fe(t21, e27) {
}
function le(t21, e27) {
  const { planeLike: s26, getZ: r26 } = t21, n38 = new Array();
  if (Le(e27)) t21.addIfOnTheGround(n38, w10(s26, e27.point));
  else if (ke(e27)) t21.addIfOnTheGround(n38, k4(s26, e27.lineLike));
  else if (Pe(e27)) for (const [i25, o19] of U5(s26, e27.center, e27.radius)) {
    const t22 = r26(i25, o19);
    null != t22 && n38.push(r8(i25, o19, t22));
  }
  else if (ye(e27) || qe(e27)) for (const [i25, o19] of z5(s26, e27.planeLike)) {
    const t22 = r26(i25, o19) ?? ve;
    n38.push(r8(i25, o19, t22));
  }
  return pe(n38);
}
function de(t21) {
  return ge(t21.map(([t22, e27]) => {
    const s26 = d13(t22, e27, 0), r26 = d13(t22, e27, 1);
    return new Lt2(s26, r26);
  }));
}
function pe(t21) {
  return ge(t21.map((t22) => t22 ? new gt(a14(t22)) : void 0));
}
function me(t21, e27) {
  return pe(t21.map(([t22, s26]) => [t22, s26, e27]));
}
function ge(e27) {
  if (0 !== e27.length) return 1 === e27.length ? e27[0] ?? void 0 : new xt(e27.filter(F));
}
function _e(t21) {
  return t21 instanceof xt;
}
function Le(t21) {
  return t21 instanceof gt;
}
function ke(t21) {
  return t21 instanceof _t;
}
function xe(t21) {
  return t21 instanceof qt;
}
function ye(t21) {
  return t21 instanceof jt;
}
function Pe(t21) {
  return t21 instanceof yt;
}
function ze(t21) {
  return t21 instanceof Pt;
}
function Me(t21) {
  return t21 instanceof zt;
}
function Te(t21) {
  return t21 instanceof Nt;
}
function qe(t21) {
  return t21 instanceof Ut;
}
function we(t21) {
  return t21 instanceof It;
}
function je(t21) {
  return t21 instanceof Zt;
}
var ve = 0;

// node_modules/@arcgis/core/views/support/angularMeasurementUtils.js
var j13;
function R9(e27, t21) {
  if (null == e27 || null == t21) return;
  const i25 = b10(e27, t21);
  return null != i25 ? o7(i25, "radians", "geographic") : void 0;
}
!function(e27) {
  e27.Absolute = "absolute", e27.Relative = "relative", e27.RelativeBilateral = "relative-bilateral";
}(j13 || (j13 = {}));
var b10 = (() => {
  const e27 = n6(), t21 = n6();
  return (r26, i25) => (o5(e27, r26.x, r26.y, r26.z ?? 0), o5(t21, i25.x, i25.y, i25.z ?? 0), y9(e27, t21, r26.spatialReference, i25.spatialReference));
})();
var y9 = (() => {
  const e27 = n9(), t21 = n6(), r26 = n6();
  return (i25, s26, c18, u18) => {
    if (H(i25, s26)) return;
    const f18 = N4(c18), v15 = N4(u18);
    if (f18 && v15 && s4(f18, v15) && n11(i25, c18, t21, f18) && n11(s26, u18, r26, v15)) {
      const { azimuth: e28 } = q5(k5, t21, r26, f18);
      return null != e28 ? I(e28, "degrees", "radians") : void 0;
    }
    e27[0] = s26[0] - i25[0], e27[1] = s26[1] - i25[1];
    let d28 = L5(_5, e27);
    return e27[0] < 0 && (d28 = q6 - d28), d28;
  };
})();
function x6(e27, t21, r26, i25 = j13.Absolute) {
  if (t21 && r26) switch (i25) {
    case j13.Absolute:
      return R9(t21, r26);
    case j13.Relative:
      return w11(z6(e27, t21, r26), j13.Relative);
    case j13.RelativeBilateral:
      return w11(z6(e27, t21, r26), j13.RelativeBilateral);
  }
}
function z6(e27, t21, i25) {
  if (!e27 || !t21 || !i25) return;
  const o19 = b10(e27, t21), n38 = b10(t21, i25);
  return null != o19 && null != n38 ? o7(n38 - o19, "radians", "geographic") : void 0;
}
function w11(e27, t21) {
  if (null != e27) switch (t21) {
    case j13.Absolute:
      return A7(e27);
    case j13.Relative: {
      const t22 = T4(e27);
      let i25 = I7.normalize(t22, 0, true);
      return -180 === i25 && (i25 = 180), o7(i25, "degrees", "geographic");
    }
    case j13.RelativeBilateral: {
      const t22 = T4(e27), i25 = Math.abs(I7.normalize(t22, 0, true));
      return o7(i25, "degrees", "geographic");
    }
  }
}
function A7(e27) {
  const t21 = T4(e27), i25 = C6.normalize(t21, 0, true);
  return o7(i25, "degrees", "geographic");
}
var M8 = (() => {
  const e27 = n6();
  return (t21, r26, n38, a28, s26, l23 = "geodesic") => {
    s8(e27, r26);
    const f18 = T4(s26);
    if ("geodesic" === l23) {
      const i25 = N4(n38);
      if (i25 && n11(e27, n38, e27, i25)) return j10(t21, e27, f18, a28, i25), t21[2] = r26[2], !!n11(t21, i25, t21, n38);
    }
    const p22 = m5(f18, "geographic", "arithmetic"), d28 = I(p22, "degrees", "radians"), h18 = r26[0] + a28 * Math.cos(d28), j24 = r26[1] + a28 * Math.sin(d28), R19 = r26[2];
    return o5(t21, h18, j24, R19), true;
  };
})();
function T4(e27) {
  if (null != e27) return m5(V3(e27), e27.rotationType, "geographic");
}
function V3(e27) {
  return I(e27.value, e27.unit, "degrees");
}
var k5 = new b6();
var q6 = 2 * Math.PI;
var C6 = a4;
var I7 = new n5(-180, 180);

// node_modules/@arcgis/core/views/interactive/sketch/constraintUtils.js
function Z4(e27, n38, t21, r26, o19, i25) {
  let l23 = "geodesic", u18 = N4(t21);
  const a28 = c5();
  return E3(e27, n38, r26, a28), a28[2] = 0, u18 && n11(a28, t21, a28, u18) || (l23 = "euclidean", u18 = t21), { mode: l23, view: n38, elevationInfo: r26, hasZ: o19, directionMode: i25, spatialReference: e27.spatialReference, measurementSR: u18, origin: a28 };
}
function b11(n38, t21, r26) {
  if (null == t21 || null == n38) return;
  const i25 = se(r26.measurementSR);
  if (null == i25) return;
  const l23 = G(n38, r26);
  if (null == l23) return;
  const u18 = f7(t21, i25);
  return new yt(l23, u18);
}
function A8(e27, n38, r26, o19) {
  if (null == r26 || null == e27) return;
  const i25 = G(e27, o19);
  if (null == i25) return;
  const l23 = T4(r26), u18 = 10, s26 = (e28) => {
    if (null == e28) return;
    const n39 = c5(), r27 = o7(e28, "degrees", "geographic");
    return M8(n39, i25, o19.measurementSR, u18, r27, o19.mode) ? new Et(i25, n39) : void 0;
  }, c18 = () => {
    if (null != n38 && null != e27) return T4(R9(n38, e27));
  };
  switch (o19.directionMode) {
    case j13.Absolute:
      return s26(l23);
    case j13.Relative: {
      const e28 = c18();
      if (null == e28) return;
      return s26(e28 + l23);
    }
    case j13.RelativeBilateral: {
      const e28 = c18();
      if (null == e28) return;
      return ge([s26(e28 + l23), s26(e28 - l23)]);
    }
  }
}
function B5(e27, n38) {
  const t21 = C7(e27, n38);
  return null != t21 ? new qt(t21) : void 0;
}
function P5(e27, n38, t21) {
  const { context: r26, longitude: o19, latitude: i25, direction: l23, distance: u18, elevation: s26 } = t21;
  if (null != o19 || null != i25 || null != u18 || null != s26 || null != l23) {
    if (null != o19 || null != i25) {
      const e28 = T4(o19), n39 = T4(i25), t22 = C7(s26, r26);
      return new Zt(e28, n39, t22);
    }
    return T5(e27, n38, t21);
  }
}
function T5(n38, t21, { context: r26, direction: o19, distance: i25, elevation: l23 }) {
  if (null == t21) return B5(l23, r26);
  const { view: u18, elevationInfo: c18, measurementSR: a28 } = r26, f18 = E3(t21, u18, c18);
  if (!a28 || !n11(f18, t21.spatialReference, E6, a28)) return;
  const [m15, p22] = E6, v15 = null != i25 ? f7(i25, "meters") : void 0, j24 = T4(o19), y21 = C7(l23, r26), h18 = (e27) => {
    const n39 = new It([m15, p22], a28, v15, y21, e27);
    return null == v15 || null == e27 || null == y21 && r26.hasZ ? n39 : new gt(n39.closestTo(f18));
  };
  if (null == j24) return h18(void 0);
  const U14 = () => {
    if (null != n38 && null != t21) return T4(R9(n38, t21));
  };
  switch (r26.directionMode) {
    case j13.Absolute:
      return h18(j24);
    case j13.Relative: {
      const e27 = U14();
      if (null == e27) return;
      return h18(e27 + j24);
    }
    case j13.RelativeBilateral: {
      const e27 = U14();
      if (null == e27) return;
      return ge([h18(e27 + j24), h18(e27 - j24)]);
    }
  }
}
function V4(e27) {
  return "geodesic" === e27.context.mode ? P5(null, null, e27) : q7(e27);
}
function k6(e27, n38, t21) {
  const { context: r26, x: o19, y: i25, distance: l23, direction: u18, elevation: s26 } = t21;
  return "geodesic" === r26.mode ? P5(n38, e27, t21) : null != o19 || null != i25 ? q7(t21) : z7([b11(e27, l23, r26), A8(e27, n38, u18, r26), B5(s26, r26)]);
}
function q7({ x: e27, y: n38, elevation: t21, context: r26 }) {
  J6.x = (e27 == null ? void 0 : e27.value) ?? 0, J6.y = (n38 == null ? void 0 : n38.value) ?? 0, J6.spatialReference = r26.spatialReference;
  const o19 = G(J6, r26, F5);
  return new Zt(null != e27 && null != o19 ? o19[0] : void 0, null != n38 && null != o19 ? o19[1] : void 0, C7(t21, r26));
}
function z7(e27) {
  let n38;
  for (const t21 of e27) t21 && (n38 = (n38 == null ? void 0 : n38.intersect(t21)) ?? t21);
  return n38;
}
function G(e27, n38, t21 = c5()) {
  const { view: r26, elevationInfo: o19, measurementSR: l23, origin: u18, mode: c18 } = n38;
  if (E3(e27, r26, o19, t21), n11(t21, e27.spatialReference, t21, l23)) return "geodesic" !== c18 && c3(t21, t21, u18), t21;
}
function W5(e27, n38, t21, r26) {
  const { view: o19, measurementSR: i25, spatialReference: c18, origin: a28, mode: f18 } = t21;
  if ("geodesic" === f18 ? s8(H3, e27) : u7(H3, e27, a28), n11(H3, i25, H3, c18)) return h8(H3, o19, n38, t21, r26);
}
function C7(e27, n38) {
  var _a;
  return ((_a = D3(e27, n38)) == null ? void 0 : _a.value) ?? void 0;
}
function D3(t21, { view: o19, origin: i25, elevationInfo: l23, hasZ: u18, measurementSR: s26 }) {
  if (null == t21 || !u18) return;
  const c18 = te(s26);
  if (null == c18) return;
  const [a28, m15] = i25, d28 = f7(t21, c18), p22 = "3d" === (o19 == null ? void 0 : o19.type) ? E2(o19, a28, m15, d28, s26, l23) : d28;
  return null != p22 ? a13(p22, c18) : void 0;
}
var E6 = c5();
var F5 = c5();
var H3 = c5();
var J6 = e10(0, 0, 0, g2.WGS84);

// node_modules/@arcgis/core/views/interactive/keybindings.js
var s15 = "z";
var a18 = "r";
var c7 = { toggle: "Control" };
var f11 = { enterInputMode: "Tab", commit: "Enter", discard: "Escape", next: "Tab" };
var d18 = { moveUp: { key: "ArrowUp", modifier: "Shift", repeats: true }, moveDown: { key: "ArrowDown", modifier: "Shift", repeats: true }, moveLeft: { key: "ArrowLeft", modifier: "Shift", repeats: true }, moveRight: { key: "ArrowRight", modifier: "Shift", repeats: true }, scaleUp: { key: "+", modifier: "Shift" }, scaleDown: { key: "-", modifier: "Shift" }, factorModifier: { key: t4, continuePropagation: true }, toggleOpacity: "t", preserveAspectRatio: { key: "Shift", continuePropagation: true }, rotateIncrements: { key: "Shift", continuePropagation: true }, undo: s15, redo: a18 };
var h9 = class {
  constructor() {
    this._bindings = /* @__PURE__ */ new Map();
  }
  add(e27, t21) {
    return this.addToggle(e27, (e28) => {
      "key-down" === e28.type && t21(e28);
    });
  }
  addToggle(i25, r26) {
    const n38 = m9.fromDefinition(i25, r26), s26 = r2(this._bindings, n38.key, () => []);
    return s26.push(n38), e(() => C(s26, n38));
  }
  register(e27, t21 = _8.WIDGET) {
    return t([e27.on("key-down", (t22) => this.dispatch(e27.inputManager, t22), t21), e27.on("key-up", (t22) => this.dispatch(e27.inputManager, t22), t21)]);
  }
  dispatch(e27, t21) {
    const i25 = t21.key, o19 = this._bindings.get(i25);
    if (o19) for (const r26 of o19) r26.process(e27, t21);
  }
};
var m9 = class _m {
  constructor(e27, t21, i25, o19, r26) {
    this.key = e27, this.modifiers = t21, this.repeats = i25, this.continuePropagation = o19, this.callback = r26;
  }
  process(e27, t21) {
    if (!(t21.key !== this.key || "repeat" in t21 && t21.repeat && !this.repeats)) {
      for (const t22 of this.modifiers) if (!e27.isModifierKeyDown(t22)) return;
      this.continuePropagation || t21.stopPropagation(), this.callback(t21);
    }
  }
  static fromDefinition(e27, t21) {
    if ("string" == typeof e27) return new _m(e27, [], false, false, t21);
    const { key: i25, modifier: o19, repeats: r26, continuePropagation: n38 } = e27;
    return new _m(i25, o19 ? Array.isArray(o19) ? o19 : [o19] : [], !!r26, !!n38, t21);
  }
};

// node_modules/@arcgis/core/views/interactive/tooltip/css.js
var e15 = "esri-tooltip";
var t9 = `${e15}-content`;
var n19 = `${e15}-content--input`;
var _10 = `${e15}-content__header`;
var a19 = `${e15}-content__header__spacer`;
var o14 = `${e15}-content__header__actions`;
var s16 = `${e15}-draw-header-actions`;
var c8 = `${e15}-table`;
var $4 = `${e15}-help-message`;
var r17 = `${e15}-help-message__text`;
var h10 = `${e15}-help-message__icon`;

// node_modules/@arcgis/core/views/interactive/tooltip/components/TooltipField.js
var p9 = `${e15}-field`;
var d19 = { base: p9, inputMode: `${p9}--input`, title: `${p9}__title`, value: `${p9}__value` };
var a20 = class extends B {
  constructor() {
    super(...arguments), this.hidden = false, this.mode = "feedback";
  }
  render() {
    return n2("div", { class: this.classes({ [d19.base]: true, [d19.inputMode]: "input" === this.mode }) }, n2("div", { class: d19.title, key: "title" }, this.title), n2("div", { class: d19.value, key: "value" }, this.value));
  }
};
r([m()], a20.prototype, "hidden", void 0), r([m()], a20.prototype, "mode", void 0), r([m()], a20.prototype, "title", void 0), r([m()], a20.prototype, "value", void 0), a20 = r([a2("esri.views.interactive.tooltip.components.TooltipField")], a20);

// node_modules/@arcgis/core/views/interactive/tooltip/components/ValueByValue.js
var p10 = { base: `${e15}-value-by-value` };
var a21 = class extends B {
  constructor() {
    super(...arguments), this.divider = "×";
  }
  render() {
    return n2("div", { class: p10.base }, n2("span", null, this.left), n2("span", null, this.divider), n2("span", null, this.right));
  }
};
r([m()], a21.prototype, "left", void 0), r([m()], a21.prototype, "divider", void 0), r([m()], a21.prototype, "right", void 0), a21 = r([a2("esri.views.interactive.tooltip.components.ValueByValue")], a21);

// node_modules/@arcgis/core/core/memoize.js
function t10(t21) {
  let r26, e27, i25 = [], u18 = false;
  function f18(...f19) {
    return u18 && r26 === this && n20(f19, i25) || (e27 = t21.apply(this, f19), r26 = this, i25 = f19, u18 = true), e27;
  }
  return f18;
}
function n20(t21, n38) {
  if (t21.length !== n38.length) return false;
  for (let r26 = 0; r26 < t21.length; ++r26) if (t21[r26] !== n38[r26]) return false;
  return true;
}

// node_modules/@arcgis/core/support/getDefaultUnitForView.js
function e16(e27) {
  var _a, _b;
  const n38 = "metric";
  if (null == e27) return n38;
  const i25 = e27.map, l23 = (i25 && "portalItem" in i25 ? (_a = i25.portalItem) == null ? void 0 : _a.portal : null) ?? b4.getDefault();
  switch (((_b = l23.user) == null ? void 0 : _b.units) ?? l23.units) {
    case n38:
      return n38;
    case "english":
      return "imperial";
  }
  return ce(e27.spatialReference) ?? n38;
}

// node_modules/@arcgis/core/core/quantityFormatUtils.js
function g13(t21, a28, n38, i25 = 2, u18 = "abbr") {
  return g6(t21, s10(a28, n38).value, n38, i25, u18);
}
function L7(t21, e27, n38, i25 = 2, u18 = "abbr") {
  return p7(t21, s10(e27, n38).value, n38, i25, u18);
}
function d20(t21, r26, e27 = 2, a28 = "abbr") {
  return D2(t21, r26.value, r26.unit, e27, a28);
}
function M9(t21, r26, e27 = 2, a28 = "abbr") {
  return x4(t21, r26.value, r26.unit, e27, a28);
}
function w12(t21, r26, e27 = 2, a28 = "abbr") {
  return y6(t21, r26.value, r26.unit, e27, a28);
}
function I8(t21, r26, e27 = 2, a28 = "abbr") {
  return F3(t21, r26.value, r26.unit, e27, a28);
}
function R10(t21, r26, e27 = 2, a28 = "abbr") {
  return $2(t21, r26.value, r26.unit, e27, a28);
}
function y10(t21, r26, e27 = 2, a28 = "abbr") {
  return d12(t21, r26.value, r26.unit, e27, a28);
}
function V5(t21, r26, e27 = 2, a28 = "abbr") {
  return h7(t21, r26.value, r26.unit, e27, a28);
}
function j14(t21, r26, e27 = 2, a28 = "abbr") {
  return B3(t21, r26.value, r26.unit, e27, a28);
}
function D4(t21, r26, e27 = 2, a28 = "abbr") {
  return M5(t21, r26.value, r26.unit, e27, a28);
}
function A9(t21, r26, e27 = 2, a28 = "abbr") {
  return j9(t21, r26.value, r26.unit, e27, a28);
}
function U6(r26, e27, a28, n38 = a4, i25 = true) {
  return w6(r26.value, r26.unit, r26.rotationType, e27, a28, n38, i25);
}
function x7(t21, r26, e27, a28, n38 = "abbr") {
  switch (a28 = a28 ?? 2, e27) {
    case "imperial":
      return y10(t21, r26, a28, n38);
    case "metric":
      return d20(t21, r26, a28, n38);
    default:
      return g13(t21, r26, e27, a28, n38);
  }
}
function C8(t21, r26, e27, a28 = 2, n38 = "abbr") {
  switch (e27) {
    case "imperial":
      return V5(t21, r26, a28, n38);
    case "metric":
      return M9(t21, r26, a28, n38);
    default:
      return L7(t21, r26, e27, a28, n38);
  }
}
function F6(t21, r26, e27, a28 = 2, n38 = "abbr") {
  switch (e27) {
    case "imperial":
      return j14(t21, r26, a28, n38);
    case "metric":
      return w12(t21, r26, a28, n38);
    default:
      return g13(t21, r26, e27, a28, n38);
  }
}
function S5(t21, r26, e27, a28 = 2, n38 = "abbr") {
  switch (e27) {
    case "imperial":
      return D4(t21, r26, a28, n38);
    case "metric":
      return I8(t21, r26, a28, n38);
    default:
      return L7(t21, r26, e27, a28, n38);
  }
}
function k7(t21, r26, e27, a28 = 2, n38 = "abbr") {
  switch (e27) {
    case "imperial":
      return A9(t21, r26, a28, n38);
    case "metric":
      return R10(t21, r26, a28, n38);
    default:
      return g13(t21, r26, e27, a28, n38);
  }
}

// node_modules/@arcgis/core/views/interactive/tooltip/fields/parsingAndFormattingUtils.js
var v11 = 1;
var y11 = 6;
function D5(t21, l23) {
  return { angleRelative: x8, direction: j15, directionRelative: R11, directionRelativeBilateral: $5, latitudeDecimalDegrees: L8, longitudeDecimalDegrees: F7, area: (e27, r26) => k7(t21, e27, r26 ?? l23.area), length: (n38, r26, i25) => x7(t21, n38, r26 ?? l23.length, i25), lengthRelative: (n38, e27) => C8(t21, n38, e27 ?? l23.length), totalLength: (n38, r26) => x7(t21, n38, r26 ?? l23.length), verticalLength: (n38, e27) => F6(t21, n38, e27 ?? l23.verticalLength), verticalLengthRelative: (n38, e27) => S5(t21, n38, e27 ?? l23.verticalLength), percentage: z8, scalar: Z6, scale: T6 };
}
function x8(t21) {
  return l2(t21, { signDisplay: "exceptZero", ...b12(v11) });
}
function j15(t21) {
  return U6(t21, t21.rotationType, v11);
}
function R11(t21) {
  const n38 = T4(t21);
  return l2(n38, { style: "unit", unitDisplay: "narrow", unit: "degree", signDisplay: n38 > 0 ? "never" : "exceptZero", ...b12(v11) });
}
function $5(t21) {
  return U6(t21, t21.rotationType, v11);
}
function F7(t21) {
  return U7(t21, N5);
}
function L8(t21) {
  return U7(t21, O5);
}
function w13(t21) {
  return q8(t21, N5);
}
function A10(t21) {
  return q8(t21, O5);
}
function U7(t21, n38) {
  const e27 = false, r26 = "geographic";
  return U6(s10(t21, "degrees"), r26, y11, n38, e27);
}
function q8(t21, n38) {
  const e27 = false, r26 = n38.normalize(s10(t21, "degrees").value, void 0, e27);
  return Z6(i7(r26), y11);
}
function z8(t21) {
  return l2(t21.value, { style: "percent" });
}
function T6(t21) {
  return l2(t21, { style: "percent", maximumFractionDigits: 0 });
}
function Z6(t21, n38) {
  return l2(t21.value, b12(n38));
}
function b12(t21) {
  return { minimumFractionDigits: t21, maximumFractionDigits: t21 };
}
function B6({ createQuantity: t21, sanitize: n38 }) {
  return (e27, r26) => {
    if (null == e27) return null;
    n38 && (e27 = n38(e27));
    const i25 = o4(e27);
    return null == i25 ? null : t21(i25, r26);
  };
}
function C9(t21) {
  return t21.replaceAll(/[*^~°º]/g, "");
}
var E7 = (t21) => {
  let n38 = `[-+]?[0-9${t21.thousands}]+`;
  return "" !== t21.decimal && (n38 += `${t21.decimal}[0-9]+`), new RegExp(`^(${n38}\\s*)${t21.separator}(\\s*${n38})$`, "i");
};
var I9 = " ";
var M10 = [];
for (const P13 of [",", "\\|", "\\s+"]) for (const t21 of ["\\.", ",", ""]) for (const n38 of ["", ",", "\\.", I9, "\\s+"]) P13 !== t21 && P13 !== n38 && t21 !== n38 && M10.push({ separator: P13, decimal: t21, thousands: n38, pattern: E7({ decimal: t21, thousands: n38, separator: P13 }) });
function Q5(t21) {
  for (const { decimal: n38, thousands: e27, pattern: r26 } of M10) {
    r26.lastIndex = 0;
    const i25 = t21.match(r26);
    if (!i25) continue;
    const o19 = o4(k8(i25[1], n38, e27)), l23 = o4(k8(i25[2], n38, e27));
    if (null != o19 && null != l23) return { x: i7(o19), y: i7(l23) };
  }
  return null;
}
function k8(t21, n38, e27) {
  let r26 = t21.replaceAll(/[\s+]/g, "");
  return "" !== e27 && (r26 = r26.replaceAll(e27, "")), "" !== n38 && (r26 = r26.replaceAll(n38, ".")), r26;
}
function G2(t21) {
  if (!t21 || null != o4(t21) || !_9()) return null;
  const n38 = E5(t21), e27 = K4(n38 == null ? void 0 : n38.latitude), r26 = K4(n38 == null ? void 0 : n38.longitude);
  return null != r26 && null != e27 ? { latitude: e27, longitude: r26 } : null;
}
function H4(t21) {
  return K4(g8(t21));
}
function J7(t21) {
  return K4(m6(t21));
}
function K4(t21) {
  return null != t21 ? o7(t21, "degrees", "geographic") : null;
}
var N5 = new n5(-180, 180);
var O5 = new n5(-90, 90);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContent.js
var E8 = Symbol("dragHandles");
var S6 = class extends B {
  constructor() {
    super(...arguments), this._focusAbortController = new AbortController(), this._transitionInfo = null, this._mode = "feedback", this._getFormatters = t10(D5), this._onHeaderPointerDown = (t21) => {
      var _a;
      const e27 = t21.target;
      e27 instanceof HTMLElement && "calcite-button" !== ((_a = e27 == null ? void 0 : e27.tagName) == null ? void 0 : _a.toLowerCase()) && (this.removeHandles(E8), e27.setPointerCapture(t21.pointerId), this.tooltip.onDragStart(t21.clientX, t21.clientY), this.addHandles([o2(e27, "pointermove", ({ clientX: t22, clientY: e28 }) => {
        this.tooltip.onDrag(t22, e28);
      }), o2(e27, ["pointerup", "pointercancel"], (o19) => {
        this.removeHandles(E8), e27.releasePointerCapture(t21.pointerId), this.tooltip.onDragEnd();
      }), o2(e27, "touchstart", (t22) => t22.preventDefault())], E8));
    }, this._onDiscard = () => {
      this.destroyed || (this.tooltip.emit("discard"), this.info.clearInputValues(), this.exitInputMode());
    }, this._onCommit = (t21, e27) => {
      if (this.destroyed) return;
      if (this.tooltip.emit("commit", { type: e27 }), "commit-and-exit" === e27) return void this.exitInputMode();
      if ("commit-on-blur" === e27) return;
      const o19 = this._getFocusableElements(), s26 = o19.length, i25 = o19.indexOf(t21);
      if (-1 === i25) return void this.exitInputMode();
      const n38 = ((i25 + ("commit-and-next" === e27 ? 1 : -1)) % s26 + s26) % s26;
      L9(o19.at(n38));
    }, this._onKeyDown = (t21) => {
      switch (t21.code) {
        case f11.next:
          return this._onNextKey(t21);
        case f11.discard:
          return t21.stopPropagation(), this._onDiscard();
      }
    };
  }
  get mode() {
    return this._mode;
  }
  get _displayUnits() {
    const { displayUnits: t21 } = this.info.sketchOptions.values, e27 = e16(this.tooltip.view);
    return { length: t21.length ?? e27, verticalLength: t21.verticalLength ?? e27, area: t21.area ?? e27 };
  }
  get _inputUnitInfos() {
    const t21 = this._messagesUnits, e27 = (e28) => ({ unit: e28, abbreviation: b5(t21, e28, "abbr") }), { inputUnits: o19 } = this.info.sketchOptions.values, s26 = e16(this.tooltip.view), i25 = o19.length ?? s26, n38 = o19.verticalLength ?? s26, r26 = o19.area ?? s26;
    return { length: e27(v(i25)), verticalLength: e27(x(n38)), area: e27(N(r26)), angle: e27("degrees") };
  }
  get _formatters() {
    return this._getFormatters(this._messagesUnits, this._displayUnits);
  }
  get fieldContext() {
    return { formatters: this._formatters, inputUnitInfos: this._inputUnitInfos, messages: this._messagesTooltip, sketchOptions: this.info.sketchOptions, onCommit: this._onCommit, onDiscard: this._onDiscard };
  }
  render() {
    const { visibleElements: t21 } = this.info.sketchOptions.tooltips, e27 = this._renderedContent, o19 = this._renderedActions, s26 = this._renderedHelpMessage, i25 = e27.length > 0, n38 = i25 || !!s26, r26 = "input" === this.mode;
    return n2("div", { class: l3(t9, r26 && n19), onkeydown: this._onKeyDown, tabIndex: -1 }, r26 && n38 && t21.header ? n2("div", { class: _10, "data-testid": "tooltip-header", key: "header", onpointerdown: this._onHeaderPointerDown }, n2("calcite-button", { appearance: "transparent", "data-testid": "tooltip-back-button", iconFlipRtl: "both", iconStart: "chevron-left", key: "discard-button", kind: "neutral", onclick: this._onDiscard, scale: "s", tabIndex: -1 }), o19.length > 0 ? n2(i2, null, n2("div", { class: a19, key: "spacer" }), n2("div", { class: o14, key: "actions" }, o19)) : null) : null, i25 ? n2("div", { class: c8, key: "content" }, ...e27) : null, s26);
  }
  destroy() {
    var _a;
    this._focusAbortController.abort(), (_a = this._transitionInfo) == null ? void 0 : _a.transition.skipTransition();
  }
  _renderActions() {
    return null;
  }
  loadDependencies() {
    return r4({ button: () => import("./calcite-button-CIWFCC6E.js"), icon: () => import("./calcite-icon-7LCZHQE3.js"), input: () => import("./calcite-input-ATVHSFHY.js") });
  }
  async enterInputMode(t21, e27) {
    try {
      await this._transitionTo("input", e27), await this._focusField(t21);
    } catch (o19) {
      f(o19);
    }
  }
  async exitInputMode({ focusOnView: t21 = true } = {}) {
    var _a;
    try {
      const { container: e27, info: o19 } = this;
      o19.clearInputValues();
      const s26 = t21 ? (_a = e27 == null ? void 0 : e27.closest(".esri-view")) == null ? void 0 : _a.querySelector(".esri-view-surface") : null;
      await this._transitionTo("feedback"), s26 instanceof HTMLElement && s26.focus();
    } catch (e27) {
      f(e27);
    }
  }
  _onNextKey(t21) {
    const e27 = this._getFocusableElements(), o19 = e27.at(0), s26 = e27.at(-1);
    o19 && s26 && (t21.shiftKey ? document.activeElement === o19 && (t21.preventDefault(), t21.stopPropagation(), L9(s26)) : document.activeElement === s26 && (t21.preventDefault(), t21.stopPropagation(), L9(o19)));
  }
  get _renderedContent() {
    return N6(this._renderContent());
  }
  get _renderedActions() {
    return N6(this._renderActions());
  }
  get _renderedHelpMessage() {
    const { sketchOptions: t21, visibleElements: e27 } = this.info;
    if (!e27.helpMessage) return null;
    const o19 = t21.tooltips.helpMessage ?? this._defaultHelpMessage;
    if (!o19) return null;
    const s26 = t21.tooltips.helpMessageIcon ?? "information";
    return n2("div", { class: $4, key: "help-message" }, s26 ? n2("calcite-icon", { class: h10, icon: s26, scale: "s" }) : null, n2("div", { class: r17 }, o19));
  }
  get _defaultHelpMessage() {
    var _a, _b, _c;
    const { helpMessage: t21, viewType: e27 } = this.info;
    if (null == t21) return null;
    const o19 = "3d" === e27 ? "helpMessages3d" : "helpMessages2d";
    return (_c = (_b = (_a = this._messagesTooltip) == null ? void 0 : _a.sketch) == null ? void 0 : _b[o19]) == null ? void 0 : _c[t21];
  }
  async _focusField(t21) {
    var _a;
    (_a = this._focusAbortController) == null ? void 0 : _a.abort(), this._focusAbortController = new AbortController();
    const { signal: e27 } = this._focusAbortController;
    await this._waitForInputs(), s2(e27);
    const o19 = this._getFocusableInputs(), s26 = t21 ? o19.find((e28) => e28.getAttribute("data-field-name") === t21) : o19.at(0);
    await L9(s26);
  }
  async _transitionTo(t21, o19) {
    var _a, _b, _c;
    if (this._mode === t21 && !this._transitionInfo) return;
    if (((_a = this._transitionInfo) == null ? void 0 : _a.mode) === t21) return this._transitionInfo.transition.finished;
    (_b = this._transitionInfo) == null ? void 0 : _b.transition.skipTransition();
    const s26 = async () => {
      this.destroyed || (this._mode = t21, await y(), this.destroyed || (this.renderNow(), await y(), this.destroyed || (o19 == null ? void 0 : o19())));
    };
    if (!((_c = this.domNode) == null ? void 0 : _c.firstChild) || !document.startViewTransition || o8()) return void await s26();
    this.autoRenderingEnabled = false;
    const i25 = this._transitionInfo = { transition: document.startViewTransition(async () => {
      this.destroyed || i25 !== this._transitionInfo || (this.autoRenderingEnabled = true, await s26());
    }), mode: t21 };
    try {
      await i25.transition.finished;
    } finally {
      i25 === this._transitionInfo && (this._transitionInfo = null);
    }
  }
  async _waitForInputs() {
    const t21 = () => {
      var _a;
      return Array.from(((_a = this.domNode) == null ? void 0 : _a.querySelectorAll("calcite-input")) ?? []);
    };
    for (; 0 === t21().length; ) await A(O6);
    await P();
  }
  _getFocusableInputs() {
    var _a;
    return Array.from(((_a = this.domNode) == null ? void 0 : _a.querySelectorAll("calcite-input:not([read-only]):not([disabled])")) ?? []);
  }
  _getFocusableElements() {
    var _a;
    const t21 = (_a = this.domNode) == null ? void 0 : _a.querySelector(`.${s16}`);
    return [...Array.from((t21 == null ? void 0 : t21.querySelectorAll(`.${o14} calcite-button:not([disabled])`)) ?? []), ...this._getFocusableInputs()];
  }
};
async function L9(t21) {
  await (t21 == null ? void 0 : t21.setFocus());
}
function N6(t21) {
  return (Array.isArray(t21) ? t21 : [t21]).flat(10).filter((t22) => !!t22);
}
r([e3("esri/core/t9n/Units"), m()], S6.prototype, "_messagesUnits", void 0), r([e3("esri/views/interactive/tooltip/t9n/Tooltip"), m()], S6.prototype, "_messagesTooltip", void 0), r([m()], S6.prototype, "info", void 0), r([m()], S6.prototype, "tooltip", void 0), r([m()], S6.prototype, "_mode", void 0), r([m()], S6.prototype, "mode", null), r([m()], S6.prototype, "_displayUnits", null), r([m()], S6.prototype, "_inputUnitInfos", null), r([m()], S6.prototype, "_formatters", null), r([m()], S6.prototype, "fieldContext", null), r([m()], S6.prototype, "_renderedContent", null), r([m()], S6.prototype, "_renderedActions", null), r([m()], S6.prototype, "_renderedHelpMessage", null), r([m()], S6.prototype, "_defaultHelpMessage", null), S6 = r([a2("esri.views.interactive.tooltip.content.TooltipContent")], S6);
var O6 = 20;

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentDrawCircle.js
var n21 = class extends S6 {
  _renderContent() {
    const { area: t21, radius: e27, xSize: s26, ySize: n38, visibleElements: a28 } = this.info, p22 = this._messagesTooltip.sketch, m15 = this._formatters;
    return n2(i2, null, a28.radius && null != e27 ? n2(a20, { title: p22.radius, value: m15.length(e27) }) : null, a28.size && null != s26 && null != n38 ? n2(a20, { title: p22.size, value: n2(a21, { left: m15.length(s26), right: m15.length(n38) }) }) : null, a28.area ? n2(a20, { title: p22.area, value: m15.area(t21) }) : null);
  }
};
n21 = r([a2("esri.views.interactive.tooltip.content.TooltipContentDrawCircle")], n21);

// node_modules/@arcgis/core/views/interactive/tooltip/components/TooltipEditableField.js
var d21 = `${e15}-editable-field`;
var p11 = { base: d21, inputMode: `${d21}--input`, feedbackMode: `${d21}--feedback`, readOnly: `${d21}--read-only`, locked: `${d21}--locked`, title: `${d21}__title`, value: `${d21}__value`, valueContent: `${d21}__value__content`, valueContentReadOnly: `${d21}__value__content--read-only`, lockIcon: `${d21}__lock-icon`, input: `${d21}__input`, inputSuffix: `${d21}__input-suffix`, button: `${d21}__button` };
var h11 = { lock: "lock", unlock: "unlock" };
var _11 = class extends B {
  constructor() {
    super(...arguments), this._input = null, this._lock = null, this._onLockClick = () => {
      this.field.toggleLock(this.context);
    }, this._onLockAfterCreate = (t21) => {
      this._lock = t21;
    }, this._onLockAfterRemoved = () => {
      this._lock = null;
    }, this._onKeyDown = (t21) => {
      t21.key === f11.discard && "input" === this.mode && this._input && this.context.onDiscard(this._input);
    }, this._onInputKeyDown = (t21) => {
      const e27 = this._input;
      if (e27) switch (t21.key) {
        case f11.commit:
          return this.field.onCommit("commit-and-exit", e27, this.context);
        case f11.next: {
          t21.preventDefault(), t21.stopPropagation();
          const i25 = t21.shiftKey ? "commit-and-previous" : "commit-and-next";
          return this.field.onCommit(i25, e27, this.context);
        }
      }
    }, this._onInput = (t21) => {
      this.field.onInput(t21.target.value);
    }, this._onInputBlur = (t21) => {
      const e27 = this._input;
      e27 && t21.relatedTarget !== this._lock && this.field.onCommit("commit-on-blur", e27, this.context);
    }, this._selectText = () => {
      const t21 = () => {
        var _a;
        this._input === document.activeElement && ((_a = this._input) == null ? void 0 : _a.selectText());
      };
      t21(), P().then(t21);
    }, this._onAfterCreate = (t21) => {
      this._input = t21, t21.addEventListener("paste", this._onPaste), t21.addEventListener("beforeinput", this._onBeforeInput);
    }, this._onAfterRemoved = (t21) => {
      t21.removeEventListener("paste", this._onPaste), t21.removeEventListener("beforeinput", this._onBeforeInput);
    }, this._onPaste = (t21) => {
      var _a;
      const e27 = (_a = t21.clipboardData) == null ? void 0 : _a.getData("text");
      if (!e27) return;
      null != this.field.parse(e27, this.context) && (t21.stopPropagation(), this.field.onInput(e27));
    }, this._onBeforeInput = (t21) => {
      ("historyUndo" === t21.inputType || "historyRedo" === t21.inputType) && !this.field.dirty && t21.preventDefault();
    };
  }
  initialize() {
    this.addHandles(d3(() => this._rawDisplayValue, () => {
      const { committed: t21, inputValue: e27 } = this.field;
      t21 || e27 || this._input !== document.activeElement || this._selectText();
    }));
  }
  loadDependencies() {
    return r4({ button: () => import("./calcite-button-CIWFCC6E.js"), icon: () => import("./calcite-icon-7LCZHQE3.js"), input: () => import("./calcite-input-ATVHSFHY.js") });
  }
  render() {
    const { field: t21, mode: e27 } = this, i25 = "input" === e27, { locked: o19, readOnly: n38 } = t21;
    return n2("div", { class: this.classes({ [p11.base]: true, [p11.feedbackMode]: "feedback" === e27, [p11.inputMode]: "input" === e27, [p11.locked]: o19, [p11.readOnly]: n38 }) }, n2("div", { class: p11.title, key: "title" }, this._title), n2("div", { class: p11.value, key: "value", onkeydown: this._onKeyDown }, i25 ? this._renderValueInputMode() : this._renderValueFeedbackMode()));
  }
  get _formattedValue() {
    return this.field.getFormattedValue(this.context) || f12;
  }
  get _rawDisplayValue() {
    return this.field.getRawDisplayValue(this.context);
  }
  get _suffix() {
    return this.field.getSuffix(this.context);
  }
  get _title() {
    const { title: t21 } = this.field;
    return "string" == typeof t21 ? t21 : t21(this.context);
  }
  _renderValueFeedbackMode() {
    return n2(i2, null, n2("div", { class: p11.valueContent, key: "value-feedback" }, this._formattedValue), this.field.locked && "input" !== this.mode ? n2("calcite-icon", { class: p11.lockIcon, icon: h11.lock, key: "icon", scale: "s" }) : null);
  }
  _renderValueInputMode() {
    return this.field.readOnly ? this._renderValueReadOnly() : this._renderValueWritable();
  }
  _renderValueReadOnly() {
    return n2("div", { class: this.classes(p11.valueContent, p11.valueContentReadOnly), key: "value-read-only" }, this._formattedValue);
  }
  _renderValueWritable() {
    var _a;
    const { field: t21 } = this, { name: e27, invalid: i25, locked: o19 } = t21, n38 = ((_a = this.context) == null ? void 0 : _a.messages.sketch) ?? {}, s26 = o19 ? n38.unlockConstraint : n38.lockConstraint;
    return n2(i2, null, n2("calcite-input", { afterCreate: this._onAfterCreate, afterRemoved: this._onAfterRemoved, class: p11.input, "data-field-name": e27, "data-testid": `tooltip-field-${e27}`, key: "input", onblur: this._onInputBlur, onfocus: this._selectText, onkeydown: this._onInputKeyDown, scale: "s", status: i25 ? "invalid" : "idle", type: "text", value: this._rawDisplayValue ?? f12, onCalciteInputInput: this._onInput }), n2("div", { class: p11.inputSuffix, key: "suffix" }, this._suffix), t21.lockable ? n2("calcite-button", { afterCreate: this._onLockAfterCreate, afterRemoved: this._onLockAfterRemoved, alignment: "center", appearance: "transparent", class: p11.button, "data-testid": `tooltip-field-${e27}-lock`, iconStart: o19 ? h11.lock : h11.unlock, key: "lock", kind: "neutral", label: s26, onclick: this._onLockClick, scale: "s", tabIndex: -1, title: s26 }) : n2("div", { key: "lock-empty" }));
  }
};
r([m()], _11.prototype, "field", void 0), r([m()], _11.prototype, "context", void 0), r([m()], _11.prototype, "mode", void 0), r([m()], _11.prototype, "_input", void 0), r([m()], _11.prototype, "_lock", void 0), r([m()], _11.prototype, "_formattedValue", null), r([m()], _11.prototype, "_rawDisplayValue", null), r([m()], _11.prototype, "_suffix", null), r([m()], _11.prototype, "_title", null), _11 = r([a2("esri.views.interactive.tooltip.components.TooltipEditableField")], _11);
var f12 = "—";

// node_modules/@arcgis/core/views/interactive/tooltip/content/Fields.js
function i11(i25) {
  const l23 = i25.fields.filter((t21) => true === (t21 == null ? void 0 : t21.visible));
  return 0 === l23.length ? null : n2(i2, null, l23.map((e27) => n2(_11, { context: i25.context, field: e27, key: e27.id, mode: i25.mode })));
}

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentDrawMesh.js
var s17 = class extends S6 {
  _renderContent() {
    const { fieldContext: o19, info: t21, mode: i25 } = this, { visibleElements: s26 } = t21;
    return n2(i11, { context: o19, fields: [s26.coordinates ? t21.effectiveX : void 0, s26.coordinates ? t21.effectiveY : void 0, s26.elevation ? t21.elevation : void 0, s26.orientation ? t21.orientation : void 0, s26.scale ? t21.scale : void 0], mode: i25 });
  }
};
s17 = r([a2("esri.views.interactive.tooltip.content.TooltipContentDrawMesh")], s17);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentDrawPoint.js
var i12 = class extends S6 {
  _renderContent() {
    const { fieldContext: o19, info: t21, mode: r26 } = this, { elevation: i25, visibleElements: n38 } = t21;
    return n2(i11, { context: o19, fields: [n38.coordinates ? t21.effectiveX : void 0, n38.coordinates ? t21.effectiveY : void 0, n38.elevation ? i25 : void 0], mode: r26 });
  }
};
i12 = r([a2("esri.views.interactive.tooltip.content.TooltipContentDrawPoint")], i12);

// node_modules/@arcgis/core/views/interactive/tooltip/components/directionModeIcons.js
var e17 = { absolute: "absolute-direction", relative: "relative-direction" };

// node_modules/@arcgis/core/views/interactive/tooltip/components/DrawHeaderActions.js
var p12 = class extends B {
  constructor(e27) {
    super(e27), this.visibleElements = {};
  }
  render() {
    return n2("div", { class: s16 }, this._isElementVisible("direction") ? n2(l16, { messages: this.messages, sketchOptions: this.sketchOptions }) : null);
  }
  loadDependencies() {
    return r4({ button: () => import("./calcite-button-CIWFCC6E.js"), dropdown: () => import("./calcite-dropdown-K2AEH5E3.js"), "dropdown-item": () => import("./calcite-dropdown-item-BBADCNGZ.js"), "dropdown-group": () => import("./calcite-dropdown-group-L4DXBBDD.js") });
  }
  _isElementVisible(e27) {
    var _a;
    return ((_a = this.visibleElements) == null ? void 0 : _a[e27]) ?? this.sketchOptions.tooltips.visibleElements[e27];
  }
};
function l16(e27) {
  var _a, _b, _c, _d;
  const { directionMode: t21 } = e27.sketchOptions.values, o19 = (_a = e27.messages) == null ? void 0 : _a.sketch, s26 = (_b = o19 == null ? void 0 : o19.directionModeSelect) == null ? void 0 : _b.title, r26 = "absolute", c18 = "relative";
  return n2("calcite-dropdown", { key: "direction-mode", placement: "bottom-end", scale: "s", widthScale: "s", onCalciteDropdownSelect: (t22) => {
    var _a2, _b2;
    const o20 = (_b2 = (_a2 = t22.target.selectedItems) == null ? void 0 : _a2[0]) == null ? void 0 : _b2.getAttribute("data-mode");
    e27.sketchOptions.values.directionMode = o20 ?? "absolute";
  } }, n2("calcite-button", { alignment: "end", appearance: "transparent", iconStart: e17[t21], kind: "neutral", label: s26, scale: "s", slot: "trigger", title: s26 }), n2("calcite-dropdown-group", { selectionMode: "single" }, n2("calcite-dropdown-item", { "data-mode": c18, "data-testid": "tooltip-direction-mode-relative", iconStart: e17.relative, key: "relative", selected: t21 === c18 }, (_c = o19 == null ? void 0 : o19.directionModeSelect) == null ? void 0 : _c.relative), n2("calcite-dropdown-item", { "data-mode": r26, "data-testid": "tooltip-direction-mode-absolute", iconStart: e17.absolute, key: "absolute", selected: t21 === r26 }, (_d = o19 == null ? void 0 : o19.directionModeSelect) == null ? void 0 : _d.absolute)));
}
r([e3("esri/views/interactive/tooltip/t9n/Tooltip"), m()], p12.prototype, "messages", void 0), r([m()], p12.prototype, "sketchOptions", void 0), r([m()], p12.prototype, "visibleElements", void 0), p12 = r([a2("esri.views.interactive.tooltip.components.DrawHeaderActions")], p12);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentDrawPolygon.js
var n22 = class extends S6 {
  _renderContent() {
    const { fieldContext: o19, info: e27, mode: t21 } = this, { xyMode: r26, visibleElements: n38 } = e27;
    return n2(i11, { context: o19, fields: [..."direction-distance" === r26 ? [n38.direction ? e27.direction : void 0, n38.distance ? e27.distance : void 0] : [n38.coordinates ? e27.effectiveX : void 0, n38.coordinates ? e27.effectiveY : void 0], n38.elevation ? e27.elevation : void 0, n38.area ? e27.area : void 0], mode: t21 });
  }
  _renderActions() {
    const { xyMode: o19, sketchOptions: e27 } = this.info;
    return n2(p12, { sketchOptions: e27, visibleElements: { direction: "direction-distance" === o19 } });
  }
};
n22 = r([a2("esri.views.interactive.tooltip.content.TooltipContentDrawPolygon")], n22);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentDrawPolyline.js
var n23 = class extends S6 {
  _renderContent() {
    const { fieldContext: o19, info: t21, mode: e27 } = this, { xyMode: s26, visibleElements: n38 } = t21;
    return n2(i11, { context: o19, fields: [..."direction-distance" === s26 ? [n38.direction ? t21.direction : void 0, n38.distance ? t21.distance : void 0] : [n38.coordinates ? t21.effectiveX : void 0, n38.coordinates ? t21.effectiveY : void 0], n38.elevation ? t21.elevation : void 0, n38.totalLength ? t21.totalLength : void 0], mode: e27 });
  }
  _renderActions() {
    const { xyMode: o19, sketchOptions: t21 } = this.info;
    return n2(p12, { sketchOptions: t21, visibleElements: { direction: "direction-distance" === o19 } });
  }
};
n23 = r([a2("esri.views.interactive.tooltip.content.TooltipContentDrawPolyline")], n23);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentDrawRectangle.js
var n24 = class extends S6 {
  _renderContent() {
    const { area: t21, xSize: e27, ySize: s26, visibleElements: n38 } = this.info, a28 = this._messagesTooltip.sketch, p22 = this._formatters;
    return n2(i2, null, n38.size && null != e27 && null != s26 ? n2(a20, { title: a28.size, value: n2(a21, { left: p22.length(e27), right: p22.length(s26) }) }) : null, n38.area ? n2(a20, { title: a28.area, value: p22.area(t21) }) : null);
  }
};
n24 = r([a2("esri.views.interactive.tooltip.content.TooltipContentDrawRectangle")], n24);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentExtentRotate.js
var n25 = class extends S6 {
  _renderContent() {
    const { angle: t21, visibleElements: o19 } = this.info, s26 = this._messagesTooltip.sketch;
    return n2(i2, null, o19.rotation ? n2(a20, { title: s26.rotation, value: this._formatters.angleRelative(t21) }) : null);
  }
};
n25 = r([a2("esri.views.interactive.tooltip.content.TooltipContentExtentRotate")], n25);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentExtentScale.js
var n26 = class extends S6 {
  _renderContent() {
    const t21 = this.info, { visibleElements: e27 } = t21, r26 = this._messagesTooltip.sketch, n38 = this._formatters;
    return n2(i2, null, e27.size ? n2(a20, { title: r26.size, value: n2(a21, { left: n38.length(t21.xSize), right: n38.length(t21.ySize) }) }) : null, e27.scale ? n2(a20, { title: r26.scale, value: n2(a21, { left: n38.scale(t21.xScale), right: n38.scale(t21.yScale) }) }) : null);
  }
};
n26 = r([a2("esri.views.interactive.tooltip.content.TooltipContentExtentScale")], n26);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentMovePoint.js
var i13 = class extends S6 {
  _renderContent() {
    const { fieldContext: o19, info: t21, mode: r26 } = this, { visibleElements: i25 } = t21;
    return n2(i11, { context: o19, fields: [i25.coordinates ? t21.effectiveX : void 0, i25.coordinates ? t21.effectiveY : void 0, i25.elevation ? t21.elevation : void 0], mode: r26 });
  }
};
i13 = r([a2("esri.views.interactive.tooltip.content.TooltipContentMovePoint")], i13);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentReshapeEdgeOffset.js
var i14 = class extends S6 {
  _renderContent() {
    const { fieldContext: t21, info: o19, mode: s26 } = this, { visibleElements: i25 } = o19;
    return n2(i11, { context: t21, fields: [i25.distance ? o19.distance : void 0, i25.area ? o19.area : void 0, i25.totalLength ? o19.totalLength : void 0], mode: s26 });
  }
};
i14 = r([a2("esri.views.interactive.tooltip.content.TooltipContentReshapeEdgeOffset")], i14);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentSelectedVertex.js
var i15 = class extends S6 {
  _renderContent() {
    const { fieldContext: e27, info: o19, mode: r26 } = this, { visibleElements: i25 } = o19;
    return n2(i11, { context: e27, fields: [i25.coordinates ? o19.effectiveX : void 0, i25.coordinates ? o19.effectiveY : void 0, i25.elevation ? o19.elevation : void 0, i25.area && "polygon" === o19.geometryType ? o19.area : null, i25.totalLength && "polyline" === o19.geometryType ? o19.totalLength : null], mode: r26 });
  }
};
i15 = r([a2("esri.views.interactive.tooltip.content.TooltipContentSelectedVertex")], i15);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentTransformMesh.js
var s18 = class extends S6 {
  _renderContent() {
    const { fieldContext: o19, info: t21, mode: i25 } = this, { visibleElements: s26 } = t21;
    return n2(i11, { context: o19, fields: [s26.coordinates ? t21.effectiveX : void 0, s26.coordinates ? t21.effectiveY : void 0, s26.elevation ? t21.elevation : void 0, s26.orientation ? t21.orientation : void 0, s26.scale ? t21.scale : void 0], mode: i25 });
  }
};
s18 = r([a2("esri.views.interactive.tooltip.content.TooltipContentTransformMesh")], s18);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentTransformPoint.js
var s19 = class extends S6 {
  _renderContent() {
    const { fieldContext: o19, info: t21, mode: i25 } = this, { visibleElements: s26 } = t21;
    return n2(i11, { context: o19, fields: [s26.coordinates ? t21.effectiveX : void 0, s26.coordinates ? t21.effectiveY : void 0, s26.elevation ? t21.elevation : void 0, s26.orientation ? t21.orientation : void 0, s26.size ? t21.size : void 0], mode: i25 });
  }
};
s19 = r([a2("esri.views.interactive.tooltip.content.TooltipContentTransformPoint")], s19);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentTranslate.js
var n27 = class extends S6 {
  _renderContent() {
    const { info: t21 } = this, { visibleElements: o19 } = t21, e27 = this._messagesTooltip.sketch, n38 = this._formatters;
    return n2(i2, null, o19.distance ? n2(a20, { title: e27.distance, value: n38.length(t21.distance) }) : null);
  }
};
n27 = r([a2("esri.views.interactive.tooltip.content.TooltipContentTranslate")], n27);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentTranslateVertex.js
var i16 = class extends S6 {
  _renderContent() {
    const { distance: t21, elevation: e27, area: l23, totalLength: i25, visibleElements: n38 } = this.info, a28 = this._messagesTooltip.sketch, c18 = this._formatters;
    return n2(i2, null, n38.distance ? n2(a20, { title: a28.distance, value: c18.length(t21) }) : null, n38.elevation && null != (e27 == null ? void 0 : e27.actual) ? n2(a20, { title: a28.elevation, value: c18.verticalLength(e27.actual) }) : null, n38.area && null != l23 ? n2(a20, { title: a28.area, value: c18.area(l23) }) : null, n38.totalLength && null != i25 ? n2(a20, { title: a28.totalLength, value: c18.length(i25) }) : null);
  }
};
i16 = r([a2("esri.views.interactive.tooltip.content.TooltipContentTranslateVertex")], i16);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentTranslateXY.js
var n28 = class extends S6 {
  _renderContent() {
    const { info: t21 } = this, { visibleElements: o19 } = t21, e27 = this._messagesTooltip.sketch, n38 = this._formatters;
    return n2(i2, null, o19.distance ? n2(a20, { title: e27.distance, value: n38.length(t21.distance) }) : null);
  }
};
n28 = r([a2("esri.views.interactive.tooltip.content.TooltipContentTranslateXY")], n28);

// node_modules/@arcgis/core/views/interactive/tooltip/content/TooltipContentTranslateZ.js
var n29 = class extends S6 {
  _renderContent() {
    const { info: t21 } = this, { visibleElements: o19 } = t21, e27 = this._messagesTooltip.sketch;
    return n2(i2, null, o19.distance ? n2(a20, { title: e27.distance, value: this._formatters.verticalLengthRelative(t21.distance) }) : null);
  }
};
n29 = r([a2("esri.views.interactive.tooltip.content.TooltipContentTranslateZ")], n29);

// node_modules/@arcgis/core/views/interactive/tooltip/content/tooltipContentFactory.js
function j16(j24, d28) {
  if (null == d28) return null;
  const x15 = document.createElement("div");
  switch (d28.type) {
    case "draw-point":
      return new i12({ tooltip: j24, info: d28, container: x15 });
    case "draw-polygon":
      return new n22({ tooltip: j24, info: d28, container: x15 });
    case "draw-polyline":
      return new n23({ tooltip: j24, info: d28, container: x15 });
    case "draw-mesh":
      return new s17({ tooltip: j24, info: d28, container: x15 });
    case "draw-rectangle":
      return new n24({ tooltip: j24, info: d28, container: x15 });
    case "draw-circle":
      return new n21({ tooltip: j24, info: d28, container: x15 });
    case "extent-rotate":
      return new n25({ tooltip: j24, info: d28, container: x15 });
    case "extent-scale":
      return new n26({ tooltip: j24, info: d28, container: x15 });
    case "move-point":
      return new i13({ tooltip: j24, info: d28, container: x15 });
    case "selected-vertex":
      return new i15({ tooltip: j24, info: d28, container: x15 });
    case "transform-point":
      return new s19({ tooltip: j24, info: d28, container: x15 });
    case "transform-mesh":
      return new s18({ tooltip: j24, info: d28, container: x15 });
    case "translate":
      return new n27({ tooltip: j24, info: d28, container: x15 });
    case "translate-vertex":
      return new i16({ tooltip: j24, info: d28, container: x15 });
    case "translate-z":
      return new n29({ tooltip: j24, info: d28, container: x15 });
    case "translate-xy":
      return new n28({ tooltip: j24, info: d28, container: x15 });
    case "reshape-edge-offset":
      return new i14({ tooltip: j24, info: d28, container: x15 });
  }
}

// node_modules/@arcgis/core/views/interactive/Tooltip.js
var y12 = { base: `${e15}`, ltr: `${e15}--ltr`, rtl: `${e15}--rtl`, debug: `${e15}--debug` };
var g14 = 20;
var _12 = 16;
var C10 = "bottom-end";
var b13 = class extends o3.EventedAccessor {
  constructor(t21) {
    super(t21), this.info = null, this.options = null, this.position = null, this.content = null, this._focused = false, this.outerContainer = document.createElement("div"), this.debug = false, this._lastPosition = null, this._rtl = false, this._prevXY = [0, 0];
  }
  initialize() {
    const { outerContainer: t21 } = this;
    this.addHandles([d3(() => {
      var _a;
      return (_a = this.view.overlay) == null ? void 0 : _a.surface;
    }, (e27) => {
      t21.remove(), e27 == null ? void 0 : e27.appendChild(t21), this._rtl = u2(e27);
    }, A2), d3(() => this.info, (e27, o19) => {
      if (null != this.content && null != e27 && null != o19 && e27.type === o19.type) this.content.info = e27;
      else {
        u(this.content);
        const o20 = j16(this, e27);
        o20 ? (this.content = o20, o20.container && t21.appendChild(o20.container), this.exitInputMode()) : this.content = null;
      }
    }, A2), d3(() => ({ container: this.outerContainer, style: this._outerContainerStyle }), ({ container: t22, style: e27 }) => {
      Object.assign(t22.style, e27);
    }, P2), d3(() => ({ outerContainer: this.outerContainer, placement: this.effectivePlacement, effectiveOffset: this._effectiveOffset, rtl: this._rtl, debug: this.debug }), ({ outerContainer: t22, placement: e27, effectiveOffset: o19, rtl: n38, debug: i25 }) => {
      const { classList: s26 } = t22;
      s26.add(y12.base), s26.toggle(y12.rtl, n38), s26.toggle(y12.ltr, !n38), s26.toggle(y12.debug, i25), this.outerContainer.style.setProperty("--offset", `${o19}px`), n3(t22), w14(t22, e27);
    }, P2), p(() => "feedback" === this.mode, () => {
      this.position = null, this._clearOverride("effectivePlacement");
    }, C2), o2(this.outerContainer, "paste", (t22) => {
      this.emit("paste", t22);
    }), o2(this.outerContainer, ["focusin", "focusout"], () => {
      setTimeout(() => {
        var _a, _b;
        this._focused = ((_b = (_a = this.content) == null ? void 0 : _a.container) == null ? void 0 : _b.contains(document.activeElement)) ?? false;
      });
    })]);
  }
  destroy() {
    this.info = null, this.content = u(this.content), this.outerContainer.remove();
  }
  get mode() {
    var _a;
    return ((_a = this.content) == null ? void 0 : _a.mode) ?? "feedback";
  }
  get focused() {
    return this._focused;
  }
  get visible() {
    return "none" !== this._outerContainerStyle.display;
  }
  get contentContainer() {
    var _a;
    return (_a = this.content) == null ? void 0 : _a.container;
  }
  get effectivePlacement() {
    var _a;
    const t21 = (_a = this.options) == null ? void 0 : _a.placement;
    return "auto" === t21 ? "bottom-end" : t21 ?? C10;
  }
  get _screenPoint() {
    const { inputManager: t21 } = this.view;
    return (t21 == null ? void 0 : t21.multiTouchActive) ? null : t21 == null ? void 0 : t21.latestPointerLocation;
  }
  get _effectiveOffset() {
    var _a;
    return ((_a = this.options) == null ? void 0 : _a.offset) ?? g14;
  }
  get _outerContainerStyle() {
    const t21 = this.position ?? this._screenPoint;
    if (this._lastPosition = i4(t21), null != t21 && null != this.content) {
      return { display: "block", transform: `translate(${Math.round(t21.x)}px, ${Math.round(t21.y)}px)` };
    }
    return { display: "none", transform: "none" };
  }
  clear() {
    this.info = null;
  }
  async enterInputMode(t21) {
    var _a;
    const e27 = this.position ?? this._lastPosition ?? this._screenPoint, o19 = this.position = i4(e27), { effectivePlacement: n38 } = this;
    this._override("effectivePlacement", n38);
    const i25 = () => {
      o19 && (this.position = j17(this.contentContainer, o19, this._effectiveOffset, this.view), Object.assign(this.outerContainer.style, this._outerContainerStyle));
    };
    await ((_a = this.content) == null ? void 0 : _a.enterInputMode(t21, i25));
  }
  async exitInputMode(t21) {
    var _a;
    await ((_a = this.content) == null ? void 0 : _a.exitInputMode(t21));
  }
  onDragStart(t21, e27) {
    this._prevXY = [t21, e27];
  }
  onDrag(t21, e27) {
    const o19 = t21 - this._prevXY[0], n38 = e27 - this._prevXY[1];
    this._prevXY = [t21, e27];
    const { position: i25 } = this;
    if (i25) {
      const { view: s26 } = this, r26 = t21 - s26.position[0], c18 = e27 - s26.position[1];
      if (r26 < 0 || r26 > s26.width || c18 < 0 || c18 > s26.height - _12) return;
      this.position = c2(i25.x + o19, i25.y + n38);
    }
  }
  onDragEnd() {
    this._prevXY = [0, 0];
  }
};
function j17(t21, e27, o19, n38) {
  if (!t21 || !n38.container) return e27;
  const i25 = t21.getBoundingClientRect(), { left: s26, top: r26 } = n38.container.getBoundingClientRect();
  let { x: c18, y: l23 } = e27;
  const a28 = i25.left - s26 - o19;
  a28 < 0 && (c18 -= a28);
  const u18 = i25.right - s26 + o19 - n38.width;
  u18 > 0 && (c18 -= u18);
  const h18 = i25.top - r26 - o19;
  h18 < 0 && (l23 -= h18);
  const f18 = i25.bottom - r26 + o19 - n38.height;
  return f18 > 0 && (l23 -= f18), c2(c18, l23);
}
r([m({ nonNullable: true })], b13.prototype, "view", void 0), r([m()], b13.prototype, "info", void 0), r([m()], b13.prototype, "options", void 0), r([m()], b13.prototype, "position", void 0), r([m()], b13.prototype, "content", void 0), r([m({ readOnly: true })], b13.prototype, "mode", null), r([m()], b13.prototype, "_focused", void 0), r([m({ readOnly: true })], b13.prototype, "focused", null), r([m({ readOnly: true })], b13.prototype, "outerContainer", void 0), r([m({ readOnly: true })], b13.prototype, "contentContainer", null), r([m({ readOnly: true })], b13.prototype, "effectivePlacement", null), r([m()], b13.prototype, "debug", void 0), r([m()], b13.prototype, "_lastPosition", void 0), r([m()], b13.prototype, "_screenPoint", null), r([m()], b13.prototype, "_rtl", void 0), r([m()], b13.prototype, "_effectiveOffset", null), r([m()], b13.prototype, "_outerContainerStyle", null), b13 = r([a2("esri.views.interactive.Tooltip")], b13);
var P6 = ["top", "bottom", "leading", "trailing"].flatMap((t21) => [O7(`${t21}-start`), O7(t21), O7(`${t21}-end`)]);
function O7(t21) {
  return `${y12.base}--${t21}`;
}
function w14({ classList: t21 }, e27) {
  P6.forEach((e28) => t21.remove(e28)), t21.add(O7(e27));
}
var x9 = b13;

// node_modules/@arcgis/core/views/interactive/tooltip/tooltipCommonUtils.js
function k9(t21) {
  const e27 = new x9(t21());
  return e27.addHandles(d3(() => t21(), ({ view: t22, options: o19, info: n38 }) => {
    e27.view = t22, void 0 !== o19 && (e27.options = o19), void 0 !== n38 && (e27.info = n38);
  })), e27;
}
function P7(t21, e27) {
  const o19 = a6(e27.vertexSpace), { scale: n38, orientation: a28 } = t21, { transform: l23 } = e27, s26 = q9(l23);
  o19 && null != s26 ? (a28.actual = o7(s26, "degrees", "arithmetic"), a28.visible = true) : (a28.actual = null, a28.visible = false), o19 ? (n38.actual = i7(C11(l23)), n38.visible = true) : (n38.actual = null, n38.visible = false);
}
function q9(t21) {
  if (!t21) return 0;
  const e27 = B7(t21.rotationAxis);
  return null != e27 ? e27 * t21.rotationAngle : null;
}
function B7(t21) {
  return J3(t21, N2) ? 1 : J3(t21, O8) ? -1 : null;
}
var O8 = y3(n6(), N2);
function C11(t21) {
  return t21 ? Math.max(...t21.scale) : 1;
}
function G3(t21, e27) {
  return !("key-down" !== t21.type || t21.key !== f11.enterInputMode || !e27 || !J8(e27.info)) && (e27.enterInputMode(), t21.preventDefault(), t21.stopPropagation(), true);
}
function J8(t21) {
  const e27 = t21 == null ? void 0 : t21.sketchOptions;
  if (!e27) return false;
  const { inputEnabled: o19, visibleElements: n38 } = e27.tooltips;
  return o19 && true === t21.editableFields.some(({ name: t22 }) => "x" === t22 || "y" === t22 ? n38.coordinates : n38[t22]);
}
function L10(t21, e27, o19) {
  var _a;
  if (!e27 || !("geographic" in e27)) return;
  const n38 = (_a = t21.clipboardData) == null ? void 0 : _a.getData("text");
  if (!n38) return;
  const r26 = (e28) => {
    t21.stopPropagation(), t21.preventDefault(), o19 == null ? void 0 : o19.onBeforePaste(), e28(), o19 == null ? void 0 : o19.onAfterPaste();
  };
  if (e27.geographic) {
    const t22 = G2(n38);
    t22 && r26(() => {
      e27.longitude.applyValue(t22.longitude), e27.latitude.applyValue(t22.latitude);
    });
  } else {
    const t22 = Q5(n38);
    t22 && r26(() => {
      e27.x.applyValue(t22.x), e27.y.applyValue(t22.y);
    });
  }
}

// node_modules/@arcgis/core/views/interactive/tooltip/infos/SketchTooltipInfo.js
var r18 = class extends b {
  constructor(e27) {
    super(e27), this.helpMessage = void 0, this.viewType = void 0;
  }
  get visibleElements() {
    return this.sketchOptions.tooltips.visibleElements;
  }
  get allFields() {
    return [];
  }
  get editableFields() {
    return this.allFields.filter((e27) => e27.visible && !e27.readOnly);
  }
  clearInputValues() {
    this.allFields.forEach((e27) => e27.clearInputValue());
  }
};
r([m()], r18.prototype, "sketchOptions", void 0), r([m()], r18.prototype, "visibleElements", null), r([m()], r18.prototype, "helpMessage", void 0), r([m()], r18.prototype, "viewType", void 0), r([m()], r18.prototype, "allFields", null), r([m()], r18.prototype, "editableFields", null), r18 = r([a2("esri.views.interactive.tooltip.infos.SketchTooltipInfo")], r18);

// node_modules/@arcgis/core/views/interactive/tooltip/infos/DrawCircleTooltipInfo.js
var i17 = class extends r18 {
  constructor(o19) {
    super(o19), this.type = "draw-circle", this.radius = null, this.xSize = null, this.ySize = null, this.area = d11;
  }
  get allFields() {
    return [];
  }
};
r([m()], i17.prototype, "type", void 0), r([m()], i17.prototype, "radius", void 0), r([m()], i17.prototype, "xSize", void 0), r([m()], i17.prototype, "ySize", void 0), r([m()], i17.prototype, "area", void 0), r([m()], i17.prototype, "allFields", null), i17 = r([a2("esri.views.interactive.tooltip.infos.DrawCircleTooltipInfo")], i17);

// node_modules/@arcgis/core/views/interactive/tooltip/fields/TooltipField.js
var s21 = class extends b {
  constructor(t21) {
    super(t21), this.actual = null, this.lockable = true, this.id = n(), this.inputValue = null, this.readOnly = false, this.suffix = null, this.visible = true, this.invalid = false, this.unlockOnVertexPlacement = true;
  }
  get committed() {
    return this.lockable ? this._get("committed") : null;
  }
  set committed(t21) {
    this.lockable && this._set("committed", t21);
  }
  get dirty() {
    return null != this.inputValue;
  }
  get locked() {
    return this.lockable && null != this.committed;
  }
  onInput(t21) {
    this.inputValue = t21;
  }
  onCommit(t21, o19, i25) {
    this.lockable ? this._onCommitLockable(t21, i25) : this._onCommitNonLockable(i25), this.invalid && "commit-and-exit" === t21 || i25.onCommit(o19, t21);
  }
  _onCommitLockable(t21, o19) {
    const { inputValue: i25, locked: l23 } = this;
    l23 && n30(i25) ? this.unlock() : ("commit-and-exit" === t21 && !l23 || null != i25) && this._parseInputAndLock(o19);
  }
  _onCommitNonLockable(t21) {
    const { inputValue: o19 } = this;
    n30(o19) ? this.setActual(null) : null != o19 && this._parseInputAndSetActual(t21);
  }
  applyValue(t21) {
    this.lockable ? this.lock(t21) : this.setActual(t21);
  }
  clearInputValue() {
    this.inputValue = null, this.invalid = false;
  }
  setActual(t21) {
    this.actual = t21, this.clearInputValue();
  }
  lock(t21) {
    this.lockable && (this.committed = t21 ?? this.actual, this.clearInputValue());
  }
  unlock() {
    this.lockable && (this.committed = null, this.clearInputValue());
  }
  toggleLock(t21) {
    this.lockable && (this.locked ? this.unlock() : this._parseInputAndLock(t21));
  }
  getSuffix(t21) {
    const { suffix: o19 } = this;
    return "function" == typeof o19 ? o19(t21) : o19;
  }
  getFormattedValue(t21) {
    const { actual: o19, committed: i25, format: l23 } = this;
    return null != i25 ? l23(i25, t21) : null != o19 ? l23(o19, t21) : null;
  }
  getRawDisplayValue(t21) {
    const { actual: o19, committed: i25, inputValue: l23 } = this;
    return null != l23 ? l23 : this.lockable && null != i25 ? this.formatForInputMode(i25, t21) : null != o19 ? this.formatForInputMode(o19, t21) : null;
  }
  _parseInputAndSetActual(t21) {
    const { inputValue: o19 } = this;
    if (null == o19 || n30(o19)) return this.setActual(null);
    const i25 = this.parse(o19, t21);
    null != i25 ? this.setActual(i25) : this.invalid = true;
  }
  _parseInputAndLock(t21) {
    const { inputValue: o19, actual: i25 } = this;
    if (n30(o19)) return this.unlock();
    if (null == o19) return this.lock(i25);
    const l23 = this.parse(o19, t21);
    null != l23 ? this.lock(l23) : this.invalid = true;
  }
};
function n30(t21) {
  return null != t21 && "" === t21.trim();
}
r([m()], s21.prototype, "actual", void 0), r([m()], s21.prototype, "committed", null), r([m()], s21.prototype, "dirty", null), r([m()], s21.prototype, "format", void 0), r([m()], s21.prototype, "formatForInputMode", void 0), r([m()], s21.prototype, "lockable", void 0), r([m()], s21.prototype, "locked", null), r([m()], s21.prototype, "id", void 0), r([m()], s21.prototype, "inputValue", void 0), r([m()], s21.prototype, "name", void 0), r([m()], s21.prototype, "parse", void 0), r([m()], s21.prototype, "readOnly", void 0), r([m()], s21.prototype, "suffix", void 0), r([m()], s21.prototype, "title", void 0), r([m()], s21.prototype, "visible", void 0), r([m()], s21.prototype, "invalid", void 0), r([m()], s21.prototype, "unlockOnVertexPlacement", void 0), s21 = r([a2("esri.views.interactive.tooltip.fields.TooltipField")], s21);

// node_modules/@arcgis/core/views/interactive/tooltip/fields/TooltipFieldElevation.js
var c9 = class extends s21 {
  constructor(t21) {
    super(t21), this.showAsZ = false;
  }
  normalizeCtorArgs(t21) {
    const s26 = (t22) => t22.inputUnitInfos.verticalLength.unit;
    return { name: "elevation", actual: h6, parse: B6({ createQuantity: (t22, o19) => a13(t22, s26(o19)) }), format: (t22, o19) => o19.formatters.verticalLength(t22), formatForInputMode: (t22, o19) => o19.formatters.scalar(s10(t22, s26(o19))), suffix: (t22) => t22.inputUnitInfos.verticalLength.abbreviation, title: (t22) => t22.messages.sketch[this.showAsZ ? "z" : "elevation"], unlockOnVertexPlacement: false, ...t21 };
  }
};
r([m()], c9.prototype, "showAsZ", void 0), c9 = r([a2("esri.views.interactive.tooltip.fields.TooltipFieldElevation")], c9);

// node_modules/@arcgis/core/views/interactive/tooltip/fields/TooltipFieldOrientation.js
var c10 = class extends s21 {
  constructor(t21) {
    super(t21), this.precision = 1;
  }
  normalizeCtorArgs(t21) {
    const i25 = (t22) => t22.inputUnitInfos.angle.unit;
    return { name: "orientation", actual: null, parse: B6({ createQuantity: (t22, r26) => o7(t22, i25(r26), "geographic"), sanitize: C9 }), format: (t22) => {
      const o19 = A7(t22);
      return U6(o19, "geographic", this.precision);
    }, formatForInputMode: (t22, r26) => {
      const o19 = A7(t22);
      return r26.formatters.scalar(o19);
    }, suffix: (t22) => t22.inputUnitInfos.angle.abbreviation, title: (t22) => t22.messages.sketch.orientation, ...t21 };
  }
};
r([m()], c10.prototype, "precision", void 0), c10 = r([a2("esri.views.interactive.tooltip.fields.TooltipFieldOrientation")], c10);

// node_modules/@arcgis/core/views/interactive/tooltip/fields/TooltipFieldSize.js
var a22 = class extends s21 {
  constructor(t21) {
    super(t21), this.precision = null;
  }
  normalizeCtorArgs(t21) {
    const s26 = (t22) => t22.inputUnitInfos.length.unit;
    return { name: "size", actual: null, parse: B6({ createQuantity: (t22, r26) => a13(t22, s26(r26)) }), format: (t22, o19) => o19.formatters.length(t22), formatForInputMode: (t22, o19) => o19.formatters.scalar(s10(t22, s26(o19))), suffix: (t22) => t22.inputUnitInfos.length.abbreviation, title: (t22) => t22.messages.sketch.size, ...t21 };
  }
};
r([m()], a22.prototype, "precision", void 0), a22 = r([a2("esri.views.interactive.tooltip.fields.TooltipFieldSize")], a22);

// node_modules/@arcgis/core/views/interactive/tooltip/fields/fields.js
function y14(n38) {
  const r26 = (t21) => t21.inputUnitInfos.angle.unit, i25 = (t21) => t21.sketchOptions.values.effectiveDirectionMode;
  return new s21({ name: "direction", actual: U3, parse: B6({ createQuantity: (t21, a28) => o7(t21, r26(a28), "geographic"), sanitize: C9 }), format: (t21, e27) => {
    const a28 = i25(e27), n39 = w11(t21, a28);
    switch (a28) {
      case j13.Absolute:
        return e27.formatters.direction(n39);
      case j13.Relative:
        return e27.formatters.directionRelative(n39);
      case j13.RelativeBilateral:
        return e27.formatters.directionRelativeBilateral(n39);
    }
  }, formatForInputMode: (t21, e27) => {
    const n39 = w11(t21, i25(e27));
    return e27.formatters.scalar(s10(n39, r26(e27)));
  }, suffix: (t21) => t21.inputUnitInfos.angle.abbreviation, title: (t21) => {
    const e27 = i25(t21), { absolute: a28, relative: n39 } = t21.messages.sketch.direction;
    switch (e27) {
      case j13.Absolute:
        return a28;
      case j13.Relative:
      case j13.RelativeBilateral:
        return n39;
    }
  }, ...n38 });
}
function U9(t21) {
  const e27 = (t22) => t22.inputUnitInfos.length.unit;
  return new s21({ name: "distance", actual: h6, parse: B6({ createQuantity: (t22, a28) => a13(Math.max(t22, 0), e27(a28)) }), format: (t22, e28) => e28.formatters.length(t22), formatForInputMode: (t22, n38) => n38.formatters.scalar(s10(t22, e27(n38))), suffix: (t22) => t22.inputUnitInfos.length.abbreviation, title: (t22) => t22.messages.sketch.distance, ...t21 });
}
function w15(t21) {
  return U9({ format: (t22, e27) => e27.formatters.totalLength(t22), title: (t22) => t22.messages.sketch.totalLength, readOnly: true, ...t21 });
}
function F8(t21) {
  return U9({ ...t21 });
}
function M11(t21) {
  return new c9(t21);
}
function k10(t21) {
  return new c10(t21);
}
function R12(t21) {
  return B8("scale", { name: "scale", actual: null, parse: B6({ createQuantity: (t22) => i7(Math.abs(t22)) }), ...t21 });
}
function Q6(t21) {
  const e27 = (t22) => t22.inputUnitInfos.area.unit;
  return new s21({ name: "area", actual: d11, parse: B6({ createQuantity: (t22, a28) => l10(t22, e27(a28)) }), format: (t22, e28) => e28.formatters.area(t22), formatForInputMode: (t22, n38) => n38.formatters.scalar(s10(t22, e27(n38))), suffix: (t22) => t22.inputUnitInfos.area.abbreviation, title: (t22) => t22.messages.sketch.area, readOnly: true, ...t21 });
}
function D6(e27) {
  return new s21({ name: "x", actual: U3, parse: H4, format: (t21, e28) => e28.formatters.longitudeDecimalDegrees(t21), formatForInputMode: (t21) => w13(t21), suffix: (t21) => t21.inputUnitInfos.angle.abbreviation, title: (t21) => t21.messages.sketch.longitude, ...e27 });
}
function O9(e27) {
  return new s21({ name: "y", actual: U3, parse: J7, format: (t21, e28) => e28.formatters.latitudeDecimalDegrees(t21), formatForInputMode: (t21) => A10(t21), suffix: (t21) => t21.inputUnitInfos.angle.abbreviation, title: (t21) => t21.messages.sketch.latitude, ...e27 });
}
function T7(t21) {
  return B8("x", { name: "x", ...t21 });
}
function A11(t21) {
  return B8("y", { name: "y", ...t21 });
}
function B8(t21, e27) {
  return new s21({ actual: i7(0), parse: B6({ createQuantity: (t22) => i7(t22) }), format: (t22, e28) => e28.formatters.scalar(t22), formatForInputMode: (t22, e28) => e28.formatters.scalar(t22), title: (e28) => e28.messages.sketch[t21], ...e27 });
}

// node_modules/@arcgis/core/views/support/geodesicMeasurementUtils.js
function e18(e27) {
  return y7(e27) || O(e27);
}
function r19(e27, r26, p22, ...i25) {
  return y7(e27) ? r26.apply(void 0, i25) : O(e27) ? p22.apply(void 0, i25) : null;
}

// node_modules/@arcgis/core/views/interactive/tooltip/infos/TooltipInfoWithCoordinates.js
var h12 = (h18) => {
  let f18 = class extends h18 {
    constructor() {
      super(...arguments), this.longitude = D6(), this.latitude = O9(), this.x = T7(), this.y = A11(), this.elevation = M11(), this.geographic = false;
    }
    get effectiveX() {
      return this.geographic ? this.longitude : this.x;
    }
    get effectiveY() {
      return this.geographic ? this.latitude : this.y;
    }
    get key() {
      return { longitude: this.longitude.actual, latitude: this.latitude.actual, x: this.x.actual, y: this.y.actual, elevation: this.elevation.actual, geographic: this.geographic };
    }
    setLocationFromPoint(t21, i25 = t21 == null ? void 0 : t21.spatialReference) {
      if (this.geographic = !!i25 && e18(i25), null == t21) return this._setActualLonLat(null, null), void this._setActualXY(null, null);
      if (this.geographic) {
        const e27 = i3(t21, g15);
        this._setActualLonLat(K4(e27 == null ? void 0 : e27[0]), K4(e27 == null ? void 0 : e27[1]));
      } else this._setActualXY(i7(t21.x), i7(t21.y));
    }
    _setActualLonLat(t21, e27) {
      this.longitude.actual = t21, this.latitude.actual = e27;
    }
    _setActualXY(t21, e27) {
      this.x.actual = t21, this.y.actual = e27;
    }
  };
  return r([m()], f18.prototype, "geographic", void 0), r([m()], f18.prototype, "effectiveX", null), r([m()], f18.prototype, "effectiveY", null), r([m()], f18.prototype, "key", null), f18 = r([a2("esri.views.interactive.tooltip.infos.TooltipInfoWithCoordinates")], f18), f18;
};
var g15 = [0, 0];

// node_modules/@arcgis/core/views/interactive/tooltip/infos/DrawMeshTooltipInfo.js
var p13 = class extends h12(r18) {
  constructor(o19) {
    super(o19), this.type = "draw-mesh", this.orientation = k10({ lockable: false }), this.scale = R12({ lockable: false });
  }
  get allFields() {
    return [this.longitude, this.latitude, this.x, this.y, this.elevation, this.orientation, this.scale];
  }
};
r([m()], p13.prototype, "helpMessage", void 0), r([m()], p13.prototype, "allFields", null), p13 = r([a2("esri.views.interactive.tooltip.infos.DrawMeshTooltipInfo")], p13);

// node_modules/@arcgis/core/views/interactive/tooltip/infos/DrawPointTooltipInfo.js
var i18 = class extends h12(r18) {
  constructor(o19) {
    super(o19), this.type = "draw-point";
  }
  get allFields() {
    return [this.longitude, this.latitude, this.x, this.y, this.elevation];
  }
};
r([m()], i18.prototype, "helpMessage", void 0), r([m()], i18.prototype, "allFields", null), i18 = r([a2("esri.views.interactive.tooltip.infos.DrawPointTooltipInfo")], i18);

// node_modules/@arcgis/core/views/interactive/tooltip/infos/DrawPolygonTooltipInfo.js
var c11 = class extends h12(r18) {
  constructor(o19) {
    super(o19), this.type = "draw-polygon", this.direction = y14(), this.distance = F8(), this.area = Q6(), this.xyMode = "direction-distance";
  }
  get allFields() {
    return [this.direction, this.distance, this.longitude, this.latitude, this.x, this.y, this.elevation, this.area];
  }
};
r([m()], c11.prototype, "xyMode", void 0), r([m()], c11.prototype, "helpMessage", void 0), r([m()], c11.prototype, "allFields", null), c11 = r([a2("esri.views.interactive.tooltip.infos.DrawPolygonTooltipInfo")], c11);

// node_modules/@arcgis/core/views/interactive/tooltip/infos/DrawPolylineTooltipInfo.js
var c12 = class extends h12(r18) {
  constructor(t21) {
    super(t21), this.type = "draw-polyline", this.direction = y14(), this.distance = F8(), this.totalLength = w15(), this.xyMode = "direction-distance";
  }
  get allFields() {
    return [this.direction, this.distance, this.longitude, this.latitude, this.x, this.y, this.elevation, this.totalLength];
  }
};
r([m()], c12.prototype, "helpMessage", void 0), r([m()], c12.prototype, "xyMode", void 0), r([m()], c12.prototype, "allFields", null), c12 = r([a2("esri.views.interactive.tooltip.infos.DrawPolylineTooltipInfo")], c12);

// node_modules/@arcgis/core/views/interactive/tooltip/infos/DrawRectangleTooltipInfo.js
var p14 = class extends r18 {
  constructor(o19) {
    super(o19), this.type = "draw-rectangle", this.xSize = h6, this.ySize = h6, this.area = d11;
  }
  get allFields() {
    return [];
  }
};
r([m()], p14.prototype, "type", void 0), r([m()], p14.prototype, "xSize", void 0), r([m()], p14.prototype, "ySize", void 0), r([m()], p14.prototype, "area", void 0), r([m()], p14.prototype, "allFields", null), p14 = r([a2("esri.views.interactive.tooltip.infos.DrawRectangleTooltipInfo")], p14);

// node_modules/@arcgis/core/views/support/measurementUtils.js
function l17(l23) {
  return A3(l23) ? C3(l23) || O(l23) || w2(l23) || A4(l23) ? w5 : l23 : a9(l23);
}

// node_modules/@arcgis/core/views/support/euclideanAreaMeasurementUtils.js
function g16(t21, o19 = k11()) {
  return h13(t21, o19);
}
function j18(t21, o19 = k11()) {
  return h13(t21, o19, false);
}
function h13(r26, g22, j24 = r26.hasZ) {
  const h18 = l17(r26.spatialReference), k14 = re(h18);
  if (null == k14) return null;
  const b20 = (t21, o19) => !(o19.length < 2) && (o5(t21, o19[0], o19[1], j24 && o19[2] || 0), true);
  let v15 = 0;
  for (const t21 of r26.rings) {
    const o19 = t21.length;
    if (o19 < 3) continue;
    const { positionsWorldCoords: a28 } = g22;
    for (; a28.length < o19; ) a28.push(n6());
    const j25 = y15, k15 = o5(d22, 0, 0, 0), x15 = 1 / o19;
    for (let n38 = 0; n38 < o19; n38++) {
      if (!b20(j25, t21[n38])) return null;
      if (!n11(j25, r26.spatialReference, a28[n38], h18)) return null;
      q(k15, k15, a28[n38], x15);
    }
    const C14 = p4(a28[0], a28[1], k15, D());
    if (0 === j5(O2(C14))) continue;
    for (let t22 = 0; t22 < o19; t22++) J4(C14, k15, a28[t22], a28[t22]);
    const R19 = U10(a28);
    for (let t22 = 0; t22 < R19.length; t22 += 3) v15 += v5(a28[R19[t22]], a28[R19[t22 + 1]], a28[R19[t22 + 2]]);
  }
  return l10(v15, k14);
}
var y15 = n6();
var d22 = n6();
function k11() {
  return { positionsWorldCoords: [] };
}
function U10(t21) {
  return e7(b14(t21), [], 2);
}
function b14(t21) {
  const o19 = new Float64Array(2 * t21.length);
  for (let r26 = 0; r26 < t21.length; ++r26) {
    const n38 = t21[r26], e27 = 2 * r26;
    o19[e27] = n38[0], o19[e27 + 1] = n38[1];
  }
  return o19;
}

// node_modules/@arcgis/core/views/support/geodesicAreaMeasurementUtils.js
function o15(e27) {
  const { spatialReference: r26 } = e27;
  return r19(r26, n31, i19, e27);
}
function n31(r26) {
  return l10(Math.abs(v6([r26], "square-meters")[0]), "square-meters");
}
function i19(t21) {
  try {
    return l10(Math.abs(q4(t21, "square-meters")), "square-meters");
  } catch (s26) {
    return null;
  }
}

// node_modules/@arcgis/core/views/support/automaticAreaMeasurementUtils.js
function o16(o19, u18, i25 = k11()) {
  if ("on-the-ground" === u18) {
    const r26 = o15(o19);
    return null != r26 ? r26 : j18(o19, i25);
  }
  return g16(o19, i25);
}
function u12(e27, r26 = k11()) {
  return o16(e27, "on-the-ground", r26);
}

// node_modules/@arcgis/core/views/support/euclideanLengthMeasurementUtils.js
var a23;
function f13(t21) {
  return p15(t21, a23.Horizontal);
}
function p15(r26, e27) {
  const { hasZ: i25, spatialReference: l23 } = r26, o19 = l17(l23);
  let c18 = 0;
  const s26 = se(o19);
  if (null == s26) return null;
  const f18 = e27 === a23.Direct ? x11 : Z7;
  for (const t21 of r26.paths) {
    if (t21.length < 2) continue;
    const n38 = t21.length - 1;
    for (let r27 = 0; r27 < n38; ++r27) {
      const n39 = t21[r27];
      D7[0] = n39[0], D7[1] = n39[1], D7[2] = i25 ? n39[2] : 0;
      const e28 = t21[r27 + 1];
      H5[0] = e28[0], H5[1] = e28[1], H5[2] = i25 ? e28[2] : 0;
      const o20 = f18(D7, H5, l23);
      if (null == o20) return null;
      c18 += o20.value;
    }
  }
  return a13(c18, s26);
}
function z9(t21, n38) {
  const { spatialReference: r26 } = t21;
  return s4(r26, n38.spatialReference) ? (D7[0] = t21.x, D7[1] = t21.y, D7[2] = t21.hasZ ? t21.z : 0, H5[0] = n38.x, H5[1] = n38.y, H5[2] = n38.hasZ ? n38.z : 0, Z7(D7, H5, r26)) : null;
}
function R13(t21) {
  return null != t21 ? j19(t21.hasZ ? t21.z : 0, t21.spatialReference) : null;
}
function j19(n38, e27) {
  const i25 = te(e27);
  return null != i25 ? a13(n38 ?? 0, i25) : null;
}
function x11(n38, r26, e27) {
  const i25 = V6(n38, r26, e27, a23.Direct);
  return null != i25 ? a13(i25.direct, i25.unit) : null;
}
function Z7(n38, r26, e27) {
  const i25 = V6(n38, r26, e27, a23.Horizontal);
  return null != i25 ? a13(i25.horizontal, i25.unit) : null;
}
function V6(t21, r26, l23, c18) {
  const s26 = l17(l23), f18 = se(s26);
  if (null == f18) return null;
  const p22 = r26[2] - t21[2];
  if (c18 === a23.Vertical) return { verticalSigned: p22, unit: f18 };
  if (!n11(t21, l23, U11, s26) || !n11(r26, l23, b15, s26)) return null;
  if (c18 === a23.Direct) {
    return { direct: p3(b15, U11), unit: f18 };
  }
  if (o5(S7, t21[0], t21[1], r26[2]), !n11(S7, l23, S7, s26)) return null;
  const h18 = p3(S7, b15);
  if (c18 === a23.Horizontal) return { horizontal: h18, unit: f18 };
  return { direct: p3(b15, U11), horizontal: h18, vertical: Math.abs(p22), unit: f18 };
}
!function(t21) {
  t21[t21.Direct = 0] = "Direct", t21[t21.Horizontal = 1] = "Horizontal", t21[t21.Vertical = 2] = "Vertical";
}(a23 || (a23 = {}));
var D7 = n6();
var H5 = n6();
var U11 = n6();
var b15 = n6();
var S7 = n6();

// node_modules/@arcgis/core/views/support/geodesicLengthMeasurementUtils.js
function m10(e27) {
  const { spatialReference: t21 } = e27;
  return r19(t21, l18, g17, e27);
}
function f14(e27, t21) {
  if (!s4(e27.spatialReference, t21.spatialReference)) return null;
  const { spatialReference: r26 } = e27;
  return R14[0] = e27.x, R14[1] = e27.y, R14[2] = e27.hasZ ? e27.z : 0, d23[0] = t21.x, d23[1] = t21.y, d23[2] = t21.hasZ ? t21.z : 0, u13(R14, d23, r26);
}
function u13(e27, t21, r26) {
  return r19(r26, a24, p16, e27, t21, r26);
}
function a24(t21, r26, s26) {
  return a13(q5(j20, t21, r26, s26).distance, "meters");
}
function p16(t21, n38, s26) {
  return a13(C4(y16(t21, n38, s26), "meters"), "meters");
}
function l18(t21) {
  return a13(R5([t21], "meters")[0], "meters");
}
function g17(t21) {
  return a13(C4(t21, "meters"), "meters");
}
function y16(e27, t21, r26) {
  return { type: "polyline", spatialReference: r26, paths: [[[...e27], [...t21]]] };
}
var j20 = new b6();
var R14 = n6();
var d23 = n6();

// node_modules/@arcgis/core/views/support/automaticLengthMeasurementUtils.js
function c13(e27) {
  return m10(e27) ?? f13(e27);
}
function m11(e27, t21) {
  return f14(e27, t21) ?? z9(e27, t21);
}
var f15 = n6();
var l19 = n6();

// node_modules/@arcgis/core/views/draw/support/tooltipUtils.js
function M12(e27, t21) {
  return { point: new i18({ sketchOptions: t21, viewType: e27 }), polyline: new c12({ sketchOptions: t21, viewType: e27 }), polygon: new c11({ sketchOptions: t21, viewType: e27 }), mesh: new p13({ sketchOptions: t21, viewType: e27 }), rectangle: new p14({ sketchOptions: t21 }), circle: new i17({ sketchOptions: t21 }) };
}
function T8(e27) {
  const { directionOptions: t21, geometryType: o19, sketchOptions: n38, tooltipInfos: i25 } = e27, r26 = (t22) => {
    const o20 = J9(e27).mode, n39 = i25[t22].elevation;
    "relative-to-ground" === o20 || "relative-to-scene" === o20 || "on-the-ground" === o20 ? n39.lock(N8(e27)) : n39.unlock();
  }, c18 = (e28) => {
    if (t21) {
      const o20 = i25[e28].direction;
      o20.committed = t21.angle, o20.unlockOnVertexPlacement = false, n38.values.directionMode = t21.mode;
    }
  };
  switch (o19) {
    case "polygon":
    case "polyline":
      r26(o19), c18(o19);
      break;
    case "point":
    case "mesh":
      r26(o19);
  }
}
function b16(e27, t21) {
  const { drawOperation: o19, view: n38 } = t21, i25 = I10(t21), r26 = J9(t21);
  if ("2d" === n38.type || !e27 || "absolute-height" !== r26.mode || 1 !== (o19 == null ? void 0 : o19.numCommittedVertices) || !i25 || "draw-polyline" !== i25.type && "draw-polygon" !== i25.type || i25.elevation.locked) return;
  const [c18, l23, s26] = e27, a28 = B9(c18, l23, s26, r26, t21);
  null != a28 && i25.elevation.lock(a28);
}
function U12(e27) {
  var _a;
  (_a = I10(e27)) == null ? void 0 : _a.allFields.forEach((e28) => {
    e28.unlockOnVertexPlacement && e28.unlock();
  });
}
function I10({ geometryType: e27, graphic: t21, tooltipInfos: o19 }) {
  var _a;
  return "multipoint" === e27 || ((_a = t21 == null ? void 0 : t21.geometry) == null ? void 0 : _a.type) !== V7[e27] ? null : o19[e27];
}
var V7 = { point: "point", mesh: "mesh", polyline: "polyline", polygon: "polygon", circle: "polygon", rectangle: "polygon" };
function D8(e27, t21) {
  switch (e27 == null ? void 0 : e27.type) {
    case "draw-point":
      P8(e27, t21);
      break;
    case "draw-polyline":
      z10(e27, t21);
      break;
    case "draw-polygon":
      S8(e27, t21);
      break;
    case "draw-rectangle":
      F9(e27, t21);
      break;
    case "draw-circle":
      A12(e27, t21);
      break;
    case "draw-mesh":
      G4(e27, t21);
  }
}
function P8(e27, t21) {
  var _a;
  const o19 = (_a = t21.graphic) == null ? void 0 : _a.geometry;
  "point" === (o19 == null ? void 0 : o19.type) && (L11(e27, o19, t21), e27.helpMessage = e14("point", o19));
}
function G4(e27, t21) {
  const { graphic: o19, view: n38 } = t21, i25 = o19 == null ? void 0 : o19.geometry;
  "3d" !== n38.type || i25 && "mesh" !== i25.type || (L11(e27, i25 == null ? void 0 : i25.origin, t21), i25 && P7(e27, i25), e27.helpMessage = i10(o19, n38));
}
function L11(e27, t21, o19) {
  const { drawOperation: n38, view: i25, sketchOptions: r26 } = o19, { cursorVertex: c18 } = n38;
  if (e27.sketchOptions = r26, e27.viewType = i25.type, e27.setLocationFromPoint(t21, K5(o19)), H6(e27.elevation, o19), !c18) return void (n38.constraints = void 0);
  const l23 = c18;
  n38.constraints = { context: Q7(l23, o19), x: e27.x.committed, y: e27.y.committed, longitude: e27.longitude.committed, latitude: e27.latitude.committed, elevation: e27.elevation.committed, distance: null, direction: null };
}
function z10(t21, o19) {
  const { createOperationGeometry: n38, drawOperation: i25 } = o19, r26 = null != n38 ? n38.full : null;
  r26 && "polyline" !== r26.type || (Z8(t21, o19), t21.totalLength.actual = i25.lastVertex ? (r26 ? c13(r26) : null) ?? h6 : null, t21.helpMessage = e14("polyline", r26));
}
function S8(e27, o19) {
  const { createOperationGeometry: n38, drawOperation: i25 } = o19, r26 = null != n38 ? n38.full : null;
  r26 && "polygon" !== r26.type || (Z8(e27, o19), e27.area.actual = i25.lastVertex ? (r26 ? u12(r26) : null) ?? d11 : null, e27.helpMessage = e14("polygon", r26));
}
function Z8(t21, n38) {
  const { drawOperation: i25, sketchOptions: r26, view: c18 } = n38, { cursorVertex: l23, lastVertex: s26, secondToLastVertex: a28 } = i25, p22 = r26.values.effectiveDirectionMode;
  t21.sketchOptions = r26, t21.viewType = c18.type;
  const u18 = s26 && l23 ? m11(s26, l23) ?? h6 : null;
  if (t21.distance.actual = u18, t21.distance.readOnly = null == s26, t21.direction.actual = null, t21.direction.readOnly = true, s26 && l23 && ("absolute" === p22 || a28)) {
    const e27 = x6(a28, s26, l23, p22);
    t21.direction.actual = e27 ?? j8, t21.direction.readOnly = false;
  }
  t21.setLocationFromPoint(l23, K5(n38)), H6(t21.elevation, n38);
  const m15 = C12(s26, n38);
  t21.xyMode = m15, t21.direction.visible = "direction-distance" === m15, t21.distance.visible = "direction-distance" === m15, t21.effectiveX.visible = "coordinates" === m15, t21.effectiveY.visible = "coordinates" === m15;
  const d28 = l23 ?? s26;
  i25.constraints = d28 ? { context: Q7(d28, n38), x: t21.x.committed, y: t21.y.committed, longitude: t21.longitude.committed, latitude: t21.latitude.committed, elevation: t21.elevation.committed, distance: t21.distance.committed, direction: t21.direction.committed } : void 0;
}
function C12(e27, { sketchOptions: t21 }) {
  const o19 = t21.tooltips.xyMode;
  return "auto" === o19 ? e27 ? "direction-distance" : "coordinates" : o19;
}
function F9(e27, t21) {
  e27.sketchOptions = t21.sketchOptions, e27.xSize = q10(t21), e27.ySize = E9(t21), e27.area = R15(t21);
}
function A12(e27, t21) {
  const { forceUniformSize: o19, sketchOptions: n38 } = t21;
  e27.sketchOptions = n38, e27.radius = o19 ? X2(t21) : null, e27.xSize = o19 ? null : q10(t21), e27.ySize = o19 ? null : E9(t21), e27.area = R15(t21);
}
function H6(e27, t21) {
  const { drawOperation: o19 } = t21, n38 = (o19 == null ? void 0 : o19.cursorVertex) ?? (o19 == null ? void 0 : o19.lastVertex);
  e27.actual = R13(n38) ?? N8(t21), e27.visible = o19.hasZ, e27.readOnly = false, e27.showAsZ = true;
}
function R15(e27) {
  var _a;
  const o19 = (_a = e27.createOperationGeometry) == null ? void 0 : _a.full;
  return "polygon" !== (o19 == null ? void 0 : o19.type) ? d11 : u12(o19) ?? d11;
}
function q10(t21) {
  var _a, _b;
  const o19 = (_b = (_a = t21.createOperationGeometry) == null ? void 0 : _a.rectangle) == null ? void 0 : _b.midpoints;
  return (null != o19 ? m11(o19.left, o19.right) : null) ?? h6;
}
function E9(t21) {
  var _a, _b;
  const o19 = (_b = (_a = t21.createOperationGeometry) == null ? void 0 : _a.rectangle) == null ? void 0 : _b.midpoints;
  return (null != o19 ? m11(o19.top, o19.bottom) : null) ?? h6;
}
function X2({ createOperationGeometry: t21 }) {
  var _a;
  return (null != ((_a = t21 == null ? void 0 : t21.circle) == null ? void 0 : _a.center) && null != t21.circle.edge ? m11(t21.circle.center, t21.circle.edge) : null) ?? h6;
}
function Y2(e27) {
  const { geometryType: t21, tooltipInfos: o19 } = e27;
  switch (t21) {
    case "point":
    case "mesh":
    case "polyline":
    case "polygon": {
      const i25 = o19[t21].elevation.committed;
      if (!i25) return;
      return f7(i25, "meters") / W(K5(e27));
    }
    default:
      return;
  }
}
function B9(e27, t21, o19, n38, i25) {
  const { view: r26, drawOperation: l23 } = i25;
  if ("3d" !== r26.type || !l23) return;
  o19 ?? (o19 = 0);
  const s26 = K5(i25), a28 = J9(i25), p22 = E2(r26, e27, t21, o19, s26, a28, n38);
  return j19(p22, s26) ?? N8(i25);
}
function J9(e27) {
  return e27.drawOperation.elevationInfo ?? j7;
}
function K5(e27) {
  return e27.drawOperation.coordinateHelper.spatialReference;
}
function N8(e27) {
  const t21 = W(K5(e27));
  return a13(e27.defaultZ * t21, "meters");
}
function Q7(e27, t21) {
  return Z4(e27, t21.view, K5(t21), J9(t21), t21.drawOperation.coordinateHelper.hasZ(), t21.sketchOptions.values.effectiveDirectionMode);
}

// node_modules/@arcgis/core/views/interactive/ManipulatorCollection.js
var a25;
!function(t21) {
  t21[t21.WhenToolEditable = 0] = "WhenToolEditable", t21[t21.WhenToolNotEditable = 1] = "WhenToolNotEditable", t21[t21.Always = 2] = "Always";
}(a25 || (a25 = {}));
var i20 = class {
  constructor() {
    this._isToolEditable = true, this._manipulators = new V(), this._resourceContexts = { manipulator3D: {} }, this._attached = false;
  }
  set isToolEditable(t21) {
    this._isToolEditable = t21;
  }
  get length() {
    return this._manipulators.length;
  }
  add(t21, i25 = a25.WhenToolEditable) {
    this.addMany([t21], i25);
  }
  addMany(t21, i25 = a25.WhenToolEditable) {
    for (const a28 of t21) {
      const t22 = { manipulator: a28, visibilityPredicate: i25, attached: false };
      this._manipulators.add(t22), this._attached && this._updateManipulatorAttachment(t22);
    }
  }
  remove(t21) {
    for (let a28 = 0; a28 < this._manipulators.length; a28++) if (this._manipulators.at(a28).manipulator === t21) {
      const t22 = this._manipulators.splice(a28, 1)[0];
      this._detachManipulator(t22);
      break;
    }
  }
  removeAll() {
    this._manipulators.forEach((t21) => {
      this._detachManipulator(t21);
    }), this._manipulators.removeAll();
  }
  attach() {
    this._manipulators.forEach((t21) => {
      this._updateManipulatorAttachment(t21);
    }), this._attached = true;
  }
  detach() {
    this._manipulators.forEach((t21) => {
      this._detachManipulator(t21);
    }), this._attached = false;
  }
  destroy() {
    this.detach(), this._manipulators.forEach(({ manipulator: t21 }) => t21.destroy()), this._manipulators.destroy(), this._resourceContexts = null;
  }
  on(t21, a28) {
    return this._manipulators.on(t21, (t22) => {
      a28(t22);
    });
  }
  forEach(t21) {
    for (const a28 of this._manipulators.items) t21(a28);
  }
  some(t21) {
    return this._manipulators.items.some(t21);
  }
  toArray() {
    const t21 = [];
    return this.forEach((a28) => t21.push(a28.manipulator)), t21;
  }
  intersect(t21, a28) {
    let i25 = null, e27 = Number.MAX_VALUE;
    return this._manipulators.forEach(({ manipulator: o19, attached: s26 }) => {
      if (!s26 || !o19.interactive) return;
      const r26 = o19.intersectionDistance(t21, a28);
      null != r26 && r26 < e27 && (e27 = r26, i25 = o19);
    }), i25;
  }
  _updateManipulatorAttachment(t21) {
    this._isManipulatorItemVisible(t21) ? this._attachManipulator(t21) : this._detachManipulator(t21);
  }
  _attachManipulator(t21) {
    t21.attached || (t21.manipulator.attach && t21.manipulator.attach(this._resourceContexts), t21.attached = true);
  }
  _detachManipulator(t21) {
    if (!t21.attached) return;
    const a28 = t21.manipulator;
    a28.grabbing = false, a28.dragging = false, a28.hovering = false, a28.selected = false, a28.detach && a28.detach(this._resourceContexts), t21.attached = false;
  }
  _isManipulatorItemVisible(t21) {
    return t21.visibilityPredicate === a25.Always || (this._isToolEditable ? t21.visibilityPredicate === a25.WhenToolEditable : t21.visibilityPredicate === a25.WhenToolNotEditable);
  }
};

// node_modules/@arcgis/core/views/interactive/InteractiveToolBase.js
var n32 = class extends b {
  constructor(t21) {
    super(t21), this.manipulators = new i20(), this.automaticManipulatorSelection = true, this.hasGrabbedManipulators = false, this.hasHoveredManipulators = false, this.firstGrabbedManipulator = null, this.created = false, this.removeIncompleteOnCancel = true, this._editableFlags = /* @__PURE__ */ new Map([[o9.MANAGER, true], [o9.USER, true]]), this._creationFinishedResolver = L();
  }
  get active() {
    return null != this.view && this.view.activeTool === this;
  }
  set visible(t21) {
    this._get("visible") !== t21 && (this._set("visible", t21), this._syncVisible());
  }
  get editable() {
    return this.getEditableFlag(o9.USER);
  }
  set editable(t21) {
    this.setEditableFlag(o9.USER, t21);
  }
  get updating() {
    return false;
  }
  get cursor() {
    return null;
  }
  get hasFocusedManipulators() {
    return this.hasGrabbedManipulators || this.hasHoveredManipulators;
  }
  destroy() {
    this.manipulators.destroy(), this._set("view", null);
  }
  onAdd() {
    this._syncVisible();
  }
  activate() {
    null != this.view && (this.view.focus(), this.onActivate());
  }
  deactivate() {
    this.onDeactivate();
  }
  handleInputEvent(t21) {
    this.onInputEvent(t21);
  }
  handleInputEventAfter(t21) {
    this.onInputEventAfter(t21);
  }
  setEditableFlag(t21, e27) {
    this._editableFlags.set(t21, e27), this.manipulators.isToolEditable = this.internallyEditable, this._updateManipulatorAttachment(), t21 === o9.USER && this.notifyChange("editable"), this.onEditableChange(), this.onManipulatorSelectionChanged();
  }
  getEditableFlag(t21) {
    return this._editableFlags.get(t21) ?? false;
  }
  endDrag() {
    const t21 = this.view.inputManager.latestPointerLocation;
    if (!t21) return;
    let e27 = false;
    this.manipulators.forEach(({ manipulator: i25 }) => {
      i25.dragging && (e27 = true, i25.events.emit("drag", { action: "end", start: t21, screenPoint: t21 }));
    }), e27 && (this.view.toolViewManager.activeTool = null);
  }
  whenCreated() {
    return this._creationFinishedResolver.promise;
  }
  onManipulatorSelectionChanged() {
  }
  onActivate() {
  }
  onDeactivate() {
  }
  onShow() {
  }
  onHide() {
  }
  onEditableChange() {
  }
  onInputEvent(t21) {
  }
  onInputEventAfter(t21) {
  }
  get internallyEditable() {
    return this.getEditableFlag(o9.USER) && this.getEditableFlag(o9.MANAGER);
  }
  finishToolCreation() {
    this.created || this._creationFinishedResolver.resolve(this), this._set("created", true);
  }
  _syncVisible() {
    if (this.initialized) {
      if (this.visible) this._show();
      else if (this._hide(), this.active) return void (this.view.activeTool = null);
    }
  }
  _show() {
    this._updateManipulatorAttachment(), this.onShow();
  }
  _hide() {
    this._updateManipulatorAttachment(), this.onHide();
  }
  _updateManipulatorAttachment() {
    this.visible ? this.manipulators.attach() : this.manipulators.detach();
  }
};
r([m({ constructOnly: true })], n32.prototype, "view", void 0), r([m({ readOnly: true })], n32.prototype, "active", null), r([m({ value: true })], n32.prototype, "visible", null), r([m({ value: true })], n32.prototype, "editable", null), r([m({ readOnly: true })], n32.prototype, "manipulators", void 0), r([m({ readOnly: true })], n32.prototype, "updating", null), r([m()], n32.prototype, "cursor", null), r([m({ readOnly: true })], n32.prototype, "automaticManipulatorSelection", void 0), r([m()], n32.prototype, "hasFocusedManipulators", null), r([m()], n32.prototype, "hasGrabbedManipulators", void 0), r([m()], n32.prototype, "hasHoveredManipulators", void 0), r([m()], n32.prototype, "firstGrabbedManipulator", void 0), r([m({ readOnly: true })], n32.prototype, "created", void 0), r([m({ readOnly: true })], n32.prototype, "removeIncompleteOnCancel", void 0), n32 = r([a2("esri.views.interactive.InteractiveToolBase")], n32);

// node_modules/@arcgis/core/views/interactive/sketch/SketchLabelOptions.js
var t11 = class extends b {
  constructor(o19) {
    super(o19), this.enabled = false;
  }
};
r([m({ type: Boolean, nonNullable: true })], t11.prototype, "enabled", void 0), t11 = r([a2("esri.views.interactive.sketch.SketchLabelOptions")], t11);
var c14 = t11;

// node_modules/@arcgis/core/views/interactive/sketch/SketchTooltipElevationOptions.js
var t12 = class extends b {
  constructor(o19) {
    super(o19), this.mode = "absolute-height";
  }
  toJSON() {
    return { mode: this.mode };
  }
};
r([m({ type: String, nonNullable: true })], t12.prototype, "mode", void 0), t12 = r([a2("esri.views.interactive.sketch.SketchTooltipElevationOptions")], t12);

// node_modules/@arcgis/core/views/interactive/sketch/SketchTooltipVisibleElements.js
var a26 = class extends b {
  constructor(o19) {
    super(o19), this.area = true, this.coordinates = true, this.direction = true, this.distance = true, this.elevation = true, this.header = true, this.helpMessage = false, this.orientation = true, this.radius = true, this.rotation = true, this.scale = true, this.size = true, this.totalLength = true;
  }
};
r([m({ type: Boolean, nonNullable: true })], a26.prototype, "area", void 0), r([m({ type: Boolean, nonNullable: true })], a26.prototype, "coordinates", void 0), r([m({ type: Boolean, nonNullable: true })], a26.prototype, "direction", void 0), r([m({ type: Boolean, nonNullable: true })], a26.prototype, "distance", void 0), r([m({ type: Boolean, nonNullable: true })], a26.prototype, "elevation", void 0), r([m({ type: Boolean, nonNullable: true })], a26.prototype, "header", void 0), r([m({ type: Boolean, nonNullable: true })], a26.prototype, "helpMessage", void 0), r([m({ type: Boolean, nonNullable: true })], a26.prototype, "orientation", void 0), r([m({ type: Boolean, nonNullable: true })], a26.prototype, "radius", void 0), r([m({ type: Boolean, nonNullable: true })], a26.prototype, "rotation", void 0), r([m({ type: Boolean, nonNullable: true })], a26.prototype, "scale", void 0), r([m({ type: Boolean, nonNullable: true })], a26.prototype, "size", void 0), r([m({ type: Boolean, nonNullable: true })], a26.prototype, "totalLength", void 0), a26 = r([a2("esri.views.interactive.sketch.SketchTooltipVisibleElements")], a26);
var n33 = a26;

// node_modules/@arcgis/core/views/interactive/sketch/SketchTooltipOptions.js
var p17 = class extends b {
  constructor(e27) {
    super(e27), this.enabled = false, this.forceEnabled = false, this.helpMessage = null, this.helpMessageIcon = null, this.inputEnabled = true, this.elevation = new t12(), this.placement = "auto", this.offset = null, this.visibleElements = new n33(), this.visualVariables = null, this.xyMode = "auto";
  }
  get effectiveEnabled() {
    return this.forceEnabled || this.enabled;
  }
};
r([m({ type: Boolean, nonNullable: true })], p17.prototype, "enabled", void 0), r([m()], p17.prototype, "forceEnabled", void 0), r([m()], p17.prototype, "effectiveEnabled", null), r([m()], p17.prototype, "helpMessage", void 0), r([m()], p17.prototype, "helpMessageIcon", void 0), r([m({ type: Boolean, nonNullable: true })], p17.prototype, "inputEnabled", void 0), r([m({ type: t12, nonNullable: true })], p17.prototype, "elevation", void 0), r([m()], p17.prototype, "placement", void 0), r([m()], p17.prototype, "offset", void 0), r([m({ type: n33, nonNullable: true })], p17.prototype, "visibleElements", void 0), r([m()], p17.prototype, "visualVariables", void 0), r([m()], p17.prototype, "xyMode", void 0), p17 = r([a2("esri.views.interactive.sketch.SketchTooltipOptions")], p17);
var r20 = p17;

// node_modules/@arcgis/core/views/interactive/sketch/Units.js
var e19 = class extends b {
  constructor(o19) {
    super(o19), this.length = null, this.verticalLength = null, this.area = null;
  }
};
r([m()], e19.prototype, "length", void 0), r([m()], e19.prototype, "verticalLength", void 0), r([m()], e19.prototype, "area", void 0), e19 = r([a2("esri.views.interactive.sketch.Units")], e19);
var c15 = e19;

// node_modules/@arcgis/core/views/interactive/sketch/SketchValueOptions.js
var n34 = class extends b {
  constructor(t21) {
    super(t21), this.directionMode = "relative", this.relativeDirectionIsBilateral = false;
  }
  get effectiveDirectionMode() {
    switch (this.directionMode) {
      case "relative":
        return this.relativeDirectionIsBilateral ? j13.RelativeBilateral : j13.Relative;
      case "absolute":
        return j13.Absolute;
    }
  }
  get displayUnits() {
    return this._get("displayUnits") ?? new c15();
  }
  set displayUnits(t21) {
    this._set("displayUnits", t21);
  }
  get inputUnits() {
    return this._get("inputUnits") ?? new c15();
  }
  set inputUnits(t21) {
    this._set("inputUnits", t21);
  }
};
r([m({ type: String, nonNullable: true })], n34.prototype, "directionMode", void 0), r([m({ type: Boolean, nonNullable: true })], n34.prototype, "relativeDirectionIsBilateral", void 0), r([m()], n34.prototype, "effectiveDirectionMode", null), r([m({ type: c15, nonNullable: true })], n34.prototype, "displayUnits", null), r([m({ type: c15, nonNullable: true })], n34.prototype, "inputUnits", null), n34 = r([a2("esri.views.interactive.sketch.SketchValueOptions")], n34);
var l20 = n34;

// node_modules/@arcgis/core/views/interactive/sketch/SketchOptions.js
var c16 = class extends b {
  constructor(o19) {
    super(o19), this.labels = new c14(), this.tooltips = new r20(), this.values = new l20();
  }
};
r([m({ nonNullable: true, type: c14 })], c16.prototype, "labels", void 0), r([m({ nonNullable: true, type: r20 })], c16.prototype, "tooltips", void 0), r([m({ nonNullable: true, type: l20 })], c16.prototype, "values", void 0), c16 = r([a2("esri.views.interactive.sketch.SketchOptions")], c16);
var l21 = c16;

// node_modules/@arcgis/core/views/draw/DrawGraphicTool.js
var I11 = class extends o3.EventedMixin(n32) {
  constructor(t21) {
    super(t21), this._graphic = null, this._coordinateFormatterLoadTask = null, this._createOperationGeometry = null, this.defaultZ = 0, this.directionOptions = null, this.geometryType = null, this.hasZ = true, this.geometryToPlace = null, this.snappingManager = null, this.snapToScene = false, this.sketchOptions = new l21();
  }
  initialize() {
    const { view: t21 } = this;
    this.internalGraphicsLayer = new h4({ listMode: "hide", internal: true }), this.view.map.layers.add(this.internalGraphicsLayer);
    const e27 = this.drawOperation = this.makeDrawOperation();
    this.tooltipInfos = M12(t21.type, this.sketchOptions);
    const o19 = k9(() => ({ view: t21, options: this.sketchOptions.tooltips }));
    this.tooltip = o19, T8(this._tooltipsContext), this._coordinateFormatterLoadTask = d2(() => w7()), this.addHandles([e27.on("vertex-add", (t22) => this.onVertexAdd(t22)), e27.on("vertex-remove", (t22) => this.onVertexRemove(t22)), e27.on("vertex-update", (t22) => this.onVertexUpdate(t22)), e27.on("cursor-update", (t22) => this.onCursorUpdate(t22)), e27.on("cursor-remove", () => this._updateGraphic()), e27.on("complete", (t22) => this.onComplete(t22)), this._coordinateFormatterLoadTask, o19.on("paste", (t22) => L10(t22, this.activeTooltipInfo)), d3(() => this.cursor, (t22) => {
      e27.cursor = t22;
    }, A2), i(() => {
      const { activeTooltipInfo: t22, sketchOptions: e28 } = this;
      D8(t22, this._tooltipsContext), o19.info = e28.tooltips.effectiveEnabled ? t22 : null;
    }), i(() => {
      e27.constraintZ = Y2(this._tooltipsContext);
    }, C2)]), this.finishToolCreation();
  }
  destroy() {
    this.drawOperation = u(this.drawOperation), this.tooltip = u(this.tooltip), this._destroyAllVisualizations(), this.view.map.remove(this.internalGraphicsLayer), this.internalGraphicsLayer = u(this.internalGraphicsLayer), this._set("view", null);
  }
  get _drawSpatialReference() {
    return this.drawOperation.coordinateHelper.spatialReference;
  }
  get _tooltipsContext() {
    return { createOperationGeometry: this._createOperationGeometry, defaultZ: this.defaultZ, directionOptions: this.directionOptions, drawOperation: this.drawOperation, forceUniformSize: this.forceUniformSize, geometryType: this.geometryType, graphic: this.graphic, sketchOptions: this.sketchOptions, tooltipInfos: this.tooltipInfos, view: this.view };
  }
  get canRedo() {
    return this.drawOperation.canRedo;
  }
  get canUndo() {
    return this.drawOperation.canUndo;
  }
  set centered(t21) {
    this._set("centered", t21), this._updateGraphic();
  }
  get cursor() {
    return this._get("cursor");
  }
  set cursor(t21) {
    this._set("cursor", t21);
  }
  set enabled(t21) {
    this.drawOperation.interactive = t21, this._set("enabled", t21);
  }
  set forceUniformSize(t21) {
    this._set("forceUniformSize", t21), this._updateGraphic();
  }
  get graphic() {
    return this._graphic;
  }
  set graphicSymbol(t21) {
    this._set("graphicSymbol", t21), null != this._graphic && (this._graphic.symbol = t21);
  }
  set mode(t21) {
    const e27 = this.drawOperation;
    e27 && (e27.drawingMode = t21), this._set("mode", t21);
  }
  get updating() {
    var _a;
    return ((_a = this.drawOperation) == null ? void 0 : _a.updating) ?? false;
  }
  get undoRedo() {
    const { view: { type: t21, map: e27 } } = this;
    return "2d" === t21 && e27 && "undoRedo" in e27 && e27.undoRedo instanceof u11 ? e27.undoRedo : null;
  }
  set undoRedo(t21) {
    this._override("undoRedo", t21);
  }
  completeCreateOperation() {
    this.drawOperation.complete();
  }
  onInputEvent(t21) {
    this.destroyed || G3(t21, this.tooltip) || this.drawOperation.onInputEvent(t21);
  }
  redo() {
    this.drawOperation.redo();
  }
  reset() {
  }
  undo() {
    this.drawOperation.undo(), 0 === this.drawOperation.numCommittedVertices && T8(this._tooltipsContext);
  }
  _destroyAllVisualizations() {
    this.removeHandles(F10.outline), this.removeHandles(F10.regularVertices), this.removeHandles(F10.activeVertex), this.removeHandles(F10.activeEdge), this.removeHandles(A13);
  }
  _createOrUpdateGraphic(t21) {
    if (null != this._graphic) return this.updateGraphicGeometry(t21), this._graphic;
    const o19 = new d8({ ...this.graphicProperties, symbol: this.graphicSymbol });
    return this._graphic = o19, this.updateGraphicGeometry(t21), this.internalGraphicsLayer.add(o19), this.addHandles(this.initializeGraphic(o19)), this.notifyChange("graphic"), this.addHandles(e(() => {
      this.internalGraphicsLayer.remove(o19), this._graphic === o19 && (this._graphic = null);
    }), A13), o19;
  }
  updateGraphicGeometry(t21) {
    this._graphic.geometry = t21;
  }
  _getCreateOperationGeometry(t21 = { operationComplete: false }) {
    var _a, _b;
    if (null == this.drawOperation) return;
    const { coordinateHelper: e27, view: o19, visualizationCursorVertex: r26, lastVertex: i25, committedVertices: s26, geometryIncludingUncommittedVertices: n38, numCommittedVertices: a28 } = this.drawOperation;
    if (!(a28 > 0 || null != r26)) return;
    const p22 = t21.operationComplete ? s26 : n38, l23 = p22.length, c18 = null != r26 ? e27.pointToArray(r26) : null, h18 = this._drawSpatialReference, d28 = "3d" === o19.type && "global" === o19.viewingMode, u18 = new l15();
    u18.committedVertices = s26, u18.cursorVertex = c18;
    const { geometryType: x15 } = this;
    switch (x15) {
      case "point":
      case "mesh":
        u18.full = e27.arrayToPoint(p22[0]);
        break;
      case "multipoint":
        u18.full = l23 > 0 ? d16(p22, h18) : null;
        break;
      case "polyline":
      case "polygon":
        l23 > 0 && (u18.full = "polygon" === x15 ? j11([p22], h18, d28, true) : R8([p22], h18, d28), u18.cursorEdge = null != c18 && i25 && !a12(r26, i25) ? R8([[c18, e27.pointToArray(i25)]], h18, d28) : null, u18.outline = l23 > 1 ? u18.full : null);
        break;
      case "circle":
      case "rectangle": {
        if (u18.committedVertices = u18.cursorVertex = null, !l23) break;
        const e28 = F4(o19, p22[0]), r27 = p22[0], i26 = e28.makeMapPoint(r27[0] + Z9 * o19.resolution, r27[1]);
        "circle" === x15 ? 1 === l23 && t21.operationComplete ? u18.circle = L6([r27, i26], e28, true) : 2 === l23 && (this.forceUniformSize ? u18.circle = L6(p22, e28, this.centered) : u18.rectangle = v9(p22, e28, this.centered)) : 1 === l23 && t21.operationComplete ? u18.rectangle = T2([r27, i26], e28, true) : 2 === l23 && (u18.rectangle = this.forceUniformSize ? T2(p22, e28, this.centered) : b8(p22, e28, this.centered)), u18.full = null != u18.circle ? u18.circle.geometry : (_a = u18.rectangle) == null ? void 0 : _a.geometry, u18.outline = "polygon" === ((_b = u18.full) == null ? void 0 : _b.type) ? u18.full : null;
        break;
      }
      default:
        return null;
    }
    return u18;
  }
  initializeGraphic(t21) {
    return e();
  }
  onComplete(t21) {
    if (!this.drawOperation) return;
    this._updateGraphic();
    let e27 = null;
    if (this.drawOperation.isCompleted) {
      const t22 = this._getCreateOperationGeometry({ operationComplete: true });
      null != t22 && (e27 = this._createOrUpdateGraphic(t22.full));
    }
    this._createOperationGeometry = null, this.emit("complete", { graphic: e27, ...t21 });
  }
  onCursorUpdate(t21) {
    this._updateGraphic(), this.emit("cursor-update", t21);
  }
  onDeactivate() {
    const { drawOperation: t21 } = this;
    t21 && (t21.isCompleted || t21.cancel());
  }
  onOutlineChanged(t21) {
    return e();
  }
  onCursorEdgeChanged(t21) {
    return e();
  }
  onVertexAdd(t21) {
    var _a;
    U12(this._tooltipsContext), this._updateGraphic(), b16((_a = t21.vertices.at(0)) == null ? void 0 : _a.coordinates, this._tooltipsContext), this.emit("vertex-add", t21);
  }
  onVertexRemove(t21) {
    U12(this._tooltipsContext), this._updateGraphic(), this.emit("vertex-remove", t21);
  }
  onVertexUpdate(t21) {
    this._updateGraphic(), this.emit("vertex-update", t21);
  }
  _updateGraphic() {
    const t21 = this._getCreateOperationGeometry();
    this._createOperationGeometry = t21, null != t21 ? (null != t21.cursorEdge ? this.addHandles(this.onCursorEdgeChanged(t21.cursorEdge), F10.activeEdge) : this.removeHandles(F10.activeEdge), null != t21.outline ? this.addHandles(this.onOutlineChanged(t21.outline), F10.outline) : this.removeHandles(F10.outline), null != t21.committedVertices ? this.addHandles(this.onRegularVerticesChanged(t21.committedVertices), F10.regularVertices) : this.removeHandles(F10.regularVertices), null != t21.cursorVertex ? this.addHandles(this.onActiveVertexChanged(t21.cursorVertex), F10.activeVertex) : this.removeHandles(F10.activeVertex), null != t21.full ? this._createOrUpdateGraphic(t21.full) : this.removeHandles(A13)) : this._destroyAllVisualizations();
  }
  get activeTooltipInfo() {
    var _a;
    return ((_a = this._coordinateFormatterLoadTask) == null ? void 0 : _a.finished) ? I10(this._tooltipsContext) : null;
  }
};
r([m()], I11.prototype, "_coordinateFormatterLoadTask", void 0), r([m()], I11.prototype, "_createOperationGeometry", void 0), r([m()], I11.prototype, "_tooltipsContext", null), r([m({ value: true })], I11.prototype, "centered", null), r([m()], I11.prototype, "cursor", null), r([m({ nonNullable: true })], I11.prototype, "defaultZ", void 0), r([m({ constructOnly: true })], I11.prototype, "directionOptions", void 0), r([m()], I11.prototype, "drawOperation", void 0), r([m({ value: true })], I11.prototype, "enabled", null), r([m({ value: true })], I11.prototype, "forceUniformSize", null), r([m({ constructOnly: true })], I11.prototype, "geometryType", void 0), r([m()], I11.prototype, "graphic", null), r([m({ constructOnly: true })], I11.prototype, "graphicProperties", void 0), r([m()], I11.prototype, "graphicSymbol", null), r([m({ constructOnly: true })], I11.prototype, "hasZ", void 0), r([m({ constructOnly: true })], I11.prototype, "geometryToPlace", void 0), r([m()], I11.prototype, "mode", null), r([m()], I11.prototype, "snappingManager", void 0), r([m()], I11.prototype, "snapToScene", void 0), r([m()], I11.prototype, "tooltip", void 0), r([m()], I11.prototype, "tooltipInfos", void 0), r([m({ constructOnly: true, type: l21 })], I11.prototype, "sketchOptions", void 0), r([m()], I11.prototype, "updating", null), r([m({ constructOnly: true, nonNullable: true })], I11.prototype, "view", void 0), r([m({ constructOnly: true })], I11.prototype, "undoRedo", null), r([m()], I11.prototype, "activeTooltipInfo", null), I11 = r([a2("esri.views.draw.DrawGraphicTool")], I11);
var A13 = Symbol("create-operation-graphic");
var F10 = { outline: Symbol("outline-visual"), regularVertices: Symbol("regular-vertices-visual"), activeVertex: Symbol("active-vertex-visual"), activeEdge: Symbol("active-edge-visual") };
function M13(t21) {
  switch (t21) {
    case "point":
    case "polyline":
    case "polygon":
    case "multipoint":
      return t21;
    case "circle":
    case "rectangle":
      return "segment";
    case "mesh":
      return "point";
  }
}
var Z9 = 48;

// node_modules/@arcgis/core/views/draw/DrawingMode.js
var e20 = "click";

// node_modules/@arcgis/core/views/draw/DrawManipulator.js
var t13 = class {
  constructor({ consumesClicks: t21, grabbableForEvent: s26 }) {
    this.events = new o3(), this.interactive = true, this.selectable = false, this.cursor = null, this.grabbable = true, this.consumesClicks = t21, this.grabbableForEvent = s26;
  }
  destroy() {
  }
  intersectionDistance(e27, t21) {
    return 0;
  }
  attach() {
  }
  detach() {
  }
  onElevationChange() {
  }
  onViewChange() {
  }
};

// node_modules/@arcgis/core/views/interactive/coordinateHelper.js
var x12;
!function(e27) {
  e27[e27.Z = 0] = "Z", e27[e27.M = 1] = "M";
}(x12 || (x12 = {}));
var R16 = class {
  constructor(e27) {
    this.spatialReference = e27;
  }
  createVector() {
    return this._tag(n9());
  }
  pointToVector(e27) {
    return this._tag(r11(e27.x, e27.y));
  }
  arrayToVector(e27) {
    return this._tag(r11(e27[0], e27[1]));
  }
  vectorToArray(e27) {
    return [e27[0], e27[1]];
  }
  pointToArray(e27) {
    return [e27.x, e27.y];
  }
  vectorToPoint(e27, r26 = new j2()) {
    return r26.x = e27[0], r26.y = e27[1], r26.z = void 0, r26.m = void 0, r26.spatialReference = this.spatialReference, r26;
  }
  arrayToPoint(e27, r26 = new j2()) {
    return r26.x = e27[0], r26.y = e27[1], r26.z = void 0, r26.m = void 0, r26.spatialReference = this.spatialReference, r26;
  }
  vectorToDehydratedPoint(e27, r26) {
    if (e27) return r26 ?? (r26 = { x: void 0, y: void 0, z: void 0, m: void 0, hasZ: void 0, hasM: void 0, spatialReference: void 0, type: "point" }), r26.x = e27[0], r26.y = e27[1], r26.z = void 0, r26.m = void 0, r26.hasZ = false, r26.hasM = false, r26.spatialReference = this.spatialReference, r26;
  }
  lerp(r26, t21, a28, i25) {
    return _6(i25, r26, t21, a28);
  }
  addDelta(e27, r26, t21) {
    e27[0] += r26, e27[1] += t21;
  }
  distance(e27, t21) {
    return m3(e27, t21);
  }
  getZ(e27, r26 = void 0) {
    return r26;
  }
  hasZ() {
    return false;
  }
  getM(e27, r26 = void 0) {
    return r26;
  }
  hasM() {
    return false;
  }
  clone(e27) {
    return this._tag(e8(e27));
  }
  copy(e27, r26) {
    return r12(r26, e27);
  }
  fromXYZ(e27) {
    return this._tag(r11(e27[0], e27[1]));
  }
  toXYZ(e27, r26 = n6()) {
    return o5(r26, e27[0], e27[1], 0);
  }
  pointToXYZ(e27, r26 = n6()) {
    return o5(r26, e27.x, e27.y, 0);
  }
  equals(e27, r26) {
    return T(e27, r26);
  }
  _tag(e27) {
    return e27;
  }
};
var M14 = class {
  constructor(e27, r26) {
    this._valueType = e27, this.spatialReference = r26;
  }
  createVector() {
    return this._tag(n6());
  }
  pointToVector(e27) {
    return this._tag(r8(e27.x, e27.y, this._valueType === x12.Z ? e27.z : e27.m));
  }
  arrayToVector(e27) {
    return this._tag(r8(e27[0], e27[1], e27[2] || 0));
  }
  vectorToArray(e27) {
    return [e27[0], e27[1], e27[2]];
  }
  pointToArray(e27) {
    return this._valueType === x12.Z ? [e27.x, e27.y, e27.z] : [e27.x, e27.y, e27.m];
  }
  vectorToPoint(e27, r26 = new j2()) {
    return r26.x = e27[0], r26.y = e27[1], r26.z = this._valueType === x12.Z ? e27[2] : void 0, r26.m = this._valueType === x12.M ? e27[2] : void 0, r26.spatialReference = this.spatialReference, r26;
  }
  arrayToPoint(e27, r26 = new j2()) {
    return r26.x = e27[0], r26.y = e27[1], r26.z = this._valueType === x12.Z ? e27[2] : void 0, r26.m = this._valueType === x12.M ? e27[2] : void 0, r26.spatialReference = this.spatialReference, r26;
  }
  vectorToDehydratedPoint(e27, r26) {
    if (!e27) return;
    r26 ?? (r26 = { x: void 0, y: void 0, z: void 0, m: void 0, hasZ: void 0, hasM: void 0, spatialReference: void 0, type: "point" });
    const t21 = this._valueType === x12.Z, a28 = this._valueType === x12.M;
    return r26.x = e27[0], r26.y = e27[1], r26.z = t21 ? e27[2] : void 0, r26.m = a28 ? e27[2] : void 0, r26.hasZ = t21, r26.hasM = a28, r26.spatialReference = this.spatialReference, r26;
  }
  lerp(e27, r26, t21, a28) {
    return I2(a28, e27, r26, t21);
  }
  addDelta(e27, r26, t21, a28) {
    e27[0] += r26, e27[1] += t21, this._valueType === x12.Z && (e27[2] += a28);
  }
  distance(e27, t21) {
    return this._valueType === x12.Z ? p3(e27, t21) : m3(w16(e27), w16(t21));
  }
  getZ(e27, r26 = void 0) {
    return this._valueType === x12.Z ? e27[2] : r26;
  }
  hasZ() {
    return this._valueType === x12.Z;
  }
  getM(e27, r26 = void 0) {
    return this._valueType === x12.M ? e27[2] : r26;
  }
  hasM() {
    return this._valueType === x12.M;
  }
  clone(e27) {
    return this._tag(u5(e27));
  }
  copy(e27, r26) {
    return s8(r26, e27);
  }
  fromXYZ(e27, r26 = 0, t21 = 0) {
    return this._tag(r8(e27[0], e27[1], this._valueType === x12.Z ? e27.length > 2 ? e27[2] : r26 : t21));
  }
  toXYZ(e27, r26 = n6()) {
    return o5(r26, e27[0], e27[1], this._valueType === x12.Z ? e27[2] : 0);
  }
  pointToXYZ(e27, r26 = n6()) {
    return o5(r26, e27.x, e27.y, this._valueType === x12.Z ? e27.z ?? 0 : 0);
  }
  equals(e27, r26) {
    return J3(e27, r26);
  }
  _tag(e27) {
    return e27;
  }
};
var z11 = class {
  constructor(e27) {
    this.spatialReference = e27;
  }
  createVector() {
    return this._tag(n8());
  }
  pointToVector(e27) {
    return this._tag(r9(e27.x, e27.y, e27.z, e27.m));
  }
  arrayToVector(e27) {
    return this._tag(r9(e27[0], e27[1], e27[2] || 0, e27[3] || 0));
  }
  vectorToArray(e27) {
    return [e27[0], e27[1], e27[2], e27[3]];
  }
  pointToArray(e27) {
    return [e27.x, e27.y, e27.z, e27.m];
  }
  vectorToPoint(e27, r26 = new j2()) {
    return r26.x = e27[0], r26.y = e27[1], r26.z = e27[2], r26.m = e27[3], r26.spatialReference = this.spatialReference, r26;
  }
  arrayToPoint(e27, r26 = new j2()) {
    return r26.x = e27[0], r26.y = e27[1], r26.z = e27[2], r26.m = e27[3], r26.spatialReference = this.spatialReference, r26;
  }
  vectorToDehydratedPoint(e27, r26) {
    if (e27) return r26 ?? (r26 = { x: void 0, y: void 0, z: void 0, m: void 0, hasZ: void 0, hasM: void 0, spatialReference: void 0, type: "point" }), r26.x = e27[0], r26.y = e27[1], r26.z = e27[2], r26.m = e27[3], r26.hasZ = true, r26.hasM = true, r26.spatialReference = this.spatialReference, r26;
  }
  lerp(e27, r26, t21, a28) {
    return _3(a28, e27, r26, t21);
  }
  addDelta(e27, r26, t21, a28) {
    e27[0] += r26, e27[1] += t21, e27[2] += a28;
  }
  distance(e27, r26) {
    return p3(V8(e27), V8(r26));
  }
  getZ(e27) {
    return e27[2];
  }
  hasZ() {
    return true;
  }
  getM(e27) {
    return e27[3];
  }
  hasM() {
    return true;
  }
  clone(e27) {
    return this._tag(u6(e27));
  }
  copy(e27, r26) {
    return a5(r26, e27);
  }
  fromXYZ(e27, r26 = 0, t21 = 0) {
    return this._tag(r9(e27[0], e27[1], e27.length > 2 ? e27[2] : r26, t21));
  }
  toXYZ(e27, r26 = n6()) {
    return o5(r26, e27[0], e27[1], e27[2]);
  }
  pointToXYZ(e27, r26 = n6()) {
    return o5(r26, e27.x, e27.y, e27.z ?? 0);
  }
  equals(e27, r26) {
    return L3(e27, r26);
  }
  _tag(e27) {
    return e27;
  }
};
function V8(e27) {
  return e27;
}
function w16(e27) {
  return e27;
}
function P9(e27, r26, t21) {
  return e27 && r26 ? new z11(t21) : r26 ? new M14(x12.M, t21) : e27 ? new M14(x12.Z, t21) : new R16(t21);
}

// node_modules/@arcgis/core/views/interactive/editGeometry/unnormalizationHelper.js
function e21(o19, r26) {
  if (!r26.supported) return;
  let e27 = 1 / 0, p22 = -1 / 0;
  const n38 = r26.upperBoundX - r26.lowerBoundX;
  o19.forEach((o20) => {
    let u19 = o20.pos[0];
    for (; u19 < r26.lowerBoundX; ) u19 += n38;
    for (; u19 > r26.upperBoundX; ) u19 -= n38;
    e27 = Math.min(e27, u19), p22 = Math.max(p22, u19), o20.pos[0] = u19;
  });
  const u18 = p22 - e27;
  n38 - u18 < u18 && o19.forEach((o20) => {
    o20.pos[0] < 0 && (o20.pos[0] += n38);
  });
}
function p18(e27, p22) {
  const n38 = d4(e27);
  return p22 === l8.Global && n38 ? { supported: true, lowerBoundX: n38.valid[0], upperBoundX: n38.valid[1] } : { supported: false, lowerBoundX: null, upperBoundX: null };
}

// node_modules/@arcgis/core/views/interactive/editGeometry/EditGeometry.js
var h14 = class {
  constructor(e27) {
    this.component = e27, this.leftEdge = null, this.rightEdge = null, this.type = "vertex", this.index = null;
  }
  get pos() {
    return this._pos;
  }
  set pos(e27) {
    this._pos = e27, this.component.unnormalizeVertexPositions();
  }
};
var l22 = class {
  constructor(e27, t21, s26) {
    this.component = e27, this.leftVertex = t21, this.rightVertex = s26, this.type = "edge", t21.rightEdge = this, s26.leftEdge = this;
  }
};
var a27 = class {
  constructor(e27, t21) {
    this._spatialReference = e27, this._viewingMode = t21, this.vertices = [], this.edges = [], this.index = null;
  }
  unnormalizeVertexPositions() {
    this.vertices.length <= 1 || e21(this.vertices, p18(this._spatialReference, this._viewingMode));
  }
  updateVertexIndex(e27, t21) {
    if (0 === this.vertices.length) return;
    const s26 = this.vertices[0];
    let i25 = null, r26 = e27, o19 = t21;
    do {
      i25 = r26, i25.index = o19++, r26 = i25.rightEdge ? i25.rightEdge.rightVertex : null;
    } while (null != r26 && r26 !== s26);
    i25.leftEdge && i25 !== this.vertices[this.vertices.length - 1] && this.swapVertices(this.vertices.indexOf(i25), this.vertices.length - 1);
  }
  getFirstVertex() {
    return this.vertices.at(0);
  }
  getLastVertex() {
    return this.vertices.at(-1);
  }
  isClosed() {
    return this.vertices.length > 2 && null !== this.vertices[0].leftEdge;
  }
  swapVertices(e27, t21) {
    const s26 = this.vertices[e27];
    this.vertices[e27] = this.vertices[t21], this.vertices[t21] = s26;
  }
  iterateVertices(e27) {
    if (0 === this.vertices.length) return;
    const t21 = this.vertices[0];
    let s26 = t21;
    do {
      e27(s26, s26.index), s26 = null != s26.rightEdge ? s26.rightEdge.rightVertex : null;
    } while (s26 !== t21 && null != s26);
  }
};
var p19 = class _p extends o3 {
  constructor(e27, t21) {
    super(), this.type = e27, this.coordinateHelper = t21, this._geometry = null, this._dirty = true, this.components = [];
  }
  get geometry() {
    if (this._dirty) {
      switch (this.type) {
        case "point":
          this._geometry = this._toPoint();
          break;
        case "polyline":
          this._geometry = this._toPolyline();
          break;
        case "polygon":
          this._geometry = this._toPolygon();
          break;
        case "mesh":
          break;
        default:
          n7(this.type);
      }
      this._dirty = false;
    }
    return this._geometry;
  }
  get spatialReference() {
    return this.coordinateHelper.spatialReference;
  }
  get allVertices() {
    return Array.from(this.iterateVertices());
  }
  *iterateVertices() {
    for (const e27 of this.components) for (const t21 of e27.vertices) yield t21;
  }
  notifyChanges(e27) {
    this._dirty = true, this.emit("change", e27);
  }
  _toPoint() {
    return 0 === this.components.length || 0 === this.components[0].vertices.length ? null : this.coordinateHelper.vectorToPoint(this.components[0].vertices[0].pos);
  }
  _toPolyline() {
    const e27 = [], t21 = this.coordinateHelper.vectorToArray;
    for (const s26 of this.components) {
      if (s26.vertices.length < 1) continue;
      const i25 = [];
      let r26 = s26.vertices.find((e28) => null == e28.leftEdge);
      const o19 = r26;
      do {
        i25.push(t21(r26.pos)), r26 = r26.rightEdge ? r26.rightEdge.rightVertex : null;
      } while (r26 && r26 !== o19);
      e27.push(i25);
    }
    return new d5({ paths: e27, spatialReference: this.spatialReference, hasZ: this.coordinateHelper.hasZ(), hasM: this.coordinateHelper.hasM() });
  }
  _toPolygon() {
    const e27 = [], t21 = this.coordinateHelper.vectorToArray;
    for (const s26 of this.components) {
      if (s26.vertices.length < 1) continue;
      const i25 = [], r26 = s26.vertices[0];
      let o19 = r26;
      const n38 = o19;
      do {
        i25.push(t21(o19.pos)), o19 = null != o19.rightEdge ? o19.rightEdge.rightVertex : null;
      } while (o19 && o19 !== n38);
      s26.isClosed() && i25.push(t21(r26.pos)), e27.push(i25);
    }
    return new v2({ rings: e27, spatialReference: this.spatialReference, hasZ: this.coordinateHelper.hasZ(), hasM: this.coordinateHelper.hasM() });
  }
  static fromGeometry(e27, t21) {
    const s26 = e27.spatialReference, i25 = P9(e27.hasZ, e27.hasM, s26), r26 = new _p(e27.type, i25);
    switch (e27.type) {
      case "polygon":
        g18(r26, e27, t21);
        break;
      case "polyline":
        d24(r26, e27, t21);
        break;
      case "point":
        u14(r26, e27, t21);
        break;
      case "mesh":
        u14(r26, e27.origin, t21), r26._geometry = e27, r26._dirty = false;
    }
    return r26;
  }
};
function g18(t21, s26, i25) {
  const r26 = s26.spatialReference, o19 = t21.coordinateHelper, n38 = s26.rings;
  for (let c18 = 0; c18 < n38.length; ++c18) {
    const s27 = n38[c18], p22 = new a27(r26, i25);
    p22.index = c18;
    const g22 = s27.length > 2 && c(s27[0], s27[s27.length - 1]), d28 = g22 ? s27.length - 1 : s27.length;
    for (let e27 = 0; e27 < d28; ++e27) {
      const t22 = o19.arrayToVector(s27[e27]), i26 = new h14(p22);
      p22.vertices.push(i26), i26.pos = t22, i26.index = e27;
    }
    const u18 = p22.vertices.length - 1;
    for (let e27 = 0; e27 < u18; ++e27) {
      const t22 = p22.vertices[e27], s28 = p22.vertices[e27 + 1], i26 = new l22(p22, t22, s28);
      p22.edges.push(i26);
    }
    if (g22) {
      const e27 = new l22(p22, p22.vertices[p22.vertices.length - 1], p22.vertices[0]);
      p22.edges.push(e27);
    }
    t21.components.push(p22);
  }
}
function d24(e27, t21, s26) {
  const i25 = t21.spatialReference, r26 = e27.coordinateHelper, o19 = t21.paths;
  for (let n38 = 0; n38 < o19.length; ++n38) {
    const t22 = o19[n38], c18 = new a27(i25, s26);
    c18.index = n38;
    const p22 = t22.length;
    for (let e28 = 0; e28 < p22; ++e28) {
      const s27 = r26.arrayToVector(t22[e28]), i26 = new h14(c18);
      c18.vertices.push(i26), i26.pos = s27, i26.index = e28;
    }
    const g22 = c18.vertices.length - 1;
    for (let e28 = 0; e28 < g22; ++e28) {
      const t23 = c18.vertices[e28], s27 = c18.vertices[e28 + 1], i26 = new l22(c18, t23, s27);
      c18.edges.push(i26);
    }
    e27.components.push(c18);
  }
}
function u14(e27, t21, s26) {
  const i25 = t21.spatialReference, r26 = e27.coordinateHelper, o19 = new a27(i25, s26);
  o19.index = 0;
  const n38 = new h14(o19);
  n38.index = 0, n38.pos = r26.pointToVector(t21), o19.vertices.push(n38), e27.components.push(o19);
}
function f16(e27) {
  return "mesh" === e27.type;
}

// node_modules/@arcgis/core/views/interactive/editGeometry/interfaces.js
var E10;
!function(E15) {
  E15[E15.NEW_STEP = 0] = "NEW_STEP", E15[E15.ACCUMULATE_STEPS = 1] = "ACCUMULATE_STEPS";
}(E10 || (E10 = {}));

// node_modules/@arcgis/core/views/interactive/editGeometry/operations/AppendVertex.js
var i21 = class {
  constructor(e27, t21, i25) {
    this._editGeometry = e27, this._component = t21, this._pos = i25, this._addedVertex = null, this._originalEdge = null, this._left = null, this._right = null;
  }
  apply() {
    let i25 = "redo";
    null == this._addedVertex && (i25 = "apply", this._addedVertex = new h14(this._component));
    const s26 = this._component.getLastVertex();
    if (null == s26) this._component.vertices.push(this._addedVertex), this._addedVertex.pos = this._pos, this._addedVertex.index = 0;
    else {
      let e27 = null;
      s26.rightEdge && (this._originalEdge = s26.rightEdge, e27 = this._originalEdge.rightVertex, this._component.edges.splice(this._component.edges.indexOf(this._originalEdge), 1)), this._component.vertices.push(this._addedVertex), this._addedVertex.pos = this._pos, null == this._left && (this._left = new l22(this._component, s26, this._addedVertex)), this._component.edges.push(this._left), s26.rightEdge = this._left, null != this._originalEdge && null != e27 && (null == this._right && (this._right = new l22(this._component, this._addedVertex, e27)), this._component.edges.push(this._right), e27.leftEdge = this._right), this._component.updateVertexIndex(this._addedVertex, s26.index + 1);
    }
    this._editGeometry.notifyChanges({ operation: i25, addedVertices: [this._addedVertex] });
  }
  undo() {
    null != this._addedVertex && (this._component.vertices.splice(this._component.vertices.indexOf(this._addedVertex), 1), null != this._left && (this._component.edges.splice(this._component.edges.indexOf(this._left), 1), this._left.leftVertex.rightEdge = null), null != this._right && (this._component.edges.splice(this._component.edges.indexOf(this._right), 1), this._right.rightVertex.leftEdge = null), null != this._originalEdge && (this._component.edges.push(this._originalEdge), this._originalEdge.leftVertex.rightEdge = this._originalEdge, this._originalEdge.rightVertex.leftEdge = this._originalEdge), null != this._left ? this._component.updateVertexIndex(this._left.leftVertex, this._left.leftVertex.index) : this._component.updateVertexIndex(this._addedVertex, 0), this._editGeometry.notifyChanges({ operation: "undo", removedVertices: [this._addedVertex] }));
  }
  accumulate() {
    return false;
  }
};

// node_modules/@arcgis/core/views/interactive/editGeometry/operations/UpdateVertices.js
var t14 = class _t2 {
  constructor(t21, e27, i25) {
    this._editGeometry = t21, this._vertices = e27, this.operation = i25, this._undone = false;
  }
  apply() {
    this._vertices.forEach((t21) => this.operation.apply(t21)), this._editGeometry.components.forEach((t21) => t21.unnormalizeVertexPositions()), this._editGeometry.notifyChanges({ operation: this._undone ? "redo" : "apply", updatedVertices: this._vertices });
  }
  undo() {
    this._vertices.forEach((t21) => this.operation.undo(t21)), this._editGeometry.notifyChanges({ operation: "undo", updatedVertices: this._vertices }), this._undone = true;
  }
  canAccumulate(t21) {
    if (this._undone || t21._vertices.length !== this._vertices.length) return false;
    for (let e27 = 0; e27 < t21._vertices.length; ++e27) if (t21._vertices[e27] !== this._vertices[e27]) return false;
    return this.operation.canAccumulate(t21.operation);
  }
  accumulate(e27) {
    return !!(e27 instanceof _t2 && this.canAccumulate(e27)) && (this._vertices.forEach((t21) => this.operation.accumulate(t21, e27.operation)), this.operation.accumulateParams(e27.operation), this._editGeometry.components.forEach((t21) => t21.unnormalizeVertexPositions()), this._editGeometry.notifyChanges({ operation: "apply", updatedVertices: this._vertices }), true);
  }
};
var e22;
!function(t21) {
  t21[t21.CUMULATIVE = 0] = "CUMULATIVE", t21[t21.REPLACE = 1] = "REPLACE";
}(e22 || (e22 = {}));

// node_modules/@arcgis/core/views/interactive/editGeometry/operations/RemoveVertices.js
var t15 = class {
  constructor(e27, t21, r26 = 0) {
    this._editGeometry = e27, this._vertices = t21, this._minNumberOfVertices = r26, this.removedVertices = null;
  }
  apply() {
    let e27 = "redo";
    if (null == this.removedVertices) {
      const t21 = this.removedVertices = [];
      this._vertices.forEach((e28) => {
        const r26 = this._removeVertex(e28);
        null != r26 && t21.push(r26);
      }), e27 = "apply";
    } else this.removedVertices.forEach((e28) => {
      this._removeVertex(e28.removedVertex);
    });
    this._editGeometry.notifyChanges({ operation: e27, removedVertices: this._vertices });
  }
  undo() {
    var _a;
    (_a = this.removedVertices) == null ? void 0 : _a.forEach((e27) => {
      this._undoRemoveVertex(e27);
    }), this._editGeometry.notifyChanges({ operation: "undo", addedVertices: this._vertices });
  }
  accumulate() {
    return false;
  }
  _removeVertex(t21) {
    const r26 = t21.component;
    if (r26.vertices.length <= this._minNumberOfVertices) return null;
    const i25 = { removedVertex: t21, createdEdge: null }, s26 = t21.leftEdge, d28 = t21.rightEdge;
    return r26.vertices.splice(r26.vertices.indexOf(t21), 1), s26 && (r26.edges.splice(r26.edges.indexOf(s26), 1), s26.leftVertex.rightEdge = null), d28 && (r26.edges.splice(r26.edges.indexOf(d28), 1), d28.rightVertex.leftEdge = null), 0 === t21.index && d28 && this._vertices.length > 0 && r26.swapVertices(r26.vertices.indexOf(d28.rightVertex), 0), s26 && d28 && (i25.createdEdge = new l22(r26, s26.leftVertex, d28.rightVertex), r26.edges.push(i25.createdEdge)), d28 && r26.updateVertexIndex(d28.rightVertex, d28.rightVertex.index - 1), i25;
  }
  _undoRemoveVertex(e27) {
    const t21 = e27.removedVertex, r26 = e27.removedVertex.component, i25 = t21.leftEdge, s26 = t21.rightEdge;
    e27.createdEdge && r26.edges.splice(r26.edges.indexOf(e27.createdEdge), 1), r26.vertices.push(t21), i25 && (r26.edges.push(i25), i25.leftVertex.rightEdge = i25), s26 && (r26.edges.push(s26), s26.rightVertex.leftEdge = s26), r26.updateVertexIndex(t21, t21.index);
  }
};

// node_modules/@arcgis/core/views/interactive/editGeometry/operations/SplitEdge.js
var i22 = class {
  constructor(e27, t21, i25) {
    this._editGeometry = e27, this._edge = t21, this._t = i25, this.createdVertex = null, this._left = null, this._right = null;
  }
  apply() {
    let i25 = "redo";
    const r26 = this._edge, s26 = r26.component, d28 = r26.leftVertex, h18 = r26.rightVertex;
    s26.edges.splice(s26.edges.indexOf(r26), 1), null == this.createdVertex && (i25 = "apply", this.createdVertex = new h14(r26.component)), s26.vertices.push(this.createdVertex), this.createdVertex.pos = this._editGeometry.coordinateHelper.lerp(r26.leftVertex.pos, r26.rightVertex.pos, this._t, this._editGeometry.coordinateHelper.createVector()), null == this._left && (this._left = new l22(s26, d28, this.createdVertex)), this._left.leftVertex.leftEdge ? s26.edges.push(this._left) : s26.edges.unshift(this._left), d28.rightEdge = this._left, null == this._right && (this._right = new l22(s26, this.createdVertex, h18)), s26.edges.push(this._right), h18.leftEdge = this._right, s26.updateVertexIndex(this.createdVertex, d28.index + 1), this._editGeometry.notifyChanges({ operation: i25, addedVertices: [this.createdVertex] });
  }
  undo() {
    if (null == this.createdVertex || null == this._left || null == this._right) return null;
    const e27 = this._edge, t21 = e27.component, i25 = this.createdVertex.leftEdge, r26 = this.createdVertex.rightEdge, s26 = i25 == null ? void 0 : i25.leftVertex, d28 = r26 == null ? void 0 : r26.rightVertex;
    t21.vertices.splice(t21.vertices.indexOf(this.createdVertex), 1), t21.edges.splice(t21.edges.indexOf(this._left), 1), t21.edges.splice(t21.edges.indexOf(this._right), 1), this._edge.leftVertex.leftEdge ? t21.edges.push(this._edge) : t21.edges.unshift(this._edge), s26 && (s26.rightEdge = e27), d28 && (d28.leftEdge = e27), s26 && t21.updateVertexIndex(s26, s26.index), this._editGeometry.notifyChanges({ operation: "undo", removedVertices: [this.createdVertex] });
  }
  accumulate() {
    return false;
  }
};

// node_modules/@arcgis/core/views/interactive/editGeometry/operations/SetVertexPosition.js
var t16 = class _t2 {
  constructor(t21, e27, i25) {
    this._editGeometry = t21, this._vertex = e27, this._pos = i25;
  }
  apply() {
    const t21 = null == this._originalPosition;
    t21 && (this._originalPosition = this._vertex.pos), this._apply(t21 ? "apply" : "redo");
  }
  undo() {
    this._vertex.pos = this._originalPosition, this._editGeometry.notifyChanges({ operation: "undo", updatedVertices: [this._vertex] });
  }
  accumulate(e27) {
    return e27 instanceof _t2 && e27._vertex === this._vertex && (this._pos = e27._pos, this._apply("apply"), true);
  }
  _apply(t21) {
    this._vertex.pos = this._pos, this._editGeometry.components.forEach((t22) => t22.unnormalizeVertexPositions()), this._editGeometry.notifyChanges({ operation: t21, updatedVertices: [this._vertex] });
  }
};

// node_modules/@arcgis/core/views/interactive/editGeometry/operations/CloseComponent.js
var r21 = class {
  constructor(e27, t21) {
    this._editGeometry = e27, this._component = t21, this._createdEdge = null;
  }
  apply() {
    let e27 = "redo";
    if (null == this._createdEdge) {
      e27 = "apply";
      const r26 = this._component.getFirstVertex(), i25 = this._component.getLastVertex();
      if (this._component.isClosed() || this._component.vertices.length < 3 || null == r26 || null == i25) return;
      this._createdEdge = new l22(this._component, i25, r26);
    }
    this._createdEdge.leftVertex.rightEdge = this._createdEdge, this._createdEdge.rightVertex.leftEdge = this._createdEdge, this._component.edges.push(this._createdEdge), this._editGeometry.notifyChanges({ operation: e27 });
  }
  undo() {
    null != this._createdEdge && (C(this._component.edges, this._createdEdge), this._createdEdge.leftVertex.rightEdge = null, this._createdEdge.rightVertex.leftEdge = null, this._editGeometry.notifyChanges({ operation: "undo" }));
  }
  accumulate() {
    return false;
  }
};

// node_modules/@arcgis/core/views/interactive/editGeometry/operations/MoveMesh.js
var t17 = class _t2 {
  constructor(t21, e27, i25, s26) {
    this._editGeometry = t21, this.dx = e27, this.dy = i25, this.dz = s26, this._firstTime = true;
  }
  apply() {
    const t21 = this._firstTime ? "apply" : "redo";
    this._firstTime = false, this._apply(t21, this.dx, this.dy, this.dz);
  }
  undo() {
    this._apply("undo", -this.dx, -this.dy, -this.dz);
  }
  accumulate(e27) {
    const i25 = this._editGeometry.geometry;
    return e27 instanceof _t2 && e27._editGeometry.geometry === i25 && (this._apply("apply", e27.dx, e27.dy, e27.dz), this.dx += e27.dx, this.dy += e27.dy, this.dz += e27.dz, true);
  }
  _apply(t21, e27, i25, s26) {
    const o19 = this._editGeometry.geometry;
    o19.offset(e27, i25, s26);
    const d28 = this._editGeometry.components[0].getFirstVertex();
    if (!d28) return;
    const r26 = this._editGeometry.coordinateHelper;
    d28.pos = r26.pointToVector(o19.origin), this._editGeometry.notifyChanges({ operation: t21, updatedVertices: [d28] });
  }
};

// node_modules/@arcgis/core/views/interactive/editGeometry/operations/MoveVertex.js
var t18 = class _t2 {
  constructor(t21, s26, d28, h18) {
    this._helper = t21, this.dx = s26, this.dy = d28, this.dz = h18;
  }
  _move(t21, s26, d28, h18) {
    this._helper.addDelta(t21.pos, s26, d28, h18);
  }
  apply(t21) {
    this._move(t21, this.dx, this.dy, this.dz);
  }
  undo(t21) {
    this._move(t21, -this.dx, -this.dy, -this.dz);
  }
  canAccumulate(s26) {
    return s26 instanceof _t2;
  }
  accumulate(t21, s26) {
    this._move(t21, s26.dx, s26.dy, s26.dz);
  }
  accumulateParams(t21) {
    this.dx += t21.dx, this.dy += t21.dy, this.dz += t21.dz;
  }
};

// node_modules/@arcgis/core/views/interactive/editGeometry/operations/OffsetEdgeVertex.js
var P10 = class _P {
  get plane() {
    return this._plane;
  }
  get requiresSplitEdgeLeft() {
    return !this._left.isOriginalDirection;
  }
  get requiresSplitEdgeRight() {
    return !this._right.isOriginalDirection;
  }
  get edgeDirection() {
    return this._edgeDirection;
  }
  constructor(t21, i25, e27, s26 = 0, n38 = j21.IMMEDIATE) {
    this._helper = t21, this._planeType = i25, this._edge = e27, this.distance = s26, this._plane = M3(), this._offsetPlane = M3(), this._minDistance = -1 / 0, this._maxDistance = 1 / 0, this._selectedArrow = 1, n38 === j21.IMMEDIATE && this._initialize();
  }
  _initialize() {
    this._initializeNeighbors(), this._initializePlane(), this._initializeDistanceConstraints();
  }
  _initializeNeighbors() {
    var _a, _b, _c, _d;
    const t21 = this._toXYZ(this._edge.leftVertex.pos), i25 = this._toXYZ((_b = (_a = this._edge.leftVertex.leftEdge) == null ? void 0 : _a.leftVertex) == null ? void 0 : _b.pos), e27 = this._toXYZ(this._edge.rightVertex.pos), s26 = this._toXYZ((_d = (_c = this._edge.rightVertex.rightEdge) == null ? void 0 : _c.rightVertex) == null ? void 0 : _d.pos);
    this._edgeDirection = K2(n6(), t21, e27), i25 ? (this._left = this._computeNeighbor(t21, i25, this._edgeDirection), this._right = this._computeNeighbor(e27, s26, this._edgeDirection, this._left)) : (this._right = this._computeNeighbor(e27, s26, this._edgeDirection), this._left = this._computeNeighbor(t21, i25, this._edgeDirection, this._right));
  }
  _toXYZ(t21) {
    return null != t21 ? this._helper.toXYZ(t21) : null;
  }
  _pointToXYZ(t21) {
    return this._toXYZ(this._helper.pointToVector(t21));
  }
  _computeNeighbor(t21, i25, e27, s26) {
    const n38 = n6();
    if (i25) {
      K2(n38, t21, i25);
      const s27 = !this._passesBisectingAngleThreshold(n38, e27);
      return { start: t21, end: i25, direction: s27 ? this._bisectVectorsPerpendicular(e27, n38) : n38, isOriginalDirection: !s27 };
    }
    return this._helper.hasZ() ? s26 && (_4(n38, e27, s26.direction), _4(n38, n38, e27), A5(n38, n38), Math.sign(n38[1]) !== Math.sign(e27[0]) && g4(n38, n38, -1)) : o5(n38, -e27[1], e27[0], 0), { start: t21, end: i25, direction: n38, isOriginalDirection: true };
  }
  _passesBisectingAngleThreshold(t21, i25) {
    const e27 = Math.abs(a7(i25, t21));
    return e27 >= y17 && e27 <= Math.PI - y17;
  }
  _bisectVectorsPerpendicular(t21, i25) {
    const e27 = P3(t21, i25) < 0 ? t21 : y3(n6(), t21), s26 = Math.abs(P3(e27, i25));
    if (!(s26 < A14 || s26 > 1 - A14)) return this._bisectDirection(e27, i25);
    const n38 = _4(n6(), e27, [0, 0, 1]);
    return A5(n38, n38);
  }
  _bisectDirection(t21, i25) {
    const e27 = u7(n6(), t21, i25);
    return A5(e27, e27);
  }
  _initializePlane() {
    const t21 = this._computeNormalDirection(this._left), i25 = this._computeNormalDirection(this._right);
    P3(t21, i25) < 0 && y3(i25, i25), l6(this._left.start, this._bisectDirection(t21, i25), this._plane);
  }
  _computeNormalDirection(t21) {
    const i25 = _4(n6(), t21.direction, this._edgeDirection);
    A5(i25, i25);
    const e27 = _4(n6(), this._edgeDirection, i25);
    return this._planeType === z12.XY && (e27[2] = 0), A5(e27, e27);
  }
  _initializeDistanceConstraints() {
    null == this._left.end || this.requiresSplitEdgeLeft || this._updateDistanceConstraint(V2(this._plane, this._left.end)), null == this._right.end || this.requiresSplitEdgeRight || this._updateDistanceConstraint(V2(this._plane, this._right.end)), this._updateIntersectDistanceConstraint(this._plane);
  }
  _updateDistanceConstraint(t21) {
    t21 <= 0 && (this._minDistance = Math.max(this._minDistance, t21)), t21 >= 0 && (this._maxDistance = Math.min(this._maxDistance, t21));
  }
  _updateIntersectDistanceConstraint(t21) {
    const i25 = O2(t21), h18 = this._edgeDirection, o19 = u7(n6(), this._left.start, this._left.direction), a28 = u7(n6(), this._right.start, this._right.direction), _13 = this._pointInBasis2D(n9(), i25, h18, this._left.start), l23 = this._pointInBasis2D(n9(), i25, h18, o19), p22 = this._pointInBasis2D(n9(), i25, h18, this._right.start), d28 = this._pointInBasis2D(n9(), i25, h18, a28), [u18] = b9({ start: l23, end: _13, type: j12.LINE }, { start: d28, end: p22, type: j12.LINE });
    if (!u18) return;
    const m15 = e9(n9(), _13, l23);
    v4(m15, m15);
    const D10 = e9(n9(), u18, l23), x15 = j6(m15, D10), b20 = u7(n6(), o19, g4(n6(), this._left.direction, -x15)), I12 = V2(t21, b20);
    this._updateDistanceConstraint(I12);
  }
  _pointInBasis2D(t21, i25, e27, s26) {
    return t21[0] = f5(i25, s26), t21[1] = f5(e27, s26), t21;
  }
  _offset(t21, i25) {
    Number.isFinite(this._minDistance) && (i25 = Math.max(this._minDistance, i25)), Number.isFinite(this._maxDistance) && (i25 = Math.min(this._maxDistance, i25)), h3(this._offsetPlane, this._plane), this._offsetPlane[3] -= i25;
    const e27 = (t22, i26, e28) => null != i26 && k2(this._offsetPlane, t22, u7(n6(), t22, i26), e28), s26 = n6();
    (t21 === this._edge.leftVertex ? e27(this._left.start, this._left.direction, s26) : e27(this._right.start, this._right.direction, s26)) && this._helper.copy(this._helper.fromXYZ(s26, void 0, this._helper.getM(t21.pos)), t21.pos);
  }
  selectArrowFromStartPoint(t21) {
    this._selectedArrow = z3(this.plane, this._pointToXYZ(t21)) ? 1 : -1;
  }
  get selectedArrow() {
    return this._selectedArrow;
  }
  signedDistanceToPoint(t21) {
    return V2(this.plane, this._pointToXYZ(t21));
  }
  clampedStartAndEnd(i25) {
    const e27 = this._helper.toXYZ(this._helper.pointToVector(i25)), s26 = H2(this._plane, e27, n6()), n38 = V2(this._plane, e27), r26 = r7(n38, this._minDistance, this._maxDistance);
    return I2(e27, s26, e27, r26 / n38), { start: s26, end: e27 };
  }
  apply(t21) {
    this._offset(t21, this.distance);
  }
  undo(t21) {
    this._offset(t21, 0);
  }
  canAccumulate(t21) {
    return t21 instanceof _P && this._edge.leftVertex.index === t21._edge.leftVertex.index && this._edge.rightVertex.index === t21._edge.rightVertex.index && this._edge.component === t21._edge.component && this._maybeEqualsVec3(this._left.direction, t21._left.direction) && this._maybeEqualsVec3(this._right.direction, t21._right.direction) && J3(O2(this._plane), O2(t21._plane));
  }
  accumulate(t21, i25) {
    const e27 = this._plane[3] - i25._plane[3] + i25.distance;
    this._offset(t21, e27);
  }
  accumulateParams(t21) {
    const i25 = t21.distance - t21._plane[3];
    this.distance = i25 + this._plane[3];
  }
  clone() {
    const t21 = new _P(this._helper, this._planeType, this._edge, this.distance, j21.DEFERRED);
    return h3(t21._plane, this._plane), h3(t21._offsetPlane, this._offsetPlane), t21._maxDistance = this._maxDistance, t21._minDistance = this._minDistance, t21._left = this._cloneNeighbor(this._left), t21._right = this._cloneNeighbor(this._right), t21._edgeDirection = s8(n6(), this._edgeDirection), t21;
  }
  _maybeEqualsVec3(t21, i25) {
    return null == t21 && null == i25 || null != t21 && null != i25 && J3(t21, i25);
  }
  _cloneNeighbor({ start: t21, end: i25, direction: e27, isOriginalDirection: s26 }) {
    return { start: s8(n6(), t21), end: null != i25 ? s8(n6(), i25) : null, direction: s8(n6(), e27), isOriginalDirection: s26 };
  }
};
var y17 = s6(15);
var A14 = 1e-3;
var z12;
var j21;
!function(t21) {
  t21[t21.XYZ = 0] = "XYZ", t21[t21.XY = 1] = "XY";
}(z12 || (z12 = {})), function(t21) {
  t21[t21.IMMEDIATE = 0] = "IMMEDIATE", t21[t21.DEFERRED = 1] = "DEFERRED";
}(j21 || (j21 = {}));

// node_modules/@arcgis/core/views/interactive/editGeometry/operations/RotateVertex.js
var e23 = class _e2 {
  constructor(t21, a28, e27 = e22.CUMULATIVE) {
    this.origin = t21, this.angle = a28, this._accumulationType = e27;
  }
  _rotate(t21, i25) {
    I3(t21.pos, t21.pos, this.origin, i25);
  }
  apply(t21) {
    this._rotate(t21, this.angle);
  }
  undo(t21) {
    this._rotate(t21, -this.angle);
  }
  canAccumulate(a28) {
    return a28 instanceof _e2 && c(this.origin, a28.origin);
  }
  accumulate(t21, a28) {
    const e27 = a28._accumulationType === e22.REPLACE;
    this._rotate(t21, e27 ? a28.angle - this.angle : a28.angle);
  }
  accumulateParams(t21) {
    const a28 = t21._accumulationType === e22.REPLACE;
    this.angle = a28 ? t21.angle : this.angle + t21.angle;
  }
};

// node_modules/@arcgis/core/views/interactive/editGeometry/operations/ScaleVertex.js
var c17 = class _c {
  constructor(t21, s26, c18, o19, r26 = e22.CUMULATIVE) {
    this.origin = t21, this.axis1 = s26, this.factor1 = c18, this.factor2 = o19, this._accumulationType = r26, this.axis2 = r11(s26[1], -s26[0]);
  }
  _scale(t21, i25, a28) {
    k3(t21.pos, t21.pos, this.origin, this.axis1, i25), k3(t21.pos, t21.pos, this.origin, this.axis2, a28);
  }
  apply(t21) {
    this._scale(t21, this.factor1, this.factor2);
  }
  undo(t21) {
    this._scale(t21, 1 / this.factor1, 1 / this.factor2);
  }
  canAccumulate(i25) {
    return i25 instanceof _c && c(this.origin, i25.origin) && c(this.axis1, i25.axis1);
  }
  accumulate(t21, i25) {
    i25._accumulationType === e22.REPLACE ? this._scale(t21, i25.factor1 / this.factor1, i25.factor2 / this.factor2) : this._scale(t21, i25.factor1, i25.factor2);
  }
  accumulateParams(t21) {
    const i25 = t21._accumulationType === e22.REPLACE;
    this.factor1 = i25 ? t21.factor1 : this.factor1 * t21.factor1, this.factor2 = i25 ? t21.factor2 : this.factor2 * t21.factor2;
  }
};

// node_modules/@arcgis/core/views/interactive/editGeometry/operations/SetAllVertexPositions.js
var i23 = class _i {
  constructor(i25, t21) {
    this._editGeometry = i25, this._newPositions = t21;
  }
  apply() {
    const i25 = null == this._originalPositions ? "apply" : "redo";
    if (!this._originalPositions) {
      const i26 = this._editGeometry.coordinateHelper;
      this._originalPositions = this._editGeometry.allVertices.map((t21) => i26.clone(t21.pos));
    }
    this._apply(i25, this._newPositions);
  }
  undo() {
    this._originalPositions && this._apply("undo", this._originalPositions);
  }
  accumulate(t21) {
    return t21 instanceof _i && (this._newPositions = t21._newPositions, this._apply("apply", this._newPositions), true);
  }
  _apply(i25, t21) {
    const o19 = this._editGeometry.coordinateHelper, s26 = this._editGeometry.allVertices;
    for (let e27 = 0; e27 < s26.length; e27++) o19.copy(t21[e27], s26[e27].pos);
    this._editGeometry.components.forEach((i26) => i26.unnormalizeVertexPositions()), this._editGeometry.notifyChanges({ operation: i25, updatedVertices: s26 });
  }
};

// node_modules/@arcgis/core/views/interactive/editGeometry/operations/UndoGroup.js
var t19;
var o17 = Symbol();
var s22 = class {
  constructor(o19) {
    this._operations = [], this._closed = false, this[t19] = true, o19 && (this._operations = o19, this._closed = true);
  }
  close() {
    this._closed = true;
  }
  apply() {
    for (const t21 of this._operations) t21.apply();
  }
  undo() {
    for (let t21 = this._operations.length - 1; t21 >= 0; t21--) this._operations[t21].undo();
  }
  accumulate(t21) {
    if (this._closed) return false;
    const o19 = this._operations.length ? this._operations[this._operations.length - 1] : null;
    return o19 && o19.accumulate(t21) || (this._operations.push(t21), t21.apply()), true;
  }
};
t19 = o17;

// node_modules/@arcgis/core/views/interactive/editGeometry/EditGeometryOperations.js
var E11 = class _E extends o3 {
  constructor(t21, e27) {
    super(), this.data = t21, this.viewingMode = e27, this._undoStack = [], this._redoStack = [], this._listener = this.data.on("change", (t22) => {
      t22.addedVertices && this.emit("vertex-add", { type: "vertex-add", vertices: t22.addedVertices, operation: t22.operation }), t22.removedVertices && this.emit("vertex-remove", { type: "vertex-remove", vertices: t22.removedVertices, operation: t22.operation }), t22.updatedVertices && this.emit("vertex-update", { type: "vertex-update", vertices: t22.updatedVertices, operation: t22.operation });
    });
  }
  destroy() {
    this._listener.remove();
  }
  splitEdge(t21, e27) {
    return this._apply(new i22(this.data, t21, e27));
  }
  updateVertices(t21, e27, r26 = E10.ACCUMULATE_STEPS) {
    return this._apply(new t14(this.data, t21, e27), r26);
  }
  move(t21, e27, r26, s26 = E10.ACCUMULATE_STEPS) {
    return f16(this.data) ? this._apply(new t17(this.data, t21, e27, r26), s26) : this.moveVertices(this.data.allVertices, t21, e27, r26, s26);
  }
  moveVertices(t21, e27, r26, s26, o19 = E10.ACCUMULATE_STEPS) {
    return f16(this.data) ? this._apply(new t17(this.data, e27, r26, s26), o19) : this.updateVertices(t21, new t18(this.data.coordinateHelper, e27, r26, s26), o19);
  }
  scale(t21, e27, r26, s26, i25 = E10.ACCUMULATE_STEPS, o19 = e22.CUMULATIVE) {
    return this.scaleVertices(this.data.allVertices, t21, e27, r26, s26, i25, o19);
  }
  scaleVertices(t21, e27, r26, s26, i25, o19 = E10.ACCUMULATE_STEPS, n38 = e22.CUMULATIVE) {
    return this.updateVertices(t21, new c17(e27, r26, s26, i25, n38), o19);
  }
  rotate(t21, e27, r26 = E10.ACCUMULATE_STEPS, s26 = e22.CUMULATIVE) {
    return this.rotateVertices(this.data.allVertices, t21, e27, r26, s26);
  }
  rotateVertices(t21, e27, r26, s26 = E10.ACCUMULATE_STEPS, i25 = e22.CUMULATIVE) {
    return this.updateVertices(t21, new e23(e27, r26, i25), s26);
  }
  removeVertices(t21) {
    return this._apply(new t15(this.data, t21, this._minNumVerticesPerType));
  }
  appendVertex(t21) {
    return 0 === this.data.components.length ? null : this._apply(new i21(this.data, this.data.components[0], t21));
  }
  setVertexPosition(t21, e27) {
    return this._apply(new t16(this.data, t21, e27));
  }
  offsetEdge(t21, e27, r26, s26 = E10.ACCUMULATE_STEPS) {
    return this.updateVertices([e27.leftVertex, e27.rightVertex], new P10(this.data.coordinateHelper, t21, e27, r26), s26);
  }
  trySetGeometry(t21, e27 = E10.ACCUMULATE_STEPS) {
    const { data: r26 } = this, { coordinateHelper: n38 } = r26;
    if (r26.type !== t21.type || !r26.spatialReference.equals(t21.spatialReference) || n38.hasZ() !== t21.hasZ || n38.hasM() !== t21.hasM || !j3(r26.geometry, t21) || f16(r26)) return;
    const p22 = Array.from(p19.fromGeometry(t21, this.viewingMode).iterateVertices(), (t22) => t22.pos);
    return this.setVertexPositions(p22, e27);
  }
  setVertexPositions(t21, e27 = E10.ACCUMULATE_STEPS) {
    return this._apply(new i23(this.data, t21), e27);
  }
  createResetState() {
    if (f16(this.data)) return this._createResetStateMesh();
    const t21 = this.data.geometry.clone();
    return e(() => this.trySetGeometry(t21));
  }
  closeComponent(t21) {
    return this.data.components.includes(t21) ? this._apply(new r21(this.data, t21)) : null;
  }
  canRemoveVertex(t21) {
    return t21.vertices.length > this._minNumVerticesPerType;
  }
  createUndoGroup() {
    const t21 = new s22();
    return this._apply(t21), e(() => t21.close());
  }
  undo() {
    if (this._undoStack.length > 0) {
      const t21 = this._undoStack.pop();
      return t21.undo(), this._redoStack.push(t21), t21;
    }
    return null;
  }
  redo() {
    if (this._redoStack.length > 0) {
      const t21 = this._redoStack.pop();
      return t21.apply(), this._undoStack.push(t21), t21;
    }
    return null;
  }
  get canUndo() {
    return this._undoStack.length > 0;
  }
  get canRedo() {
    return this._redoStack.length > 0;
  }
  get lastOperation() {
    return this._undoStack.length > 0 ? this._undoStack[this._undoStack.length - 1] : null;
  }
  get _minNumVerticesPerType() {
    switch (this.data.type) {
      case "point":
        return 1;
      case "polyline":
        return 2;
      case "polygon":
        return 3;
      default:
        return 0;
    }
  }
  _apply(t21, e27 = E10.ACCUMULATE_STEPS) {
    return e27 !== E10.NEW_STEP && null != this.lastOperation && this.lastOperation.accumulate(t21) || (t21.apply(), this._undoStack.push(t21), this._redoStack = []), t21;
  }
  _createResetStateMesh() {
    if (!f16(this.data)) return e();
    const t21 = this.data.geometry, { vertexSpace: s26 } = t21;
    if (s26.origin) {
      const i25 = t2(s26.origin);
      return e(() => {
        t21.vertexSpace.origin = i25;
      });
    }
    const o19 = t21.vertexAttributes.clonePositional();
    return e(() => {
      t21.vertexAttributes = o19, t21.vertexAttributesChanged();
    });
  }
  static fromGeometry(t21, e27) {
    return new _E(p19.fromGeometry(t21, e27), e27);
  }
};

// node_modules/@arcgis/core/views/interactive/dragEventPipeline.js
function i24(t21, n38) {
  let e27 = null, r26 = null;
  return (a28) => {
    if ("cancel" === a28.action) return void (null != r26 && (r26.execute({ action: "cancel" }), e27 = null, r26 = null));
    const o19 = { action: a28.action, screenStart: a28.start, screenEnd: a28.screenPoint };
    "start" === a28.action && null == e27 && (e27 = new w17(), r26 = new w17(), n38(t21, e27, r26, a28.pointerType, o19)), null != e27 && e27.execute(o19), "end" === a28.action && null != e27 && (e27 = null, r26 = null);
  };
}
function p20(t21, n38) {
  return t21.events.on("drag", i24(t21, n38));
}
function E12(t21, n38 = null, e27) {
  var _a;
  let r26 = null;
  const o19 = null == n38 || ((_a = t21.spatialReference) == null ? void 0 : _a.equals(n38)) ? (t22) => t22 : (t22) => null != t22 ? K(t22, n38) : t22, l23 = { exclude: [], ...e27 };
  return (n39) => {
    if ("start" === n39.action && (r26 = o19(t21.toMap(n39.screenStart, l23))), null == r26) return null;
    const e28 = o19(t21.toMap(n39.screenEnd, l23));
    return null != e28 ? { ...n39, mapStart: r26, mapEnd: e28 } : null;
  };
}
var R17 = () => {
};
var w17 = class _w {
  constructor() {
    this.execute = R17;
  }
  next(t21, n38 = new _w()) {
    return null != t21 && (this.execute = (e27) => {
      const r26 = t21(e27);
      null != r26 && n38.execute(r26);
    }), n38;
  }
};
function D9(t21, n38, e27 = []) {
  if ("2d" === t21.type) return (t22) => t22;
  let r26 = null;
  return (a28) => {
    "start" === a28.action && (r26 = t21.toMap(a28.screenStart, { exclude: e27 }), null != r26 && (r26.z = p6(r26, t21, n38)));
    const o19 = t21.toMap(a28.screenEnd, { exclude: e27 });
    null != o19 && (o19.z = p6(o19, t21, n38));
    const l23 = null != r26 && null != o19 ? { sceneStart: r26, sceneEnd: o19 } : null;
    return { ...a28, scenePoints: l23 };
  };
}

// node_modules/@arcgis/core/views/interactive/snapping/SnappingContext.js
var e24 = class {
  constructor(e27) {
    this.vertexHandle = null, this.excludeFeature = null, this.visualizer = null, this.selfSnappingZ = null, this.drawConstraints = null, this.editGeometryOperations = e27.editGeometryOperations, this.elevationInfo = e27.elevationInfo, this.pointer = e27.pointer, this.vertexHandle = e27.vertexHandle, this.excludeFeature = e27.excludeFeature, this.feature = e27.feature, this.visualizer = e27.visualizer, this.selfSnappingZ = e27.selfSnappingZ, this.drawConstraints = e27.drawConstraints;
  }
  get coordinateHelper() {
    return this.editGeometryOperations.data.coordinateHelper;
  }
  get spatialReference() {
    return this.coordinateHelper.spatialReference;
  }
};

// node_modules/@arcgis/core/views/interactive/snapping/SnappingDragPipelineStep.js
function f17({ predicate: o19 = () => true, snappingManager: i25, snappingContext: l23, updatingHandles: u18, useZ: c18 = true }) {
  const p22 = new w17();
  if (null == i25) return { snappingStep: [y18, p22], cancelSnapping: y18 };
  let f18, Z11 = null, j24 = null, z14 = null;
  const T10 = () => {
    Z11 = e2(Z11), i25.doneSnapping(), j24 == null ? void 0 : j24.frameTask.remove(), j24 = null, f18 = l(f18), z14 = null;
  }, k14 = d25(i25, c18, p22);
  let w19 = null, I12 = null, U14 = null;
  return { snappingStep: [(n38) => {
    if (!o19(n38)) return n38;
    const { action: e27 } = n38;
    if ("start" === e27) {
      const { info: e28 } = n38, t21 = m12(i25.view);
      if (j24 = g20(l23, n38, t21), j24.context.selfSnappingZ = null, !c18 && null != e28) {
        const n39 = S9(l23.coordinateHelper, e28.handle.component);
        null != n39 && (j24.context.selfSnappingZ = { value: n39, elevationInfo: l23.elevationInfo ?? j7 });
      }
    }
    if (null != j24) {
      const { context: o20, originalScenePos: l24, originalPos: a28 } = j24, { mapEnd: s26, mapStart: p23, scenePoints: d28 } = n38, m15 = x13(a28, v12(s26, p23)), g22 = v12(p23, a28), S13 = { ...n38, action: "update" }, y21 = j24.context, T11 = P11(l24, d28), C14 = i25.update({ point: m15, scenePoint: T11, context: o20 });
      if (U14 = C14, h15(s26, C14, g22, c18), w19 = m15, I12 = T11, "end" !== e27) {
        const { frameTask: n39 } = j24;
        null == Z11 && (Z11 = new AbortController()), z14 = (e28) => {
          u18.addPromise(d(k14({ frameTask: n39, event: S13, context: y21, point: m15, scenePoint: T11, delta: g22, getLastState: () => ({ point: w19, scenePoint: I12, updatePoint: e28.forceUpdate ? null : U14 }) }, Z11.signal)));
        }, z14({ forceUpdate: false }), null == f18 && (f18 = d3(() => i25.options.effectiveEnabled, () => z14 == null ? void 0 : z14({ forceUpdate: true })));
      }
    }
    return "end" === e27 && T10(), n38;
  }, p22], cancelSnapping: (n38) => (T10(), n38) };
}
function d25(n38, e27, t21) {
  return k(async ({ frameTask: o19, point: r26, scenePoint: l23, context: a28, event: s26, delta: u18, getLastState: c18 }, p22) => {
    const f18 = await o19.schedule(() => n38.snap({ point: r26, scenePoint: l23, context: a28, signal: p22 }), p22);
    if (f18.valid) {
      let l24 = await o19.schedule(() => f18.apply(), p22);
      const d28 = c18();
      null != d28.point && r26 !== d28.point && (l24 = n38.update({ point: d28.point, scenePoint: d28.scenePoint, context: a28 })), null != d28.updatePoint && a12(l24, d28.updatePoint) || (h15(s26.mapEnd, l24, u18, e27), t21.execute(s26));
    }
  });
}
function m12(n38) {
  return "3d" === n38.type ? n38.resourceController.scheduler.registerTask(g5.SNAPPING) : F2;
}
function g20(n38, e27, t21) {
  return { context: new e24({ editGeometryOperations: n38.editGeometryOperations, elevationInfo: n38.elevationInfo, pointer: n38.pointer, vertexHandle: null != e27.info ? e27.info.handle : null, excludeFeature: n38.excludeFeature, feature: n38.feature, visualizer: n38.visualizer }), originalPos: null != e27.snapOrigin ? n38.coordinateHelper.vectorToDehydratedPoint(e27.snapOrigin) : e27.mapStart, originalScenePos: null != e27.scenePoints ? e27.scenePoints.sceneStart : null, frameTask: t21 };
}
function x13(n38, [e27, t21, o19]) {
  const r26 = x3(n38);
  return r26.x += e27, r26.y += t21, r26.hasZ && (r26.z += o19), r26;
}
function P11(n38, e27) {
  return null == n38 || null == e27 ? null : x13(n38, v12(e27.sceneEnd, e27.sceneStart));
}
function v12(n38, e27) {
  const t21 = n38.hasZ && e27.hasZ ? n38.z - e27.z : 0;
  return [n38.x - e27.x, n38.y - e27.y, t21];
}
function h15(n38, e27, [t21, o19, r26], i25) {
  n38.x = e27.x + t21, n38.y = e27.y + o19, i25 && n38.hasZ && e27.hasZ && (n38.z = e27.z + r26);
}
function S9(n38, e27) {
  if (!n38.hasZ()) return null;
  const t21 = e27.vertices;
  let o19 = null;
  for (const r26 of t21) {
    const e28 = n38.getZ(r26.pos);
    if (null != o19 && null != e28 && Math.abs(e28 - o19) > 1e-6) return null;
    null == o19 && (o19 = e28);
  }
  return o19;
}
function y18(n38) {
  return n38;
}

// node_modules/@arcgis/core/views/interactive/snapping/SnappingOperation.js
var p21 = class extends b {
  constructor(t21) {
    super(t21), this.constrainResult = (t22) => t22, this._snapPoints = null, this._frameTask = null, this._abortController = null, this._stagedPoint = null, this._snap = k(async (t22, s26, o19, n38) => {
      const i25 = this._frameTask;
      if (null == i25) return;
      const r26 = await i25.schedule(() => s26.snap({ ...t22, context: o19, signal: n38 }), n38);
      r26.valid && await i25.schedule(() => {
        this.stagedPoint = r26.apply(), t22 !== this._snapPoints && null != this._snapPoints && (this.stagedPoint = s26.update({ ...this._snapPoints, context: o19 }));
      }, n38);
    });
  }
  get stagedPoint() {
    return this._stagedPoint;
  }
  set stagedPoint(t21) {
    this._stagedPoint = this.constrainResult(t21);
  }
  initialize() {
    var _a, _b;
    const t21 = "3d" === this.view.type ? (_b = (_a = this.view) == null ? void 0 : _a.resourceController) == null ? void 0 : _b.scheduler : null;
    this._frameTask = null != t21 ? t21.registerTask(g5.SNAPPING) : F2;
  }
  destroy() {
    this._abortController = e2(this._abortController), this._frameTask = l(this._frameTask);
  }
  update(t21, s26, o19) {
    this._snapPoints = t21;
    const { point: n38, scenePoint: i25 } = t21, r26 = s26.update({ point: n38, scenePoint: i25, context: o19 });
    return this.stagedPoint = r26, r26;
  }
  async snap(t21, s26, o19) {
    const { point: n38, scenePoint: i25 } = t21;
    return this.stagedPoint = s26.update({ point: n38, scenePoint: i25, context: o19 }), this._snapPoints = t21, null == this._abortController && (this._abortController = new AbortController()), this._snap(t21, s26, o19, this._abortController.signal);
  }
  async snapAgainNearPreviousMapPoint(t21, s26) {
    null != this._snapPoints && await this.snap(this._snapPoints, t21, s26);
  }
  abort() {
    this._abortController = e2(this._abortController), this._snapPoints = null;
  }
};
r([m({ constructOnly: true })], p21.prototype, "view", void 0), r([m()], p21.prototype, "stagedPoint", null), r([m()], p21.prototype, "constrainResult", void 0), r([m()], p21.prototype, "_stagedPoint", void 0), p21 = r([a2("esri.views.interactive.snapping.SnappingOperation")], p21);

// node_modules/@arcgis/core/views/interactive/snapping/snappingUtils.js
var m13 = Symbol("grid-placement-graphic");
var y19;
!function(e27) {
  e27[e27.TARGET = 0] = "TARGET", e27[e27.REFERENCE = 1] = "REFERENCE", e27[e27.REFERENCE_EXTENSION = 2] = "REFERENCE_EXTENSION";
}(y19 || (y19 = {}));
var N10 = Symbol("snapping-toggle");
function b18(n38, r26 = () => {
}) {
  const o19 = d3(() => ({ view: n38.view, snappingOptions: n38.snappingOptions }), ({ view: e27, snappingOptions: t21 }) => {
    if (n38.removeHandles(N10), !e27 || !t21) return;
    const o20 = _8.TOOL, i25 = [e27.on("key-down", (e28) => {
      e28.key !== c7.toggle || e28.repeat || (t21.enabledToggled = true, r26());
    }, o20), e27.on("key-up", (e28) => {
      e28.key === c7.toggle && (t21.enabledToggled = false, r26());
    }, o20), e27.on("pointer-move", (e28) => {
      const n39 = e28.native.ctrlKey;
      t21.enabledToggled !== n39 && (t21.enabledToggled = n39, r26());
    }, o20)];
    n38.addHandles(i25, N10);
  }, A2);
  n38.addHandles(o19);
}

// node_modules/@arcgis/core/views/draw/DrawOperation.js
var A15 = "crosshair";
var L12 = "progress";
var U13 = Symbol();
var z13 = Symbol();
var F11 = class extends o3.EventedMixin(b) {
  constructor(t21) {
    super(t21), this._createOperationCompleted = false, this._hideDefaultCursor = false, this._pointerDownStates = new s11(), this._stagedScreenPoint = null, this._stagedPointerType = null, this._updatingHandles = new h5(), this._stagedPointerId = null, this.constraintsEnabled = false, this.constraints = void 0, this._getPointConstraint = t10(V4), this._getPolylineOrPolygonConstraint = t10(k6), this.constraintZ = null, this.defaultZ = null, this.isDraped = true, this.labelOptions = new c14(), this.cursor = null, this.loading = false, this.snapToSceneEnabled = null, this.firstVertex = null, this.lastVertex = null, this.secondToLastVertex = null, null == t21.elevationInfo && (this.elevationInfo = u9(!!t21.hasZ));
  }
  initialize() {
    const { geometryType: t21, view: e27 } = this, i25 = e27.spatialReference, n38 = "viewingMode" in e27.state ? e27.state.viewingMode : l8.Local, o19 = "segment" === t21 || "multipoint" === t21 ? "polyline" : t21;
    this.coordinateHelper = P9(this.hasZ, this.hasM, i25), this._editGeometryOperations = new E11(new p19(o19, this.coordinateHelper), n38), this._snappingOperation = new p21({ view: e27 }), this.addHandles([d3(() => ({ stagedPoint: this._snappingOperation.stagedPoint, constraint: this._constraint }), ({ stagedPoint: t22, constraint: e28 }, i26) => {
      const { snappingOptions: n39 } = this;
      n39 && (n39.forceDisabled = null != e28 && Le(e28));
      if (null != i26 && t22 === i26.stagedPoint && e28 !== i26.constraint) return this._onKeyboardBasedChange();
      this._processCursor(t22 ?? this._screenToMap(this._stagedScreenPoint));
    }, { equals: (t22, e28) => t22.stagedPoint === e28.stagedPoint && o(t22.constraint, e28.constraint) }), d3(() => this.view.viewpoint, (t22, e28) => {
      t22 && e28 && d9(t22, e28) && this._onKeyboardBasedChange();
    })]), this._activeComponent = new a27(i25, n38), this._editGeometryOperations.data.components.push(this._activeComponent);
    const s26 = this.segmentLabels;
    null != s26 && (s26.context = { view: e27, editGeometryOperations: this._editGeometryOperations, elevationInfo: this.elevationInfo, labelOptions: this.labelOptions }, this.addHandles(d3(() => this.labelOptions.enabled, (t22) => {
      s26.visible = t22;
    }, A2))), this.addHandles(this._editGeometryOperations.on(["vertex-add", "vertex-update", "vertex-remove"], (t22) => {
      var _a, _b, _c, _d;
      const e28 = t22.vertices.map((t23) => ({ componentIndex: 0, vertexIndex: t23.index, coordinates: this.coordinateHelper.vectorToArray(t23.pos) })), i26 = e28.map((t23) => t23.coordinates), n39 = this.coordinateHelper.vectorToDehydratedPoint((_a = this._activeComponent.getFirstVertex()) == null ? void 0 : _a.pos) ?? null;
      a12(n39, this.firstVertex) || (this.firstVertex = n39);
      const o20 = this.coordinateHelper.vectorToDehydratedPoint((_b = this._activeComponent.getLastVertex()) == null ? void 0 : _b.pos) ?? null;
      a12(o20, this.lastVertex) || (this.lastVertex = o20);
      const r26 = this.coordinateHelper.vectorToDehydratedPoint((_d = (_c = this._activeComponent.edges.at(-1)) == null ? void 0 : _c.leftVertex) == null ? void 0 : _d.pos) ?? null;
      switch (a12(r26, this.secondToLastVertex) || (this.secondToLastVertex = r26), this._processCursor(this.cursorVertex), t22.type) {
        case "vertex-add":
          this.emit(t22.type, { ...t22, added: i26, vertices: e28 });
          break;
        case "vertex-update":
          this.emit(t22.type, { ...t22, updated: i26, vertices: e28 });
          break;
        case "vertex-remove":
          this.emit(t22.type, { ...t22, removed: i26, vertices: e28 });
      }
    }));
    const p22 = this._manipulator = new t13({ consumesClicks: false, grabbableForEvent: (t22) => "click" !== this.drawingMode || "touch" === t22.pointerType && this._snappingEnabled && 1 === this._pointerDownStates.size });
    this.manipulators.add(p22), p22.grabbable = "point" !== t21, this.addHandles([p22.events.on("immediate-click", (t22) => this._onImmediateClick(t22)), p22.events.on("immediate-double-click", (t22) => this._onImmediateDoubleClick(t22)), d3(() => this.drawingMode, () => {
      this.removeHandles(U13), this.addHandles(this._createManipulatorDragPipeline(p22), U13);
    }, A2), d3(() => ({ effectiveCursor: this.effectiveCursor }), ({ effectiveCursor: t22 }) => {
      p22.cursor = t22;
    }, A2)]), b18(this, () => {
      const t22 = this.view.inputManager.latestPointerType ?? "mouse", e28 = this._getSnappingContext(t22);
      if (null != this.snappingManager) {
        const t23 = this._snappingOperation.snapAgainNearPreviousMapPoint(this.snappingManager, e28);
        this._updatingHandles.addPromise(d(t23));
      }
    });
  }
  destroy() {
    u(this.segmentLabels), u(this._snappingOperation), this._editGeometryOperations = u(this._editGeometryOperations), this._updatingHandles.destroy();
  }
  get _isDragging() {
    const { _stagedPointerId: t21, _manipulator: e27 } = this;
    return null != t21 && this._pointerDownStates.has(t21) || e27.grabbing || !e27.interactive;
  }
  get _snappingEnabled() {
    return null != this.snappingManager && this.snappingManager.options.effectiveEnabled;
  }
  get _requiresScenePoint() {
    const t21 = this._updateAndGetEffectiveDrawSurface();
    return "3d" === this.view.type && this.drawSurface !== t21;
  }
  get canRedo() {
    return this._editGeometryOperations.canRedo;
  }
  get canUndo() {
    return this._editGeometryOperations.canUndo;
  }
  get committedVertices() {
    return this._activeComponent.vertices.map((t21) => this.coordinateHelper.vectorToArray(t21.pos));
  }
  get _constraint() {
    const { constraints: t21, constraintsEnabled: e27 } = this;
    if (t21 && e27) switch (this.geometryType) {
      case "point":
        return this._getPointConstraint(t21);
      case "polygon":
      case "polyline":
        return this._getPolylineOrPolygonConstraint(this.lastVertex, this.secondToLastVertex, t21);
    }
  }
  set drawingMode(t21) {
    this._set("drawingMode", t21 ?? e20);
  }
  get effectiveCursor() {
    return this.loading ? L12 : this._hideDefaultCursor ? null : this.cursor || A15;
  }
  get interactive() {
    return this._manipulator.interactive;
  }
  set interactive(t21) {
    this._manipulator.interactive = t21;
  }
  get isCompleted() {
    return this._createOperationCompleted;
  }
  get numCommittedVertices() {
    return this._activeComponent.vertices.length;
  }
  get snappingOptions() {
    return null != this.snappingManager ? this.snappingManager.options : null;
  }
  get cursorVertex() {
    return this._get("cursorVertex");
  }
  get visualizationCursorVertex() {
    return "mouse" === this._stagedPointerType ? this.cursorVertex : null;
  }
  get committableVertex() {
    const { cursorVertex: t21, lastVertex: e27, firstVertex: i25, geometryType: n38 } = this;
    return "polygon" === n38 && i6(t21, i25) || i6(t21, e27) ? null : t21;
  }
  get updating() {
    return this._updatingHandles.updating;
  }
  get geometryIncludingUncommittedVertices() {
    const { committedVertices: t21, committableVertex: e27, coordinateHelper: i25 } = this, n38 = t21.slice();
    return null != e27 && n38.push(i25.pointToArray(e27)), n38;
  }
  cancel() {
    this.complete({ aborted: true });
  }
  commitStagedVertex() {
    this._snappingOperation.abort();
    const { committableVertex: t21 } = this;
    null != t21 && this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(t21));
  }
  complete(t21) {
    var _a;
    const e27 = (t21 == null ? void 0 : t21.aborted) || false;
    this._snappingOperation.abort(), (_a = this.snappingManager) == null ? void 0 : _a.doneSnapping();
    const { geometryType: i25, numCommittedVertices: n38 } = this, o19 = "multipoint" === i25 && 0 === n38 || "polyline" === i25 && n38 < 2 || "polygon" === i25 && n38 < 3;
    "segment" !== i25 && "point" !== i25 || this.commitStagedVertex(), this._createOperationCompleted = !o19, (this.isCompleted || e27) && (this._stagedScreenPoint = null, this._stagedPointerId = null, this._stagedPointerType = null, this._processCursor(null), this.emit("complete", { vertices: this.committedVertices.map((t22, e28) => ({ componentIndex: 0, vertexIndex: e28, coordinates: t22 })), aborted: e27, type: "complete" }));
  }
  onInputEvent(t21) {
    switch (t21.type) {
      case "pointer-down":
        this._pointerDownStates.add(t21.pointerId);
        break;
      case "pointer-up":
        this._pointerDownStates.delete(t21.pointerId);
    }
    switch (t21.type) {
      case "pointer-move":
        return this._onPointerMove(t21);
      case "hold":
        return this._onHold(t21);
    }
  }
  redo() {
    this._editGeometryOperations.redo();
  }
  undo() {
    null != this.snappingManager && this.snappingManager.doneSnapping(), this._editGeometryOperations.undo();
  }
  _processCursor(t21) {
    var _a, _b;
    const e27 = a(this.cursorVertex), i25 = a(t21), o19 = i25 && (((_a = this._updateAndGetEffectiveDrawSurface()) == null ? void 0 : _a.constrainZ(i25)) ?? i25), r26 = this._snapToClosingVertex(o19), s26 = this._applyConstraints(r26);
    i6(e27, s26) || (this._set("cursorVertex", s26), (_b = this.segmentLabels) == null ? void 0 : _b.set("stagedVertex", null != s26 ? this.coordinateHelper.pointToVector(s26) : null), null == s26 || "mouse" !== this._stagedPointerType ? this.emit("cursor-remove") : this.emit("cursor-update", { updated: null, vertices: [{ componentIndex: 0, vertexIndex: this._activeComponent.vertices.length, coordinates: this.coordinateHelper.pointToArray(s26) }], operation: "apply", type: "vertex-update" }));
  }
  _snapToClosingVertex(t21) {
    if (null == t21 || this._isDragging || "polygon" !== this.geometryType || this.numCommittedVertices <= 2) return t21;
    const e27 = this._mapToScreen(t21);
    if (!e27) return t21;
    const i25 = this._activeComponent;
    return this._vertexWithinPointerDistance(i25.vertices[0].pos, e27) ? this.firstVertex : this._vertexWithinPointerDistance(i25.vertices.at(-1).pos, e27) ? this.lastVertex : t21;
  }
  _createManipulatorDragPipeline(t21) {
    switch (this.drawingMode) {
      case "click":
        return this._createManipulatorDragPipelineClick(t21);
      case "freehand":
        return this._createManipulatorDragPipelineFreehand(t21);
      case "hybrid":
        return this._createManipulatorDragPipelineHybrid(t21);
    }
  }
  _createManipulatorDragPipelineClick(t21) {
    return p20(t21, (t22, e27, i25, n38) => {
      const o19 = "touch" === n38 && this._snappingEnabled;
      if (this.isCompleted || !o19) return;
      const { snappingStep: r26, cancelSnapping: s26 } = f17({ predicate: () => o19, snappingManager: this.snappingManager, snappingContext: new e24({ editGeometryOperations: this._editGeometryOperations, elevationInfo: this.elevationInfo, feature: this.graphic, pointer: n38, visualizer: this.snappingVisualizer, drawConstraints: this.constraints }), updatingHandles: this._updatingHandles, useZ: !this._requiresScenePoint });
      i25 = i25.next((t23) => (o19 && null != this.snappingManager && this.snappingManager.doneSnapping(), t23)).next(s26), e27.next(this._screenToMapDragEventStep()).next((t23) => ("start" === t23.action && (this._processCursor(t23.mapStart), ("segment" === this.geometryType || o19 && !this.numCommittedVertices) && this.commitStagedVertex()), t23)).next(D9(this.view, this.elevationInfo)).next(...r26).next((t23) => (o19 && (this._processCursor(t23.mapEnd), "end" === t23.action && this.commitStagedVertex()), t23)).next((t23) => ("end" === t23.action && ("mouse" !== this._stagedPointerType && this._snappingOperation.abort(), "segment" !== this.geometryType && "point" !== this.geometryType || this.complete()), t23));
    });
  }
  _createManipulatorDragPipelineFreehand(t21) {
    return p20(t21, (t22, e27) => {
      this.isCompleted || e27.next(this._screenToMapDragEventStep()).next((t23) => ("start" === t23.action && (this._snappingOperation.abort(), null == this.committableVertex && this._processCursor(t23.mapStart), "segment" === this.geometryType && this.commitStagedVertex()), t23)).next((t23) => {
        switch (t23.action) {
          case "start":
          case "update":
            this._processCursor(t23.mapEnd), "polygon" !== this.geometryType && "polyline" !== this.geometryType || this.commitStagedVertex();
            break;
          case "end":
            this.complete();
        }
        return t23;
      });
    });
  }
  _createManipulatorDragPipelineHybrid(t21) {
    return p20(t21, (t22, e27) => {
      this.isCompleted || e27.next(this._screenToMapDragEventStep()).next((t23) => ("start" === t23.action && (this._snappingOperation.abort(), this.addHandles(this._editGeometryOperations.createUndoGroup(), z13), this._processCursor(t23.mapStart), this.commitStagedVertex()), t23)).next((t23) => {
        switch (t23.action) {
          case "start":
          case "update":
            this._processCursor(t23.mapEnd), "polygon" !== this.geometryType && "polyline" !== this.geometryType || this.commitStagedVertex();
            break;
          case "end":
            "mouse" !== this._stagedPointerType && this._snappingOperation.abort(), this.removeHandles(z13), "segment" !== this.geometryType && "point" !== this.geometryType || this.complete();
        }
        return t23;
      });
    });
  }
  get _drawAtFixedElevation() {
    const { constraintsEnabled: t21, constraintZ: e27, geometryType: i25, numCommittedVertices: n38 } = this;
    return t21 ? null != e27 || "segment" === i25 && n38 > 0 : ("segment" === i25 || "polygon" === i25) && n38 > 0;
  }
  _updateAndGetEffectiveDrawSurface() {
    var _a;
    const { constraintsEnabled: t21, coordinateHelper: e27, drawSurface: i25, elevationDrawSurface: n38, snapToSceneEnabled: o19 } = this;
    if (null == n38) return i25;
    if (!this.hasZ) return n38.defaultZ = null, n38;
    const r26 = (_a = this.elevationInfo) == null ? void 0 : _a.mode;
    let s26 = this.defaultZ, a28 = t21 || "absolute-height" === r26;
    if (null != o19 && (a28 = o19), "on-the-ground" === r26 && (a28 = false), this._drawAtFixedElevation) {
      s26 = (t21 ? this.constraintZ : null) ?? e27.getZ(this._activeComponent.vertices[0].pos), a28 = false;
    }
    return a28 ? i25 : (n38.defaultZ = s26, n38);
  }
  _mapToScreen(t21) {
    var _a;
    return (_a = this._updateAndGetEffectiveDrawSurface()) == null ? void 0 : _a.mapToScreen(t21);
  }
  _onHold(t21) {
    this._snappingOperation.abort(), "click" === this.drawingMode && "touch" === t21.pointerType && this._snappingEnabled && this._processCursor(t21.mapPoint), t21.stopPropagation();
  }
  _onImmediateClick(t21) {
    if (!("mouse" === t21.pointerType && 2 === t21.button || this._manipulator.dragging)) try {
      const { drawingMode: e27, geometryType: i25 } = this;
      this._stagedPointerType = t21.pointerType, this._stagedScreenPoint = t21.screenPoint;
      const n38 = this._screenToMap(t21.screenPoint);
      if (null == n38) return;
      if (null == n38 || "freehand" === e27 && "point" !== i25) return;
      if (this._snappingEnabled && null != this.cursorVertex || this._processCursor(n38), null == this.committableVertex) return void this.complete();
      this.commitStagedVertex(), "mouse" !== t21.pointerType && this._processCursor(null), ("freehand" === e27 || "point" === i25 || "segment" === i25 && 2 === this.numCommittedVertices || "segment" === i25 && "hybrid" === e27 && 1 === this.numCommittedVertices) && this.complete();
    } finally {
      t21.stopPropagation();
    }
  }
  _onImmediateDoubleClick(t21) {
    this._manipulator.dragging || "point" === this.geometryType || (this.complete(), t21.stopPropagation());
  }
  _onPointerMove(t21) {
    const e27 = c2(t21.x, t21.y);
    this._stagedScreenPoint = e27, this._stagedPointerType = t21.pointerType, this._stagedPointerId = t21.pointerId, this._isDragging ? this._snappingOperation.abort() : (t21.stopPropagation(), this._processCursorMovementRelativeToSurface(e27, t21.pointerType));
  }
  _onKeyboardBasedChange() {
    "mouse" === this._stagedPointerType && this._stagedScreenPoint && null != this._stagedPointerId && !this._isDragging ? this._processCursorMovementRelativeToSurface(this._stagedScreenPoint, this._stagedPointerType) : this._snappingOperation.abort();
  }
  _processCursorMovementRelativeToSurface(t21, e27) {
    var _a;
    const i25 = this._snappingOperation, n38 = this._screenToMap(t21), o19 = this._requiresScenePoint ? (_a = this.drawSurface) == null ? void 0 : _a.screenToMap(t21) : null;
    if (null == n38) return this._hideDefaultCursor = true, this._processCursor(null), void i25.abort();
    this._hideDefaultCursor = false;
    const r26 = this.snappingManager;
    if (null == r26) return this._processCursor(n38), void i25.abort();
    const s26 = this._getSnappingContext(e27);
    this._updatingHandles.addPromise(d(i25.snap({ point: n38, scenePoint: o19 }, r26, s26)));
  }
  _applyConstraints(t21) {
    const { _constraint: e27, constraints: i25 } = this;
    if (!t21 || !i25 || !e27) return t21;
    const { context: n38 } = i25, o19 = G(t21, n38), r26 = o19 ? e27.closestTo(o19) : void 0;
    if (!r26) return t21;
    const s26 = W5(r26, t21, n38), a28 = "2d" === this.view.type || "absolute-height" !== n38.elevationInfo.mode;
    return null != s26 && a28 && null != this.constraintZ && this.hasZ && (s26.z = this.constraintZ), s26;
  }
  _screenToMap(t21) {
    var _a;
    return t21 ? (_a = this._updateAndGetEffectiveDrawSurface()) == null ? void 0 : _a.screenToMap(t21) : null;
  }
  _screenToMapDragEventStep() {
    let t21 = null;
    return (e27) => {
      if ("start" === e27.action && (t21 = this._screenToMap(e27.screenStart)), null == t21) return null;
      const i25 = this._screenToMap(e27.screenEnd);
      return null != i25 ? { ...e27, mapStart: t21, mapEnd: i25 } : null;
    };
  }
  _vertexWithinPointerDistance(t21, e27) {
    const i25 = 25, n38 = this._mapToScreen(this.coordinateHelper.vectorToDehydratedPoint(t21));
    return null != n38 && R18(n38, e27, i25);
  }
  _getSnappingContext(t21) {
    var _a;
    const e27 = this._drawAtFixedElevation ? (_a = this.elevationDrawSurface) == null ? void 0 : _a.defaultZ : null;
    return new e24({ editGeometryOperations: this._editGeometryOperations, elevationInfo: this.elevationInfo, pointer: t21, feature: this.graphic, visualizer: this.snappingVisualizer, selfSnappingZ: null != e27 ? { value: e27, elevationInfo: this.elevationInfo } : null, drawConstraints: this.constraints });
  }
};
function R18(t21, e27, i25) {
  const n38 = t21.x - e27.x, o19 = t21.y - e27.y;
  return n38 * n38 + o19 * o19 <= i25;
}
r([m()], F11.prototype, "_hideDefaultCursor", void 0), r([m()], F11.prototype, "_stagedPointerId", void 0), r([m()], F11.prototype, "_isDragging", null), r([m()], F11.prototype, "_snappingOperation", void 0), r([m()], F11.prototype, "_snappingEnabled", null), r([m({ constructOnly: true })], F11.prototype, "graphic", void 0), r([m()], F11.prototype, "constraintsEnabled", void 0), r([m()], F11.prototype, "constraints", void 0), r([m()], F11.prototype, "_constraint", null), r([m()], F11.prototype, "constraintZ", void 0), r([m()], F11.prototype, "defaultZ", void 0), r([m()], F11.prototype, "isDraped", void 0), r([m({ value: e20 })], F11.prototype, "drawingMode", null), r([m({ constructOnly: true })], F11.prototype, "elevationDrawSurface", void 0), r([m({ constructOnly: true })], F11.prototype, "elevationInfo", void 0), r([m({ constructOnly: true, type: c14 })], F11.prototype, "labelOptions", void 0), r([m({ constructOnly: true })], F11.prototype, "geometryType", void 0), r([m({ constructOnly: true })], F11.prototype, "hasM", void 0), r([m({ constructOnly: true })], F11.prototype, "hasZ", void 0), r([m()], F11.prototype, "cursor", void 0), r([m()], F11.prototype, "effectiveCursor", null), r([m()], F11.prototype, "loading", void 0), r([m({ constructOnly: true })], F11.prototype, "manipulators", void 0), r([m({ constructOnly: true })], F11.prototype, "drawSurface", void 0), r([m({ constructOnly: true })], F11.prototype, "segmentLabels", void 0), r([m({ constructOnly: true })], F11.prototype, "snappingManager", void 0), r([m({ constructOnly: true })], F11.prototype, "snappingVisualizer", void 0), r([m()], F11.prototype, "snapToSceneEnabled", void 0), r([m({ readOnly: true })], F11.prototype, "cursorVertex", null), r([m({ readOnly: true })], F11.prototype, "visualizationCursorVertex", null), r([m()], F11.prototype, "committableVertex", null), r([m()], F11.prototype, "firstVertex", void 0), r([m()], F11.prototype, "lastVertex", void 0), r([m()], F11.prototype, "secondToLastVertex", void 0), r([m()], F11.prototype, "updating", null), r([m({ constructOnly: true })], F11.prototype, "view", void 0), F11 = r([a2("esri.views.draw.DrawOperation")], F11);

// node_modules/@arcgis/core/views/draw/drawSurfaces.js
var h16 = class {
  constructor(e27, t21 = false, s26 = 0) {
    this.view = e27, this.hasZ = t21, this.defaultZ = s26, this.mapToScreen = (t22) => e27.toScreen(t22), this.screenToMap = t21 ? (t22) => {
      const r26 = e27.toMap(t22);
      return r26.z = s26, r26;
    } : (t22) => e27.toMap(t22);
  }
  constrainZ(e27) {
    const { defaultZ: t21 } = this;
    return this.hasZ && e27.z !== t21 && ((e27 = x3(e27)).z = t21), e27;
  }
};
var u15 = class _u {
  screenToMap(e27) {
    const { x: t21, y: s26 } = e27;
    return new j2({ x: t21, y: s26, spatialReference: _u.spatialReference });
  }
  mapToScreen(e27) {
    return c2(e27.x, e27.y);
  }
  constrainZ(e27) {
    return e27;
  }
};
u15.spatialReference = new g2();

// node_modules/@arcgis/core/views/2d/interactive/editingTools/draw/DrawGraphicTool2D.js
var E13 = class extends I11 {
  constructor(e27) {
    super(e27), this._visualElementGraphics = { regularVertices: null, activeVertex: null, activeEdge: null }, this.activeFillSymbol = null, this.type = "draw-2d", this._visualElementSymbols = { outline: e27.activeLineSymbol ?? t5, regularVertices: e27.regularVerticesSymbol ?? l13, activeVertex: e27.activeVertexSymbol ?? i9, fill: e27.activeFillSymbol }, e27.activeVertexSymbol || this.addHandles(d3(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.effectiveTheme) == null ? void 0 : _b.accentColor;
    }, (e28) => {
      var _a;
      if (!e28) return;
      const t21 = this._visualElementSymbols.activeVertex.clone().set({ color: e28 });
      (_a = this._visualElementGraphics.activeVertex) == null ? void 0 : _a.set("symbol", t21), this._visualElementSymbols = { ...this._visualElementSymbols, activeVertex: t21 };
    }, P2));
  }
  normalizeCtorArgs(e27) {
    const t21 = { ...e27 };
    return delete t21.activeFillSymbol, delete t21.activeVertexSymbol, delete t21.regularVerticesSymbol, delete t21.activeLineSymbol, t21;
  }
  initializeGraphic(e27) {
    return null != this._visualElementSymbols.fill && (e27.symbol = this._visualElementSymbols.fill), this.internalGraphicsLayer.graphics.sort(G5), e();
  }
  makeDrawOperation() {
    const { defaultZ: e27, hasZ: t21, view: i25 } = this;
    return this._createOrUpdateGraphic(null), new F11({ view: i25, manipulators: this.manipulators, geometryType: M13(this.geometryType), drawingMode: this.mode, hasZ: t21, defaultZ: e27, snapToSceneEnabled: this.snapToScene, drawSurface: new h16(i25, t21, e27), hasM: false, snappingManager: this.snappingManager, snappingVisualizer: new d14(this.internalGraphicsLayer), graphic: this.graphic, cursor: this.cursor, constraintsEnabled: true });
  }
  onActiveVertexChanged(e27) {
    if ("point" === this.geometryType) return e();
    const [s26, a28] = e27, l23 = new j2({ x: s26, y: a28, spatialReference: this.view.spatialReference });
    return null != this._visualElementGraphics.activeVertex ? (this._visualElementGraphics.activeVertex.geometry = l23, e()) : (this._visualElementGraphics.activeVertex = new d8({ geometry: l23, symbol: this._visualElementSymbols.activeVertex, attributes: { displayOrder: 2 } }), this.internalGraphicsLayer.add(this._visualElementGraphics.activeVertex), this.internalGraphicsLayer.graphics.sort(G5), e(() => {
      null != this._visualElementGraphics.activeVertex && (this.internalGraphicsLayer.remove(this._visualElementGraphics.activeVertex), this._visualElementGraphics.activeVertex = u(this._visualElementGraphics.activeVertex));
    }));
  }
  onCursorEdgeChanged(e27) {
    return null != this._visualElementGraphics.activeEdge ? (this._visualElementGraphics.activeEdge.geometry = e27, e()) : (this._visualElementGraphics.activeEdge = new d8({ geometry: e27, symbol: this._visualElementSymbols.outline, attributes: { displayOrder: 0 } }), this.internalGraphicsLayer.add(this._visualElementGraphics.activeEdge), this.internalGraphicsLayer.graphics.sort(G5), e(() => {
      null != this._visualElementGraphics.activeEdge && (this.internalGraphicsLayer.remove(this._visualElementGraphics.activeEdge), this._visualElementGraphics.activeEdge = u(this._visualElementGraphics.activeEdge));
    }));
  }
  onRegularVerticesChanged(e27) {
    const s26 = new u3({ points: e27, spatialReference: this.view.spatialReference });
    return null != this._visualElementGraphics.regularVertices ? (this._visualElementGraphics.regularVertices.geometry = s26, e()) : (this._visualElementGraphics.regularVertices = new d8({ geometry: s26, symbol: this._visualElementSymbols.regularVertices, attributes: { displayOrder: 1 } }), this.internalGraphicsLayer.add(this._visualElementGraphics.regularVertices), this.internalGraphicsLayer.graphics.sort(G5), e(() => {
      null != this._visualElementGraphics.regularVertices && (this.internalGraphicsLayer.remove(this._visualElementGraphics.regularVertices), this._visualElementGraphics.regularVertices = u(this._visualElementGraphics.regularVertices));
    }));
  }
};
function G5(e27, t21) {
  var _a, _b;
  return (((_a = e27.attributes) == null ? void 0 : _a.displayOrder) ?? -1 / 0) - (((_b = t21.attributes) == null ? void 0 : _b.displayOrder) ?? -1 / 0);
}
r([m()], E13.prototype, "activeFillSymbol", void 0), r([m({ readOnly: true })], E13.prototype, "type", void 0), r([m({ constructOnly: true, nonNullable: true })], E13.prototype, "view", void 0), E13 = r([a2("esri.views.2d.interactive.editingTools.draw.DrawGraphicTool2D")], E13);

// node_modules/@arcgis/core/views/2d/interactive/editingTools/manipulations/Manipulation.js
var r23 = class {
  get hovering() {
    return this.someManipulator((r26) => r26.hovering);
  }
  get grabbing() {
    return this.someManipulator((r26) => r26.grabbing);
  }
  get dragging() {
    return this.someManipulator((r26) => r26.dragging);
  }
  hasManipulator(r26) {
    return this.someManipulator((t21) => t21 === r26);
  }
  someManipulator(r26) {
    let t21 = false;
    return this.forEachManipulator((a28) => {
      !t21 && r26(a28) && (t21 = true);
    }), t21;
  }
};
var t20;
!function(r26) {
  r26[r26.TRANSLATE_XY = 0] = "TRANSLATE_XY", r26[r26.SCALE = 1] = "SCALE", r26[r26.ROTATE = 2] = "ROTATE";
}(t20 || (t20 = {}));

// node_modules/@arcgis/core/views/interactive/support/utils.js
function s23(s26) {
  let t21 = 0, a28 = 0, e27 = 0;
  return s26 ? ("cim" === s26.type && s26.data.symbol && "symbolLayers" in s26.data.symbol && s26.data.symbol.symbolLayers && s26.data.symbol.symbolLayers.map((o19) => {
    "CIMVectorMarker" === o19.type && o19.anchorPoint && (Math.abs(o19.anchorPoint.x) > t21 && (t21 = o19.anchorPoint.x), Math.abs(o19.anchorPoint.y) > a28 && (a28 = o19.anchorPoint.y), null != o19.size && o19.size > e27 && (e27 = o19.size));
  }), t21 = u4(t21), a28 = u4(a28), e27 = u4(e27), { offsetX: t21, offsetY: a28, size: e27 }) : { offsetX: t21, offsetY: a28, size: e27 };
}

// node_modules/@arcgis/core/views/interactive/GraphicManipulator.js
var S10 = class extends b {
  set graphic(t21) {
    this._circleCollisionCache = null, this._originalSymbol = t21.symbol, this._set("graphic", t21), this.attachSymbolChanged();
  }
  get elevationInfo() {
    const { layer: t21 } = this.graphic, e27 = t21 && "elevationInfo" in t21 ? t21.elevationInfo : null, o19 = l9(this.graphic), i25 = e27 ? e27.offset : 0;
    return new h2({ mode: o19, offset: i25 });
  }
  set focusedSymbol(t21) {
    t21 !== this._get("focusedSymbol") && (this._set("focusedSymbol", t21), this._updateGraphicSymbol(), this._circleCollisionCache = null);
  }
  grabbableForEvent() {
    return true;
  }
  set grabbing(t21) {
    t21 !== this._get("grabbing") && (this._set("grabbing", t21), this._updateGraphicSymbol());
  }
  set hovering(t21) {
    t21 !== this._get("hovering") && (this._set("hovering", t21), this._updateGraphicSymbol());
  }
  set selected(t21) {
    t21 !== this._get("selected") && (this._set("selected", t21), this._updateGraphicSymbol(), this.events.emit("select-changed", { action: t21 ? "select" : "deselect" }));
  }
  get _focused() {
    return this._get("hovering") || this._get("grabbing");
  }
  constructor(t21) {
    super(t21), this.layer = null, this.interactive = true, this.selectable = false, this.grabbable = true, this.dragging = false, this.cursor = null, this.consumesClicks = true, this.events = new o3.EventEmitter(), this._circleCollisionCache = null, this._graphicSymbolChangedHandle = null, this._originalSymbol = null;
  }
  destroy() {
    this.detachSymbolChanged(), this._resetGraphicSymbol(), this._set("view", null);
  }
  intersectionDistance(t21) {
    const e27 = this.graphic;
    if (false === e27.visible) return null;
    const o19 = e27.geometry;
    if (null == o19) return null;
    const i25 = this._get("focusedSymbol"), s26 = null != i25 ? i25 : e27.symbol;
    return "2d" === this.view.type ? this._intersectDistance2D(this.view, t21, o19, s26) : this._intersectDistance3D(this.view, t21, e27);
  }
  attach() {
    this.attachSymbolChanged(), null != this.layer && this.layer.add(this.graphic);
  }
  detach() {
    this.detachSymbolChanged(), this._resetGraphicSymbol(), null != this.layer && this.layer.remove(this.graphic);
  }
  attachSymbolChanged() {
    this.detachSymbolChanged(), this._graphicSymbolChangedHandle = d3(() => {
      var _a;
      return (_a = this.graphic) == null ? void 0 : _a.symbol;
    }, (t21) => {
      null != t21 && t21 !== this.focusedSymbol && t21 !== this._originalSymbol && (this._originalSymbol = t21, this._focused && null != this.focusedSymbol && (this.graphic.symbol = this.focusedSymbol));
    }, C2);
  }
  detachSymbolChanged() {
    null != this._graphicSymbolChangedHandle && (this._graphicSymbolChangedHandle.remove(), this._graphicSymbolChangedHandle = null);
  }
  onElevationChange() {
  }
  onViewChange() {
  }
  _updateGraphicSymbol() {
    this.graphic.symbol = this._focused && null != this.focusedSymbol ? this.focusedSymbol : this._originalSymbol;
  }
  _resetGraphicSymbol() {
    this.graphic.symbol = this._originalSymbol;
  }
  _intersectDistance2D(t21, e27, o19, i25) {
    var _a, _b;
    if (null == (i25 = i25 || J2(o19))) return null;
    const s26 = 1;
    let n38 = this._circleCollisionCache;
    if ("point" === o19.type && "cim" === i25.type && "CIMPointSymbol" === ((_a = i25.data.symbol) == null ? void 0 : _a.type) && i25.data.symbol.symbolLayers) {
      const { offsetX: l23, offsetY: n39, size: a28 } = s23(i25), c18 = g3(e27, j22), p22 = a28 / 2, m15 = t21.toScreen(o19), u18 = m15.x + l23, y21 = m15.y + n39;
      return b2(c18, [u18, y21]) < p22 * p22 ? s26 : null;
    }
    if ("point" !== o19.type || "simple-marker" !== i25.type) return i8(e27, o19, t21) ? s26 : null;
    if (null == n38 || !n38.originalPoint.equals(o19)) {
      const e28 = o19, s27 = t21.spatialReference;
      if (J(e28.spatialReference, s27)) {
        const t22 = K(e28, s27);
        n38 = { originalPoint: e28.clone(), mapPoint: t22, radiusPx: u4(i25.size) }, this._circleCollisionCache = n38;
      }
    }
    if (null != n38) {
      const o20 = g3(e27, j22), a28 = (_b = t21.toScreen) == null ? void 0 : _b.call(t21, n38.mapPoint);
      if (!a28) return null;
      const c18 = n38.radiusPx, p22 = a28.x + u4(i25.xoffset), m15 = a28.y - u4(i25.yoffset);
      return b2(o20, [p22, m15]) < c18 * c18 ? s26 : null;
    }
    return null;
  }
  _intersectDistance3D(t21, e27, o19) {
    const i25 = t21.toMap(e27, { include: [o19] });
    return i25 && c4(i25, C13, t21.renderSpatialReference) ? p3(C13, t21.state.camera.eye) : null;
  }
};
r([m({ constructOnly: true, nonNullable: true })], S10.prototype, "graphic", null), r([m()], S10.prototype, "elevationInfo", null), r([m({ constructOnly: true, nonNullable: true })], S10.prototype, "view", void 0), r([m({ value: null })], S10.prototype, "focusedSymbol", null), r([m({ constructOnly: true })], S10.prototype, "layer", void 0), r([m()], S10.prototype, "interactive", void 0), r([m()], S10.prototype, "selectable", void 0), r([m()], S10.prototype, "grabbable", void 0), r([m({ value: false })], S10.prototype, "grabbing", null), r([m()], S10.prototype, "dragging", void 0), r([m()], S10.prototype, "hovering", null), r([m({ value: false })], S10.prototype, "selected", null), r([m()], S10.prototype, "cursor", void 0), S10 = r([a2("esri.views.interactive.GraphicManipulator")], S10);
var C13 = n6();
var j22 = f4();

// node_modules/@arcgis/core/views/2d/interactive/editingTools/manipulations/DragManipulation.js
var s24 = class extends r23 {
  constructor(t21) {
    super(), this._view = t21.view, this._tool = t21.tool, this._graphic = t21.graphic, this._manipulator = this._createManipulator(), this.forEachManipulator((t22) => this._tool.manipulators.add(t22));
  }
  destroy() {
    this.forEachManipulator((t21) => {
      this._tool.manipulators.remove(t21), t21.destroy();
    }), this._tool = null, this._view = null, this._manipulator = null, this._graphic = null;
  }
  forEachManipulator(t21) {
    t21(this._manipulator, t20.TRANSLATE_XY);
  }
  createDragPipeline(t21, i25) {
    let o19 = null, s26 = null, l23 = 0, p22 = 0, c18 = 0;
    const { offsetX: m15, offsetY: h18, size: u18 } = s23(this._graphic.symbol);
    return p20(this._manipulator, (r26, n38) => {
      n38.next((i26) => {
        if ("start" === i26.action) {
          const i27 = t21();
          o19 = i27.editGeometryOperations, s26 = i27.constraints;
        }
        return i26;
      }).next(E12(this._view)).next((t22) => {
        const { x: r27, y: a28, z: n39 } = t22.mapEnd;
        if (s26 && (r27 + m15 < s26.xmin || a28 + h18 - u18 < s26.ymin || r27 + m15 > s26.xmax || a28 + h18 - u18 > s26.ymax)) return t22;
        ("start" === t22.action || 0 === l23 && 0 === p22 && 0 === c18) && (l23 = t22.mapStart.x, p22 = t22.mapStart.y, c18 = t22.mapStart.z);
        const _13 = r27 - l23, f18 = a28 - p22, v15 = n39 - c18;
        l23 = r27, p22 = a28, c18 = n39;
        const x15 = "start" === t22.action ? E10.NEW_STEP : E10.ACCUMULATE_STEPS, E15 = o19.move(_13, f18, v15, x15);
        return i25(t22, E15), t22;
      });
    });
  }
  _createManipulator() {
    const t21 = this._view, i25 = this._graphic;
    return new S10({ view: t21, graphic: i25, selectable: true, cursor: "move" });
  }
};

// node_modules/@arcgis/core/views/2d/interactive/editingTools/ControlPointsTransformTool.js
var P12 = { up: "ArrowUp", down: "ArrowDown", left: "ArrowLeft", right: "ArrowRight", toggleOpacity: "t", shift: "Shift", primaryKey: t4 };
var v13 = 1;
var S11 = 10;
var k13 = new l5("#009af2");
var b19 = class extends n32 {
  constructor(t21) {
    super(t21), this._isOpacityToggled = false, this._isModifierActive = false, this._factor = 1, this._initialControlPoints = null, this._graphicsLayer = new h4({ internal: true, listMode: "hide", visible: false, effect: "drop-shadow(0px, 0px, 3px)" }), this._undoStack = [], this._redoStack = [], this._sharedUndoStack = [], this._sharedRedoStack = [], this._highlightHandle = null, this.activeHandle = 0, this.type = "reshape";
  }
  initialize() {
    this._initialize();
  }
  destroy() {
    const { map: t21 } = this.view;
    this._controlPointManipulations.forEach((t22) => t22.destroy()), this._controlPointEditGeometryOperations.forEach((t22) => t22.destroy()), t21.removeMany([this._graphicsLayer]), this._graphicsLayer.removeAll(), this._graphicsLayer = u(this._graphicsLayer), this._georeference = null, this._controlPointGraphics = null, this._controlPointManipulations = null, this._graphicsLayer = null, this._controlPointEditGeometryOperations = null, this._undoStack = null, this._redoStack = null, this._initialControlPoints = null, this._sharedUndoStack = null, this._sharedRedoStack = null;
  }
  get _hasValidSpatialReference() {
    return g(this.view.spatialReference);
  }
  onActivate() {
    this.visible = true;
  }
  onDeactivate() {
    this.visible = false;
  }
  onShow() {
    this._graphicsLayer.visible = true;
  }
  onHide() {
    this._graphicsLayer.visible = false;
  }
  canUndo() {
    const t21 = this._undoStack[this._undoStack.length - 1];
    return null != t21 && this._controlPointEditGeometryOperations[t21].canUndo;
  }
  canRedo() {
    const t21 = this._redoStack[this._redoStack.length - 1];
    return null != t21 && this._controlPointEditGeometryOperations[t21].canRedo;
  }
  undo() {
    if (this._undoStack.length > 0) {
      const t21 = this._undoStack.pop();
      this._controlPointEditGeometryOperations[t21].undo(), this.updateGraphics(), this._redoStack.push(t21);
    }
  }
  redo() {
    if (this._redoStack.length > 0) {
      const t21 = this._redoStack.pop();
      this._controlPointEditGeometryOperations[t21].redo(), this.updateGraphics(), this._undoStack.push(t21);
    }
  }
  refresh() {
    const { mediaElement: t21 } = this;
    if (null == t21.georeference) return;
    const e27 = t21.georeference;
    "control-points" === e27.type && null != e27.coords && (this._georeference = e27, this._georeference.controlPoints.forEach(({ mapPoint: t22 }, e28) => {
      const i25 = this._controlPointEditGeometryOperations[e28], o19 = i25.data.components[0].vertices[0];
      i25.setVertexPosition(o19, i25.data.coordinateHelper.pointToVector(t22));
    }), this.updateGraphics());
  }
  reset() {
    this._georeference.controlPoints = this._initialControlPoints, this.refresh(), this._sharedUndoStack.length = 0, this._sharedRedoStack.length = 0;
  }
  updateGraphics() {
    const t21 = this._georeference, e27 = t21.controlPoints, i25 = e27[0].mapPoint.spatialReference, o19 = this._hasValidSpatialReference;
    this._georeference.controlPoints = this._controlPointEditGeometryOperations.map((r26, s26) => {
      const n38 = r26.data.geometry;
      return this._controlPointGraphics[s26].geometry = n38, { mapPoint: K(n38, i25), sourcePoint: o19 ? e27[s26].sourcePoint : t21.toSource(n38) };
    });
  }
  updateActiveHandle(t21) {
    if (this.activeHandle === t21) return;
    const e27 = this._controlPointGraphics[this.activeHandle].symbol.clone();
    I5(e27, this.view.effectiveTheme.accentColor), this._controlPointGraphics[this.activeHandle].symbol = e27;
    const i25 = this._controlPointGraphics[t21].symbol.clone();
    I5(i25, k13), this._controlPointGraphics[t21].symbol = i25, this.activeHandle = t21, this.view.surface === document.activeElement && this.highlightActiveHandle();
  }
  async highlightActiveHandle() {
    this.removeHighlightActiveHandle();
    const t21 = await this.view.whenLayerView(this._graphicsLayer);
    this._highlightHandle = t21.highlight(this._controlPointGraphics[this.activeHandle]);
  }
  removeHighlightActiveHandle() {
    this._highlightHandle && this._highlightHandle.remove();
  }
  setSharedUndoStack(t21) {
    this._sharedUndoStack = t21;
  }
  setSharedRedoStack(t21) {
    this._sharedRedoStack = t21;
  }
  async _initialize() {
    const { view: t21, mediaElement: e27 } = this;
    if (null == e27.georeference) return;
    const o19 = e27.georeference;
    "control-points" === o19.type && null != o19.coords && (this._georeference = o19, this._initialControlPoints = this._georeference.controlPoints, t21.map.addMany([this._graphicsLayer]), t21.focus(), this.visible = false, this.finishToolCreation(), await this._loadProjectionEngine(), this._controlPointEditGeometryOperations = this._georeference.controlPoints.map(({ mapPoint: e28 }) => E11.fromGeometry(K(e28, t21.spatialReference), l8.Local)), this._controlPointGraphics = this._controlPointEditGeometryOperations.map((t22, e28) => new d8({ symbol: new d6({ data: { type: "CIMSymbolReference", symbol: { type: "CIMPointSymbol", symbolLayers: [{ type: "CIMVectorMarker", enable: true, colorLocked: true, anchorPoint: { x: 0, y: -15.75 }, anchorPointUnits: "Absolute", dominantSizeAxis3D: "Y", size: 9, billboardMode3D: "FaceNearPlane", frame: { xmin: 0, ymin: 0, xmax: 84.3, ymax: 84.3 }, markerGraphics: [{ type: "CIMMarkerGraphic", geometry: { rings: [[[83.2, 32.5], [84.3, 40.7], [83.8, 48.9], [81.7, 56.9], [78.1, 64.3], [73, 70.9], [66.9, 76.4], [59.7, 80.5], [51.9, 83.2], [43.7, 84.3], [35.4, 83.8], [27.4, 81.7], [20, 78], [13.4, 73], [7.9, 66.8], [3.8, 59.7], [1.1, 51.9], [0, 43.7], [0.5, 35.4], [2.6, 27.4], [6.3, 20], [11.3, 13.4], [17.5, 7.9], [24.7, 3.8], [32.5, 1.1], [39.8, 0.1], [47.1, 0.3], [54.3, 1.8], [61.1, 4.5], [67.4, 8.4], [72.9, 13.3], [77.4, 19.1], [80.9, 25.5], [83.2, 32.5]]] }, symbol: { type: "CIMPolygonSymbol", symbolLayers: [{ type: "CIMSolidFill", enable: true, color: [255, 255, 255, 255] }] } }], scaleSymbolsProportionally: true, respectFrame: true, clippingPath: { type: "CIMClippingPath", clippingType: "Intersect", path: { rings: [[[0, 0], [84.3, 0], [84.3, 84.3], [0, 84.3], [0, 0]]] } }, rotation: 0 }, { type: "CIMVectorMarker", enable: true, anchorPoint: { x: 0, y: -11.25 }, anchorPointUnits: "Absolute", dominantSizeAxis3D: "Y", size: 22.5, billboardMode3D: "FaceNearPlane", frame: { xmin: 0, ymin: 0, xmax: 197.7, ymax: 294.7 }, markerGraphics: [{ type: "CIMMarkerGraphic", geometry: { rings: [[[98.9, 0], [119.4, 23.2], [139.4, 49.3], [156.8, 75.2], [171.2, 100.8], [182.4, 125.3], [190.6, 148.8], [195.7, 171.4], [197.7, 192.9], [197.7, 195.8], [197.7, 200.3], [197.6, 202.5], [197.5, 204.8], [197.3, 207.1], [197, 209.4], [196.7, 211.7], [196.4, 214.1], [196, 216.4], [195.5, 218.7], [195, 221.1], [194.4, 223.4], [193.7, 225.8], [193, 228.1], [192.2, 230.5], [191.4, 232.8], [190.5, 235.1], [189.5, 237.5], [188.5, 239.7], [187.4, 242], [186.2, 244.3], [185, 246.5], [183.7, 248.7], [182.4, 250.9], [181, 253.1], [179.5, 255.2], [178, 257.3], [176.4, 259.4], [174.7, 261.4], [173.1, 263.3], [171.3, 265.3], [169.5, 267.2], [167.7, 269], [165.8, 270.8], [163.9, 272.5], [161.9, 274.2], [159.9, 275.8], [157.8, 277.4], [155.7, 278.9], [153.6, 280.4], [151.4, 281.7], [149.2, 283.1], [147, 284.4], [144.8, 285.6], [142.5, 286.7], [140.3, 287.8], [138, 288.8], [135.7, 289.8], [133.4, 290.7], [131, 291.5], [128.7, 292.3], [126.4, 293], [124, 293.6], [121.7, 294.2], [119.4, 294.7], [117, 295.2], [114.7, 295.6], [112.4, 296], [110.1, 296.3], [107.8, 296.5], [105.5, 296.7], [103.3, 296.8], [101.1, 296.9], [98.8, 296.9], [83.1, 295.7], [67.8, 292], [53.3, 285.9], [39.9, 277.5], [28.1, 267.2], [18, 255.1], [10, 241.5], [4.2, 226.9], [0.9, 211.5], [0, 195.8], [0.1, 192.9], [2.1, 171.4], [7.2, 148.8], [15.4, 125.3], [26.6, 100.8], [41, 75.2], [58.4, 49.3], [78.4, 23.2], [98.9, 0]]] }, symbol: { type: "CIMPolygonSymbol", symbolLayers: [{ type: "CIMSolidFill", enable: true, color: e28 === this.activeHandle ? k13.toArray() : this.view.effectiveTheme.accentColor.toArray() }] } }], scaleSymbolsProportionally: true, respectFrame: true, clippingPath: { type: "CIMClippingPath", clippingType: "Intersect", path: { rings: [[[0, 0], [197.7, 0], [197.7, 294.7], [0, 294.7], [0, 0]]] } }, rotation: 0 }], haloSize: 1, scaleX: 1, angleAlignment: "Display", angle: 0 } } }), geometry: t22.data.geometry })), this._graphicsLayer.graphics.addMany([...this._controlPointGraphics]), this._controlPointManipulations = this._controlPointGraphics.map((e28) => new s24({ tool: this, view: t21, graphic: e28 })), this.addHandles([...this._controlPointManipulations.map((t22, e28) => t22.createDragPipeline(this._getInfo.bind(this, e28), (t23, i25) => {
      "start" === t23.action && (this._undoStack.push(e28), this._redoStack = [], this._sharedUndoStack.push({ tool: this, operation: i25 }), this._sharedRedoStack.length = 0), this.updateGraphics();
    })), d3(() => this.view.scale, () => this.active ? this.updateGraphics() : null)]), this._controlPointManipulations.forEach((t22, e28) => {
      const i25 = (t23) => {
        this.addHandles([t23.events.on(["click", "grab-changed"], (t24) => this.updateActiveHandle(e28))]);
      };
      t22.forEachManipulator(i25);
    }), this.addHandles([t21.on("key-down", (i25) => {
      t21.activeTool === this && (i25.key !== P12.shift || i25.repeat || (this._isModifierActive = true, i25.stopPropagation()), i25.key !== P12.toggleOpacity || i25.repeat || (e27.opacity *= this._isOpacityToggled ? 2 : 0.5, this._isOpacityToggled = !this._isOpacityToggled, i25.stopPropagation()), i25.key !== P12.primaryKey || i25.repeat || (this._factor = S11, i25.stopPropagation()), this._isModifierActive && (i25.key === P12.up && (this._move(0, this._factor), i25.stopPropagation()), i25.key === P12.down && (this._move(0, -this._factor), i25.stopPropagation()), i25.key === P12.left && (this._move(-this._factor, 0), i25.stopPropagation()), i25.key === P12.right && (this._move(this._factor, 0), i25.stopPropagation())));
    }), t21.on("key-up", (e28) => {
      t21.activeTool === this && (e28.key === P12.shift && (this._isModifierActive = false, e28.stopPropagation()), e28.key === P12.primaryKey && (this._factor = v13, e28.stopPropagation()));
    })]));
  }
  async _loadProjectionEngine() {
    const t21 = this._georeference.controlPoints[0].mapPoint;
    return N3(t21.spatialReference, this.view.spatialReference);
  }
  _getInfo(t21) {
    return { editGeometryOperations: this._controlPointEditGeometryOperations[t21], constraints: this._hasValidSpatialReference ? null : { xmin: 0, ymin: 0, xmax: this._georeference.width, ymax: this._georeference.height } };
  }
  _move(t21, e27) {
    const i25 = this._controlPointEditGeometryOperations[this.activeHandle].move(t21 * this.view.resolution, e27 * this.view.resolution, 0, E10.NEW_STEP);
    this._sharedUndoStack.push({ tool: this, operation: i25 }), this._sharedRedoStack.length = 0, this.updateGraphics();
  }
};
r([m()], b19.prototype, "_hasValidSpatialReference", null), r([m()], b19.prototype, "activeHandle", void 0), r([m({ constructOnly: true, nonNullable: true })], b19.prototype, "mediaElement", void 0), r([m({ readOnly: true })], b19.prototype, "type", void 0), r([m({ constructOnly: true })], b19.prototype, "view", void 0), b19 = r([a2("esri.views.2d.interactive.editingTools.ControlPointsTransformTool")], b19);

// node_modules/@arcgis/core/views/2d/interactive/editingTools/manipulations/utils.js
function n36(t21, e27) {
  "start" === t21.action ? e27.cursor = "grabbing" : e27.cursor = "grab";
}
var s25 = class {
  constructor() {
    this._lastDragEvent = null, this.next = new w17(), this._enabled = false;
  }
  get enabled() {
    return this._enabled;
  }
  set enabled(t21) {
    if (this._enabled !== t21 && null != this._lastDragEvent) {
      const e27 = { ...this._lastDragEvent, action: "update" };
      t21 && this._adjustScaleFactors(e27), this.next.execute(e27);
    }
    this._enabled = t21;
  }
  createDragEventPipelineStep() {
    return this._lastDragEvent = null, (t21) => (this._lastDragEvent = "end" !== t21.action ? { ...t21 } : null, this._enabled && this._adjustScaleFactors(t21), t21);
  }
  _adjustScaleFactors(t21) {
    const e27 = 0 !== t21.direction[0] && 0 !== t21.direction[1] ? Math.max(Math.abs(t21.factor1), Math.abs(t21.factor2)) : 0 === t21.direction[0] ? Math.abs(t21.factor2) : Math.abs(t21.factor1);
    t21.factor1 = t21.factor1 < 0 ? -e27 : e27, t21.factor2 = t21.factor2 < 0 ? -e27 : e27;
  }
};
var r24 = class {
  constructor() {
    this._lastDragEvent = null, this.next = new w17(), this._enabled = false;
  }
  get enabled() {
    return this._enabled;
  }
  set enabled(t21) {
    if (this._enabled !== t21 && null != this._lastDragEvent) {
      const e27 = { ...this._lastDragEvent, action: "update" };
      t21 && this._adjustRotateAngle(e27), this.next.execute(e27);
    }
    this._enabled = t21;
  }
  createDragEventPipelineStep() {
    return this._lastDragEvent = null, (t21) => (this._lastDragEvent = "end" !== t21.action ? { ...t21 } : null, this._enabled && this._adjustRotateAngle(t21), t21);
  }
  _adjustRotateAngle(a28) {
    const n38 = M2(a28.rotateAngle);
    a28.rotateAngle = s6(5 * Math.round(n38 / 5));
  }
};

// node_modules/@arcgis/core/views/draw/support/drawUtils.js
function m14(n38, e27, o19, r26 = false) {
  const i25 = Math.atan2(e27.y - o19.y, e27.x - o19.x) - Math.atan2(n38.y - o19.y, n38.x - o19.x), s26 = Math.atan2(Math.sin(i25), Math.cos(i25));
  return r26 ? s26 : M2(s26);
}

// node_modules/@arcgis/core/views/interactive/editGeometry/support/editPlaneUtils.js
function d26(o19, i25) {
  return T9(o19, i25, false);
}
function T9(o19, i25, r26) {
  if (o19 instanceof t14) {
    if (o19.operation instanceof t18) return V9(o19.operation, i25, r26), true;
    if (o19.operation instanceof e23) return h17(o19.operation, i25, r26), true;
    if (o19.operation instanceof c17) return v14(o19.operation, i25, r26), true;
  }
  return false;
}
function V9(o19, i25, r26 = false) {
  const t21 = r26 ? -1 : 1, s26 = r8(t21 * o19.dx, t21 * o19.dy, t21 * o19.dz);
  u7(i25.origin, i25.origin, s26), K3(i25);
}
function h17(o19, i25, r26 = false) {
  const t21 = r26 ? -o19.angle : o19.angle;
  w4(i25.basis1, i25.basis1, _2, t21), w4(i25.basis2, i25.basis2, _2, t21), K3(i25);
}
function v14(i25, r26, t21 = false) {
  const s26 = t21 ? 1 / i25.factor1 : i25.factor1, n38 = t21 ? 1 / i25.factor2 : i25.factor2;
  g4(r26.basis1, r26.basis1, s26), g4(r26.basis2, r26.basis2, n38), k3(r26.origin, r26.origin, i25.origin, i25.axis1, s26), k3(r26.origin, r26.origin, i25.origin, i25.axis2, n38), K3(r26);
}
function F12(o19, c18, f18, m15) {
  m15 || (m15 = W2());
  const p22 = o6(t3.get(), o19[1], -o19[0]), g22 = o6(t3.get(), Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY), N11 = o6(t3.get(), Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY), j24 = t3.get();
  c18.components.forEach((n38) => n38.vertices.forEach(({ pos: n39 }) => {
    o6(j24, j6(o19, n39), j6(p22, n39)), f6(g22, g22, j24), M4(N11, N11, j24);
  }));
  const l23 = 1e-6, x15 = o6(t3.get(), N11[0] - g22[0] < l23 ? f18 / 2 : 0, N11[1] - g22[1] < l23 ? f18 / 2 : 0);
  return e9(g22, g22, x15), u8(N11, N11, x15), l7(m15.basis1, o19, (N11[0] - g22[0]) / 2), l7(m15.basis2, p22, (N11[1] - g22[1]) / 2), o6(m15.origin, g22[0] * o19[0] + g22[1] * p22[0], g22[0] * o19[1] + g22[1] * p22[1]), u8(m15.origin, m15.origin, m15.basis1), u8(m15.origin, m15.origin, m15.basis2), K3(m15), m15;
}

// node_modules/@arcgis/core/views/2d/interactive/editingTools/manipulations/RotateManipulation.js
var u17 = class extends r23 {
  constructor(i25) {
    super(), this._handles = new r3(), this._originCache = n6(), this._view = i25.view, this._tool = i25.tool, this._graphic = i25.graphic, this._snapRotation = i25.snapRotation, this._manipulator = this._createManipulator(), this._handles.add([this._manipulator.events.on("grab-changed", (t21) => n36(t21, this._manipulator))]), this.forEachManipulator((t21) => this._tool.manipulators.add(t21));
  }
  destroy() {
    this._handles.destroy(), this.forEachManipulator((t21) => {
      this._tool.manipulators.remove(t21), t21.destroy();
    }), this._tool = null, this._view = null, this._manipulator = null, this._snapRotation = null, this._graphic = null, this._handles = null, this._originCache = null;
  }
  forEachManipulator(t21) {
    t21(this._manipulator, t20.ROTATE);
  }
  createDragPipeline(t21, r26) {
    let e27 = null, a28 = null;
    return p20(this._manipulator, (o19, s26) => {
      s26.next((i25) => {
        if ("start" === i25.action) {
          o19.cursor = "grabbing";
          const i26 = t21();
          e27 = i26.plane, a28 = i26.editGeometryOperations;
        }
        return i25;
      }).next(E12(this._view)).next((t22) => ({ ...t22, rotateAngle: m14(t22.mapStart, t22.mapEnd, { x: e27.origin[0], y: e27.origin[1] }, true) })).next(this._snapRotation.createDragEventPipelineStep(), this._snapRotation.next).next((t22) => {
        const o20 = s8(this._originCache, e27.origin), n38 = "start" === t22.action ? E10.NEW_STEP : E10.ACCUMULATE_STEPS, s27 = a28.rotate(o20, t22.rotateAngle, n38, e22.REPLACE);
        return d26(s27, e27), r26(t22, s27), t22;
      }).next((t22) => ("end" === t22.action && (o19.cursor = "grab"), t22));
    });
  }
  _createManipulator() {
    const t21 = this._view, i25 = this._graphic;
    return new S10({ view: t21, graphic: i25, selectable: true, cursor: "grab" });
  }
};

// node_modules/@arcgis/core/views/2d/interactive/editingTools/manipulations/ScaleManipulation.js
var E14 = 10;
var S12 = 1e-6;
var y20 = 0.3;
function j23(t21) {
  const i25 = r10(t21.basis1), e27 = r10(t21.basis2);
  return y20 * Math.min(i25, e27);
}
var w18 = class extends r23 {
  constructor(i25) {
    super(), this._handles = new r3(), this._planeStart = W2(), this._displayPlaneStart = W2(), this._originCache = n6(), this._axisCache = n9(), this._renderStartCache = n6(), this._renderEndCache = n6(), this._resizeOriginCache = n6(), this._view = i25.view, this._tool = i25.tool, this._graphic = i25.graphic, this._direction = i25.direction, this._preserveAspectRatio = i25.preserveAspectRatio, this._manipulator = this._createManipulator(), this._handles.add([this._manipulator.events.on("grab-changed", (t21) => n36(t21, this._manipulator))]), this.forEachManipulator((t21) => this._tool.manipulators.add(t21));
  }
  destroy() {
    this._handles.destroy(), this.forEachManipulator((t21) => {
      this._tool.manipulators.remove(t21), t21.destroy();
    }), this._tool = null, this._view = null, this._graphic = null, this._manipulator = null, this._direction = null, this._handles = null, this._planeStart = null, this._displayPlaneStart = null, this._originCache = null, this._axisCache = null, this._renderStartCache = null, this._renderEndCache = null, this._resizeOriginCache = null, this._preserveAspectRatio = null;
  }
  forEachManipulator(t21) {
    t21(this._manipulator, t20.SCALE);
  }
  createDragPipeline(t21, r26) {
    let c18 = null, h18 = null, _13 = null, m15 = 0, d28 = null, g22 = null;
    const y21 = this._planeStart, w19 = this._displayPlaneStart, P13 = this._direction;
    return p20(this._manipulator, (f18, M15) => {
      M15.next((i25) => {
        if ("start" === i25.action) {
          f18.cursor = "grabbing";
          const i26 = t21();
          c18 = i26.plane, h18 = i26.displayPlane, _13 = i26.editGeometryOperations, m15 = E14 * this._view.resolution, Z2(c18, y21), Z2(h18, w19);
          const e27 = d4(_13.data.spatialReference);
          d28 = e27 ? e27.valid[1] - e27.valid[0] - 3 * E14 * this._view.resolution : null;
        }
        return i25;
      }).next(E12(this._view)).next((t22) => {
        const i25 = s8(this._renderStartCache, [t22.mapStart.x, t22.mapStart.y, 0]), e27 = s8(this._renderEndCache, [t22.mapEnd.x, t22.mapEnd.y, 0]), r27 = s8(this._resizeOriginCache, w19.origin);
        q(r27, r27, w19.basis1, -P13[0]), q(r27, r27, w19.basis2, -P13[1]), c3(e27, e27, r27), c3(i25, i25, r27);
        const c19 = 0 !== P13[0] && 0 !== P13[1], p22 = j23(w19), u18 = j23(h18) / p22, _14 = (t23, r28) => {
          if (0 === t23) return 1;
          let s26 = r10(r28), n38 = 0.5 * t23 * P3(r28, e27) / s26;
          const o19 = n38 < 0 ? -1 : 1;
          if (c19) {
            n38 += (s26 - 0.5 * t23 * P3(r28, i25) / s26) * o19 * u18;
          }
          const h19 = s26 < 1.5 * m15 ? 1 : S12;
          return s26 = Math.max(s26 - m15, S12), o19 > 0 && (n38 -= E14 * this._view.resolution), o19 * Math.max(o19 * (n38 / s26), h19);
        }, d29 = _14(P13[0], w19.basis1), f19 = _14(P13[1], w19.basis2);
        return { ...t22, direction: P13, factor1: d29, factor2: f19 };
      }).next(this._preserveAspectRatio.createDragEventPipelineStep(), this._preserveAspectRatio.next).next((t22) => {
        const a28 = s8(this._originCache, y21.origin);
        q(a28, a28, y21.basis1, -P13[0]), q(a28, a28, y21.basis2, -P13[1]);
        const o19 = o6(this._axisCache, y21.basis1[0], y21.basis1[1]);
        v4(o19, o19);
        const l23 = _13.data.allVertices, h19 = "start" === t22.action ? E10.NEW_STEP : E10.ACCUMULATE_STEPS, u18 = _13.scaleVertices(l23, a28, o19, t22.factor1, t22.factor2, h19, e22.REPLACE);
        return d28 && d28 < _13.data.geometry.extent.width && g22 ? _13.updateVertices(l23, g22) : (Z2(y21, c18), d26(u18, c18), g22 = u18.operation, r26(t22, u18)), t22;
      }).next((t22) => ("end" === t22.action && (f18.cursor = "grab"), t22));
    });
  }
  _createManipulator() {
    return new S10({ view: this._view, graphic: this._graphic, selectable: true, cursor: "grab" });
  }
};

// node_modules/@arcgis/core/views/support/hitTestSelectUtils.js
function e26(t21) {
  return "graphic" === (t21 == null ? void 0 : t21.type);
}
function r25(t21) {
  return t21.find(e26) ?? null;
}

// node_modules/@arcgis/core/views/2d/interactive/editingTools/TransformTool.js
var K6 = 80;
var J10 = 10;
var Q8 = 30;
var X3 = [[1, 1], [1, -1], [-1, -1], [-1, 1], [1, 0], [0, -1], [-1, 0], [0, 1]];
var Y3 = 1;
var Z10 = 10;
var $6 = class extends n32 {
  constructor(e27) {
    super(e27), this._initialControlPoints = null, this._initialGeometry = null, this._graphic = null, this._planeCache = W2(), this._displayPlaneCache = W2(), this._mainAxisCache = n9(), this._rotationHandleCache = n6(), this._cornerA = n6(), this._cornerB = n6(), this._cornerC = n6(), this._cornerD = n6(), this._avgAB = n6(), this._avgBC = n6(), this._avgCD = n6(), this._avgDA = n6(), this._preserveAspectRatio = new s25(), this._snapRotation = new r24(), this._graphicsLayer = new h4({ internal: true, listMode: "hide", visible: false }), this._sharedUndoStack = [], this._sharedRedoStack = [], this._isOpacityToggled = false, this._factor = Y3, this.preserveAspectRatio = null, this.snapRotation = null, this.type = "transform";
  }
  initialize() {
    this._initialize();
  }
  destroy() {
    const { map: e27 } = this.view;
    this._dragManipulation.destroy(), this._rotateManipulation.destroy(), this._scaleManipulations.forEach((e28) => e28.destroy()), this._editGeometryOperations.destroy(), e27.removeMany([this._graphicsLayer]), this._graphicsLayer.removeAll(), this._graphicsLayer = u(this._graphicsLayer), this._initialControlPoints = null, this._initialGeometry = null, this._graphic = null, this._preserveAspectRatio = null, this._snapRotation = null, this._planeCache = null, this._displayPlaneCache = null, this._rotationHandleCache = null, this._mainAxisCache = null, this._cornerA = null, this._cornerB = null, this._cornerC = null, this._cornerD = null, this._avgAB = null, this._avgBC = null, this._avgCD = null, this._avgDA = null, this._sharedUndoStack = null, this._sharedRedoStack = null;
  }
  get _plane() {
    const e27 = this._graphic.geometry;
    if (null == e27) return null;
    const t21 = this._editGeometryOperations.data, i25 = t21.components[0].edges[0], s26 = e9(this._mainAxisCache, i25.leftVertex.pos, i25.rightVertex.pos);
    v4(s26, s26);
    let o19 = K6 * this.view.resolution;
    const a28 = this.view.spatialReference;
    return s4(a28, e27.spatialReference) && (o19 *= z(a28) / z(e27.spatialReference)), F12(s26, t21, o19, this._planeCache);
  }
  get _displayPlane() {
    const e27 = this._plane;
    if (!e27) return null;
    const t21 = this._displayPlaneCache;
    Z2(e27, t21);
    const i25 = J10 * this.view.resolution;
    return g4(t21.basis1, t21.basis1, 1 + i25 / r10(t21.basis1)), g4(t21.basis2, t21.basis2, 1 + i25 / r10(t21.basis2)), t21;
  }
  get _backgroundGraphicGeometry() {
    const e27 = this._displayPlane;
    if (!e27) return null;
    const t21 = this.view.spatialReference;
    return this._updateDisplayPlaneConrers(e27), new v2({ spatialReference: t21, rings: [[this._cornerA, this._cornerB, this._cornerC, this._cornerD, this._cornerA]] });
  }
  get _rotateGraphicGeometry() {
    const e27 = this._plane;
    if (!e27) return null;
    const t21 = this._rotationHandleCache;
    return A5(t21, e27.basis1), g4(t21, t21, Q8 * this.view.resolution), u7(t21, t21, e27.origin), u7(t21, t21, e27.basis1), new j2({ x: t21[0], y: t21[1], spatialReference: this.view.spatialReference });
  }
  get _scaleGraphicGeometries() {
    const e27 = this._displayPlane;
    if (!e27) return [];
    const t21 = this.view.spatialReference;
    this._updateDisplayPlaneConrers(e27);
    const { _cornerA: i25, _cornerB: s26, _cornerC: o19, _cornerD: r26 } = this, a28 = I2(this._avgAB, i25, s26, 0.5), n38 = I2(this._avgBC, s26, o19, 0.5), c18 = I2(this._avgCD, o19, r26, 0.5), h18 = I2(this._avgDA, r26, i25, 0.5);
    return [new j2({ x: i25[0], y: i25[1], spatialReference: t21 }), new j2({ x: s26[0], y: s26[1], spatialReference: t21 }), new j2({ x: o19[0], y: o19[1], spatialReference: t21 }), new j2({ x: r26[0], y: r26[1], spatialReference: t21 }), new j2({ x: a28[0], y: a28[1], spatialReference: t21 }), new j2({ x: n38[0], y: n38[1], spatialReference: t21 }), new j2({ x: c18[0], y: c18[1], spatialReference: t21 }), new j2({ x: h18[0], y: h18[1], spatialReference: t21 })];
  }
  onActivate() {
    this.visible = true;
  }
  onDeactivate() {
    this.visible = false;
  }
  onShow() {
    this._graphicsLayer.visible = true;
  }
  onHide() {
    this._graphicsLayer.visible = false;
  }
  canUndo() {
    return this._editGeometryOperations.canUndo;
  }
  canRedo() {
    return this._editGeometryOperations.canRedo;
  }
  undo() {
    this._editGeometryOperations.undo(), this.updateGraphics();
  }
  redo() {
    this._editGeometryOperations.redo(), this.updateGraphics();
  }
  refresh() {
    const { view: e27, target: t21 } = this, i25 = "georeference" in t21 ? t21.georeference.coords : t21.geometry, s26 = this._editGeometryOperations, o19 = s26.data.components[0].vertices, r26 = p19.fromGeometry(K(i25, e27.spatialReference), l8.Local).components[0].vertices;
    o19.forEach((e28, t22) => {
      s26.setVertexPosition(e28, r26[t22].pos);
    }), this.updateGraphics();
  }
  reset() {
    const { target: e27 } = this;
    if ("georeference" in e27) {
      const t21 = e27.georeference;
      "control-points" === t21.type && (t21.controlPoints = this._initialControlPoints);
    } else e27.geometry = this._initialGeometry;
    this.refresh(), this._sharedUndoStack.length = 0, this._sharedRedoStack.length = 0;
  }
  updateGraphics() {
    const e27 = this._editGeometryOperations.data.geometry;
    if ("georeference" in this.target) {
      this.target.georeference.coords = e27;
    }
    this._graphic.geometry = e27, this._backgroundGraphic.geometry = this._backgroundGraphicGeometry, this._rotateGraphic.geometry = this._rotateGraphicGeometry, this._scaleGraphicGeometries.forEach((e28, t21) => {
      this._scaleGraphics[t21].geometry = e28;
    });
  }
  setSharedUndoStack(e27) {
    this._sharedUndoStack = e27;
  }
  setSharedRedoStack(e27) {
    this._sharedRedoStack = e27;
  }
  async _initialize() {
    const { view: e27, target: s26 } = this;
    if ("georeference" in s26) {
      const e28 = s26.georeference;
      this._graphic = new d8({ geometry: e28.coords }), this._initialControlPoints = "control-points" === e28.type ? e28.controlPoints : null;
    } else this._graphic = s26, this._initialGeometry = s26.geometry;
    e27.map.addMany([this._graphicsLayer]), e27.focus(), this.visible = false, this.finishToolCreation(), await this._loadProjectionEngine(), this._editGeometryOperations = E11.fromGeometry(K(this._graphic.geometry, e27.spatialReference), l8.Local), this._backgroundGraphic = new d8({ symbol: new S({ color: "transparent", outline: { type: "simple-line", color: e27.effectiveTheme.accentColor, width: 2 } }), geometry: this._backgroundGraphicGeometry }), this._rotateGraphic = new d8({ symbol: new y2({ color: R2(e27.effectiveTheme.accentColor), outline: { type: "simple-line", color: e27.effectiveTheme.accentColor, width: 1 } }), geometry: this._rotateGraphicGeometry }), this._scaleGraphics = this._scaleGraphicGeometries.map((s27) => new d8({ symbol: new y2({ size: 6, style: "square", color: R2(e27.effectiveTheme.accentColor), outline: { type: "simple-line", color: e27.effectiveTheme.accentColor, width: 1 } }), geometry: s27 })), this._graphicsLayer.graphics.addMany([this._backgroundGraphic, this._rotateGraphic, ...this._scaleGraphics]), this._dragManipulation = new s24({ tool: this, view: e27, graphic: this._graphic }), this._rotateManipulation = new u17({ tool: this, view: e27, graphic: this._rotateGraphic, snapRotation: this._snapRotation }), this._scaleManipulations = this._scaleGraphics.map((t21, i25) => new w18({ tool: this, view: e27, graphic: t21, direction: X3[i25], preserveAspectRatio: this._preserveAspectRatio })), this.addHandles([this._dragManipulation.createDragPipeline(this._getInfo.bind(this), this._updateGraphics.bind(this)), this._rotateManipulation.createDragPipeline(this._getInfo.bind(this), this._updateGraphics.bind(this)), ...this._scaleManipulations.map((e28) => e28.createDragPipeline(this._getInfo.bind(this), this._updateGraphics.bind(this))), d3(() => this.view.scale, () => this.active ? this.updateGraphics() : null), e27.on("click", async (t21) => {
      if (null != e27.activeTool && e27.activeTool !== this) return;
      const i25 = n12(t21), o19 = [];
      e27.map.allLayers.forEach((e28) => {
        "vector-tile" !== e28.type && "imagery" !== e28.type || o19.push(e28);
      });
      const r27 = await this.view.hitTest(i25, { exclude: o19 }), a29 = r27.results;
      if (0 === a29.length) e27.activeTool = null;
      else {
        const t22 = r25(r27.results), i26 = "georeference" in s26, o20 = a29.map((e28) => "media" === e28.type ? e28.element : null).filter(Boolean), n38 = new Set([...this._graphicsLayer.graphics, i26 ? null : s26].filter(Boolean));
        i26 && o20.includes(s26) || null != t22 && n38.has(t22.graphic) ? null == e27.activeTool && (e27.activeTool = this) : e27.activeTool = null;
      }
    })]);
    const r26 = (e28) => {
      this.addHandles(e28.events.on("grab-changed", (e29) => {
        "georeference" in s26 && ("start" === e29.action ? s26.opacity *= 0.5 : "end" === e29.action && (s26.opacity *= 2));
      }));
    };
    this._dragManipulation.forEachManipulator(r26), this._rotateManipulation.forEachManipulator(r26), this._scaleManipulations.forEach((e28) => e28.forEachManipulator(r26));
    const a28 = new h9();
    a28.addToggle(d18.preserveAspectRatio, () => {
      null == this.preserveAspectRatio && (this._preserveAspectRatio.enabled = !this._preserveAspectRatio.enabled);
    }), a28.addToggle(d18.rotateIncrements, () => {
      null == this.snapRotation && (this._snapRotation.enabled = !this._snapRotation.enabled);
    }), a28.add(d18.toggleOpacity, () => {
      "georeference" in s26 && (s26.opacity *= this._isOpacityToggled ? 2 : 0.5, this._isOpacityToggled = !this._isOpacityToggled);
    }), a28.addToggle(d18.factorModifier, (e28) => this._factor = "key-down" === e28.type ? Z10 : Y3), a28.add(d18.scaleUp, () => this._scale(this._factor)), a28.add(d18.scaleDown, () => this._scale(-this._factor)), a28.add(d18.moveUp, () => this._move(0, this._factor)), a28.add(d18.moveDown, () => this._move(0, -this._factor)), a28.add(d18.moveLeft, () => this._move(-this._factor, 0)), a28.add(d18.moveRight, () => this._move(this._factor, 0)), this.addHandles([e27.on("key-down", (t21) => {
      e27.activeTool === this && a28.dispatch(e27.inputManager, t21);
    }), e27.on("key-up", (t21) => {
      e27.activeTool === this && a28.dispatch(e27.inputManager, t21);
    })]);
  }
  async _loadProjectionEngine() {
    const e27 = this._graphic.geometry;
    return N3(e27.spatialReference, this.view.spatialReference);
  }
  _updateDisplayPlaneConrers(e27) {
    const { basis1: t21, basis2: i25, origin: s26 } = e27, o19 = this._cornerA;
    u7(o19, s26, t21), u7(o19, o19, i25);
    const r26 = this._cornerB;
    u7(r26, s26, t21), c3(r26, r26, i25);
    const a28 = this._cornerC;
    c3(a28, s26, t21), c3(a28, a28, i25);
    const n38 = this._cornerD;
    c3(n38, s26, t21), u7(n38, n38, i25);
  }
  _getInfo() {
    return { editGeometryOperations: this._editGeometryOperations, plane: this._plane, displayPlane: this._displayPlane };
  }
  _updateGraphics(e27, t21) {
    "start" === e27.action && (this._sharedUndoStack.push({ tool: this, operation: t21 }), this._sharedRedoStack.length = 0), this.updateGraphics();
  }
  _scale(e27) {
    var _a;
    const t21 = this._editGeometryOperations, i25 = (_a = t21.data.geometry.extent) == null ? void 0 : _a.width, s26 = (i25 + e27 * this.view.resolution) / i25, o19 = t21.scale(this._plane.origin, s9, s26, s26, E10.NEW_STEP, e22.REPLACE);
    this._sharedUndoStack.push({ tool: this, operation: o19 }), this._sharedRedoStack.length = 0, this.updateGraphics();
  }
  _move(e27, t21) {
    const i25 = this._editGeometryOperations.move(e27 * this.view.resolution, t21 * this.view.resolution, 0, E10.NEW_STEP);
    this._sharedUndoStack.push({ tool: this, operation: i25 }), this._sharedRedoStack.length = 0, this.updateGraphics();
  }
};
r([m()], $6.prototype, "_plane", null), r([m()], $6.prototype, "_backgroundGraphicGeometry", null), r([m()], $6.prototype, "_rotateGraphicGeometry", null), r([m()], $6.prototype, "_scaleGraphicGeometries", null), r([m()], $6.prototype, "preserveAspectRatio", void 0), r([m()], $6.prototype, "snapRotation", void 0), r([m({ constructOnly: true, nonNullable: true })], $6.prototype, "target", void 0), r([m({ readOnly: true })], $6.prototype, "type", void 0), r([m({ constructOnly: true })], $6.prototype, "view", void 0), $6 = r([a2("esri.views.2d.interactive.editingTools.TransformTool")], $6);

// node_modules/@arcgis/core/views/2d/interactive/editingTools/MediaTransformToolsWrapper.js
var n37 = { redo: "r", undo: "z" };
var d27 = class extends b {
  constructor(o19) {
    super(o19), this._transformTool = null, this._controlPointsTransformTool = null, this._advancedModeTransformTool = null, this._activeTool = null, this._sharedUndoStack = [], this._sharedRedoStack = [], this._originalOpacity = null, this.activeHandle = 0;
  }
  initialize() {
    const { view: o19, mediaElement: t21, preserveAspectRatio: s26, snapRotation: i25, advancedMode: d28 } = this;
    this._originalOpacity = t21.opacity, this._transformTool = new $6({ target: t21, view: o19, preserveAspectRatio: s26, snapRotation: i25 }), this._controlPointsTransformTool = new b19({ mediaElement: t21, view: o19 }), this._advancedModeTransformTool = new b19({ mediaElement: d28.mediaElement, view: d28.view }), this._transformTool.setSharedUndoStack(this._sharedUndoStack), this._transformTool.setSharedRedoStack(this._sharedRedoStack), this._controlPointsTransformTool.setSharedUndoStack(this._sharedUndoStack), this._controlPointsTransformTool.setSharedRedoStack(this._sharedRedoStack), this._advancedModeTransformTool.setSharedUndoStack(this._sharedUndoStack), this._advancedModeTransformTool.setSharedRedoStack(this._sharedRedoStack);
    const l23 = t21.georeference, c18 = d28.mediaElement.georeference;
    d28.view.tools.addMany([this._advancedModeTransformTool]), "controlPoints" in c18 && "controlPoints" in l23 && this.addHandles([d28.view.on("key-down", (o20) => {
      o20.key === n37.undo && this.canUndo() && (this.undo(), o20.stopPropagation()), o20.key === n37.redo && this.canRedo() && (this.redo(), o20.stopPropagation());
    }), d28.view.on("focus", async (o20) => {
      this._controlPointsTransformTool.removeHighlightActiveHandle(), this._advancedModeTransformTool.highlightActiveHandle();
    }), d3(() => c18.controlPoints, (o20) => {
      var _a;
      l23.controlPoints = o20.map(({ sourcePoint: o21 }, t22) => ({ sourcePoint: o21, mapPoint: l23.controlPoints[t22].mapPoint })), (_a = this._activeTool) == null ? void 0 : _a.refresh();
    }), d3(() => this._controlPointsTransformTool.activeHandle, (o20) => {
      this._advancedModeTransformTool.updateActiveHandle(o20), this.activeHandle = o20;
    }), d3(() => this._advancedModeTransformTool.activeHandle, (o20) => {
      this._controlPointsTransformTool.updateActiveHandle(o20), this.activeHandle = o20;
    })]), this.addHandles([o19.on("key-down", (o20) => {
      o20.key === n37.undo && this.canUndo() && (this.undo(), o20.stopPropagation()), o20.key === n37.redo && this.canRedo() && (this.redo(), o20.stopPropagation());
    }), o19.on("focus", async (o20) => {
      this._advancedModeTransformTool.removeHighlightActiveHandle(), this._controlPointsTransformTool.highlightActiveHandle();
    })]), o19.tools.addMany([this._transformTool, this._controlPointsTransformTool]), o19.activeTool = this._transformTool, this._activeTool = this._transformTool, o19.focus();
  }
  destroy() {
    var _a, _b;
    (_a = this._transformTool) == null ? void 0 : _a.destroy(), (_b = this._controlPointsTransformTool) == null ? void 0 : _b.destroy(), this._transformTool = null, this._controlPointsTransformTool = null, this._advancedModeTransformTool = null, this._activeTool = null, this._sharedUndoStack = null, this._sharedRedoStack = null;
  }
  canUndo() {
    return this._sharedUndoStack.length > 0;
  }
  canRedo() {
    return this._sharedRedoStack.length > 0;
  }
  undo() {
    var _a;
    if (this._sharedUndoStack.length > 0) {
      const { tool: o19, operation: t21 } = this._sharedUndoStack.pop();
      o19 !== this._activeTool && o19.refresh(), t21.undo(), o19.updateGraphics(), this._sharedRedoStack.push({ tool: o19, operation: t21 }), this._activeTool !== o19 && ((_a = this._activeTool) == null ? void 0 : _a.refresh());
    }
  }
  redo() {
    var _a;
    if (this._sharedRedoStack.length > 0) {
      const { tool: o19, operation: t21 } = this._sharedRedoStack.pop();
      o19 !== this._activeTool && o19.refresh(), t21.apply(), o19.updateGraphics(), this._sharedUndoStack.push({ tool: o19, operation: t21 }), this._activeTool !== o19 && ((_a = this._activeTool) == null ? void 0 : _a.refresh());
    }
  }
  refresh() {
    this._activeTool.refresh();
  }
  reset() {
    this._activeTool.reset(), this._advancedModeTransformTool.reset();
  }
  async enableAdvancedMode() {
    this.view.activeTool = this._controlPointsTransformTool, this._activeTool = this._controlPointsTransformTool, this._activeTool.refresh(), await this.advancedMode.view.when(), this.advancedMode.view.activeTool = this._advancedModeTransformTool, this._originalOpacity = this._controlPointsTransformTool.mediaElement.opacity, this._controlPointsTransformTool.mediaElement.opacity = 0.25 * this._originalOpacity;
  }
  disableAdvancedMode() {
    this.view.activeTool = this._transformTool, this._activeTool = this._transformTool, this._activeTool.refresh(), this.advancedMode.view.activeTool = null, this._controlPointsTransformTool.mediaElement.opacity = this._originalOpacity;
  }
};
r([m()], d27.prototype, "activeHandle", void 0), r([m({ constructOnly: true })], d27.prototype, "advancedMode", void 0), r([m()], d27.prototype, "preserveAspectRatio", void 0), r([m()], d27.prototype, "snapRotation", void 0), r([m({ constructOnly: true, nonNullable: true })], d27.prototype, "mediaElement", void 0), r([m({ constructOnly: true })], d27.prototype, "view", void 0), d27 = r([a2("esri.views.2d.interactive.editingTools.MediaTransformToolsWrapper")], d27);
export {
  b19 as ControlPointsTransformTool,
  E13 as DrawGraphicTool2D,
  d27 as MediaTransformToolsWrapper,
  $6 as TransformTool
};
//# sourceMappingURL=editingTools-IZVMLZ3X.js.map
