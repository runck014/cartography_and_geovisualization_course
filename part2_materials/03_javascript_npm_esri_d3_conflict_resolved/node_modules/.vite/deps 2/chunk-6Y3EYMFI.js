import {
  S as S3
} from "./chunk-IUDC3IP2.js";
import {
  t as t7
} from "./chunk-VNGYZRZ7.js";
import {
  H as H3
} from "./chunk-H5UVFCWF.js";
import {
  z
} from "./chunk-B6M4BAW6.js";
import {
  K,
  i as i5
} from "./chunk-NC54UIQU.js";
import {
  d,
  d2,
  f as f3,
  n2 as n6,
  n3 as n8,
  n4 as n9,
  t as t8,
  t2 as t9,
  u2 as u9
} from "./chunk-DQ6HUSR7.js";
import {
  B,
  c as c5,
  f as f2,
  g as g2,
  p as p3,
  r as r9
} from "./chunk-BOYBHWD5.js";
import {
  e as e6,
  i as i6,
  n as n7,
  o2 as o6,
  p2,
  r as r8
} from "./chunk-PFCCTBQ6.js";
import {
  s as s5
} from "./chunk-C2RS46RL.js";
import {
  e as e5
} from "./chunk-CQ5ECUDF.js";
import {
  I as I3,
  L as L2
} from "./chunk-374X2AXO.js";
import {
  a as a2
} from "./chunk-W3O5CFJ6.js";
import {
  S as S2,
  n as n5,
  o as o5,
  r as r7,
  t as t6,
  u as u7
} from "./chunk-HRP7POO2.js";
import {
  E as E2,
  U as U2
} from "./chunk-JVGNMUKK.js";
import {
  t as t5
} from "./chunk-6LGJYARD.js";
import {
  a
} from "./chunk-N42IF4WX.js";
import {
  e as e4
} from "./chunk-L7OHH2HW.js";
import {
  e as e3,
  i as i4,
  n as n4,
  s as s4,
  t as t4,
  u as u6
} from "./chunk-MA2KDKKH.js";
import {
  l as l3,
  t as t3
} from "./chunk-2KYWMOKS.js";
import {
  c as c3,
  i as i3,
  q as q2,
  u as u5,
  x,
  y as y2
} from "./chunk-RFXYK5PV.js";
import {
  o as o4,
  r as r6
} from "./chunk-5FROWG6B.js";
import {
  m as m2,
  p,
  u2 as u8
} from "./chunk-QJXYURT2.js";
import {
  l as l4
} from "./chunk-BOSRS73G.js";
import {
  D,
  G as G2,
  I as I2,
  L,
  O,
  R as R2,
  X,
  c as c4,
  f
} from "./chunk-KV3S4QI2.js";
import {
  A,
  E,
  H as H2,
  I,
  N,
  P,
  R,
  W,
  _ as _2,
  c as c2,
  g,
  o as o3,
  q,
  r as r5,
  s as s3,
  u as u4,
  v
} from "./chunk-RENLZYKC.js";
import {
  o as o2
} from "./chunk-CTU2XDPA.js";
import {
  r as r4
} from "./chunk-AFULL6KA.js";
import {
  S,
  Z as Z2,
  u as u3
} from "./chunk-IOKAACTA.js";
import {
  G,
  H
} from "./chunk-GNWAZIVF.js";
import {
  _,
  e as e2,
  n as n3,
  r as r3,
  t as t2
} from "./chunk-6Y2LNRVP.js";
import {
  o
} from "./chunk-TTDEVHSF.js";
import {
  n as n2
} from "./chunk-E2X3OBBC.js";
import {
  i2
} from "./chunk-X7VTUWCX.js";
import {
  Z,
  tt
} from "./chunk-QS62R4CH.js";
import {
  e3 as e
} from "./chunk-GD4XDYZL.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import {
  l as l2
} from "./chunk-L6CCOEVE.js";
import {
  m,
  s as s2,
  u as u2
} from "./chunk-GRW2QIBT.js";
import {
  l,
  r as r2
} from "./chunk-R2PAF6JT.js";
import {
  n2 as n,
  s2 as s
} from "./chunk-PKLD5YJF.js";
import {
  U,
  c,
  i2 as i,
  t4 as t,
  u,
  y
} from "./chunk-XKQWTZMW.js";

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/AttributeArray.js
function o7(o13) {
  if (o13.length < U) return Array.from(o13);
  if (y(o13)) return Float64Array.from(o13);
  if (!("BYTES_PER_ELEMENT" in o13)) return Array.from(o13);
  switch (o13.BYTES_PER_ELEMENT) {
    case 1:
      return Uint8Array.from(o13);
    case 2:
      return i(o13) ? Uint16Array.from(o13) : Int16Array.from(o13);
    case 4:
      return Float32Array.from(o13);
    default:
      return Float64Array.from(o13);
  }
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/BoundingInfo.js
var o8 = class _o {
  constructor(i15, e10, o13) {
    this.primitiveIndices = i15, this._numIndexPerPrimitive = e10, this.position = o13, this._children = void 0, s5(i15.length >= 1), s5(3 === o13.size || 4 === o13.size);
    const { data: c12, size: l9, indices: m8 } = o13;
    s5(m8.length % this._numIndexPerPrimitive == 0), s5(m8.length >= i15.length * this._numIndexPerPrimitive);
    const d7 = i15.length;
    let u14 = l9 * m8[this._numIndexPerPrimitive * i15[0]];
    a3.clear(), a3.push(u14);
    const f9 = r3(c12[u14], c12[u14 + 1], c12[u14 + 2]), x3 = t2(f9);
    for (let t11 = 0; t11 < d7; ++t11) {
      const e11 = this._numIndexPerPrimitive * i15[t11];
      for (let i16 = 0; i16 < this._numIndexPerPrimitive; ++i16) {
        u14 = l9 * m8[e11 + i16], a3.push(u14);
        let t12 = c12[u14];
        f9[0] = Math.min(t12, f9[0]), x3[0] = Math.max(t12, x3[0]), t12 = c12[u14 + 1], f9[1] = Math.min(t12, f9[1]), x3[1] = Math.max(t12, x3[1]), t12 = c12[u14 + 2], f9[2] = Math.min(t12, f9[2]), x3[2] = Math.max(t12, x3[2]);
      }
    }
    this.bbMin = f9, this.bbMax = x3;
    const P4 = I(n3(), this.bbMin, this.bbMax, 0.5);
    this.radius = 0.5 * Math.max(Math.max(x3[0] - f9[0], x3[1] - f9[1]), x3[2] - f9[2]);
    let v3 = this.radius * this.radius;
    for (let t11 = 0; t11 < a3.length; ++t11) {
      u14 = a3.at(t11);
      const i16 = c12[u14] - P4[0], e11 = c12[u14 + 1] - P4[1], s10 = c12[u14 + 2] - P4[2], r13 = i16 * i16 + e11 * e11 + s10 * s10;
      if (r13 <= v3) continue;
      const n11 = Math.sqrt(r13), h7 = 0.5 * (n11 - this.radius);
      this.radius = this.radius + h7, v3 = this.radius * this.radius;
      const o14 = h7 / n11;
      P4[0] += i16 * o14, P4[1] += e11 * o14, P4[2] += s10 * o14;
    }
    this.center = P4, a3.clear();
  }
  getChildren() {
    if (this._children || v(this.bbMin, this.bbMax) <= 1) return this._children;
    const i15 = I(n3(), this.bbMin, this.bbMax, 0.5), s10 = this.primitiveIndices.length, r13 = new Uint8Array(s10), h7 = new Array(8);
    for (let t11 = 0; t11 < 8; ++t11) h7[t11] = 0;
    const { data: a11, size: c12, indices: l9 } = this.position;
    for (let t11 = 0; t11 < s10; ++t11) {
      let e10 = 0;
      const s11 = this._numIndexPerPrimitive * this.primitiveIndices[t11];
      let n11 = c12 * l9[s11], o13 = a11[n11], m9 = a11[n11 + 1], d8 = a11[n11 + 2];
      for (let i16 = 1; i16 < this._numIndexPerPrimitive; ++i16) {
        n11 = c12 * l9[s11 + i16];
        const t12 = a11[n11], e11 = a11[n11 + 1], r14 = a11[n11 + 2];
        t12 < o13 && (o13 = t12), e11 < m9 && (m9 = e11), r14 < d8 && (d8 = r14);
      }
      o13 < i15[0] && (e10 |= 1), m9 < i15[1] && (e10 |= 2), d8 < i15[2] && (e10 |= 4), r13[t11] = e10, ++h7[e10];
    }
    let m8 = 0;
    for (let t11 = 0; t11 < 8; ++t11) h7[t11] > 0 && ++m8;
    if (m8 < 2) return;
    const d7 = new Array(8);
    for (let t11 = 0; t11 < 8; ++t11) d7[t11] = h7[t11] > 0 ? new Uint32Array(h7[t11]) : void 0;
    for (let t11 = 0; t11 < 8; ++t11) h7[t11] = 0;
    for (let t11 = 0; t11 < s10; ++t11) {
      const i16 = r13[t11];
      d7[i16][h7[i16]++] = this.primitiveIndices[t11];
    }
    this._children = new Array();
    for (let t11 = 0; t11 < 8; ++t11) void 0 !== d7[t11] && this._children.push(new _o(d7[t11], this._numIndexPerPrimitive, this.position));
    return this._children;
  }
  static prune() {
    a3.prune();
  }
};
var a3 = new l2({ deallocator: null });

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/geometryDataUtils.js
function i7(r13, o13) {
  if (!r13) return false;
  const { size: i15, data: c12, indices: f9 } = r13;
  o3(o13, 0, 0, 0), o3(m3, 0, 0, 0);
  let g5 = 0, d7 = 0;
  for (let p9 = 0; p9 < f9.length - 2; p9 += 3) {
    const r14 = f9[p9] * i15, h7 = f9[p9 + 1] * i15, j3 = f9[p9 + 2] * i15;
    o3(a4, c12[r14], c12[r14 + 1], c12[r14 + 2]), o3(l5, c12[h7], c12[h7 + 1], c12[h7 + 2]), o3(u10, c12[j3], c12[j3 + 1], c12[j3 + 2]);
    const z4 = S3(a4, l5, u10);
    z4 ? (u4(a4, a4, l5), u4(a4, a4, u10), g(a4, a4, 1 / 3 * z4), u4(o13, o13, a4), g5 += z4) : (u4(m3, m3, a4), u4(m3, m3, l5), u4(m3, m3, u10), d7 += 3);
  }
  return (0 !== d7 || 0 !== g5) && (0 !== g5 ? (g(o13, o13, 1 / g5), true) : 0 !== d7 && (g(o13, m3, 1 / d7), true));
}
function c6(e10, r13) {
  if (!e10) return false;
  const { size: o13, data: s10, indices: i15 } = e10;
  o3(r13, 0, 0, 0);
  let c12 = -1, f9 = 0;
  for (let t11 = 0; t11 < i15.length; t11++) {
    const e11 = i15[t11] * o13;
    c12 !== e11 && (r13[0] += s10[e11], r13[1] += s10[e11 + 1], r13[2] += s10[e11 + 2], f9++), c12 = e11;
  }
  return f9 > 1 && g(r13, r13, 1 / f9), f9 > 0;
}
function f4(o13, s10, i15) {
  if (!o13) return false;
  o3(i15, 0, 0, 0), o3(m3, 0, 0, 0);
  let c12 = 0, f9 = 0;
  const { size: u14, data: g5, indices: d7 } = o13, p9 = d7.length - 1, h7 = p9 + (s10 ? 2 : 0);
  for (let t11 = 0; t11 < h7; t11 += 2) {
    const o14 = t11 < p9 ? t11 + 1 : 0, s11 = d7[t11 < p9 ? t11 : p9] * u14, h8 = d7[o14] * u14;
    a4[0] = g5[s11], a4[1] = g5[s11 + 1], a4[2] = g5[s11 + 2], l5[0] = g5[h8], l5[1] = g5[h8 + 1], l5[2] = g5[h8 + 2], g(a4, u4(a4, a4, l5), 0.5);
    const j3 = W(a4, l5);
    j3 > 0 ? (u4(i15, i15, g(a4, a4, j3)), c12 += j3) : 0 === c12 && (u4(m3, m3, a4), f9++);
  }
  return 0 !== c12 ? (g(i15, i15, 1 / c12), true) : 0 !== f9 && (g(i15, m3, 1 / f9), true);
}
var a4 = n3();
var l5 = n3();
var u10 = n3();
var m3 = n3();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/Object3DStateID.js
var c7 = class {
  constructor() {
    this.uid = e();
  }
};
var r10 = class extends c7 {
  constructor(s10) {
    super(), this.highlightGroupName = s10, this.channel = t4.Highlight;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/Geometry.js
var p4 = class _p extends r8 {
  constructor(t11, i15, e10 = null, n11 = e6.Mesh, r13 = null, h7 = -1) {
    super(), this.material = t11, this.mapPositions = e10, this.type = n11, this.objectAndLayerIdColor = r13, this.edgeIndicesLength = h7, this.highlights = /* @__PURE__ */ new Set(), this._highlightGroupCounts = /* @__PURE__ */ new Map(), this.visible = true, this._attributes = /* @__PURE__ */ new Map(), this._boundingInfo = null;
    for (const [o13, u14] of i15) this._attributes.set(o13, { ...u14, indices: t3(u14.indices) }), o13 === e4.POSITION && (this.edgeIndicesLength = this.edgeIndicesLength < 0 ? this._attributes.get(o13).indices.length : this.edgeIndicesLength);
  }
  instantiate(t11 = {}) {
    const i15 = new _p(t11.material || this.material, [], this.mapPositions, this.type, this.objectAndLayerIdColor, this.edgeIndicesLength);
    return this._attributes.forEach((t12, e10) => {
      t12.exclusive = false, i15._attributes.set(e10, t12);
    }), i15._boundingInfo = this._boundingInfo, i15.transformation = t11.transformation || this.transformation, i15;
  }
  get attributes() {
    return this._attributes;
  }
  getMutableAttribute(t11) {
    let i15 = this._attributes.get(t11);
    return i15 && !i15.exclusive && (i15 = { ...i15, exclusive: true, data: o7(i15.data) }, this._attributes.set(t11, i15)), i15;
  }
  setAttributeData(t11, i15) {
    const e10 = this._attributes.get(t11);
    e10 && this._attributes.set(t11, { ...e10, exclusive: true, data: i15 });
  }
  get indexCount() {
    const t11 = this._attributes.values().next().value.indices;
    return (t11 == null ? void 0 : t11.length) ?? 0;
  }
  get faceCount() {
    return this.indexCount / 3;
  }
  get boundingInfo() {
    return null == this._boundingInfo && (this._boundingInfo = this._calculateBoundingInfo()), this._boundingInfo;
  }
  computeAttachmentOrigin(t11) {
    return !!(this.type === e6.Mesh ? this._computeAttachmentOriginTriangles(t11) : this.type === e6.Line ? this._computeAttachmentOriginLines(t11) : this._computeAttachmentOriginPoints(t11)) && (null != this._transformation && E(t11, t11, this._transformation), true);
  }
  _computeAttachmentOriginTriangles(t11) {
    const i15 = this.attributes.get(e4.POSITION);
    return i7(i15, t11);
  }
  _computeAttachmentOriginLines(t11) {
    const i15 = this.attributes.get(e4.POSITION);
    return f4(i15, f5(this.material.parameters, i15), t11);
  }
  _computeAttachmentOriginPoints(t11) {
    const i15 = this.attributes.get(e4.POSITION);
    return c6(i15, t11);
  }
  invalidateBoundingInfo() {
    this._boundingInfo = null;
  }
  _calculateBoundingInfo() {
    const t11 = this.attributes.get(e4.POSITION);
    if (!t11 || 0 === t11.indices.length) return null;
    const i15 = this.type === e6.Mesh ? 3 : 1;
    s5(t11.indices.length % i15 == 0, "Indexing error: " + t11.indices.length + " not divisible by " + i15);
    const e10 = l3(t11.indices.length / i15);
    return new o8(e10, i15, t11);
  }
  get transformation() {
    return this._transformation ?? o4;
  }
  set transformation(e10) {
    this._transformation = e10 && e10 !== o4 ? r6(e10) : null;
  }
  get highlightGroups() {
    return this._highlightGroupCounts;
  }
  get hasHighlights() {
    return this._highlightGroupCounts.size > 0;
  }
  foreachHighlightGroup(t11) {
    this._highlightGroupCounts.forEach((i15, e10) => t11(e10));
  }
  allocateIdAndHighlight(t11) {
    const i15 = new r10(t11);
    return this.addHighlight(i15);
  }
  addHighlight(t11) {
    this.highlights.add(t11);
    const { highlightGroupName: i15 } = t11, e10 = (this._highlightGroupCounts.get(i15) ?? 0) + 1;
    return this._highlightGroupCounts.set(i15, e10), t11;
  }
  removeHighlight(t11) {
    if (this.highlights.delete(t11)) {
      const { highlightGroupName: i15 } = t11, e10 = this._highlightGroupCounts.get(i15) ?? 0;
      e10 <= 1 ? this._highlightGroupCounts.delete(i15) : this._highlightGroupCounts.set(i15, e10 - 1);
    }
  }
};
function f5(t11, i15) {
  return !(!("isClosed" in t11) || !t11.isClosed) && i15.indices.length > 2;
}

// node_modules/@arcgis/core/libs/basisu/BasisU.js
function i8() {
  return t10 ?? (t10 = (async () => {
    const i15 = await import("./basis_transcoder-G3TKS74B.js"), t11 = await i15.default({ locateFile: (i16) => n2(`esri/libs/basisu/${i16}`) });
    return t11.initializeBasis(), t11;
  })()), t10;
}
var t10;

// node_modules/@arcgis/core/libs/basisu/TextureFormat.js
var _3;
!function(_6) {
  _6[_6.ETC1_RGB = 0] = "ETC1_RGB", _6[_6.ETC2_RGBA = 1] = "ETC2_RGBA", _6[_6.BC1_RGB = 2] = "BC1_RGB", _6[_6.BC3_RGBA = 3] = "BC3_RGBA", _6[_6.BC4_R = 4] = "BC4_R", _6[_6.BC5_RG = 5] = "BC5_RG", _6[_6.BC7_M6_RGB = 6] = "BC7_M6_RGB", _6[_6.BC7_M5_RGBA = 7] = "BC7_M5_RGBA", _6[_6.PVRTC1_4_RGB = 8] = "PVRTC1_4_RGB", _6[_6.PVRTC1_4_RGBA = 9] = "PVRTC1_4_RGBA", _6[_6.ASTC_4x4_RGBA = 10] = "ASTC_4x4_RGBA", _6[_6.ATC_RGB = 11] = "ATC_RGB", _6[_6.ATC_RGBA = 12] = "ATC_RGBA", _6[_6.FXT1_RGB = 17] = "FXT1_RGB", _6[_6.PVRTC2_4_RGB = 18] = "PVRTC2_4_RGB", _6[_6.PVRTC2_4_RGBA = 19] = "PVRTC2_4_RGBA", _6[_6.ETC2_EAC_R11 = 20] = "ETC2_EAC_R11", _6[_6.ETC2_EAC_RG11 = 21] = "ETC2_EAC_RG11", _6[_6.RGBA32 = 13] = "RGBA32", _6[_6.RGB565 = 14] = "RGB565", _6[_6.BGR565 = 15] = "BGR565", _6[_6.RGBA4444 = 16] = "RGBA4444";
}(_3 || (_3 = {}));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/BasisUtil.js
var l6 = null;
var o9 = null;
async function g3() {
  return null == o9 && (o9 = i8(), l6 = await o9), o9;
}
function u11(e10, t11) {
  if (null == l6) return e10.byteLength;
  const n11 = new l6.BasisFile(new Uint8Array(e10)), s10 = E3(n11) ? m4(n11.getNumLevels(0), n11.getHasAlpha(), n11.getImageWidth(0, 0), n11.getImageHeight(0, 0), t11) : 0;
  return n11.close(), n11.delete(), s10;
}
function c8(e10, t11) {
  if (null == l6) return e10.byteLength;
  const n11 = new l6.KTX2File(new Uint8Array(e10)), s10 = T(n11) ? m4(n11.getLevels(), n11.getHasAlpha(), n11.getWidth(), n11.getHeight(), t11) : 0;
  return n11.close(), n11.delete(), s10;
}
function m4(e10, t11, s10, r13, i15) {
  const l9 = u8(t11 ? c4.COMPRESSED_RGBA8_ETC2_EAC : c4.COMPRESSED_RGB8_ETC2), o13 = i15 && e10 > 1 ? (4 ** e10 - 1) / (3 * 4 ** (e10 - 1)) : 1;
  return Math.ceil(s10 * r13 * l9 * o13);
}
function E3(e10) {
  return e10.getNumImages() >= 1 && !e10.isUASTC();
}
function T(e10) {
  return e10.getFaces() >= 1 && e10.isETC1S();
}
async function h(e10, t11, n11) {
  null == l6 && (l6 = await g3());
  const s10 = new l6.BasisFile(new Uint8Array(n11));
  if (!E3(s10)) return null;
  s10.startTranscoding();
  const r13 = p5(e10, t11, s10.getNumLevels(0), s10.getHasAlpha(), s10.getImageWidth(0, 0), s10.getImageHeight(0, 0), (e11, t12) => s10.getImageTranscodedSizeInBytes(0, e11, t12), (e11, t12, n12) => s10.transcodeImage(n12, 0, e11, t12, 0, 0));
  return s10.close(), s10.delete(), r13;
}
async function _4(e10, t11, n11) {
  null == l6 && (l6 = await g3());
  const s10 = new l6.KTX2File(new Uint8Array(n11));
  if (!T(s10)) return null;
  s10.startTranscoding();
  const r13 = p5(e10, t11, s10.getLevels(), s10.getHasAlpha(), s10.getWidth(), s10.getHeight(), (e11, t12) => s10.getImageTranscodedSizeInBytes(e11, 0, 0, t12), (e11, t12, n12) => s10.transcodeImage(n12, e11, 0, 0, t12, 0, -1, -1));
  return s10.close(), s10.delete(), r13;
}
function p5(e10, a11, l9, o13, g5, u14, c12, m8) {
  const { compressedTextureETC: E6, compressedTextureS3TC: T6 } = e10.capabilities, [h7, _6] = E6 ? o13 ? [_3.ETC2_RGBA, c4.COMPRESSED_RGBA8_ETC2_EAC] : [_3.ETC1_RGB, c4.COMPRESSED_RGB8_ETC2] : T6 ? o13 ? [_3.BC3_RGBA, c4.COMPRESSED_RGBA_S3TC_DXT5_EXT] : [_3.BC1_RGB, c4.COMPRESSED_RGB_S3TC_DXT1_EXT] : [_3.RGBA32, G2.RGBA], p9 = a11.hasMipmap ? l9 : Math.min(1, l9), A6 = [];
  for (let t11 = 0; t11 < p9; t11++) A6.push(new Uint8Array(c12(t11, h7))), m8(t11, h7, A6[t11]);
  return a11.internalFormat = _6, a11.hasMipmap = A6.length > 1, a11.samplingMode = a11.hasMipmap ? L.LINEAR_MIPMAP_LINEAR : L.LINEAR, a11.width = g5, a11.height = u14, new m2(e10, a11, { type: "compressed", levels: A6 });
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/DDSUtil.js
var o10 = () => n.getLogger("esri.views.3d.webgl-engine.lib.DDSUtil");
var a5 = 542327876;
var i9 = 131072;
var s6 = 4;
function l7(e10) {
  return e10.charCodeAt(0) + (e10.charCodeAt(1) << 8) + (e10.charCodeAt(2) << 16) + (e10.charCodeAt(3) << 24);
}
function u12(e10) {
  return String.fromCharCode(255 & e10, e10 >> 8 & 255, e10 >> 16 & 255, e10 >> 24 & 255);
}
var c9 = l7("DXT1");
var h2 = l7("DXT3");
var m5 = l7("DXT5");
var f6 = 31;
var d3 = 0;
var p6 = 1;
var g4 = 2;
var D2 = 3;
var C = 4;
var w = 7;
var T2 = 20;
var _5 = 21;
function E4(e10, r13, o13) {
  const a11 = S4(o13, r13.hasMipmap ?? false);
  if (null == a11) throw new Error("DDS texture data is null");
  const { textureData: i15, internalFormat: s10, width: l9, height: u14 } = a11;
  return r13.samplingMode = i15.levels.length > 1 ? L.LINEAR_MIPMAP_LINEAR : L.LINEAR, r13.hasMipmap = i15.levels.length > 1, r13.internalFormat = s10, r13.width = l9, r13.height = u14, new m2(e10, r13, i15);
}
function S4(e10, t11) {
  const n11 = new Int32Array(e10.buffer, e10.byteOffset, f6);
  if (n11[d3] !== a5) return o10().error("Invalid magic number in DDS header"), null;
  if (!(n11[T2] & s6)) return o10().error("Unsupported format, must contain a FourCC code"), null;
  const l9 = n11[_5];
  let E6, S7;
  switch (l9) {
    case c9:
      E6 = 8, S7 = c4.COMPRESSED_RGB_S3TC_DXT1_EXT;
      break;
    case h2:
      E6 = 16, S7 = c4.COMPRESSED_RGBA_S3TC_DXT3_EXT;
      break;
    case m5:
      E6 = 16, S7 = c4.COMPRESSED_RGBA_S3TC_DXT5_EXT;
      break;
    default:
      return o10().error("Unsupported FourCC code:", u12(l9)), null;
  }
  let b3 = 1, A6 = n11[C], M3 = n11[D2];
  (3 & A6 || 3 & M3) && (o10().warn("Rounding up compressed texture size to nearest multiple of 4."), A6 = A6 + 3 & -4, M3 = M3 + 3 & -4);
  const x3 = A6, R7 = M3;
  let X2, I5;
  n11[g4] & i9 && false !== t11 && (b3 = Math.max(1, n11[w]));
  let v3 = e10.byteOffset + n11[p6] + 4;
  const y5 = [];
  for (let r13 = 0; r13 < b3; ++r13) I5 = (A6 + 3 >> 2) * (M3 + 3 >> 2) * E6, X2 = new Uint8Array(e10.buffer, v3, I5), y5.push(X2), v3 += I5, A6 = Math.max(1, A6 >> 1), M3 = Math.max(1, M3 >> 1);
  return { textureData: { type: "compressed", levels: y5 }, internalFormat: S7, width: x3, height: R7 };
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/textureUtils.js
function r11(t11, e10) {
  const n11 = 1048576, i15 = 4096, r13 = 2;
  let h7 = t11.width * t11.height;
  if (h7 < i15) return t11 instanceof ImageData ? a6(t11) : t11;
  let c12 = t11.width, u14 = t11.height;
  do {
    c12 = Math.ceil(c12 / r13), u14 = Math.ceil(u14 / r13), h7 = c12 * u14;
  } while (h7 > n11 || null != e10 && (c12 > e10 || u14 > e10));
  return o11(t11, c12, u14);
}
function h3(t11, e10) {
  const n11 = Math.max(t11.width, t11.height);
  if (n11 <= e10) return t11;
  const i15 = e10 / n11;
  return o11(t11, Math.round(t11.width * i15), Math.round(t11.height * i15));
}
function o11(t11, e10, n11) {
  if (t11 instanceof ImageData) return o11(a6(t11), e10, n11);
  const i15 = document.createElement("canvas");
  i15.width = e10, i15.height = n11;
  return i15.getContext("2d").drawImage(t11, 0, 0, i15.width, i15.height), i15;
}
function a6(e10) {
  const n11 = document.createElement("canvas");
  n11.width = e10.width, n11.height = e10.height;
  const i15 = n11.getContext("2d");
  if (null == i15) throw new s("Failed to create 2d context from HTMLCanvasElement");
  return i15.putImageData(e10, 0, 0), n11;
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/Texture.js
var C2 = class extends r8 {
  get parameters() {
    return this._parameters;
  }
  constructor(e10, r13) {
    super(), this._data = e10, this.type = e6.Texture, this._glTexture = null, this._loadingPromise = null, this._loadingController = null, this.events = new o(), this._parameters = { ...M, ...r13 }, this._startPreload(e10);
  }
  dispose() {
    this.unload(), this._data = this.frameUpdate = void 0;
  }
  _startPreload(e10) {
    null != e10 && (e10 instanceof HTMLVideoElement ? (this.frameUpdate = (t11) => this._frameUpdate(e10, t11), this._startPreloadVideoElement(e10)) : e10 instanceof HTMLImageElement && this._startPreloadImageElement(e10));
  }
  _startPreloadVideoElement(e10) {
    if (!(Z(e10.src) || "auto" === e10.preload && e10.crossOrigin)) {
      e10.preload = "auto", e10.crossOrigin = "anonymous";
      const t11 = !e10.paused;
      if (e10.src = e10.src, t11 && e10.autoplay) {
        const t12 = () => {
          e10.removeEventListener("canplay", t12), e10.play();
        };
        e10.addEventListener("canplay", t12);
      }
    }
  }
  _startPreloadImageElement(e10) {
    tt(e10.src) || Z(e10.src) || e10.crossOrigin || (e10.crossOrigin = "anonymous", e10.src = e10.src);
  }
  _createDescriptor(e10) {
    const t11 = new p();
    return t11.wrapMode = this._parameters.wrap ?? D.REPEAT, t11.flipped = !this._parameters.noUnpackFlip, t11.samplingMode = this._parameters.mipmap ? L.LINEAR_MIPMAP_LINEAR : L.LINEAR, t11.hasMipmap = !!this._parameters.mipmap, t11.preMultiplyAlpha = !!this._parameters.preMultiplyAlpha, t11.maxAnisotropy = this._parameters.maxAnisotropy ?? (this._parameters.mipmap ? e10.parameters.maxMaxAnisotropy : 1), t11;
  }
  get glTexture() {
    return this._glTexture;
  }
  get memoryEstimate() {
    var _a;
    return ((_a = this._glTexture) == null ? void 0 : _a.usedMemory) || H4(this._data, this._parameters);
  }
  load(e10) {
    if (this._glTexture) return this._glTexture;
    if (this._loadingPromise) return this._loadingPromise;
    const t11 = this._data;
    return null == t11 ? (this._glTexture = new m2(e10, this._createDescriptor(e10), null), this._glTexture) : (this._parameters.reloadable || (this._data = void 0), "string" == typeof t11 ? this._loadFromURL(e10, t11) : t11 instanceof Image ? this._loadFromImageElement(e10, t11) : t11 instanceof HTMLVideoElement ? this._loadFromVideoElement(e10, t11) : t11 instanceof ImageData || t11 instanceof HTMLCanvasElement ? this._loadFromImage(e10, t11) : u(t11) && this._parameters.encoding === u6.DDS_ENCODING ? this._loadFromDDSData(e10, t11) : t(t11) && this._parameters.encoding === u6.DDS_ENCODING ? this._loadFromDDSData(e10, new Uint8Array(t11)) : (t(t11) || u(t11)) && this._parameters.encoding === u6.KTX2_ENCODING ? this._loadFromKTX2(e10, t11) : (t(t11) || u(t11)) && this._parameters.encoding === u6.BASIS_ENCODING ? this._loadFromBasis(e10, t11) : u(t11) ? this._loadFromPixelData(e10, t11) : t(t11) ? this._loadFromPixelData(e10, new Uint8Array(t11)) : null);
  }
  _frameUpdate(e10, t11) {
    return null == this._glTexture || e10.readyState < V.HAVE_CURRENT_DATA || t11 === e10.currentTime ? t11 : (this._glTexture.setData(e10), this._glTexture.descriptor.hasMipmap && this._glTexture.generateMipmap(), this._parameters.updateCallback && this._parameters.updateCallback(), e10.currentTime);
  }
  _loadFromDDSData(e10, t11) {
    return this._glTexture = E4(e10, this._createDescriptor(e10), t11), this._glTexture;
  }
  _loadFromKTX2(e10, t11) {
    return this._loadAsync(() => _4(e10, this._createDescriptor(e10), t11).then((e11) => (this._glTexture = e11, e11)));
  }
  _loadFromBasis(e10, t11) {
    return this._loadAsync(() => h(e10, this._createDescriptor(e10), t11).then((e11) => (this._glTexture = e11, e11)));
  }
  _loadFromPixelData(e10, t11) {
    s5(this._parameters.width > 0 && this._parameters.height > 0);
    const r13 = this._createDescriptor(e10);
    return r13.pixelFormat = 1 === this._parameters.components ? G2.LUMINANCE : 3 === this._parameters.components ? G2.RGB : G2.RGBA, r13.width = this._parameters.width ?? 0, r13.height = this._parameters.height ?? 0, this._glTexture = new m2(e10, r13, t11), this._glTexture;
  }
  _loadFromURL(e10, t11) {
    return this._loadAsync(async (r13) => {
      const s10 = await t7(t11, { signal: r13 });
      return s2(r13), this._loadFromImage(e10, s10);
    });
  }
  _loadFromImageElement(e10, t11) {
    return t11.complete ? this._loadFromImage(e10, t11) : this._loadAsync(async (r13) => {
      const s10 = await i2(t11, t11.src, false, r13);
      return s2(r13), this._loadFromImage(e10, s10);
    });
  }
  _loadFromVideoElement(e10, t11) {
    return t11.readyState >= V.HAVE_CURRENT_DATA ? this._loadFromImage(e10, t11) : this._loadFromVideoElementAsync(e10, t11);
  }
  _loadFromVideoElementAsync(t11, r13) {
    return this._loadAsync((a11) => new Promise((n11, l9) => {
      const m8 = () => {
        r13.removeEventListener("loadeddata", h7), r13.removeEventListener("error", _6), l(p9);
      }, h7 = () => {
        r13.readyState >= V.HAVE_CURRENT_DATA && (m8(), n11(this._loadFromImage(t11, r13)));
      }, _6 = (t12) => {
        m8(), l9(t12 || new s("Failed to load video"));
      };
      r13.addEventListener("loadeddata", h7), r13.addEventListener("error", _6);
      const p9 = m(a11, () => _6(u2()));
    }));
  }
  _loadFromImage(e10, t11) {
    let r13 = t11;
    if (!(r13 instanceof HTMLVideoElement)) {
      const { maxTextureSize: t12 } = e10.parameters;
      r13 = this._parameters.downsampleUncompressed ? r11(r13, t12) : h3(r13, t12);
    }
    const s10 = R3(r13);
    this._parameters.width = s10.width, this._parameters.height = s10.height;
    const a11 = this._createDescriptor(e10);
    return a11.pixelFormat = 3 === this._parameters.components ? G2.RGB : G2.RGBA, a11.width = s10.width, a11.height = s10.height, this._glTexture = new m2(e10, a11, r13), this._glTexture;
  }
  _loadAsync(e10) {
    const t11 = new AbortController();
    this._loadingController = t11;
    const r13 = e10(t11.signal);
    this._loadingPromise = r13;
    const s10 = () => {
      this._loadingController === t11 && (this._loadingController = null), this._loadingPromise === r13 && (this._loadingPromise = null);
    };
    return r13.then(s10, s10), r13;
  }
  unload() {
    if (this._glTexture = r2(this._glTexture), null != this._loadingController) {
      const e10 = this._loadingController;
      this._loadingController = null, this._loadingPromise = null, e10.abort();
    }
    this.events.emit("unloaded");
  }
};
function H4(e10, t11) {
  if (null == e10) return 0;
  if (t(e10) || u(e10)) return t11.encoding === u6.KTX2_ENCODING ? c8(e10, !!t11.mipmap) : t11.encoding === u6.BASIS_ENCODING ? u11(e10, !!t11.mipmap) : e10.byteLength;
  const { width: r13, height: s10 } = e10 instanceof Image || e10 instanceof ImageData || e10 instanceof HTMLCanvasElement || e10 instanceof HTMLVideoElement ? R3(e10) : t11;
  return (t11.mipmap ? 4 / 3 : 1) * r13 * s10 * (t11.components || 4) || 0;
}
function R3(e10) {
  return e10 instanceof HTMLVideoElement ? { width: e10.videoWidth, height: e10.videoHeight } : e10;
}
var V;
!function(e10) {
  e10[e10.HAVE_NOTHING = 0] = "HAVE_NOTHING", e10[e10.HAVE_METADATA = 1] = "HAVE_METADATA", e10[e10.HAVE_CURRENT_DATA = 2] = "HAVE_CURRENT_DATA", e10[e10.HAVE_FUTURE_DATA = 3] = "HAVE_FUTURE_DATA", e10[e10.HAVE_ENOUGH_DATA = 4] = "HAVE_ENOUGH_DATA";
}(V || (V = {}));
var M = { wrap: { s: D.REPEAT, t: D.REPEAT }, mipmap: true, noUnpackFlip: false, preMultiplyAlpha: false, downsampleUncompressed: false };

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/OrderIndependentTransparency.js
var O2 = r9(R2.ONE, R2.ZERO, R2.ONE, R2.ONE_MINUS_SRC_ALPHA);
function T3(r13) {
  return r13 === o6.FrontFace ? null : O2;
}
function a7(r13) {
  switch (r13) {
    case o6.NONE:
      return c5;
    case o6.ColorAlpha:
      return O2;
    case o6.FrontFace:
    case o6.COUNT:
      return null;
  }
}
function l8(r13) {
  if (r13.draped) return null;
  switch (r13.oitPass) {
    case o6.NONE:
    case o6.FrontFace:
      return r13.writeDepth ? p3 : null;
    case o6.ColorAlpha:
    case o6.COUNT:
      return null;
  }
}
var A2 = 5e5;
var C3 = { factor: -1, units: -2 };
function N2(r13) {
  return r13 ? C3 : null;
}
function f7(r13, n11 = O.LESS) {
  return r13 === o6.NONE || r13 === o6.FrontFace ? n11 : O.LEQUAL;
}
function i10(n11, t11) {
  const u14 = S2(t11);
  return n11 === o6.ColorAlpha ? u14 ? { buffers: [X.COLOR_ATTACHMENT0, X.COLOR_ATTACHMENT1, X.COLOR_ATTACHMENT2] } : { buffers: [X.COLOR_ATTACHMENT0, X.COLOR_ATTACHMENT1] } : u14 ? { buffers: [X.COLOR_ATTACHMENT0, X.COLOR_ATTACHMENT1] } : null;
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/RayIntersections.js
var m6 = class {
  constructor(t11 = false, n11 = true) {
    this.isVerticalRay = t11, this.normalRequired = n11;
  }
};
var h4 = u3();
function p7(n11, o13, i15, e10, s10, c12) {
  if (!n11.visible) return;
  const r13 = R(S5, e10, i15), a11 = (t11, n12, o14) => {
    c12(t11, o14, n12, false);
  }, h7 = new m6(false, o13.options.normalRequired);
  if (n11.boundingInfo) {
    s5(n11.type === e6.Mesh);
    const t11 = o13.tolerance;
    b(n11.boundingInfo, i15, r13, t11, s10, h7, a11);
  } else {
    const t11 = n11.attributes.get(e4.POSITION), o14 = t11.indices;
    V2(i15, r13, 0, o14.length / 3, o14, t11.data, t11.stride, s10, h7, a11);
  }
}
var M2 = n3();
function b(t11, n11, o13, i15, e10, s10, c12) {
  if (null == t11) return;
  const f9 = C4(o13, M2);
  if (S(h4, t11.bbMin), Z2(h4, t11.bbMax), null != e10 && e10.applyToAabb(h4), k(h4, n11, f9, i15)) {
    const { primitiveIndices: r13, position: a11 } = t11, f10 = r13 ? r13.length : a11.indices.length / 3;
    if (f10 > N3) {
      const r14 = t11.getChildren();
      if (void 0 !== r14) {
        for (const t12 of r14) b(t12, n11, o13, i15, e10, s10, c12);
        return;
      }
    }
    T4(n11, o13, 0, f10, a11.indices, a11.data, a11.stride, r13, e10, s10, c12);
  }
}
var d4 = n3();
function T4(t11, n11, o13, i15, e10, s10, c12, r13, a11, f9, u14) {
  const l9 = t11[0], m8 = t11[1], h7 = t11[2], p9 = n11[0], M3 = n11[1], b3 = n11[2], { normalRequired: x3 } = f9;
  for (let g5 = o13; g5 < i15; ++g5) {
    const t12 = r13[g5], n12 = 3 * t12, o14 = c12 * e10[n12];
    let i16 = s10[o14], f10 = s10[o14 + 1], y5 = s10[o14 + 2];
    const T6 = c12 * e10[n12 + 1];
    let V4 = s10[T6], j3 = s10[T6 + 1], q7 = s10[T6 + 2];
    const v3 = c12 * e10[n12 + 2];
    let R7 = s10[v3], O6 = s10[v3 + 1], A6 = s10[v3 + 2];
    null != a11 && ([i16, f10, y5] = a11.applyToVertex(i16, f10, y5, g5), [V4, j3, q7] = a11.applyToVertex(V4, j3, q7, g5), [R7, O6, A6] = a11.applyToVertex(R7, O6, A6, g5));
    const B6 = V4 - i16, C5 = j3 - f10, k4 = q7 - y5, w3 = R7 - i16, N6 = O6 - f10, S7 = A6 - y5, U5 = M3 * S7 - N6 * b3, z4 = b3 * w3 - S7 * p9, D3 = p9 * N6 - w3 * M3, E6 = B6 * U5 + C5 * z4 + k4 * D3;
    if (Math.abs(E6) <= P2) continue;
    const F4 = l9 - i16, G4 = m8 - f10, H6 = h7 - y5, J2 = F4 * U5 + G4 * z4 + H6 * D3;
    if (E6 > 0) {
      if (J2 < 0 || J2 > E6) continue;
    } else if (J2 > 0 || J2 < E6) continue;
    const K2 = G4 * k4 - C5 * H6, L3 = H6 * B6 - k4 * F4, Q2 = F4 * C5 - B6 * G4, W3 = p9 * K2 + M3 * L3 + b3 * Q2;
    if (E6 > 0) {
      if (W3 < 0 || J2 + W3 > E6) continue;
    } else if (W3 > 0 || J2 + W3 < E6) continue;
    const X2 = (w3 * K2 + N6 * L3 + S7 * Q2) / E6;
    if (X2 >= 0) {
      u14(X2, t12, x3 ? I4(B6, C5, k4, w3, N6, S7, d4) : null);
    }
  }
}
function V2(i15, e10, s10, c12, r13, a11, f9, u14, l9, m8) {
  const h7 = e10, p9 = U3, M3 = Math.abs(h7[0]), b3 = Math.abs(h7[1]), d7 = Math.abs(h7[2]), x3 = M3 >= b3 ? M3 >= d7 ? 0 : 2 : b3 >= d7 ? 1 : 2, g5 = x3, y5 = h7[g5] < 0 ? 2 : 1, T6 = (x3 + y5) % 3, V4 = (x3 + (3 - y5)) % 3, I5 = h7[T6] / h7[g5], O6 = h7[V4] / h7[g5], A6 = 1 / h7[g5], B6 = j, C5 = q3, k4 = v2, { normalRequired: w3 } = l9;
  for (let j3 = s10; j3 < c12; ++j3) {
    const e11 = 3 * j3, s11 = f9 * r13[e11];
    o3(p9[0], a11[s11 + 0], a11[s11 + 1], a11[s11 + 2]);
    const c13 = f9 * r13[e11 + 1];
    o3(p9[1], a11[c13 + 0], a11[c13 + 1], a11[c13 + 2]);
    const l10 = f9 * r13[e11 + 2];
    o3(p9[2], a11[l10 + 0], a11[l10 + 1], a11[l10 + 2]), u14 && (s3(p9[0], u14.applyToVertex(p9[0][0], p9[0][1], p9[0][2], j3)), s3(p9[1], u14.applyToVertex(p9[1][0], p9[1][1], p9[1][2], j3)), s3(p9[2], u14.applyToVertex(p9[2][0], p9[2][1], p9[2][2], j3))), R(B6, p9[0], i15), R(C5, p9[1], i15), R(k4, p9[2], i15);
    const h8 = B6[T6] - I5 * B6[g5], M4 = B6[V4] - O6 * B6[g5], b4 = C5[T6] - I5 * C5[g5], d8 = C5[V4] - O6 * C5[g5], x4 = k4[T6] - I5 * k4[g5], y6 = k4[V4] - O6 * k4[g5], q7 = x4 * d8 - y6 * b4, v3 = h8 * y6 - M4 * x4, N6 = b4 * M4 - d8 * h8;
    if ((q7 < 0 || v3 < 0 || N6 < 0) && (q7 > 0 || v3 > 0 || N6 > 0)) continue;
    const P4 = q7 + v3 + N6;
    if (0 === P4) continue;
    const S7 = q7 * (A6 * B6[g5]) + v3 * (A6 * C5[g5]) + N6 * (A6 * k4[g5]);
    if (S7 * Math.sign(P4) < 0) continue;
    const U5 = S7 / P4;
    if (U5 >= 0) {
      m8(U5, j3, w3 ? R4(p9) : null);
    }
  }
}
var j = n3();
var q3 = n3();
var v2 = n3();
function I4(t11, o13, s10, c12, r13, a11, f9) {
  return o3(O3, t11, o13, s10), o3(A3, c12, r13, a11), _2(f9, O3, A3), A(f9, f9), f9;
}
function R4(n11) {
  return R(O3, n11[1], n11[0]), R(A3, n11[2], n11[0]), _2(d4, O3, A3), A(d4, d4), d4;
}
var O3 = n3();
var A3 = n3();
function C4(t11, o13) {
  return o3(o13, 1 / t11[0], 1 / t11[1], 1 / t11[2]);
}
function k(t11, n11, o13, i15) {
  return w2(t11, n11, o13, i15, 1 / 0);
}
function w2(t11, n11, o13, i15, e10) {
  const s10 = (t11[0] - i15 - n11[0]) * o13[0], c12 = (t11[3] + i15 - n11[0]) * o13[0];
  let r13 = Math.min(s10, c12), a11 = Math.max(s10, c12);
  const f9 = (t11[1] - i15 - n11[1]) * o13[1], u14 = (t11[4] + i15 - n11[1]) * o13[1];
  if (a11 = Math.min(a11, Math.max(f9, u14)), a11 < 0) return false;
  if (r13 = Math.max(r13, Math.min(f9, u14)), r13 > a11) return false;
  const l9 = (t11[2] - i15 - n11[2]) * o13[2], m8 = (t11[5] + i15 - n11[2]) * o13[2];
  return a11 = Math.min(a11, Math.max(l9, m8)), !(a11 < 0) && (r13 = Math.max(r13, Math.min(l9, m8)), !(r13 > a11) && r13 < e10);
}
var N3 = 1e3;
var P2 = 1e-7;
var S5 = n3();
var U3 = [n3(), n3(), n3()];

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/RenderSlot.js
var A4;
!function(A6) {
  A6[A6.INTEGRATED_MESH = 0] = "INTEGRATED_MESH", A6[A6.OPAQUE_TERRAIN = 1] = "OPAQUE_TERRAIN", A6[A6.OPAQUE_MATERIAL = 2] = "OPAQUE_MATERIAL", A6[A6.OPAQUE_MATERIAL_WITHOUT_NORMALS = 3] = "OPAQUE_MATERIAL_WITHOUT_NORMALS", A6[A6.TRANSPARENT_MATERIAL = 4] = "TRANSPARENT_MATERIAL", A6[A6.TRANSPARENT_MATERIAL_WITHOUT_NORMALS = 5] = "TRANSPARENT_MATERIAL_WITHOUT_NORMALS", A6[A6.TRANSPARENT_TERRAIN = 6] = "TRANSPARENT_TERRAIN", A6[A6.TRANSPARENT_MATERIAL_WITHOUT_DEPTH = 7] = "TRANSPARENT_MATERIAL_WITHOUT_DEPTH", A6[A6.OCCLUDED_TERRAIN = 8] = "OCCLUDED_TERRAIN", A6[A6.OCCLUDER_MATERIAL = 9] = "OCCLUDER_MATERIAL", A6[A6.TRANSPARENT_OCCLUDER_MATERIAL = 10] = "TRANSPARENT_OCCLUDER_MATERIAL", A6[A6.OCCLUSION_PIXELS = 11] = "OCCLUSION_PIXELS", A6[A6.HUD_MATERIAL = 12] = "HUD_MATERIAL", A6[A6.LABEL_MATERIAL = 13] = "LABEL_MATERIAL", A6[A6.LINE_CALLOUTS = 14] = "LINE_CALLOUTS", A6[A6.LINE_CALLOUTS_HUD_DEPTH = 15] = "LINE_CALLOUTS_HUD_DEPTH", A6[A6.DRAPED_MATERIAL = 16] = "DRAPED_MATERIAL", A6[A6.DRAPED_WATER = 17] = "DRAPED_WATER", A6[A6.VOXEL = 18] = "VOXEL", A6[A6.MAX_SLOTS = 19] = "MAX_SLOTS";
}(A4 || (A4 = {}));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/verticalOffsetUtils.js
var T5 = class {
  constructor(t11 = 0) {
    this.offset = t11, this.tmpVertex = n3();
  }
  applyToVertex(t11, s10, r13) {
    const e10 = o3(q4, t11, s10, r13), i15 = u4(z2, e10, this.localOrigin), o13 = this.offset / r5(i15);
    return q(this.tmpVertex, e10, i15, o13), this.tmpVertex;
  }
  applyToAabb(t11) {
    const s10 = A5, r13 = R5, e10 = B2;
    for (let n11 = 0; n11 < 3; ++n11) s10[n11] = t11[0 + n11] + this.localOrigin[n11], r13[n11] = t11[3 + n11] + this.localOrigin[n11], e10[n11] = s10[n11];
    const i15 = this.applyToVertex(s10[0], s10[1], s10[2]);
    for (let n11 = 0; n11 < 3; ++n11) t11[n11] = i15[n11], t11[n11 + 3] = i15[n11];
    const o13 = (s11) => {
      const r14 = this.applyToVertex(s11[0], s11[1], s11[2]);
      for (let e11 = 0; e11 < 3; ++e11) t11[e11] = Math.min(t11[e11], r14[e11]), t11[e11 + 3] = Math.max(t11[e11 + 3], r14[e11]);
    };
    for (let n11 = 1; n11 < 8; ++n11) {
      for (let t12 = 0; t12 < 3; ++t12) e10[t12] = n11 & 1 << t12 ? r13[t12] : s10[t12];
      o13(e10);
    }
    let a11 = 0;
    for (let n11 = 0; n11 < 3; ++n11) {
      s10[n11] * r13[n11] < 0 && (a11 |= 1 << n11);
    }
    if (0 !== a11 && 7 !== a11) {
      for (let n11 = 0; n11 < 8; ++n11) if (!(a11 & n11)) {
        for (let t12 = 0; t12 < 3; ++t12) e10[t12] = a11 & 1 << t12 ? 0 : n11 & 1 << t12 ? s10[t12] : r13[t12];
        o13(e10);
      }
    }
    for (let n11 = 0; n11 < 3; ++n11) t11[n11] -= this.localOrigin[n11], t11[n11 + 3] -= this.localOrigin[n11];
    return t11;
  }
};
var x2 = class {
  constructor(t11 = 0) {
    this.componentLocalOriginLength = 0, this._totalOffset = 0, this._offset = 0, this._tmpVertex = n3(), this._tmpMbs = E2(), this._tmpObb = new I3(), this._resetOffset(t11);
  }
  _resetOffset(t11) {
    this._offset = t11, this._totalOffset = t11;
  }
  set offset(t11) {
    this._resetOffset(t11);
  }
  get offset() {
    return this._offset;
  }
  set componentOffset(t11) {
    this._totalOffset = this._offset + t11;
  }
  set localOrigin(t11) {
    this.componentLocalOriginLength = r5(t11);
  }
  applyToVertex(t11, s10, r13) {
    const e10 = o3(q4, t11, s10, r13), i15 = o3(z2, t11, s10, r13 + this.componentLocalOriginLength), o13 = this._totalOffset / r5(i15);
    return q(this._tmpVertex, e10, i15, o13), this._tmpVertex;
  }
  applyToAabb(t11) {
    const s10 = this.componentLocalOriginLength, r13 = t11[0], e10 = t11[1], i15 = t11[2] + s10, o13 = t11[3], a11 = t11[4], n11 = t11[5] + s10, h7 = Math.abs(r13), f9 = Math.abs(e10), l9 = Math.abs(i15), m8 = Math.abs(o13), p9 = Math.abs(a11), c12 = Math.abs(n11), _6 = 0.5 * (1 + Math.sign(r13 * o13)) * Math.min(h7, m8), u14 = 0.5 * (1 + Math.sign(e10 * a11)) * Math.min(f9, p9), g5 = 0.5 * (1 + Math.sign(i15 * n11)) * Math.min(l9, c12), M3 = Math.max(h7, m8), b3 = Math.max(f9, p9), v3 = Math.max(l9, c12), T6 = Math.sqrt(_6 * _6 + u14 * u14 + g5 * g5), x3 = Math.sign(h7 + r13), O6 = Math.sign(f9 + e10), y5 = Math.sign(l9 + i15), d7 = Math.sign(m8 + o13), V4 = Math.sign(p9 + a11), L3 = Math.sign(c12 + n11), j3 = this._totalOffset;
    if (T6 < j3) return t11[0] -= (1 - x3) * j3, t11[1] -= (1 - O6) * j3, t11[2] -= (1 - y5) * j3, t11[3] += d7 * j3, t11[4] += V4 * j3, t11[5] += L3 * j3, t11;
    const I5 = j3 / Math.sqrt(M3 * M3 + b3 * b3 + v3 * v3), w3 = j3 / T6, q7 = w3 - I5, z4 = -q7;
    return t11[0] += r13 * (x3 * z4 + w3), t11[1] += e10 * (O6 * z4 + w3), t11[2] += i15 * (y5 * z4 + w3), t11[3] += o13 * (d7 * q7 + I5), t11[4] += a11 * (V4 * q7 + I5), t11[5] += n11 * (L3 * q7 + I5), t11;
  }
  applyToMbs(t11) {
    const s10 = r5(U2(t11)), r13 = this._totalOffset / s10;
    return q(U2(this._tmpMbs), U2(t11), U2(t11), r13), this._tmpMbs[3] = t11[3] + t11[3] * this._totalOffset / s10, this._tmpMbs;
  }
  applyToObb(t11) {
    return L2(t11, this._totalOffset, this._totalOffset, l4.Global, this._tmpObb), this._tmpObb;
  }
};
var O4 = class {
  constructor(t11 = 0) {
    this.offset = t11, this.sphere = E2(), this.tmpVertex = n3();
  }
  applyToVertex(t11, s10, r13) {
    const e10 = this.objectTransform.transform, i15 = o3(q4, t11, s10, r13), o13 = E(i15, i15, e10), a11 = this.offset / r5(o13);
    q(o13, o13, o13, a11);
    const h7 = this.objectTransform.inverse;
    return E(this.tmpVertex, o13, h7), this.tmpVertex;
  }
  applyToMinMax(t11, s10) {
    const r13 = this.offset / r5(t11);
    q(t11, t11, t11, r13);
    const e10 = this.offset / r5(s10);
    q(s10, s10, s10, e10);
  }
  applyToAabb(t11) {
    const s10 = this.offset / Math.sqrt(t11[0] * t11[0] + t11[1] * t11[1] + t11[2] * t11[2]);
    t11[0] += t11[0] * s10, t11[1] += t11[1] * s10, t11[2] += t11[2] * s10;
    const r13 = this.offset / Math.sqrt(t11[3] * t11[3] + t11[4] * t11[4] + t11[5] * t11[5]);
    return t11[3] += t11[3] * r13, t11[4] += t11[4] * r13, t11[5] += t11[5] * r13, t11;
  }
  applyToBoundingSphere(t11) {
    const s10 = r5(U2(t11)), r13 = this.offset / s10;
    return q(U2(this.sphere), U2(t11), U2(t11), r13), this.sphere[3] = t11[3] + t11[3] * this.offset / s10, this.sphere;
  }
};
var y4 = new O4();
function d5(t11) {
  return null != t11 ? (y4.offset = t11, y4) : null;
}
var V3 = new x2();
var j2 = new T5();
var q4 = n3();
var z2 = n3();
var A5 = n3();
var R5 = n3();
var B2 = n3();

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/internal/bufferWriterUtils.js
function d6(e10, t11, f9, o13 = 1) {
  const { data: r13, indices: i15 } = e10, s10 = t11.typedBuffer, n11 = t11.typedBufferStride, c12 = i15.length;
  if (f9 *= n11, 1 === o13) for (let l9 = 0; l9 < c12; ++l9) s10[f9] = r13[i15[l9]], f9 += n11;
  else for (let l9 = 0; l9 < c12; ++l9) {
    const e11 = r13[i15[l9]];
    for (let t12 = 0; t12 < o13; t12++) s10[f9] = e11, f9 += n11;
  }
}
function u13(e10, t11, f9) {
  const { data: o13, indices: r13 } = e10, i15 = t11.typedBuffer, s10 = t11.typedBufferStride, n11 = r13.length;
  f9 *= s10;
  for (let c12 = 0; c12 < n11; ++c12) {
    const e11 = 2 * r13[c12];
    i15[f9] = o13[e11], i15[f9 + 1] = o13[e11 + 1], f9 += s10;
  }
}
function a8(e10, t11, f9, o13) {
  const { data: r13, indices: i15 } = e10, s10 = t11.typedBuffer, n11 = t11.typedBufferStride, c12 = i15.length;
  if (f9 *= n11, null == o13 || 1 === o13) for (let l9 = 0; l9 < c12; ++l9) {
    const e11 = 3 * i15[l9];
    s10[f9] = r13[e11], s10[f9 + 1] = r13[e11 + 1], s10[f9 + 2] = r13[e11 + 2], f9 += n11;
  }
  else for (let l9 = 0; l9 < c12; ++l9) {
    const e11 = 3 * i15[l9];
    for (let t12 = 0; t12 < o13; ++t12) s10[f9] = r13[e11], s10[f9 + 1] = r13[e11 + 1], s10[f9 + 2] = r13[e11 + 2], f9 += n11;
  }
}
function p8(e10, t11, f9, o13 = 1) {
  const { data: r13, indices: i15 } = e10, s10 = t11.typedBuffer, n11 = t11.typedBufferStride, c12 = i15.length;
  if (f9 *= n11, 1 === o13) for (let l9 = 0; l9 < c12; ++l9) {
    const e11 = 4 * i15[l9];
    s10[f9] = r13[e11], s10[f9 + 1] = r13[e11 + 1], s10[f9 + 2] = r13[e11 + 2], s10[f9 + 3] = r13[e11 + 3], f9 += n11;
  }
  else for (let l9 = 0; l9 < c12; ++l9) {
    const e11 = 4 * i15[l9];
    for (let t12 = 0; t12 < o13; ++t12) s10[f9] = r13[e11], s10[f9 + 1] = r13[e11 + 1], s10[f9 + 2] = r13[e11 + 2], s10[f9 + 3] = r13[e11 + 3], f9 += n11;
  }
}
function B3(e10, t11, f9) {
  const o13 = e10.typedBuffer, r13 = e10.typedBufferStride;
  t11 *= r13;
  for (let i15 = 0; i15 < f9; ++i15) o13[t11] = 0, o13[t11 + 1] = 0, o13[t11 + 2] = 0, o13[t11 + 3] = 0, t11 += r13;
}
function b2(t11, f9, o13, r13, i15 = 1) {
  if (!f9) return void a8(t11, o13, r13, i15);
  const { data: s10, indices: n11 } = t11, c12 = o13.typedBuffer, l9 = o13.typedBufferStride, d7 = n11.length, u14 = f9[0], p9 = f9[1], B6 = f9[2], y5 = f9[4], g5 = f9[5], b3 = f9[6], O6 = f9[8], h7 = f9[9], S7 = f9[10], N6 = f9[12], R7 = f9[13], E6 = f9[14];
  r13 *= l9;
  let F4 = 0, z4 = 0, A6 = 0;
  const L3 = H(f9) ? (e10) => {
    F4 = s10[e10] + N6, z4 = s10[e10 + 1] + R7, A6 = s10[e10 + 2] + E6;
  } : (e10) => {
    const t12 = s10[e10], f10 = s10[e10 + 1], o14 = s10[e10 + 2];
    F4 = u14 * t12 + y5 * f10 + O6 * o14 + N6, z4 = p9 * t12 + g5 * f10 + h7 * o14 + R7, A6 = B6 * t12 + b3 * f10 + S7 * o14 + E6;
  };
  if (1 === i15) for (let e10 = 0; e10 < d7; ++e10) L3(3 * n11[e10]), c12[r13] = F4, c12[r13 + 1] = z4, c12[r13 + 2] = A6, r13 += l9;
  else for (let e10 = 0; e10 < d7; ++e10) {
    L3(3 * n11[e10]);
    for (let e11 = 0; e11 < i15; ++e11) c12[r13] = F4, c12[r13 + 1] = z4, c12[r13 + 2] = A6, r13 += l9;
  }
}
function O5(f9, o13, r13, i15, s10 = 1) {
  if (!o13) return void a8(f9, r13, i15, s10);
  const { data: n11, indices: c12 } = f9, l9 = o13, d7 = r13.typedBuffer, u14 = r13.typedBufferStride, p9 = c12.length, B6 = l9[0], y5 = l9[1], g5 = l9[2], b3 = l9[4], O6 = l9[5], h7 = l9[6], S7 = l9[8], N6 = l9[9], R7 = l9[10], E6 = !G(l9), F4 = 1e-6, z4 = 1 - F4;
  i15 *= u14;
  let A6 = 0, L3 = 0, m8 = 0;
  const T6 = H(l9) ? (e10) => {
    A6 = n11[e10], L3 = n11[e10 + 1], m8 = n11[e10 + 2];
  } : (e10) => {
    const t11 = n11[e10], f10 = n11[e10 + 1], o14 = n11[e10 + 2];
    A6 = B6 * t11 + b3 * f10 + S7 * o14, L3 = y5 * t11 + O6 * f10 + N6 * o14, m8 = g5 * t11 + h7 * f10 + R7 * o14;
  };
  if (1 === s10) if (E6) for (let e10 = 0; e10 < p9; ++e10) {
    T6(3 * c12[e10]);
    const t11 = A6 * A6 + L3 * L3 + m8 * m8;
    if (t11 < z4 && t11 > F4) {
      const e11 = 1 / Math.sqrt(t11);
      d7[i15] = A6 * e11, d7[i15 + 1] = L3 * e11, d7[i15 + 2] = m8 * e11;
    } else d7[i15] = A6, d7[i15 + 1] = L3, d7[i15 + 2] = m8;
    i15 += u14;
  }
  else for (let e10 = 0; e10 < p9; ++e10) T6(3 * c12[e10]), d7[i15] = A6, d7[i15 + 1] = L3, d7[i15 + 2] = m8, i15 += u14;
  else for (let e10 = 0; e10 < p9; ++e10) {
    if (T6(3 * c12[e10]), E6) {
      const e11 = A6 * A6 + L3 * L3 + m8 * m8;
      if (e11 < z4 && e11 > F4) {
        const t11 = 1 / Math.sqrt(e11);
        A6 *= t11, L3 *= t11, m8 *= t11;
      }
    }
    for (let e11 = 0; e11 < s10; ++e11) d7[i15] = A6, d7[i15 + 1] = L3, d7[i15 + 2] = m8, i15 += u14;
  }
}
function h6(e10, f9, o13, r13, i15 = 1) {
  if (!f9) return void p8(e10, o13, r13, i15);
  const { data: s10, indices: n11 } = e10, c12 = f9, l9 = o13.typedBuffer, d7 = o13.typedBufferStride, u14 = n11.length, a11 = c12[0], B6 = c12[1], y5 = c12[2], g5 = c12[4], b3 = c12[5], O6 = c12[6], h7 = c12[8], S7 = c12[9], N6 = c12[10], R7 = !G(c12), E6 = 1e-6, F4 = 1 - E6;
  if (r13 *= d7, 1 === i15) for (let t11 = 0; t11 < u14; ++t11) {
    const e11 = 4 * n11[t11], f10 = s10[e11], o14 = s10[e11 + 1], i16 = s10[e11 + 2], c13 = s10[e11 + 3];
    let u15 = a11 * f10 + g5 * o14 + h7 * i16, p9 = B6 * f10 + b3 * o14 + S7 * i16, z4 = y5 * f10 + O6 * o14 + N6 * i16;
    if (R7) {
      const e12 = u15 * u15 + p9 * p9 + z4 * z4;
      if (e12 < F4 && e12 > E6) {
        const t12 = 1 / Math.sqrt(e12);
        u15 *= t12, p9 *= t12, z4 *= t12;
      }
    }
    l9[r13] = u15, l9[r13 + 1] = p9, l9[r13 + 2] = z4, l9[r13 + 3] = c13, r13 += d7;
  }
  else for (let t11 = 0; t11 < u14; ++t11) {
    const e11 = 4 * n11[t11], f10 = s10[e11], o14 = s10[e11 + 1], c13 = s10[e11 + 2], u15 = s10[e11 + 3];
    let p9 = a11 * f10 + g5 * o14 + h7 * c13, z4 = B6 * f10 + b3 * o14 + S7 * c13, A6 = y5 * f10 + O6 * o14 + N6 * c13;
    if (R7) {
      const e12 = p9 * p9 + z4 * z4 + A6 * A6;
      if (e12 < F4 && e12 > E6) {
        const t12 = 1 / Math.sqrt(e12);
        p9 *= t12, z4 *= t12, A6 *= t12;
      }
    }
    for (let t12 = 0; t12 < i15; ++t12) l9[r13] = p9, l9[r13 + 1] = z4, l9[r13 + 2] = A6, l9[r13 + 3] = u15, r13 += d7;
  }
}
function S6(e10, t11, f9, o13, r13 = 1) {
  const { data: i15, indices: s10 } = e10, n11 = f9.typedBuffer, c12 = f9.typedBufferStride, l9 = s10.length;
  if (o13 *= c12, t11 !== i15.length || 4 !== t11) if (1 !== r13) if (4 !== t11) for (let d7 = 0; d7 < l9; ++d7) {
    const e11 = 3 * s10[d7];
    for (let t12 = 0; t12 < r13; ++t12) n11[o13] = i15[e11], n11[o13 + 1] = i15[e11 + 1], n11[o13 + 2] = i15[e11 + 2], n11[o13 + 3] = 255, o13 += c12;
  }
  else for (let d7 = 0; d7 < l9; ++d7) {
    const e11 = 4 * s10[d7];
    for (let t12 = 0; t12 < r13; ++t12) n11[o13] = i15[e11], n11[o13 + 1] = i15[e11 + 1], n11[o13 + 2] = i15[e11 + 2], n11[o13 + 3] = i15[e11 + 3], o13 += c12;
  }
  else {
    if (4 === t11) {
      for (let e11 = 0; e11 < l9; ++e11) {
        const t12 = 4 * s10[e11];
        n11[o13] = i15[t12], n11[o13 + 1] = i15[t12 + 1], n11[o13 + 2] = i15[t12 + 2], n11[o13 + 3] = i15[t12 + 3], o13 += c12;
      }
      return;
    }
    for (let e11 = 0; e11 < l9; ++e11) {
      const t12 = 3 * s10[e11];
      n11[o13] = i15[t12], n11[o13 + 1] = i15[t12 + 1], n11[o13 + 2] = i15[t12 + 2], n11[o13 + 3] = 255, o13 += c12;
    }
  }
  else {
    n11[o13] = i15[0], n11[o13 + 1] = i15[1], n11[o13 + 2] = i15[2], n11[o13 + 3] = i15[3];
    const e11 = new Uint32Array(f9.typedBuffer.buffer, f9.start), t12 = c12 / 4, s11 = e11[o13 /= 4];
    o13 += t12;
    const d7 = l9 * r13;
    for (let f10 = 1; f10 < d7; ++f10) e11[o13] = s11, o13 += t12;
  }
}
function N4(e10, t11, f9) {
  const { data: o13, indices: r13 } = e10, i15 = t11.typedBuffer, s10 = t11.typedBufferStride, n11 = r13.length, c12 = o13[0];
  f9 *= s10;
  for (let l9 = 0; l9 < n11; ++l9) i15[f9] = c12, f9 += s10;
}
function R6(e10, t11, f9, o13, r13 = 1) {
  const i15 = t11.typedBuffer, s10 = t11.typedBufferStride;
  if (o13 *= s10, 1 === r13) for (let n11 = 0; n11 < f9; ++n11) i15[o13] = e10[0], i15[o13 + 1] = e10[1], i15[o13 + 2] = e10[2], i15[o13 + 3] = e10[3], o13 += s10;
  else for (let n11 = 0; n11 < f9; ++n11) for (let t12 = 0; t12 < r13; ++t12) i15[o13] = e10[0], i15[o13 + 1] = e10[1], i15[o13 + 2] = e10[2], i15[o13 + 3] = e10[3], o13 += s10;
}
function E5(e10, t11, o13, r13, i15, s10, n11) {
  var _a;
  for (const c12 of o13.fields.keys()) {
    const o14 = e10.get(c12), d7 = o14 == null ? void 0 : o14.indices;
    if (o14 && d7) F(c12, o14, r13, i15, s10, n11);
    else if (c12 === e4.OBJECTANDLAYERIDCOLOR && null != t11) {
      const o15 = (_a = e10.get(e4.POSITION)) == null ? void 0 : _a.indices;
      if (o15) {
        const e11 = o15.length;
        R6(t11, s10.getField(c12, x), e11, n11);
      }
    }
  }
}
function F(e10, t11, d7, a11, B6, y5) {
  switch (e10) {
    case e4.POSITION: {
      s5(3 === t11.size);
      const f9 = B6.getField(e10, i3);
      s5(!!f9, `No buffer view for ${e10}`), f9 && b2(t11, d7, f9, y5);
      break;
    }
    case e4.NORMAL: {
      s5(3 === t11.size);
      const f9 = B6.getField(e10, i3);
      s5(!!f9, `No buffer view for ${e10}`), f9 && O5(t11, a11, f9, y5);
      break;
    }
    case e4.NORMALCOMPRESSED: {
      s5(2 === t11.size);
      const f9 = B6.getField(e10, q2);
      s5(!!f9, `No buffer view for ${e10}`), f9 && u13(t11, f9, y5);
      break;
    }
    case e4.UV0: {
      s5(2 === t11.size);
      const f9 = B6.getField(e10, u5);
      s5(!!f9, `No buffer view for ${e10}`), f9 && u13(t11, f9, y5);
      break;
    }
    case e4.COLOR:
    case e4.SYMBOLCOLOR: {
      const o13 = B6.getField(e10, x);
      s5(!!o13, `No buffer view for ${e10}`), s5(3 === t11.size || 4 === t11.size), !o13 || 3 !== t11.size && 4 !== t11.size || S6(t11, t11.size, o13, y5);
      break;
    }
    case e4.COLORFEATUREATTRIBUTE: {
      const f9 = B6.getField(e10, y2);
      s5(!!f9, `No buffer view for ${e10}`), s5(1 === t11.size), f9 && 1 === t11.size && N4(t11, f9, y5);
      break;
    }
    case e4.TANGENT: {
      s5(4 === t11.size);
      const f9 = B6.getField(e10, c3);
      s5(!!f9, `No buffer view for ${e10}`), f9 && h6(t11, d7, f9, y5);
      break;
    }
    case e4.PROFILERIGHT:
    case e4.PROFILEUP:
    case e4.PROFILEVERTEXANDNORMAL:
    case e4.FEATUREVALUE: {
      s5(4 === t11.size);
      const f9 = B6.getField(e10, c3);
      s5(!!f9, `No buffer view for ${e10}`), f9 && p8(t11, f9, y5);
    }
  }
}

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/DefaultBufferWriter.js
var r12 = class {
  constructor(t11) {
    this.vertexBufferLayout = t11;
  }
  elementCount(e10) {
    return e10.get(e4.POSITION).indices.length;
  }
  write(t11, r13, i15, o13, s10, u14) {
    E5(i15, o13, this.vertexBufferLayout, t11, r13, s10, u14);
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/StencilUtils.js
var i11 = { func: O.LESS };
var s8 = { func: O.ALWAYS };
var e9 = { mask: 255 };
var f8 = { function: { func: O.ALWAYS, ref: s4.OutlineVisualElementMask, mask: s4.OutlineVisualElementMask }, operation: { fail: I2.KEEP, zFail: I2.KEEP, zPass: I2.ZERO } };
var o12 = { function: { func: O.ALWAYS, ref: s4.OutlineVisualElementMask, mask: s4.OutlineVisualElementMask }, operation: { fail: I2.KEEP, zFail: I2.KEEP, zPass: I2.REPLACE } };
var P3 = { function: { func: O.EQUAL, ref: s4.OutlineVisualElementMask, mask: s4.OutlineVisualElementMask }, operation: { fail: I2.KEEP, zFail: I2.KEEP, zPass: I2.KEEP } };
var m7 = { function: { func: O.NOTEQUAL, ref: s4.OutlineVisualElementMask, mask: s4.OutlineVisualElementMask }, operation: { fail: I2.KEEP, zFail: I2.KEEP, zPass: I2.KEEP } };

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/DefaultMaterialTechnique.js
var F2 = class extends f3 {
  constructor() {
    super(...arguments), this.isSchematic = false, this.usePBR = false, this.mrrFactors = t8, this.hasVertexColors = false, this.hasSymbolColors = false, this.doubleSided = false, this.doubleSidedType = "normal", this.cullFace = e3.Back, this.isInstanced = false, this.hasInstancedColor = false, this.emissiveFactor = _, this.instancedDoublePrecision = false, this.normalType = a2.Attribute, this.receiveShadows = true, this.receiveAmbientOcclusion = true, this.castShadows = true, this.ambient = e2(0.2, 0.2, 0.2), this.diffuse = e2(0.8, 0.8, 0.8), this.externalColor = r4(1, 1, 1, 1), this.colorMixMode = "multiply", this.opacity = 1, this.layerOpacity = 1, this.origin = n3(), this.hasSlicePlane = false, this.hasSliceHighlight = true, this.offsetTransparentBackfaces = false, this.vvSize = null, this.vvColor = null, this.vvOpacity = null, this.vvSymbolAnchor = null, this.vvSymbolRotationMatrix = null, this.modelTransformation = null, this.transparent = false, this.writeDepth = true, this.customDepthTest = n4.Less, this.textureAlphaMode = i4.Blend, this.textureAlphaCutoff = o2, this.textureAlphaPremultiplied = false, this.renderOccluded = p2.Occlude, this.isDecoration = false;
  }
};
var N5 = class extends n8 {
  constructor() {
    super(...arguments), this.origin = n3(), this.slicePlaneLocalOrigin = this.origin;
  }
};
var k2 = class extends n9 {
  constructor(e10, t11, i15, s10 = new t9(K, () => import("./DefaultMaterial.glsl-VTS5GYUH.js"))) {
    super(e10, t11, s10, i15), this.type = "DefaultMaterialTechnique";
  }
  _makePipeline(e10, t11) {
    const { oitPass: i15, output: s10, transparent: o13, cullFace: a11, customDepthTest: n11, hasOccludees: h7, enableOffset: c12 } = e10, u14 = i15 === o6.NONE, m8 = i15 === o6.FrontFace;
    return B({ blending: u7(s10) && o13 ? a7(i15) : null, culling: B4(e10) ? f2(a11) : null, depthTest: { func: f7(i15, q5(n11)) }, depthWrite: l8(e10), drawBuffers: s10 === n5.Depth ? { buffers: [f.NONE] } : i10(i15, s10), colorWrite: g2, stencilWrite: h7 ? e9 : null, stencilTest: h7 ? t11 ? o12 : f8 : null, polygonOffset: u14 || m8 ? null : N2(c12) });
  }
  initializePipeline(e10) {
    return this._occludeePipelineState = this._makePipeline(e10, true), this._makePipeline(e10, false);
  }
  getPipeline(e10) {
    return e10 ? this._occludeePipelineState : super.getPipeline();
  }
};
function q5(e10) {
  return e10 === n4.Lequal ? O.LEQUAL : O.LESS;
}
function B4(e10) {
  return e10.cullFace !== e3.None || !e10.hasSlicePlane && (!e10.transparent && !e10.doubleSidedMode);
}

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderTechnique/ShaderTechniqueConfigurationKey.js
var s9 = class {
  constructor(t11) {
    this._bits = [...t11];
  }
  equals(s10) {
    return c(this._bits, s10.bits);
  }
  get code() {
    return this._code ?? (this._code = String.fromCharCode(...this._bits)), this._code;
  }
  get bits() {
    return this._bits;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderTechnique/ShaderTechniqueConfiguration.js
var a9 = class extends t5 {
  constructor() {
    var _a2;
    super(), this._parameterBits = ((_a2 = this._parameterBits) == null ? void 0 : _a2.map(() => 0)) ?? [], this._parameterNames ?? (this._parameterNames = []);
  }
  get key() {
    return this._key ?? (this._key = new s9(this._parameterBits)), this._key;
  }
  decode(e10 = this.key) {
    const t11 = this._parameterBits;
    this._parameterBits = [...e10.bits];
    const r13 = this._parameterNames.map((e11) => `    ${e11}: ${this[e11]}`).join("\n");
    return this._parameterBits = t11, r13;
  }
};
function i12(t11 = {}) {
  return (r13, a11) => {
    var _a, _b;
    r13.hasOwnProperty("_parameterNames") || Object.defineProperty(r13, "_parameterNames", { value: ((_a = r13._parameterNames) == null ? void 0 : _a.slice()) ?? [], configurable: true, writable: true }), r13.hasOwnProperty("_parameterBits") || Object.defineProperty(r13, "_parameterBits", { value: ((_b = r13._parameterBits) == null ? void 0 : _b.slice()) ?? [0], configurable: true, writable: true }), r13._parameterNames.push(a11);
    const i15 = t11.count || 2, s10 = Math.ceil(Math.log2(i15)), o13 = r13._parameterBits;
    let n11 = 0;
    for (; o13[n11] + s10 > 16; ) n11++, n11 >= o13.length && o13.push(0);
    const p9 = o13[n11], m8 = (1 << s10) - 1 << p9;
    o13[n11] += s10, t11.count ? Object.defineProperty(r13, a11, { get() {
      return (this._parameterBits[n11] & m8) >> p9;
    }, set(r14) {
      if (this[a11] !== r14) {
        if (this._key = null, this._parameterBits[n11] = this._parameterBits[n11] & ~m8 | +r14 << p9 & m8, "number" != typeof r14) throw new s(`Configuration value for ${a11} must be a number, got ${typeof r14}`);
        if (null == t11.count) throw new s(`Configuration value for ${a11} must provide a count option`);
      }
    } }) : Object.defineProperty(r13, a11, { get() {
      return !!((this._parameterBits[n11] & m8) >> p9);
    }, set(t12) {
      if (this[a11] !== t12 && (this._key = null, this._parameterBits[n11] = this._parameterBits[n11] & ~m8 | +t12 << p9 & m8, "boolean" != typeof t12)) throw new s(`Configuration value for ${a11} must be boolean, got ${typeof t12}`);
    } });
  };
}

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/InstancedDoubleConfiguration.js
var i13 = class extends a9 {
  constructor() {
    super(...arguments), this.instancedDoublePrecision = false, this.hasModelTransformation = false;
  }
};
r([i12()], i13.prototype, "instancedDoublePrecision", void 0), r([i12()], i13.prototype, "hasModelTransformation", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/DefaultTechniqueConfiguration.js
var a10 = class extends i13 {
  constructor() {
    super(...arguments), this.output = n5.Color, this.oitPass = o6.NONE, this.hasSliceHighlight = true, this.hasSliceInVertexProgram = false, this.bindType = a.Pass, this.writeDepth = true;
  }
};
r([i12({ count: n5.COUNT })], a10.prototype, "output", void 0), r([i12({ count: o6.COUNT })], a10.prototype, "oitPass", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/DefaultMaterialTechniqueConfiguration.js
var c11 = class extends a10 {
  constructor(e10, o13) {
    super(), this.spherical = e10, this.doublePrecisionRequiresObfuscation = o13, this.alphaDiscardMode = i4.Opaque, this.doubleSidedMode = i5.None, this.pbrMode = n6.Disabled, this.cullFace = e3.None, this.normalType = a2.Attribute, this.customDepthTest = n4.Less, this.emissionSource = d2.None, this.hasVertexColors = false, this.hasSymbolColors = false, this.hasVerticalOffset = false, this.hasSlicePlane = false, this.hasSliceHighlight = true, this.hasColorTexture = false, this.hasMetallicRoughnessTexture = false, this.hasOcclusionTexture = false, this.hasNormalTexture = false, this.hasScreenSizePerspective = false, this.hasVertexTangents = false, this.hasOccludees = false, this.hasModelTransformation = false, this.offsetBackfaces = false, this.vvSize = false, this.vvColor = false, this.receiveShadows = false, this.receiveAmbientOcclusion = false, this.textureAlphaPremultiplied = false, this.instanced = false, this.instancedColor = false, this.writeDepth = true, this.transparent = false, this.enableOffset = true, this.terrainDepthTest = false, this.cullAboveTerrain = false, this.snowCover = false, this.hasColorTextureTransform = false, this.hasEmissionTextureTransform = false, this.hasNormalTextureTransform = false, this.hasOcclusionTextureTransform = false, this.hasMetallicRoughnessTextureTransform = false, this.occlusionPass = false, this.hasVvInstancing = true, this.useCustomDTRExponentForWater = false, this.useFillLights = true;
  }
  get textureCoordinateType() {
    return this.hasColorTexture || this.hasMetallicRoughnessTexture || this.emissionSource === d2.Texture || this.hasOcclusionTexture || this.hasNormalTexture ? d.Default : d.None;
  }
  get objectAndLayerIdColorInstanced() {
    return this.instanced;
  }
  get discardInvisibleFragments() {
    return this.transparent;
  }
};
r([i12({ count: i4.COUNT })], c11.prototype, "alphaDiscardMode", void 0), r([i12({ count: i5.COUNT })], c11.prototype, "doubleSidedMode", void 0), r([i12({ count: n6.COUNT })], c11.prototype, "pbrMode", void 0), r([i12({ count: e3.COUNT })], c11.prototype, "cullFace", void 0), r([i12({ count: a2.COUNT })], c11.prototype, "normalType", void 0), r([i12({ count: n4.COUNT })], c11.prototype, "customDepthTest", void 0), r([i12({ count: d2.COUNT })], c11.prototype, "emissionSource", void 0), r([i12()], c11.prototype, "hasVertexColors", void 0), r([i12()], c11.prototype, "hasSymbolColors", void 0), r([i12()], c11.prototype, "hasVerticalOffset", void 0), r([i12()], c11.prototype, "hasSlicePlane", void 0), r([i12()], c11.prototype, "hasSliceHighlight", void 0), r([i12()], c11.prototype, "hasColorTexture", void 0), r([i12()], c11.prototype, "hasMetallicRoughnessTexture", void 0), r([i12()], c11.prototype, "hasOcclusionTexture", void 0), r([i12()], c11.prototype, "hasNormalTexture", void 0), r([i12()], c11.prototype, "hasScreenSizePerspective", void 0), r([i12()], c11.prototype, "hasVertexTangents", void 0), r([i12()], c11.prototype, "hasOccludees", void 0), r([i12()], c11.prototype, "hasModelTransformation", void 0), r([i12()], c11.prototype, "offsetBackfaces", void 0), r([i12()], c11.prototype, "vvSize", void 0), r([i12()], c11.prototype, "vvColor", void 0), r([i12()], c11.prototype, "receiveShadows", void 0), r([i12()], c11.prototype, "receiveAmbientOcclusion", void 0), r([i12()], c11.prototype, "textureAlphaPremultiplied", void 0), r([i12()], c11.prototype, "instanced", void 0), r([i12()], c11.prototype, "instancedColor", void 0), r([i12()], c11.prototype, "writeDepth", void 0), r([i12()], c11.prototype, "transparent", void 0), r([i12()], c11.prototype, "enableOffset", void 0), r([i12()], c11.prototype, "terrainDepthTest", void 0), r([i12()], c11.prototype, "cullAboveTerrain", void 0), r([i12()], c11.prototype, "snowCover", void 0), r([i12()], c11.prototype, "hasColorTextureTransform", void 0), r([i12()], c11.prototype, "hasEmissionTextureTransform", void 0), r([i12()], c11.prototype, "hasNormalTextureTransform", void 0), r([i12()], c11.prototype, "hasOcclusionTextureTransform", void 0), r([i12()], c11.prototype, "hasMetallicRoughnessTextureTransform", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/RealisticTreeTechnique.js
var i14 = class extends k2 {
  constructor(r13, i15, t11) {
    super(r13, i15, t11, new t9(z, () => import("./RealisticTree.glsl-7SYBU56O.js"))), this.type = "RealisticTreeTechnique";
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/DefaultMaterial.js
var B5 = class extends n7 {
  constructor(e10, r13) {
    super(e10, z3), this.materialType = "default", this.supportsEdges = true, this.produces = /* @__PURE__ */ new Map([[A4.OPAQUE_MATERIAL, (e11) => (t6(e11) || o5(e11)) && !this.parameters.transparent], [A4.TRANSPARENT_MATERIAL, (e11) => (t6(e11) || o5(e11)) && this.parameters.transparent && this.parameters.writeDepth], [A4.TRANSPARENT_MATERIAL_WITHOUT_DEPTH, (e11) => (r7(e11) || o5(e11)) && this.parameters.transparent && !this.parameters.writeDepth]]), this._vertexBufferLayout = U4(this.parameters), this._configuration = new c11(r13.spherical, r13.doublePrecisionRequiresObfuscation);
  }
  isVisibleForOutput(e10) {
    return e10 !== n5.Shadow && e10 !== n5.ShadowExcludeHighlight && e10 !== n5.ShadowHighlight || this.parameters.castShadows;
  }
  get visible() {
    const e10 = this.parameters;
    if (e10.layerOpacity < o2) return false;
    const { hasInstancedColor: r13, hasVertexColors: t11, hasSymbolColors: i15, vvColor: s10 } = e10, a11 = r13 || s10 || i15, o13 = "replace" === e10.colorMixMode, n11 = e10.opacity >= o2;
    if (t11 && a11) return o13 || n11;
    const c12 = e10.externalColor && e10.externalColor[3] >= o2;
    return t11 ? o13 ? c12 : n11 : a11 ? o13 || n11 : o13 ? c12 : n11;
  }
  get hasEmissions() {
    return !!this.parameters.emissiveTextureId || !H2(this.parameters.emissiveFactor, _);
  }
  getConfiguration(e10, r13) {
    const t11 = this.parameters, { treeRendering: i15, doubleSided: s10, doubleSidedType: a11 } = t11;
    return this._configuration.output = e10, this._configuration.hasNormalTexture = !i15 && !!t11.normalTextureId, this._configuration.hasColorTexture = !!t11.textureId, this._configuration.hasVertexTangents = !i15 && t11.hasVertexTangents, this._configuration.instanced = t11.isInstanced, this._configuration.instancedDoublePrecision = t11.instancedDoublePrecision, this._configuration.vvSize = !!t11.vvSize, this._configuration.hasVerticalOffset = null != t11.verticalOffset, this._configuration.hasScreenSizePerspective = null != t11.screenSizePerspective, this._configuration.hasSlicePlane = t11.hasSlicePlane, this._configuration.hasSliceHighlight = t11.hasSliceHighlight, this._configuration.alphaDiscardMode = t11.textureAlphaMode, this._configuration.normalType = i15 ? a2.Attribute : t11.normalType, this._configuration.transparent = t11.transparent, this._configuration.writeDepth = t11.writeDepth, null != t11.customDepthTest && (this._configuration.customDepthTest = t11.customDepthTest), this._configuration.hasOccludees = r13.hasOccludees, this._configuration.cullFace = t11.hasSlicePlane ? e3.None : t11.cullFace, this._configuration.terrainDepthTest = r13.terrainDepthTest, this._configuration.cullAboveTerrain = r13.cullAboveTerrain, this._configuration.hasModelTransformation = !i15 && null != t11.modelTransformation, this._configuration.hasVertexColors = t11.hasVertexColors, this._configuration.hasSymbolColors = t11.hasSymbolColors, this._configuration.doubleSidedMode = i15 ? i5.WindingOrder : s10 && "normal" === a11 ? i5.View : s10 && "winding-order" === a11 ? i5.WindingOrder : i5.None, this._configuration.instancedColor = t11.hasInstancedColor, this._configuration.receiveShadows = t11.receiveShadows && t11.receiveShadows, this._configuration.receiveAmbientOcclusion = t11.receiveAmbientOcclusion && null != r13.ssao, this._configuration.vvColor = !!t11.vvColor, this._configuration.textureAlphaPremultiplied = !!t11.textureAlphaPremultiplied, this._configuration.pbrMode = t11.usePBR ? t11.isSchematic ? n6.Schematic : n6.Normal : n6.Disabled, this._configuration.hasMetallicRoughnessTexture = !i15 && !!t11.metallicRoughnessTextureId, this._configuration.emissionSource = i15 ? d2.None : null != t11.emissiveTextureId ? d2.Texture : t11.usePBR ? d2.Value : d2.None, this._configuration.hasOcclusionTexture = !i15 && !!t11.occlusionTextureId, this._configuration.offsetBackfaces = !(!t11.transparent || !t11.offsetTransparentBackfaces), this._configuration.oitPass = r13.oitPass, this._configuration.enableOffset = r13.camera.relativeElevation < A2, this._configuration.snowCover = H5(r13), this._configuration.hasColorTextureTransform = !!t11.colorTextureTransformMatrix, this._configuration.hasNormalTextureTransform = !!t11.normalTextureTransformMatrix, this._configuration.hasEmissionTextureTransform = !!t11.emissiveTextureTransformMatrix, this._configuration.hasOcclusionTextureTransform = !!t11.occlusionTextureTransformMatrix, this._configuration.hasMetallicRoughnessTextureTransform = !!t11.metallicRoughnessTextureTransformMatrix, this._configuration;
  }
  intersect(e10, l9, u14, h7, m8, p9) {
    if (null != this.parameters.verticalOffset) {
      const e11 = u14.camera;
      o3(J, l9[12], l9[13], l9[14]);
      let p10 = null;
      switch (u14.viewingMode) {
        case l4.Global:
          p10 = A(G3, J);
          break;
        case l4.Local:
          p10 = s3(G3, F3);
      }
      let d7 = 0;
      const g5 = c2(Q, J, e11.eye), T6 = r5(g5), x3 = g(g5, g5, 1 / T6);
      let v3 = null;
      this.parameters.screenSizePerspective && (v3 = P(p10, x3)), d7 += i6(e11, T6, this.parameters.verticalOffset, v3 ?? 0, this.parameters.screenSizePerspective), g(p10, p10, d7), N(Y, p10, u14.transform.inverseRotation), h7 = c2(W2, h7, Y), m8 = c2(k3, m8, Y);
    }
    p7(e10, u14, h7, m8, d5(u14.verticalOffset), p9);
  }
  createGLMaterial(e10) {
    return new q6(e10);
  }
  createBufferWriter() {
    return new r12(this._vertexBufferLayout);
  }
};
var q6 = class extends u9 {
  constructor(e10) {
    super({ ...e10, ...e10.material.parameters });
  }
  beginSlot(e10) {
    this._material.setParameters({ receiveShadows: e10.shadowMap.enabled });
    const t11 = this._material.parameters;
    this.updateTexture(t11.textureId);
    const i15 = e10.camera.viewInverseTransposeMatrix;
    return o3(t11.origin, i15[3], i15[7], i15[11]), this._material.setParameters(this.textureBindParameters), this.acquireTechnique(t11.treeRendering ? i14 : k2, e10);
  }
};
var z3 = class extends F2 {
  constructor() {
    super(...arguments), this.initTextureTransparent = false, this.treeRendering = false, this.hasVertexTangents = false;
  }
};
function H5(e10) {
  return null != e10.weather && e10.weatherVisible && "snowy" === e10.weather.type && "enabled" === e10.weather.snowCover;
}
function U4(e10) {
  const r13 = H3().vec3f(e4.POSITION);
  e10.normalType === a2.Compressed ? r13.vec2i16(e4.NORMALCOMPRESSED, { glNormalized: true }) : r13.vec3f(e4.NORMAL), e10.hasVertexTangents && r13.vec4f(e4.TANGENT);
  return (e10.textureId || e10.normalTextureId || e10.metallicRoughnessTextureId || e10.emissiveTextureId || e10.occlusionTextureId) && r13.vec2f(e4.UV0), e10.hasVertexColors && r13.vec4u8(e4.COLOR), e10.hasSymbolColors && r13.vec4u8(e4.SYMBOLCOLOR), e5() && r13.vec4u8(e4.OBJECTANDLAYERIDCOLOR), r13;
}
var W2 = n3();
var k3 = n3();
var F3 = r3(0, 0, 1);
var G3 = n3();
var Y = n3();
var J = n3();
var Q = n3();

export {
  o7 as o,
  o8 as o2,
  p4 as p,
  C2 as C,
  T3 as T,
  i10 as i,
  A4 as A,
  d6 as d,
  p8 as p2,
  B3 as B,
  b2 as b,
  O5 as O,
  S6 as S,
  R6 as R,
  N5 as N,
  i12 as i2,
  a10 as a,
  B5 as B2
};
//# sourceMappingURL=chunk-6Y3EYMFI.js.map
