{
  "version": 3,
  "sources": ["../../@arcgis/core/layers/support/rasterTransforms/IdentityTransform.js", "../../@arcgis/core/layers/support/rasterTransforms/utils.js", "../../@arcgis/core/layers/support/RasterWorker.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.31/esri/copyright.txt for details.\n*/\nimport{_ as r}from\"../../../chunks/tslib.es6.js\";import\"../../../core/Logger.js\";import\"../../../core/has.js\";import\"../../../core/RandomLCG.js\";import\"../../../core/Error.js\";import{enumeration as o}from\"../../../core/accessorSupport/decorators/enumeration.js\";import{subclass as s}from\"../../../core/accessorSupport/decorators/subclass.js\";import t from\"./BaseRasterTransform.js\";var e;let a=e=class extends t{constructor(){super(...arguments),this.type=\"identity\"}clone(){return new e}};r([o({IdentityXform:\"identity\"})],a.prototype,\"type\",void 0),a=e=r([s(\"esri.layers.support.rasterTransforms.IdentityTransform\")],a);const p=a;export{p as default};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.31/esri/copyright.txt for details.\n*/\nimport r from\"./GCSShiftTransform.js\";import t from\"./IdentityTransform.js\";import n from\"./PolynomialTransform.js\";const o={GCSShiftXform:r,IdentityXform:t,PolynomialXform:n},e=Object.keys(o);function f(r){const t=r?.type;return!r||e.includes(t)}function i(r){const t=r?.type;if(!t)return null;const n=o[r?.type];if(n){const t=new n;return t.read(r),t}return null}export{f as isTransformSupported,i as readTransform};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.31/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import r from\"../../geometry/support/GeographicTransformation.js\";import e from\"./PixelBlock.js\";import{decode as t}from\"./rasterFormats/RasterCodec.js\";import{split as s,clipTile as o,mosaic as i,approximateTransform as n,getLocalArithmeticNorthRotations as a}from\"./rasterFunctions/pixelUtils.js\";import{create as l}from\"./rasterFunctions/rasterFunctionHelper.js\";import{requirePE as m,load as c,getProjectionOffsetGrid as f}from\"./rasterFunctions/rasterProjectionHelper.js\";import{computeStatisticsHistograms as p,estimateStatisticsHistograms as u}from\"./rasterFunctions/stretchUtils.js\";import{convertVectorFieldData as S,convertToLocalDirections as d}from\"./rasterFunctions/vectorFieldUtils.js\";import{readTransform as x}from\"./rasterTransforms/utils.js\";import y from\"../../renderers/support/RasterSymbolizer.js\";import{createFlowMesh as O}from\"../../views/2d/engine/flow/dataUtils.js\";import h from\"../../geometry/Extent.js\";import N from\"../../geometry/Point.js\";class J{convertVectorFieldData(r){const t=e.fromJSON(r.pixelBlock),s=S(t,r.type);return Promise.resolve(null!=s?s.toJSON():null)}computeStatisticsHistograms(r){const t=e.fromJSON(r.pixelBlock),s=p(t);return Promise.resolve(s)}async decode(r){const e=await t(r.data,r.options);return e&&e.toJSON()}symbolize(r){r.pixelBlock=e.fromJSON(r.pixelBlock),r.extent=r.extent?h.fromJSON(r.extent):null;const t=this.symbolizer.symbolize(r);return Promise.resolve(null!=t?t.toJSON():null)}async updateSymbolizer(r){this.symbolizer=y.fromJSON(r.symbolizerJSON),r.histograms&&\"rasterStretch\"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=r.histograms)}async updateRasterFunction(r){this.rasterFunction=l(r.rasterFunctionJSON)}async process(r){const t=this.rasterFunction.process({extent:h.fromJSON(r.extent),primaryPixelBlocks:r.primaryPixelBlocks.map((r=>null!=r?e.fromJSON(r):null)),primaryPixelSizes:r.primaryPixelSizes?.map((r=>null!=r?N.fromJSON(r):null)),primaryRasterIds:r.primaryRasterIds});return null!=t?t.toJSON():null}stretch(r){const t=this.symbolizer.simpleStretch(e.fromJSON(r.srcPixelBlock),r.stretchParams);return Promise.resolve(t?.toJSON())}estimateStatisticsHistograms(r){const t=u(e.fromJSON(r.srcPixelBlock));return Promise.resolve(t)}split(r){const t=s(e.fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel??0,!1===r.useBilinear);return t&&t.forEach(((r,e)=>{t.set(e,r?.toJSON())})),Promise.resolve(t)}clipTile(r){const t=e.fromJSON(r.pixelBlock),s=o({...r,pixelBlock:t});return Promise.resolve(s?.toJSON())}async mosaicAndTransform(r){const t=r.srcPixelBlocks.map((r=>r?new e(r):null)),s=i(t,r.srcMosaicSize,{blockWidths:r.blockWidths,alignmentInfo:r.alignmentInfo,clipOffset:r.clipOffset,clipSize:r.clipSize});let o,l=s;return r.coefs&&(l=n(s,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation)),r.projectDirections&&r.gcsGrid&&(o=a(r.destDimension,r.gcsGrid),l=d(l,r.isUV?\"vector-uv\":\"vector-magdir\",o)),{pixelBlock:l?.toJSON(),localNorthDirections:o}}async createFlowMesh(r,e){const t={data:new Float32Array(r.flowData.buffer),mask:new Uint8Array(r.flowData.maskBuffer),width:r.flowData.width,height:r.flowData.height},{vertexData:s,indexData:o}=await O(r.meshType,r.simulationSettings,t,e.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:o.buffer},transferList:[s.buffer,o.buffer]}}async getProjectionOffsetGrid(e){const t=h.fromJSON(e.projectedExtent),s=h.fromJSON(e.srcBufferExtent);let o=null;e.datumTransformationSteps&&(o=new r({steps:e.datumTransformationSteps})),(e.includeGCSGrid||m(t.spatialReference,s.spatialReference,o))&&await c();const i=e.rasterTransform?x(e.rasterTransform):null;return f({...e,projectedExtent:t,srcBufferExtent:s,datumTransformation:o,rasterTransform:i})}}export{J as default};\n"],
  "mappings": "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",
  "names": ["a", "r", "e", "r", "t", "r", "s", "e", "j", "o", "w", "i"]
}
