import {
  $,
  P
} from "./chunk-JGBVBEGF.js";
import "./chunk-JEA2CH67.js";
import "./chunk-FDS5NNQY.js";
import "./chunk-ACRZEGQW.js";
import "./chunk-HJ7SKBLO.js";
import {
  a,
  f,
  l,
  u
} from "./chunk-2DHZIDQK.js";
import "./chunk-H4N5QOMX.js";
import "./chunk-F2LC36UV.js";
import "./chunk-6Y2LNRVP.js";
import "./chunk-VNRDIGVF.js";
import "./chunk-QRJFHPMB.js";
import "./chunk-G6REFQRQ.js";
import "./chunk-Z2DWZ5IF.js";
import "./chunk-X6JBJVM2.js";
import "./chunk-BMGF5ELJ.js";
import "./chunk-JU6MEO4D.js";
import "./chunk-CY5MS6DC.js";
import "./chunk-C6FFJ4QS.js";
import "./chunk-Q4Q32WYV.js";
import "./chunk-A3J7W53Y.js";
import "./chunk-HLF5XJSV.js";
import "./chunk-L6D73M4D.js";
import "./chunk-P5H5PJSC.js";
import "./chunk-H6RIEXAG.js";
import "./chunk-Y6AYXNMP.js";
import "./chunk-6YWQXXBX.js";
import "./chunk-DRBJFCLQ.js";
import "./chunk-7O7KFKCG.js";
import "./chunk-E2X3OBBC.js";
import "./chunk-X7VTUWCX.js";
import "./chunk-QS62R4CH.js";
import "./chunk-VU6O6TFT.js";
import "./chunk-GD4XDYZL.js";
import "./chunk-33ECLFFF.js";
import "./chunk-MV5XBD6C.js";
import "./chunk-L6CCOEVE.js";
import "./chunk-GRW2QIBT.js";
import "./chunk-R2PAF6JT.js";
import "./chunk-6WE7SNQY.js";
import "./chunk-PKLD5YJF.js";
import "./chunk-XKQWTZMW.js";
import "./chunk-A4OFG7JM.js";

// node_modules/@arcgis/core/layers/save/imageryUtils.js
var l2 = "Image Service";
var y = "imagery-layer-save";
var n = "imagery-layer-save-as";
var o = "imagery-tile-layer-save";
var m = "imagery-tile-layer-save-as";
function c(e) {
  var _a;
  if ("imagery" === e.type) return { isValid: true };
  const { raster: t } = e, r = "Function" === (t == null ? void 0 : t.datasetFormat) ? (_a = t.primaryRasters) == null ? void 0 : _a.rasters[0] : t;
  return { isValid: "RasterTileServer" === (r == null ? void 0 : r.datasetFormat) && ("Raster" === r.tileType || "Map" === r.tileType), errorMessage: "imagery tile layer should be created from a tiled image service." };
}
function p(e) {
  const t = e.layerJSON;
  return Promise.resolve(t && Object.keys(t).length ? t : null);
}
async function u2(e, t) {
  const { parsedUrl: l3, title: y2, fullExtent: n2 } = e;
  t.url = l3.path, t.title || (t.title = y2);
  try {
    t.extent = await l(n2);
  } catch {
    t.extent = void 0;
  }
  a(t, f.METADATA), u(t, f.TILED_IMAGERY, "imagery-tile" === e.type);
}
async function g(t, r) {
  const a2 = "imagery" === t.type ? y : o;
  return P({ layer: t, itemType: l2, validateLayer: c, createItemData: p, errorNamePrefix: a2 }, r);
}
async function v(e, r, a2) {
  const i = "imagery" === e.type ? n : m;
  return $({ layer: e, itemType: l2, validateLayer: c, createItemData: p, errorNamePrefix: i, newItem: r, setItemProperties: u2 }, a2);
}
export {
  g as save,
  v as saveAs
};
//# sourceMappingURL=imageryUtils-L4XFDLI3.js.map
