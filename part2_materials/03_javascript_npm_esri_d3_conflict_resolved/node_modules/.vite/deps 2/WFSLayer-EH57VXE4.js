import {
  S as S2,
  W,
  Y,
  v,
  z
} from "./chunk-3AXANK7W.js";
import "./chunk-ZUIEEFUU.js";
import "./chunk-XDJWRN6T.js";
import "./chunk-5PXF5FL6.js";
import "./chunk-CH3XVKUV.js";
import "./chunk-KI5F6KDS.js";
import {
  u as u2,
  y as y4
} from "./chunk-NCJB5REK.js";
import "./chunk-MSUBZ5BW.js";
import "./chunk-E6IUAXXM.js";
import {
  c as c4
} from "./chunk-Y24KYRDB.js";
import "./chunk-BF46TBV5.js";
import "./chunk-H4E2VVPD.js";
import {
  p as p2
} from "./chunk-3SYUQL4E.js";
import "./chunk-XWTALKKJ.js";
import {
  c as c3
} from "./chunk-JWQMRQX4.js";
import "./chunk-24OTECJ5.js";
import {
  s as s3
} from "./chunk-EYETIQ6R.js";
import {
  C,
  n as n2
} from "./chunk-DFLI5RC4.js";
import "./chunk-QYSQ6XPQ.js";
import {
  m as m3,
  u
} from "./chunk-YYZ2CTYE.js";
import "./chunk-HZRXUNDJ.js";
import "./chunk-XKMN3LJN.js";
import "./chunk-2U5JYYSG.js";
import "./chunk-GGPPKSP2.js";
import {
  l as l3
} from "./chunk-EA7CPLTC.js";
import "./chunk-SI5IJ3AZ.js";
import {
  p as p3
} from "./chunk-7ZA6GWGF.js";
import {
  e as e2
} from "./chunk-JU4Z6UVP.js";
import "./chunk-JHXGQ3AW.js";
import "./chunk-MR727DXB.js";
import "./chunk-VLKWWBLY.js";
import "./chunk-GNY4KZ34.js";
import "./chunk-WPERPIJF.js";
import "./chunk-5IA763KB.js";
import "./chunk-QKS6PIY6.js";
import "./chunk-R5BTSPWT.js";
import "./chunk-Z2L6EED4.js";
import "./chunk-43W2AR4R.js";
import "./chunk-X5EOLPIE.js";
import "./chunk-VNPGSD2C.js";
import "./chunk-AFULL6KA.js";
import "./chunk-URFLFG2R.js";
import {
  d as d2
} from "./chunk-CE7WVJQV.js";
import {
  f as f2
} from "./chunk-LCFK6PEB.js";
import "./chunk-GJTB7YCT.js";
import "./chunk-LQEYS467.js";
import "./chunk-A66MNK5C.js";
import "./chunk-EPAKCM4A.js";
import "./chunk-RCGJPJRB.js";
import "./chunk-5CRXWQ3Y.js";
import "./chunk-G54IOEGF.js";
import {
  j
} from "./chunk-F3W2DG3D.js";
import {
  l
} from "./chunk-YMJZWW2N.js";
import "./chunk-7Q4JSL7R.js";
import "./chunk-VBJTBJYL.js";
import {
  t
} from "./chunk-ES2OYM5K.js";
import {
  b as b3
} from "./chunk-JXPOROPE.js";
import {
  b as b2,
  c as c2,
  d,
  l as l2,
  p,
  s as s2,
  y as y3
} from "./chunk-OPBXQTOC.js";
import "./chunk-DKMSVKV3.js";
import "./chunk-YIIXBP6I.js";
import {
  S
} from "./chunk-LN6VH2LB.js";
import "./chunk-GZFJKWTS.js";
import "./chunk-2DHZIDQK.js";
import "./chunk-EFVIMN4N.js";
import {
  p as p5
} from "./chunk-SW3IBIJ7.js";
import "./chunk-E54MA7AH.js";
import "./chunk-6TU4HBID.js";
import {
  b
} from "./chunk-WGIZLWW7.js";
import "./chunk-PUOCGOJB.js";
import "./chunk-XQH2QDB2.js";
import "./chunk-LPNAPHOF.js";
import "./chunk-DBQLTBDH.js";
import {
  y as y2
} from "./chunk-AMH7OVBF.js";
import "./chunk-SUZN3TAH.js";
import "./chunk-VILGTHTP.js";
import {
  q
} from "./chunk-ATEWWVHG.js";
import "./chunk-LEOFRCUR.js";
import "./chunk-CP4GPQHD.js";
import "./chunk-IZSNXKMJ.js";
import "./chunk-IOKAACTA.js";
import "./chunk-VFTH6C2E.js";
import "./chunk-M5RSIRGD.js";
import "./chunk-UYSPJCCV.js";
import "./chunk-SMFCDOAJ.js";
import {
  f
} from "./chunk-2HEBE37N.js";
import "./chunk-5A4G4OVM.js";
import "./chunk-MGMVRMXQ.js";
import "./chunk-GNWAZIVF.js";
import "./chunk-2TEGRXBS.js";
import "./chunk-44C2A72D.js";
import "./chunk-DIKY6MBW.js";
import "./chunk-YVSEBNS4.js";
import "./chunk-GGCWKF4X.js";
import {
  g as g2,
  p as p4
} from "./chunk-6D5XULXX.js";
import "./chunk-445IB4DS.js";
import "./chunk-Y2XCZQML.js";
import "./chunk-SW4DFX7N.js";
import {
  o
} from "./chunk-2PK57UYA.js";
import "./chunk-F26LCWNQ.js";
import "./chunk-H4N5QOMX.js";
import "./chunk-F2LC36UV.js";
import "./chunk-6Y2LNRVP.js";
import "./chunk-VNRDIGVF.js";
import "./chunk-QRJFHPMB.js";
import "./chunk-G6REFQRQ.js";
import "./chunk-Z2DWZ5IF.js";
import "./chunk-TDZ623HP.js";
import "./chunk-6RLUKSNK.js";
import "./chunk-VEUN2EF3.js";
import "./chunk-UN4ISSP7.js";
import "./chunk-E2RPCJOE.js";
import "./chunk-TKY5RBM3.js";
import "./chunk-NHJGPXZH.js";
import {
  c,
  i
} from "./chunk-JS7R723S.js";
import "./chunk-SIQNRYEG.js";
import "./chunk-TTDEVHSF.js";
import "./chunk-QSRFVAIF.js";
import "./chunk-X6JBJVM2.js";
import "./chunk-Q7TEBZSN.js";
import "./chunk-BMGF5ELJ.js";
import "./chunk-JU6MEO4D.js";
import {
  m as m2
} from "./chunk-CY5MS6DC.js";
import "./chunk-C6FFJ4QS.js";
import "./chunk-Q4Q32WYV.js";
import {
  w
} from "./chunk-A3J7W53Y.js";
import "./chunk-HLF5XJSV.js";
import {
  g,
  r as r2
} from "./chunk-L6D73M4D.js";
import "./chunk-P5H5PJSC.js";
import "./chunk-H6RIEXAG.js";
import "./chunk-Y6AYXNMP.js";
import "./chunk-6YWQXXBX.js";
import "./chunk-DRBJFCLQ.js";
import "./chunk-7O7KFKCG.js";
import "./chunk-E2X3OBBC.js";
import "./chunk-X7VTUWCX.js";
import {
  I
} from "./chunk-QS62R4CH.js";
import "./chunk-VU6O6TFT.js";
import {
  m
} from "./chunk-GD4XDYZL.js";
import {
  a4 as a,
  x
} from "./chunk-33ECLFFF.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import "./chunk-L6CCOEVE.js";
import {
  k,
  y
} from "./chunk-GRW2QIBT.js";
import "./chunk-R2PAF6JT.js";
import "./chunk-6WE7SNQY.js";
import {
  e,
  n2 as n,
  s2 as s
} from "./chunk-PKLD5YJF.js";
import {
  has
} from "./chunk-XKQWTZMW.js";
import "./chunk-A4OFG7JM.js";

// node_modules/@arcgis/core/layers/graphics/sources/WFSSource.js
var x2 = class extends m2 {
  constructor() {
    super(...arguments), this._connection = null, this._workerHandler = null, this.capabilities = y4(false, false), this.type = "wfs", this.refresh = k(async () => {
      await this.load();
      const e3 = { customParameters: this.layer.customParameters, maxRecordCount: this.layer.maxRecordCount, maxTotalRecordCount: this.layer.maxTotalRecordCount, maxPageCount: this.layer.maxPageCount }, { extent: t2 } = await this._workerHandler.refresh(e3);
      return t2 && (this.sourceJSON.extent = t2), { dataChanged: true, updates: { extent: this.sourceJSON.extent } };
    });
  }
  load(e3) {
    const t2 = null != e3 ? e3.signal : null;
    return this.addResolvingPromise(this._startWorker({ signal: t2 })), Promise.resolve(this);
  }
  destroy() {
    var _a;
    (_a = this._connection) == null ? void 0 : _a.close(), this._connection = null, this._workerHandler = null;
  }
  async openPorts() {
    return await this.load(), this._connection.openPorts();
  }
  async queryFeatures(e3, t2 = {}) {
    const r3 = await this.queryFeaturesJSON(e3, t2);
    return d2.fromJSON(r3);
  }
  async queryFeaturesJSON(e3, t2 = {}) {
    return await this.load(t2), this._workerHandler.queryFeatures(e3 ? e3.toJSON() : void 0, t2);
  }
  async queryFeatureCount(e3, t2 = {}) {
    return await this.load(t2), this._workerHandler.queryFeatureCount(e3 ? e3.toJSON() : void 0, t2);
  }
  async queryObjectIds(e3, t2 = {}) {
    return await this.load(t2), this._workerHandler.queryObjectIds(e3 ? e3.toJSON() : void 0, t2);
  }
  async queryExtent(e3, t2 = {}) {
    await this.load(t2);
    const r3 = await this._workerHandler.queryExtent(e3 ? e3.toJSON() : void 0, t2);
    return { count: r3.count, extent: w.fromJSON(r3.extent) };
  }
  async querySnapping(e3, t2 = {}) {
    return await this.load(t2), this._workerHandler.querySnapping(e3, t2);
  }
  async _createLoadOptions(e3) {
    var _a, _b;
    const { url: r3, customParameters: o2, name: a2, namespaceUri: s4, fields: i2, geometryType: n3, maxRecordCount: l4, maxPageCount: u3, maxTotalRecordCount: p6, swapXY: h } = this.layer, w2 = "defaults" === this.layer.originOf("spatialReference") ? void 0 : this.layer.spatialReference;
    if (!r3) throw new s("wfs-layer:missing-url", "WFSLayer must be created with a url");
    this.wfsCapabilities || (this.wfsCapabilities = await v(r3, { customParameters: o2, ...e3 }));
    const g3 = ["fields", "geometryType", "name", "namespaceUri", "swapXY"].some((e4) => null == this.layer[e4]), x3 = g3 ? await W(this.wfsCapabilities, a2, s4, { spatialReference: w2, customParameters: o2, signal: e3 == null ? void 0 : e3.signal }) : { ...z(i2 ?? []), geometryType: n3, name: a2, namespaceUri: s4, spatialReference: w2, swapXY: h }, F = Y(this.wfsCapabilities.readFeatureTypes(), x3.name, x3.namespaceUri), S3 = o.toJSON(x3.geometryType), { operations: j2 } = this.wfsCapabilities, C2 = j2.GetFeature.url, O = j2.GetFeature.outputFormat;
    return { customParameters: o2, featureType: F, fields: ((_a = x3.fields) == null ? void 0 : _a.map((e4) => e4.toJSON())) ?? [], geometryField: x3.geometryField, geometryType: S3, getFeatureUrl: C2, getFeatureOutputFormat: O, maxRecordCount: l4, maxPageCount: u3, maxTotalRecordCount: p6, objectIdField: x3.objectIdField, spatialReference: (_b = x3.spatialReference) == null ? void 0 : _b.toJSON(), swapXY: !!x3.swapXY };
  }
  async _startWorker(e3) {
    const [t2, r3] = await y([this._createLoadOptions(e3), p5("WFSSourceWorker", { ...e3, strategy: has("feature-layers-workers") ? "dedicated" : "local", registryTarget: this })]), a2 = t2.error || r3.error || null, n3 = r3.value || null;
    if (a2) throw n3 && n3.close(), a2;
    const l4 = t2.value;
    this._connection = r3.value, this._workerHandler = this._connection.createInvokeProxy();
    const c5 = await this._workerHandler.load(l4, e3);
    for (const s4 of c5.warnings) n.getLogger(this.layer).warn("#load()", `${s4.message} (title: '${this.layer.title || "no title"}', id: '${this.layer.id ?? "no id"}')`, { warning: s4 });
    this.sourceJSON = { dateFieldsTimeReference: { timeZoneIANA: i }, extent: c5.extent, fields: l4.fields, geometryType: l4.geometryType, objectIdField: l4.objectIdField, geometryField: l4.geometryField, drawingInfo: u2(l4.geometryType), name: l4.featureType.title, wfsInfo: { name: l4.featureType.name, featureUrl: l4.getFeatureUrl, maxFeatures: l4.maxRecordCount, swapXY: l4.swapXY, supportedSpatialReferences: l4.featureType.supportedSpatialReferences, version: "2.0.0", wfsNamespace: l4.featureType.namespaceUri } };
  }
};
r([m()], x2.prototype, "capabilities", void 0), r([m({ constructOnly: true })], x2.prototype, "layer", void 0), r([m()], x2.prototype, "sourceJSON", void 0), r([m()], x2.prototype, "type", void 0), r([m()], x2.prototype, "wfsCapabilities", void 0), x2 = r([a("esri.layers.graphics.sources.WFSSource")], x2);

// node_modules/@arcgis/core/layers/WFSLayer.js
var B;
var G = s3();
var J = B = class extends p2(e2(c4(c3(l(l3(f2(t(b3(j(S(f))))))))))) {
  static fromWFSLayerInfo(e3) {
    const { customParameters: r3, fields: t2, geometryField: i2, geometryType: o2, name: s4, namespaceUri: n3, objectIdField: p6, spatialReference: a2, swapXY: l4, url: d3, wfsCapabilities: m4 } = e3;
    return new B({ customParameters: r3, fields: t2, geometryField: i2, geometryType: o2, name: s4, namespaceUri: n3, objectIdField: p6, spatialReference: a2, swapXY: l4, url: d3, wfsCapabilities: m4 });
  }
  constructor(e3) {
    super(e3), this.copyright = null, this.customParameters = null, this.dateFieldsTimeZone = null, this.definitionExpression = null, this.displayField = null, this.elevationInfo = null, this.featureUrl = void 0, this.fields = null, this.fieldsIndex = null, this.fullExtent = null, this.geometryType = null, this.labelsVisible = true, this.labelingInfo = null, this.legendEnabled = true, this.objectIdField = null, this.operationalLayerType = "WFS", this.maxRecordCount = 3e3, this.maxPageCount = 10, this.maxTotalRecordCount = 2e5, this.mode = 0, this.name = null, this.namespaceUri = null, this.outFields = null, this.popupEnabled = true, this.popupTemplate = null, this.screenSizePerspectiveEnabled = true, this.source = new x2({ layer: this }), this.spatialReference = g.WGS84, this.spatialReferences = [4326], this.swapXY = void 0, this.title = "WFS", this.type = "wfs", this.url = null, this.version = void 0;
  }
  destroy() {
    var _a;
    (_a = this.source) == null ? void 0 : _a.destroy();
  }
  load(e3) {
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["WFS"] }, e3).then(() => this.source.load(e3)).then(() => {
      this.read(this.source.sourceJSON, { origin: "service", url: this.parsedUrl }), this.revert(["objectIdField", "fields", "timeInfo", "spatialReference", "name", "namespaceUri"], "service"), p4(this.renderer, this.fieldsIndex), g2(this.timeInfo, this.fieldsIndex);
    })), Promise.resolve(this);
  }
  get capabilities() {
    var _a;
    return (_a = this.source) == null ? void 0 : _a.capabilities;
  }
  get createQueryVersion() {
    return this.commitProperty("definitionExpression"), this.commitProperty("timeExtent"), this.commitProperty("timeOffset"), this.commitProperty("geometryType"), this.commitProperty("capabilities"), (this._get("createQueryVersion") || 0) + 1;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  writeFields(e3, r3, t2) {
    const i2 = e3.filter((e4) => e4.name !== S2);
    this.geometryField && i2.unshift(new y2({ name: this.geometryField, alias: this.geometryField, type: "geometry" })), e(t2, i2.map((e4) => e4.toJSON()), r3);
  }
  get parsedUrl() {
    return I(this.url);
  }
  set renderer(e3) {
    p4(e3, this.fieldsIndex), this._set("renderer", e3);
  }
  get wfsCapabilities() {
    var _a;
    return (_a = this.source) == null ? void 0 : _a.wfsCapabilities;
  }
  set wfsCapabilities(e3) {
    this.source && (this.source.wfsCapabilities = e3);
  }
  createPopupTemplate(e3) {
    return p3(this, e3);
  }
  createQuery() {
    const e3 = new b({ returnGeometry: true, outFields: ["*"], where: this.definitionExpression || "1=1" }), { timeOffset: r3, timeExtent: t2 } = this;
    return e3.timeExtent = null != r3 && null != t2 ? t2.offset(-r3.value, r3.unit) : t2 || null, e3;
  }
  getFieldDomain(e3, r3) {
    var _a;
    return (_a = this.getField(e3)) == null ? void 0 : _a.domain;
  }
  getField(e3) {
    var _a;
    return (_a = this.fieldsIndex) == null ? void 0 : _a.get(e3);
  }
  queryFeatures(e3, r3) {
    return this.load().then(() => this.source.queryFeatures(b.from(e3) || this.createQuery(), r3)).then((e4) => {
      if (e4 == null ? void 0 : e4.features) for (const r4 of e4.features) r4.layer = r4.sourceLayer = this;
      return e4;
    });
  }
  queryObjectIds(e3, r3) {
    return this.load().then(() => this.source.queryObjectIds(b.from(e3) || this.createQuery(), r3));
  }
  queryFeatureCount(e3, r3) {
    return this.load().then(() => this.source.queryFeatureCount(b.from(e3) || this.createQuery(), r3));
  }
  queryExtent(e3, r3) {
    return this.load().then(() => this.source.queryExtent(b.from(e3) || this.createQuery(), r3));
  }
  async hasDataChanged() {
    try {
      const { dataChanged: e3, updates: r3 } = await this.source.refresh();
      return null != r3 && this.read(r3, { origin: "service", url: this.parsedUrl, ignoreDefaults: true }), e3;
    } catch {
    }
    return false;
  }
};
r([m({ readOnly: true })], J.prototype, "capabilities", null), r([m({ type: String })], J.prototype, "copyright", void 0), r([m({ readOnly: true })], J.prototype, "createQueryVersion", null), r([m({ json: { name: "wfsInfo.customParameters", write: { overridePolicy: (e3) => ({ enabled: !!(e3 && Object.keys(e3).length > 0), ignoreOrigin: true }) } } })], J.prototype, "customParameters", void 0), r([m(c("dateFieldsTimeReference"))], J.prototype, "dateFieldsTimeZone", void 0), r([m({ readOnly: true })], J.prototype, "defaultPopupTemplate", null), r([m({ type: String, json: { name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], J.prototype, "definitionExpression", void 0), r([m({ type: String })], J.prototype, "displayField", void 0), r([m(c2)], J.prototype, "elevationInfo", void 0), r([m({ type: String, readOnly: true, json: { name: "wfsInfo.featureUrl", write: { ignoreOrigin: true, isRequired: true } } })], J.prototype, "featureUrl", void 0), r([m({ type: [y2], json: { name: "layerDefinition.fields", write: { ignoreOrigin: true, isRequired: true }, origins: { service: { name: "fields" } } } })], J.prototype, "fields", void 0), r([r2("fields")], J.prototype, "writeFields", null), r([m(G.fieldsIndex)], J.prototype, "fieldsIndex", void 0), r([m({ type: w, json: { name: "extent" } })], J.prototype, "fullExtent", void 0), r([m()], J.prototype, "geometryField", void 0), r([m({ type: String, json: { read: { source: "layerDefinition.geometryType", reader: o.read }, write: { target: "layerDefinition.geometryType", writer: o.write, ignoreOrigin: true }, origins: { service: { read: o.read } } } })], J.prototype, "geometryType", void 0), r([m({ type: String })], J.prototype, "id", void 0), r([m(p)], J.prototype, "labelsVisible", void 0), r([m({ type: [C], json: { name: "layerDefinition.drawingInfo.labelingInfo", read: { reader: n2 }, write: true } })], J.prototype, "labelingInfo", void 0), r([m(d)], J.prototype, "legendEnabled", void 0), r([m({ type: ["show", "hide"] })], J.prototype, "listMode", void 0), r([m({ type: String })], J.prototype, "objectIdField", void 0), r([m({ type: ["WFS"] })], J.prototype, "operationalLayerType", void 0), r([m({ type: x, json: { name: "wfsInfo.maxFeatures", write: { ignoreOrigin: true, isRequired: true } } })], J.prototype, "maxRecordCount", void 0), r([m({ type: x })], J.prototype, "maxPageCount", void 0), r([m({ type: x })], J.prototype, "maxTotalRecordCount", void 0), r([m({ type: [0], readOnly: true, json: { origins: { "web-map": { write: { ignoreOrigin: true, isRequired: true } } } } })], J.prototype, "mode", void 0), r([m({ type: String, json: { name: "wfsInfo.name", write: { ignoreOrigin: true, isRequired: true } } })], J.prototype, "name", void 0), r([m({ type: String, json: { name: "wfsInfo.wfsNamespace", write: { ignoreOrigin: true, isRequired: true } } })], J.prototype, "namespaceUri", void 0), r([m(b2)], J.prototype, "opacity", void 0), r([m(G.outFields)], J.prototype, "outFields", void 0), r([m({ readOnly: true })], J.prototype, "parsedUrl", null), r([m(l2)], J.prototype, "popupEnabled", void 0), r([m({ type: q, json: { name: "popupInfo", write: true } })], J.prototype, "popupTemplate", void 0), r([m({ types: m3, json: { origins: { service: { name: "drawingInfo.renderer" }, "web-scene": { types: u, name: "layerDefinition.drawingInfo.renderer", write: true } }, name: "layerDefinition.drawingInfo.renderer", write: { ignoreOrigin: true } } })], J.prototype, "renderer", null), r([m(s2)], J.prototype, "screenSizePerspectiveEnabled", void 0), r([m({ readOnly: true })], J.prototype, "source", void 0), r([m({ type: g, json: { name: "layerDefinition.spatialReference", write: { ignoreOrigin: true, isRequired: true }, origins: { service: { name: "extent.spatialReference" } } } })], J.prototype, "spatialReference", void 0), r([m({ readOnly: true, type: [x], json: { name: "wfsInfo.supportedSpatialReferences", write: { ignoreOrigin: true, isRequired: true } } })], J.prototype, "spatialReferences", void 0), r([m({ type: Boolean, value: false, json: { name: "wfsInfo.swapXY", write: { ignoreOrigin: true, isRequired: true } } })], J.prototype, "swapXY", void 0), r([m({ json: { write: { ignoreOrigin: true, isRequired: true }, origins: { service: { name: "name" } } } })], J.prototype, "title", void 0), r([m({ json: { read: false }, readOnly: true })], J.prototype, "type", void 0), r([m(y3)], J.prototype, "url", void 0), r([m({ type: String, readOnly: true, json: { name: "wfsInfo.version", write: { ignoreOrigin: true, isRequired: true } } })], J.prototype, "version", void 0), r([m()], J.prototype, "wfsCapabilities", null), J = B = r([a("esri.layers.WFSLayer")], J);
var M = J;
export {
  M as default
};
//# sourceMappingURL=WFSLayer-EH57VXE4.js.map
