import {
  R
} from "./chunk-27FUTNYZ.js";
import {
  r as r2
} from "./chunk-BURNMHZB.js";
import {
  h
} from "./chunk-LF6ABEJF.js";
import "./chunk-GYMOXI76.js";
import {
  F
} from "./chunk-LH2VBN6X.js";
import {
  i as i2
} from "./chunk-JCJSNEEC.js";
import "./chunk-5ZJ2MCRU.js";
import "./chunk-OBWNWUWS.js";
import "./chunk-2JZHLJXP.js";
import {
  _
} from "./chunk-6MGQFUK2.js";
import {
  a as a2
} from "./chunk-LXHP4EAG.js";
import "./chunk-XSZGPGLB.js";
import {
  i
} from "./chunk-Y4I3KFRX.js";
import "./chunk-CGJR3XCF.js";
import {
  j,
  y as y2
} from "./chunk-KVO35ODJ.js";
import "./chunk-O2HBAYVG.js";
import "./chunk-FKL5AVF4.js";
import "./chunk-CKPBZSTT.js";
import "./chunk-3T3LUDWR.js";
import "./chunk-SZ3BUBIG.js";
import "./chunk-JI3JMSDL.js";
import "./chunk-J3GKRP7Y.js";
import "./chunk-Q3K5MAUZ.js";
import "./chunk-KJNFPIQW.js";
import "./chunk-2XVRGGEF.js";
import "./chunk-DPVSO6BH.js";
import "./chunk-6TRZLPPJ.js";
import "./chunk-U6IFI7EK.js";
import "./chunk-MCHNAU6L.js";
import "./chunk-MYNRH67A.js";
import "./chunk-JMY2H33H.js";
import "./chunk-DP4BKMXB.js";
import "./chunk-ZFCZ2Q23.js";
import "./chunk-Q4J5AN2X.js";
import "./chunk-OJRG2YGM.js";
import "./chunk-VBS2Y7KE.js";
import "./chunk-HCAIFU2M.js";
import "./chunk-AHZHHHCW.js";
import {
  y
} from "./chunk-JBGLCDCD.js";
import "./chunk-PAS43ZQC.js";
import "./chunk-DPEZCSRY.js";
import "./chunk-KBZZPZL2.js";
import "./chunk-O75V7CSP.js";
import "./chunk-RSF7AFW5.js";
import "./chunk-C2RS46RL.js";
import "./chunk-NML2U2OQ.js";
import "./chunk-HB2JTNV2.js";
import "./chunk-N42IF4WX.js";
import "./chunk-BLBULF2O.js";
import "./chunk-JPQIRBN6.js";
import "./chunk-CH3XVKUV.js";
import "./chunk-KI5F6KDS.js";
import "./chunk-XJHQ5ZJ7.js";
import "./chunk-BXIXSFGX.js";
import "./chunk-HACIIBEF.js";
import "./chunk-ARQ76THZ.js";
import "./chunk-MBR7IVUG.js";
import "./chunk-TRMW5XQP.js";
import "./chunk-HBU7EMDX.js";
import "./chunk-JRUJALSE.js";
import "./chunk-KDUYQUT4.js";
import "./chunk-O67P2KE3.js";
import "./chunk-73FHIZIF.js";
import "./chunk-ICIPRMPO.js";
import "./chunk-NEDBRPQY.js";
import "./chunk-EZCH3ZAJ.js";
import "./chunk-QLRZN73K.js";
import "./chunk-CGJUTDVJ.js";
import {
  c
} from "./chunk-JMJOGITH.js";
import "./chunk-QEJMJI2R.js";
import "./chunk-EHD5KM2T.js";
import "./chunk-AEKV7TWM.js";
import "./chunk-QJXYURT2.js";
import "./chunk-JUN5XSQC.js";
import "./chunk-MCZMPI2A.js";
import "./chunk-KV3S4QI2.js";
import "./chunk-ECMDQ4LS.js";
import "./chunk-D6FJTDNK.js";
import "./chunk-LP6TMAPE.js";
import "./chunk-RENLZYKC.js";
import "./chunk-5PCP47ZJ.js";
import "./chunk-IYJHGZBJ.js";
import "./chunk-IJO7BOFI.js";
import "./chunk-NGQEHRBA.js";
import "./chunk-QYSQ6XPQ.js";
import "./chunk-HZRXUNDJ.js";
import "./chunk-2U5JYYSG.js";
import "./chunk-GGPPKSP2.js";
import "./chunk-MR727DXB.js";
import "./chunk-VLKWWBLY.js";
import "./chunk-GNY4KZ34.js";
import "./chunk-43W2AR4R.js";
import "./chunk-AFULL6KA.js";
import "./chunk-URFLFG2R.js";
import "./chunk-A66MNK5C.js";
import "./chunk-EPAKCM4A.js";
import "./chunk-VBJTBJYL.js";
import "./chunk-GZFJKWTS.js";
import "./chunk-EFVIMN4N.js";
import "./chunk-HFPXZJAJ.js";
import "./chunk-6TU4HBID.js";
import "./chunk-WGIZLWW7.js";
import "./chunk-PUOCGOJB.js";
import "./chunk-XQH2QDB2.js";
import "./chunk-DBQLTBDH.js";
import "./chunk-AMH7OVBF.js";
import "./chunk-SUZN3TAH.js";
import "./chunk-LXJGKQ4D.js";
import "./chunk-VILGTHTP.js";
import "./chunk-ATEWWVHG.js";
import "./chunk-LEOFRCUR.js";
import "./chunk-CP4GPQHD.js";
import "./chunk-IZSNXKMJ.js";
import "./chunk-IOKAACTA.js";
import "./chunk-VFTH6C2E.js";
import "./chunk-M5RSIRGD.js";
import "./chunk-D2JPDRZZ.js";
import "./chunk-UYSPJCCV.js";
import "./chunk-SMFCDOAJ.js";
import "./chunk-5A4G4OVM.js";
import "./chunk-MGMVRMXQ.js";
import "./chunk-GNWAZIVF.js";
import "./chunk-2TEGRXBS.js";
import "./chunk-44C2A72D.js";
import "./chunk-DIKY6MBW.js";
import "./chunk-YVSEBNS4.js";
import "./chunk-GGCWKF4X.js";
import "./chunk-6D5XULXX.js";
import "./chunk-445IB4DS.js";
import "./chunk-Y2XCZQML.js";
import "./chunk-SW4DFX7N.js";
import "./chunk-2PK57UYA.js";
import "./chunk-F26LCWNQ.js";
import "./chunk-H4N5QOMX.js";
import "./chunk-F2LC36UV.js";
import "./chunk-6Y2LNRVP.js";
import "./chunk-VNRDIGVF.js";
import "./chunk-QRJFHPMB.js";
import "./chunk-G6REFQRQ.js";
import "./chunk-Z2DWZ5IF.js";
import "./chunk-UN4ISSP7.js";
import "./chunk-E2RPCJOE.js";
import {
  d
} from "./chunk-TKY5RBM3.js";
import "./chunk-NHJGPXZH.js";
import "./chunk-JS7R723S.js";
import "./chunk-SIQNRYEG.js";
import "./chunk-TTDEVHSF.js";
import "./chunk-QSRFVAIF.js";
import "./chunk-X6JBJVM2.js";
import "./chunk-Q7TEBZSN.js";
import "./chunk-JU6MEO4D.js";
import "./chunk-CY5MS6DC.js";
import "./chunk-C6FFJ4QS.js";
import "./chunk-Q4Q32WYV.js";
import "./chunk-A3J7W53Y.js";
import "./chunk-HLF5XJSV.js";
import "./chunk-L6D73M4D.js";
import "./chunk-P5H5PJSC.js";
import "./chunk-H6RIEXAG.js";
import "./chunk-Y6AYXNMP.js";
import "./chunk-6YWQXXBX.js";
import "./chunk-DRBJFCLQ.js";
import "./chunk-7O7KFKCG.js";
import "./chunk-E2X3OBBC.js";
import "./chunk-X7VTUWCX.js";
import "./chunk-QS62R4CH.js";
import "./chunk-VU6O6TFT.js";
import {
  m
} from "./chunk-GD4XDYZL.js";
import {
  a4 as a
} from "./chunk-33ECLFFF.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import "./chunk-L6CCOEVE.js";
import {
  b
} from "./chunk-GRW2QIBT.js";
import "./chunk-R2PAF6JT.js";
import "./chunk-6WE7SNQY.js";
import {
  n2 as n
} from "./chunk-PKLD5YJF.js";
import "./chunk-XKQWTZMW.js";
import "./chunk-A4OFG7JM.js";

// node_modules/@arcgis/core/views/layers/MapImageLayerView.js
var i3 = (i4) => {
  let p = class extends i4 {
    initialize() {
      this.exportImageParameters = new y({ layer: this.layer });
    }
    destroy() {
      this.exportImageParameters.destroy(), this.exportImageParameters = null;
    }
    get floors() {
      var _a;
      return ((_a = this.view) == null ? void 0 : _a.floors) ?? null;
    }
    get exportImageVersion() {
      var _a;
      return (_a = this.exportImageParameters) == null ? void 0 : _a.commitProperty("version"), this.commitProperty("timeExtent"), this.commitProperty("floors"), (this._get("exportImageVersion") || 0) + 1;
    }
    get timeExtent() {
      var _a;
      return i2(this.layer, (_a = this.view) == null ? void 0 : _a.timeExtent, this._get("timeExtent"));
    }
    canResume() {
      var _a;
      return !!super.canResume() && !((_a = this.timeExtent) == null ? void 0 : _a.isEmpty);
    }
  };
  return r([m()], p.prototype, "exportImageParameters", void 0), r([m({ readOnly: true })], p.prototype, "floors", null), r([m({ readOnly: true })], p.prototype, "exportImageVersion", null), r([m()], p.prototype, "layer", void 0), r([m()], p.prototype, "suspended", void 0), r([m({ readOnly: true })], p.prototype, "timeExtent", null), p = r([a("esri.views.layers.MapImageLayerView")], p), p;
};

// node_modules/@arcgis/core/views/2d/layers/MapImageLayerView2D.js
var y3 = class extends i3(i(j(y2))) {
  constructor() {
    super(...arguments), this._highlightGraphics = new c(), this._updateHash = "";
  }
  fetchPopupFeaturesAtLocation(t, e) {
    return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t, e);
  }
  update(t) {
    const r3 = `${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;
    this._updateHash !== r3 && (this._updateHash = r3, this.strategy.update(t).catch((t2) => {
      b(t2) || n.getLogger(this).error(t2);
    }), t.stationary && this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)), this._highlightView.processUpdate(t);
  }
  attach() {
    const { imageMaxWidth: t, imageMaxHeight: e, version: i4 } = this.layer, s = i4 >= 10.3, a3 = i4 >= 10;
    this._bitmapContainer = new a2(), this.container.addChild(this._bitmapContainer), this._highlightView = new F({ view: this.view, graphics: this._highlightGraphics, requestUpdateCallback: () => this.requestUpdate(), container: new h(this.view.featuresTilingScheme), defaultPointSymbolEnabled: false }), this.container.addChild(this._highlightView.container), this._popupHighlightHelper = new R({ createFetchPopupFeaturesQueryGeometry: (t2, e2) => r2(t2, e2, this.view), highlightGraphics: this._highlightGraphics, highlightGraphicUpdated: (t2, e2) => {
      this._highlightView.graphicUpdateHandler({ graphic: t2, property: e2 });
    }, layerView: this, updatingHandles: this._updatingHandles }), this.strategy = new _({ container: this._bitmapContainer, fetchSource: this.fetchImageBitmap.bind(this), requestUpdate: this.requestUpdate.bind(this), imageMaxWidth: t, imageMaxHeight: e, imageRotationSupported: s, imageNormalizationSupported: a3, hidpi: true }), this.addAttachHandles(d(() => this.exportImageVersion, () => this.requestUpdate())), this.requestUpdate();
  }
  detach() {
    this.strategy.destroy(), this.container.removeAllChildren(), this._bitmapContainer.removeAllChildren(), this._highlightView.destroy(), this._popupHighlightHelper.destroy();
  }
  viewChange() {
  }
  moveEnd() {
    this.requestUpdate();
  }
  supportsSpatialReference(t) {
    return this.layer.serviceSupportsSpatialReference(t);
  }
  async doRefresh() {
    this._updateHash = "", this.requestUpdate();
  }
  isUpdating() {
    return this.strategy.updating || this.updateRequested;
  }
  fetchImage(t, e, i4, r3) {
    return this.layer.fetchImage(t, e, i4, { timeExtent: this.timeExtent, floors: this.floors, ...r3 });
  }
  fetchImageBitmap(t, e, i4, r3) {
    return this.layer.fetchImageBitmap(t, e, i4, { timeExtent: this.timeExtent, floors: this.floors, ...r3 });
  }
  highlight(t) {
    return this._popupHighlightHelper.highlight(t);
  }
};
r([m()], y3.prototype, "strategy", void 0), r([m()], y3.prototype, "updating", void 0), y3 = r([a("esri.views.2d.layers.MapImageLayerView2D")], y3);
var w = y3;
export {
  w as default
};
//# sourceMappingURL=MapImageLayerView2D-UKH6LH7I.js.map
