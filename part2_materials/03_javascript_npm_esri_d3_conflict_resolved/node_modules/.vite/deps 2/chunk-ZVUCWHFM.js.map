{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderModules/Float2DrawUniform.js", "../../@arcgis/core/chunks/SSAOBlur.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.31/esri/copyright.txt for details.\n*/\nimport{Uniform as r}from\"./Uniform.js\";import{BindType as e}from\"../shaderTechnique/BindType.js\";class o extends r{constructor(r,o){super(r,\"vec2\",e.Draw,((e,s,t,i)=>e.setUniform2fv(r,o(s,t,i))))}}export{o as Float2DrawUniform};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.31/esri/copyright.txt for details.\n*/\nimport{ScreenSpacePass as e}from\"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js\";import{ReadDepth as r}from\"../views/3d/webgl-engine/core/shaderLibrary/output/ReadDepth.glsl.js\";import{Float2DrawUniform as o}from\"../views/3d/webgl-engine/core/shaderModules/Float2DrawUniform.js\";import{FloatPassUniform as t}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as a}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as l}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DDrawUniform as n}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DDrawUniform.js\";import{Texture2DPassUniform as s}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";const d=4;function i(){const i=new l,f=i.fragment;i.include(e);const u=(d+1)/2,c=1/(2*u*u);return f.include(r),f.uniforms.add(new s(\"depthMap\",(e=>e.depthTexture)),new n(\"tex\",(e=>e.colorTexture)),new o(\"blurSize\",(e=>e.blurSize)),new t(\"projScale\",((e,r)=>{const o=r.camera.distance;return o>5e4?Math.max(0,e.projScale-(o-5e4)):e.projScale}))),f.code.add(a`\n    void blurFunction(vec2 uv, float r, float center_d, float sharpness, inout float wTotal, inout float bTotal) {\n      float c = texture(tex, uv).r;\n      float d = linearDepthFromTexture(depthMap, uv);\n\n      float ddiff = d - center_d;\n\n      float w = exp(-r * r * ${a.float(c)} - ddiff * ddiff * sharpness);\n      wTotal += w;\n      bTotal += w * c;\n    }\n  `),i.outputs.add(\"fragBlur\",\"float\"),f.main.add(a`\n    float b = 0.0;\n    float w_total = 0.0;\n\n    float center_d = linearDepthFromTexture(depthMap, uv);\n\n    float sharpness = -0.05 * projScale / center_d;\n    for (int r = -${a.int(d)}; r <= ${a.int(d)}; ++r) {\n      float rf = float(r);\n      vec2 uvOffset = uv + rf * blurSize;\n      blurFunction(uvOffset, rf, center_d, sharpness, w_total, b);\n    }\n    fragBlur = b / w_total;`),i}const f=Object.freeze(Object.defineProperty({__proto__:null,build:i},Symbol.toStringTag,{value:\"Module\"}));export{f as S,i as b};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAIiG,IAAMA,KAAN,cAAgBC,GAAC;AAAA,EAAC,YAAY,GAAED,IAAE;AAAC,UAAM,GAAE,QAAO,EAAE,MAAM,CAAC,GAAEE,IAAE,GAAEC,OAAI,EAAE,cAAc,GAAEH,GAAEE,IAAE,GAAEC,EAAC,CAAC,CAAE;AAAA,EAAC;AAAC;;;ACA+kB,IAAM,IAAE;AAAE,SAASC,KAAG;AAAC,QAAMA,KAAE,IAAIC,MAAEC,KAAEF,GAAE;AAAS,EAAAA,GAAE,QAAQ,CAAC;AAAE,QAAM,KAAG,IAAE,KAAG,GAAE,IAAE,KAAG,IAAE,IAAE;AAAG,SAAOE,GAAE,QAAQC,EAAC,GAAED,GAAE,SAAS,IAAI,IAAIE,GAAE,YAAY,OAAG,EAAE,YAAa,GAAE,IAAI,EAAE,OAAO,OAAG,EAAE,YAAa,GAAE,IAAIH,GAAE,YAAY,OAAG,EAAE,QAAS,GAAE,IAAIA,GAAE,aAAa,CAAC,GAAE,MAAI;AAAC,UAAMA,KAAE,EAAE,OAAO;AAAS,WAAOA,KAAE,MAAI,KAAK,IAAI,GAAE,EAAE,aAAWA,KAAE,IAAI,IAAE,EAAE;AAAA,EAAS,CAAE,CAAC,GAAEC,GAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAOxlC,EAAE,MAAM,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA,GAItC,GAAEF,GAAE,QAAQ,IAAI,YAAW,OAAO,GAAEE,GAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAO9B,EAAE,IAAI,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,4BAKlB,GAAEF;AAAC;AAAC,IAAM,IAAE,OAAO,OAAO,OAAO,eAAe,EAAC,WAAU,MAAK,OAAMA,GAAC,GAAE,OAAO,aAAY,EAAC,OAAM,SAAQ,CAAC,CAAC;",
  "names": ["o", "a", "s", "i", "i", "o", "f", "a", "s"]
}
