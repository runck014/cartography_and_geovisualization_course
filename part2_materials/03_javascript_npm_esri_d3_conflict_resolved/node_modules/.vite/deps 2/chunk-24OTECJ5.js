import {
  a as a3,
  n as n3
} from "./chunk-7Q4JSL7R.js";
import {
  b
} from "./chunk-WGIZLWW7.js";
import {
  p
} from "./chunk-5A4G4OVM.js";
import {
  n as n2
} from "./chunk-SW4DFX7N.js";
import {
  n
} from "./chunk-7O7KFKCG.js";
import {
  f
} from "./chunk-VU6O6TFT.js";
import {
  m
} from "./chunk-GD4XDYZL.js";
import {
  a4 as a2
} from "./chunk-33ECLFFF.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import {
  a,
  e,
  s2 as s
} from "./chunk-PKLD5YJF.js";

// node_modules/@arcgis/core/layers/support/FeatureFilter.js
var p2;
var c = new n({ esriSpatialRelIntersects: "intersects", esriSpatialRelContains: "contains", esriSpatialRelCrosses: "crosses", esriSpatialRelDisjoint: "disjoint", esriSpatialRelEnvelopeIntersects: "envelope-intersects", esriSpatialRelIndexIntersects: "index-intersects", esriSpatialRelOverlaps: "overlaps", esriSpatialRelTouches: "touches", esriSpatialRelWithin: "within", esriSpatialRelRelation: "relation" });
var m2 = new n({ esriSRUnit_Meter: "meters", esriSRUnit_Kilometer: "kilometers", esriSRUnit_Foot: "feet", esriSRUnit_StatuteMile: "miles", esriSRUnit_NauticalMile: "nautical-miles", esriSRUnit_USNauticalMile: "us-nautical-miles" });
var u = p2 = class extends f {
  constructor(e2) {
    super(e2), this.where = null, this.geometry = null, this.spatialRelationship = "intersects", this.distance = void 0, this.objectIds = null, this.units = null, this.timeExtent = null;
  }
  createQuery(e2 = {}) {
    const { where: t, geometry: i, spatialRelationship: r2, timeExtent: o, objectIds: n5, units: a5, distance: p4 } = this;
    return new b({ geometry: a(i), objectIds: a(n5), spatialRelationship: r2, timeExtent: a(o), where: t, units: a5, distance: p4, ...e2 });
  }
  clone() {
    const { where: e2, geometry: t, spatialRelationship: i, timeExtent: r2, objectIds: o, units: n5, distance: l } = this;
    return new p2({ geometry: a(t), objectIds: a(o), spatialRelationship: i, timeExtent: a(r2), where: e2, units: n5, distance: l });
  }
};
r([m({ type: String, json: { write: true } })], u.prototype, "where", void 0), r([m({ types: n2, json: { write: true } })], u.prototype, "geometry", void 0), r([m({ type: c.apiValues, json: { name: "spatialRel", read: { reader: c.read }, write: { allowNull: false, writer: c.write, overridePolicy() {
  return { enabled: null != this.geometry };
} } } })], u.prototype, "spatialRelationship", void 0), r([m({ type: Number, json: { write: { overridePolicy(e2) {
  return { enabled: null != e2 && null != this.geometry };
} } } })], u.prototype, "distance", void 0), r([m({ type: [Number], json: { write: true } })], u.prototype, "objectIds", void 0), r([m({ type: m2.apiValues, json: { read: m2.read, write: { writer: m2.write, overridePolicy(e2) {
  return { enabled: null != e2 && null != this.geometry };
} } } })], u.prototype, "units", void 0), r([m({ type: p, json: { write: true } })], u.prototype, "timeExtent", void 0), u = p2 = r([a2("esri.layers.support.FeatureFilter")], u);
var d = u;

// node_modules/@arcgis/core/layers/support/FeatureEffect.js
var d2;
var f2 = { read: { reader: n3 }, write: { writer: a3, overridePolicy() {
  return { allowNull: null != this.excludedEffect, isRequired: null == this.excludedEffect };
} } };
var n4 = { read: { reader: n3 }, write: { writer: a3, overridePolicy() {
  return { allowNull: null != this.includedEffect, isRequired: null == this.includedEffect };
} } };
var a4 = { name: "showExcludedLabels", default: true };
var p3 = d2 = class extends f {
  constructor(e2) {
    super(e2), this.filter = null, this.includedEffect = null, this.excludedEffect = null, this.excludedLabelsVisible = false;
  }
  write(e2, t) {
    var _a, _b;
    const l = super.write(e2, t);
    if (t == null ? void 0 : t.origin) {
      if (l.filter) {
        const e3 = Object.keys(l.filter);
        if (e3.length > 1 || "where" !== e3[0]) return (_a = t.messages) == null ? void 0 : _a.push(new s("web-document-write:unsupported-feature-effect", "Invalid feature effect 'filter'. A filter can only contain a 'where' property", { layer: t.layer, effect: this })), null;
      }
      if ("showExcludedLabels" in l) return (_b = t.messages) == null ? void 0 : _b.push(new s("web-document-write:unsupported-feature-effect", "Invalid value for property 'excludedLabelsVisible' which should always be 'true'", { layer: t.layer, effect: this })), null;
    }
    return l;
  }
  clone() {
    return new d2({ filter: null != this.filter ? this.filter.clone() : null, includedEffect: this.includedEffect, excludedEffect: this.excludedEffect, excludedLabelsVisible: this.excludedLabelsVisible });
  }
};
r([m({ type: d, json: { write: { allowNull: true, writer(e2, r2, t, i) {
  const o = e2 == null ? void 0 : e2.write({}, i);
  o && 0 !== Object.keys(o).length ? e(t, o, r2) : e(t, null, r2);
} } } })], p3.prototype, "filter", void 0), r([m({ json: { read: n3, write: { writer: a3, allowNull: true }, origins: { "web-map": f2, "portal-item": f2 } } })], p3.prototype, "includedEffect", void 0), r([m({ json: { read: n3, write: { writer: a3, allowNull: true }, origins: { "web-map": n4, "portal-item": n4 } } })], p3.prototype, "excludedEffect", void 0), r([m({ type: Boolean, json: { write: true, name: "showExcludedLabels", origins: { "web-map": a4, "portal-item": a4 } } })], p3.prototype, "excludedLabelsVisible", void 0), p3 = d2 = r([a2("esri.layers.support.FeatureEffect")], p3);
var w = p3;

export {
  d,
  w
};
//# sourceMappingURL=chunk-24OTECJ5.js.map
