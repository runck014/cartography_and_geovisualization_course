import {
  t
} from "./chunk-XXZFRDYH.js";
import "./chunk-GYMOXI76.js";
import {
  F as F2
} from "./chunk-LH2VBN6X.js";
import {
  e as e2
} from "./chunk-SGZGPX6H.js";
import "./chunk-5ZJ2MCRU.js";
import "./chunk-OBWNWUWS.js";
import "./chunk-2JZHLJXP.js";
import "./chunk-CGJR3XCF.js";
import {
  j,
  y
} from "./chunk-KVO35ODJ.js";
import "./chunk-O2HBAYVG.js";
import "./chunk-FKL5AVF4.js";
import "./chunk-CKPBZSTT.js";
import "./chunk-3T3LUDWR.js";
import "./chunk-SZ3BUBIG.js";
import "./chunk-JI3JMSDL.js";
import "./chunk-J3GKRP7Y.js";
import "./chunk-Q3K5MAUZ.js";
import "./chunk-KJNFPIQW.js";
import "./chunk-2XVRGGEF.js";
import "./chunk-DPVSO6BH.js";
import "./chunk-6TRZLPPJ.js";
import "./chunk-U6IFI7EK.js";
import "./chunk-MCHNAU6L.js";
import "./chunk-MYNRH67A.js";
import "./chunk-JMY2H33H.js";
import "./chunk-VBS2Y7KE.js";
import "./chunk-HCAIFU2M.js";
import "./chunk-AHZHHHCW.js";
import "./chunk-O75V7CSP.js";
import "./chunk-RSF7AFW5.js";
import "./chunk-C2RS46RL.js";
import "./chunk-HB2JTNV2.js";
import "./chunk-N42IF4WX.js";
import "./chunk-BLBULF2O.js";
import "./chunk-JPQIRBN6.js";
import "./chunk-CH3XVKUV.js";
import "./chunk-KI5F6KDS.js";
import "./chunk-XJHQ5ZJ7.js";
import "./chunk-BXIXSFGX.js";
import "./chunk-HACIIBEF.js";
import "./chunk-MBR7IVUG.js";
import "./chunk-TRMW5XQP.js";
import "./chunk-HBU7EMDX.js";
import "./chunk-JRUJALSE.js";
import "./chunk-KDUYQUT4.js";
import "./chunk-73FHIZIF.js";
import "./chunk-ICIPRMPO.js";
import "./chunk-NEDBRPQY.js";
import "./chunk-EZCH3ZAJ.js";
import "./chunk-QLRZN73K.js";
import "./chunk-CGJUTDVJ.js";
import "./chunk-QEJMJI2R.js";
import "./chunk-EHD5KM2T.js";
import "./chunk-AEKV7TWM.js";
import "./chunk-QJXYURT2.js";
import "./chunk-JUN5XSQC.js";
import "./chunk-MCZMPI2A.js";
import "./chunk-KV3S4QI2.js";
import "./chunk-ECMDQ4LS.js";
import "./chunk-D6FJTDNK.js";
import "./chunk-LP6TMAPE.js";
import "./chunk-RENLZYKC.js";
import "./chunk-IJO7BOFI.js";
import "./chunk-NGQEHRBA.js";
import "./chunk-QYSQ6XPQ.js";
import "./chunk-HZRXUNDJ.js";
import "./chunk-2U5JYYSG.js";
import "./chunk-GGPPKSP2.js";
import "./chunk-MR727DXB.js";
import "./chunk-VLKWWBLY.js";
import "./chunk-GNY4KZ34.js";
import "./chunk-43W2AR4R.js";
import "./chunk-AFULL6KA.js";
import "./chunk-URFLFG2R.js";
import "./chunk-A66MNK5C.js";
import "./chunk-EPAKCM4A.js";
import "./chunk-VBJTBJYL.js";
import "./chunk-GZFJKWTS.js";
import "./chunk-EFVIMN4N.js";
import "./chunk-6TU4HBID.js";
import "./chunk-WGIZLWW7.js";
import "./chunk-PUOCGOJB.js";
import "./chunk-DBQLTBDH.js";
import "./chunk-AMH7OVBF.js";
import "./chunk-SUZN3TAH.js";
import "./chunk-LXJGKQ4D.js";
import {
  d
} from "./chunk-VILGTHTP.js";
import "./chunk-ATEWWVHG.js";
import "./chunk-LEOFRCUR.js";
import "./chunk-CP4GPQHD.js";
import "./chunk-IZSNXKMJ.js";
import "./chunk-IOKAACTA.js";
import "./chunk-VFTH6C2E.js";
import "./chunk-M5RSIRGD.js";
import "./chunk-D2JPDRZZ.js";
import "./chunk-UYSPJCCV.js";
import "./chunk-SMFCDOAJ.js";
import "./chunk-5A4G4OVM.js";
import "./chunk-MGMVRMXQ.js";
import "./chunk-GNWAZIVF.js";
import "./chunk-2TEGRXBS.js";
import "./chunk-44C2A72D.js";
import "./chunk-DIKY6MBW.js";
import "./chunk-YVSEBNS4.js";
import "./chunk-GGCWKF4X.js";
import "./chunk-6D5XULXX.js";
import "./chunk-445IB4DS.js";
import "./chunk-Y2XCZQML.js";
import "./chunk-SW4DFX7N.js";
import "./chunk-2PK57UYA.js";
import "./chunk-F26LCWNQ.js";
import "./chunk-H4N5QOMX.js";
import "./chunk-F2LC36UV.js";
import "./chunk-6Y2LNRVP.js";
import "./chunk-VNRDIGVF.js";
import "./chunk-QRJFHPMB.js";
import "./chunk-G6REFQRQ.js";
import "./chunk-Z2DWZ5IF.js";
import "./chunk-UN4ISSP7.js";
import "./chunk-E2RPCJOE.js";
import "./chunk-TKY5RBM3.js";
import "./chunk-NHJGPXZH.js";
import "./chunk-JS7R723S.js";
import {
  V
} from "./chunk-SIQNRYEG.js";
import "./chunk-TTDEVHSF.js";
import "./chunk-QSRFVAIF.js";
import "./chunk-X6JBJVM2.js";
import "./chunk-Q7TEBZSN.js";
import "./chunk-JU6MEO4D.js";
import "./chunk-CY5MS6DC.js";
import "./chunk-C6FFJ4QS.js";
import "./chunk-Q4Q32WYV.js";
import "./chunk-A3J7W53Y.js";
import "./chunk-HLF5XJSV.js";
import "./chunk-L6D73M4D.js";
import "./chunk-P5H5PJSC.js";
import "./chunk-H6RIEXAG.js";
import "./chunk-Y6AYXNMP.js";
import "./chunk-6YWQXXBX.js";
import "./chunk-DRBJFCLQ.js";
import "./chunk-7O7KFKCG.js";
import "./chunk-E2X3OBBC.js";
import "./chunk-X7VTUWCX.js";
import "./chunk-QS62R4CH.js";
import "./chunk-VU6O6TFT.js";
import {
  m
} from "./chunk-GD4XDYZL.js";
import {
  a4 as a
} from "./chunk-33ECLFFF.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import "./chunk-L6CCOEVE.js";
import {
  e
} from "./chunk-GRW2QIBT.js";
import {
  u
} from "./chunk-R2PAF6JT.js";
import "./chunk-6WE7SNQY.js";
import "./chunk-PKLD5YJF.js";
import {
  F
} from "./chunk-XKQWTZMW.js";
import "./chunk-A4OFG7JM.js";

// node_modules/@arcgis/core/views/2d/layers/GraphicsLayerView2D.js
var d2 = class extends j(y) {
  constructor() {
    super(...arguments), this._highlightCounter = new e2();
  }
  attach() {
    this.graphicsView = new F2({ requestUpdateCallback: () => this.requestUpdate(), view: this.view, graphics: this.layer.graphics, container: new t(this.view.featuresTilingScheme), layerId: this.layer.id }), this.container.addChild(this.graphicsView.container), this.addAttachHandles([this.layer.on("graphic-update", this.graphicsView.graphicUpdateHandler), this.watch("layer.visible", (i) => {
      i && (this.graphicsView.update({ state: this.view.state }), this.graphicsView.pushUpdate());
    })]), this._updateHighlights();
  }
  detach() {
    this.container.removeAllChildren(), this.graphicsView = u(this.graphicsView);
  }
  async hitTest(i) {
    return this.graphicsView ? this.graphicsView.hitTest(i).map((t2) => ({ type: "graphic", graphic: t2, mapPoint: i, layer: this.layer })) : null;
  }
  queryGraphics() {
    return Promise.resolve(this.graphicsView.graphics);
  }
  update(i) {
    this.graphicsView.processUpdate(i);
  }
  viewChange() {
    this.graphicsView.viewChange();
  }
  moveEnd() {
  }
  isUpdating() {
    return !this.graphicsView || this.graphicsView.updating;
  }
  highlight(i, h = "default") {
    let a2;
    "number" == typeof i ? a2 = [i] : i instanceof d ? a2 = [i.uid] : Array.isArray(i) && i.length > 0 ? a2 = "number" == typeof i[0] ? i : i.map((i2) => i2 && i2.uid) : V.isCollection(i) && i.length > 0 && (a2 = i.map((i2) => i2 && i2.uid).toArray());
    const o = a2 == null ? void 0 : a2.filter(F);
    return (o == null ? void 0 : o.length) ? (this._addHighlight(o, h), e(() => this._removeHighlight(o, h))) : e();
  }
  _addHighlight(i, t2) {
    this._highlightCounter.addGroup(i, t2), this._updateHighlights();
  }
  _removeHighlight(i, t2) {
    this._highlightCounter.deleteGroup(i, t2), this._updateHighlights();
  }
  _updateHighlights() {
    var _a;
    const i = [];
    for (const t2 of this._highlightCounter.ids()) {
      const e3 = this._highlightCounter.getHighlightGroups(t2), r2 = this._getHighlightBits(e3);
      i.push({ objectId: t2, highlightFlags: r2 });
    }
    (_a = this.graphicsView) == null ? void 0 : _a.setHighlight(i);
  }
};
r([m()], d2.prototype, "graphicsView", void 0), d2 = r([a("esri.views.2d.layers.GraphicsLayerView2D")], d2);
var u2 = d2;
export {
  u2 as default
};
//# sourceMappingURL=GraphicsLayerView2D-WSYAY2UP.js.map
