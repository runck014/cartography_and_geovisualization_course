import {
  p as p5
} from "./chunk-KN2F524E.js";
import {
  B,
  a2 as a7,
  e,
  i as i5,
  m as m3,
  m2 as m4,
  n as n7,
  n2 as n8,
  o as o3,
  r3 as r4,
  t,
  u
} from "./chunk-3YPKNKEV.js";
import {
  a3 as a8,
  f2 as f4,
  g as g2,
  p2 as p4,
  s2 as s5
} from "./chunk-OIUY22MH.js";
import {
  D,
  R as R2
} from "./chunk-IZK3LHO7.js";
import {
  R
} from "./chunk-IJO7BOFI.js";
import {
  a as a5,
  z
} from "./chunk-JHXGQ3AW.js";
import {
  A,
  a as a4,
  b,
  j as j2,
  n2 as n6,
  v as v2
} from "./chunk-R5BTSPWT.js";
import {
  a as a3,
  m as m2,
  p as p3
} from "./chunk-X5EOLPIE.js";
import {
  a2 as a6
} from "./chunk-VNPGSD2C.js";
import {
  d as d3
} from "./chunk-CE7WVJQV.js";
import {
  T,
  h
} from "./chunk-RCGJPJRB.js";
import {
  p as p6
} from "./chunk-SW3IBIJ7.js";
import {
  y
} from "./chunk-AMH7OVBF.js";
import {
  d as d2
} from "./chunk-VILGTHTP.js";
import {
  n as n5
} from "./chunk-LEOFRCUR.js";
import {
  S,
  d,
  y as y2
} from "./chunk-CP4GPQHD.js";
import {
  l
} from "./chunk-VFTH6C2E.js";
import {
  i as i3
} from "./chunk-M5RSIRGD.js";
import {
  f as f3,
  i as i4,
  s as s4
} from "./chunk-D2JPDRZZ.js";
import {
  r as r3
} from "./chunk-UYSPJCCV.js";
import {
  p as p2
} from "./chunk-5A4G4OVM.js";
import {
  o as o2
} from "./chunk-YVSEBNS4.js";
import {
  n as n4
} from "./chunk-SW4DFX7N.js";
import {
  f as f2,
  p
} from "./chunk-F26LCWNQ.js";
import {
  v2 as v
} from "./chunk-VNRDIGVF.js";
import {
  j2 as j,
  n as n3,
  w
} from "./chunk-A3J7W53Y.js";
import {
  o
} from "./chunk-HLF5XJSV.js";
import {
  g,
  r as r2
} from "./chunk-L6D73M4D.js";
import {
  s as s3
} from "./chunk-H6RIEXAG.js";
import {
  i as i2,
  n as n2
} from "./chunk-7O7KFKCG.js";
import {
  U
} from "./chunk-X7VTUWCX.js";
import {
  f
} from "./chunk-VU6O6TFT.js";
import {
  i,
  m
} from "./chunk-GD4XDYZL.js";
import {
  a4 as a2,
  s4 as s2,
  x
} from "./chunk-33ECLFFF.js";
import {
  r
} from "./chunk-MV5XBD6C.js";
import {
  a,
  n2 as n,
  s2 as s
} from "./chunk-PKLD5YJF.js";

// node_modules/@arcgis/core/layers/support/rasterEnums.js
var a9 = i2()({ RSP_NearestNeighbor: "nearest", RSP_BilinearInterpolation: "bilinear", RSP_CubicConvolution: "cubic", RSP_Majority: "majority" });
var i6 = i2()({ esriNoDataMatchAny: "any", esriNoDataMatchAll: "all" });
var n9 = i2()({ U1: "u1", U2: "u2", U4: "u4", U8: "u8", S8: "s8", U16: "u16", S16: "s16", U32: "u32", S32: "s32", F32: "f32", F64: "f64", C64: "c64", C128: "c128", UNKNOWN: "unknown" });

// node_modules/@arcgis/core/layers/support/RasterFunctionInfo.js
var i7 = class extends f {
  constructor() {
    super(...arguments), this.pixelType = "unknown";
  }
};
r([m({ type: String, json: { write: true } })], i7.prototype, "name", void 0), r([m({ type: String, json: { write: true } })], i7.prototype, "description", void 0), r([m({ type: x, json: { type: x, write: true, name: "_object_id" } })], i7.prototype, "id", void 0), r([m({ type: String, json: { type: n9.jsonValues, read: n9.read, write: n9.write } })], i7.prototype, "pixelType", void 0), r([m({ type: String, json: { write: true } })], i7.prototype, "type", void 0), i7 = r([a2("esri.layers.support.RasterFunctionInfo")], i7);
var n10 = i7;

// node_modules/@arcgis/core/layers/support/RasterFunctionVariable.js
var p7 = class extends f {
  constructor() {
    super(...arguments), this.isDataset = false, this.isPublic = false, this.type = "RasterFunctionVariable";
  }
};
r([m({ type: String, json: { write: true } })], p7.prototype, "name", void 0), r([m({ type: Number, json: { type: x, write: true, name: "_object_id" } })], p7.prototype, "id", void 0), r([m({ type: Boolean, json: { write: true } })], p7.prototype, "isDataset", void 0), r([m({ type: Boolean, json: { write: true } })], p7.prototype, "isPublic", void 0), r([m({ json: { write: true } })], p7.prototype, "value", void 0), r([m({ type: String, json: { write: true } })], p7.prototype, "type", void 0), p7 = r([a2("esri.layers.support.RasterFunctionVariable")], p7);
var i8 = p7;

// node_modules/@arcgis/core/layers/support/RasterFunctionProperties.js
var i9 = { key: "type", base: null, typeMap: { RasterFunctionVariable: i8 } };
var a10 = class extends f {
};
r([m({ types: i9, json: { types: i9, name: "MatchVariable" } })], a10.prototype, "matchVariable", void 0), r([m({ types: i9, json: { types: i9, name: "UnionDimension" } })], a10.prototype, "unionDimension", void 0), r([m({ type: Number, json: { type: x, write: true, name: "_object_id" } })], a10.prototype, "id", void 0), r([m({ type: String, json: { write: true } })], a10.prototype, "type", void 0), a10 = r([a2("esri.layers.support.RasterFunctionProperties")], a10);
var n11 = a10;

// node_modules/@arcgis/core/layers/support/RasterFunctionTemplate.js
var y3 = new n2({ 0: "mosaic", 1: "item", 2: "item-group" }, { useNumericKeys: true });
var a11 = class extends f {
  constructor() {
    super(...arguments), this.functionType = "mosaic", this.type = "RasterFunctionTemplate";
  }
};
r([m({ type: [String], json: { write: true } })], a11.prototype, "aliases", void 0), r([m({ type: Object, json: { write: true } })], a11.prototype, "arguments", void 0), r([m({ type: String, json: { write: true } })], a11.prototype, "description", void 0), r([m({ type: n10, json: { write: true, name: "function" } })], a11.prototype, "functionInfo", void 0), r([m({ type: y3.apiValues, json: { type: [0, 1, 2], read: y3.read, write: y3.write } })], a11.prototype, "functionType", void 0), r([m({ type: String, json: { write: true } })], a11.prototype, "group", void 0), r([m({ type: String, json: { write: true } })], a11.prototype, "help", void 0), r([m({ type: Number, json: { type: x, write: true, name: "_object_id" } })], a11.prototype, "id", void 0), r([m({ type: String, json: { write: true } })], a11.prototype, "name", void 0), r([m({ type: String, json: { write: true, name: "definition" } })], a11.prototype, "queryDefinition", void 0), r([m({ type: String, json: { write: true } })], a11.prototype, "tag", void 0), r([m({ type: n11, json: { write: true } })], a11.prototype, "properties", void 0), r([m({ type: String, json: { write: true } })], a11.prototype, "thumbnail", void 0), r([m({ type: String, json: { write: true } })], a11.prototype, "thumbnailEx", void 0), r([m({ json: { type: ["RasterFunctionTemplate"], write: true } })], a11.prototype, "type", void 0), a11 = r([a2("esri.layers.support.RasterFunctionTemplate")], a11);
var c = a11;

// node_modules/@arcgis/core/layers/support/RasterFunction.js
var c2;
var p8 = /* @__PURE__ */ new Set(["raster", "raster2", "dem", "fillraster"]);
var m5 = /* @__PURE__ */ new Set(["rasters"]);
var f5 = (t3) => (t3 == null ? void 0 : t3.rasterFunction) ? d4.fromJSON(t3) : t3;
var l2 = (t3) => t3 && t3 instanceof d4 ? t3.toJSON() : t3;
var y4 = (t3) => (t3 == null ? void 0 : t3.functionName) && !t3.declaredClass;
var F = (t3) => y4(t3) ? new d4(t3) : t3;
var h2 = (t3) => {
  if (null == t3) return null;
  t3 = a(t3);
  const n12 = {};
  for (const e2 of Object.keys(t3)) p8.has(e2.toLowerCase()) ? n12[e2] = f5(t3[e2]) : m5.has(e2.toLowerCase()) && Array.isArray(t3[e2]) ? n12[e2] = t3[e2].map(f5) : n12[e2] = t3[e2];
  return n12;
};
var g3 = { types: { key: "type", base: null, typeMap: { RasterFunctionTemplate: c } }, json: { write: true, name: "rasterFunctionDefinition" } };
var d4 = c2 = class extends f {
  constructor(t3) {
    super(t3), this.functionName = null, this.outputPixelType = "unknown", this.variableName = null, this.functionDefinition = null;
  }
  set functionArguments(t3) {
    if (t3) {
      const n12 = Object.keys(t3);
      if (n12.some((n13) => p8.has(n13.toLowerCase()) && y4(t3[n13])) || n12.some((n13) => m5.has(n13.toLowerCase()) && Array.isArray(t3[n13]) && t3[n13].some((t4) => y4(t4)))) {
        t3 = a(t3);
        for (const e2 of n12) p8.has(e2.toLowerCase()) ? t3[e2] = F(t3[e2]) : m5.has(e2.toLowerCase()) && Array.isArray(t3[e2]) && (t3[e2] = t3[e2].map((t4) => F(t4)));
      }
    }
    this._set("functionArguments", t3);
  }
  readFunctionArguments(t3) {
    return h2(t3);
  }
  writeFunctionArguments(t3, n12, e2) {
    const r5 = {};
    for (const o5 of Object.keys(t3)) p8.has(o5.toLowerCase()) ? r5[o5] = l2(t3[o5]) : m5.has(o5.toLowerCase()) && Array.isArray(t3[o5]) ? r5[o5] = t3[o5].map(l2) : r5[o5] = l2(t3[o5]);
    n12[e2] = r5;
  }
  readFunctionName(t3, n12) {
    var _a;
    const e2 = n12.rasterFunctionInfos, r5 = n12.name;
    return r5 || ((e2 == null ? void 0 : e2.length) && "None" !== e2[0].name ? e2[0].name : n12.rasterFunction || ((_a = n12.rasterFunctionDefinition) == null ? void 0 : _a.name));
  }
  get rasterFunctionDefinition() {
    var _a;
    return (_a = this.functionDefinition) == null ? void 0 : _a.toJSON();
  }
  set rasterFunctionDefinition(t3) {
    this.functionDefinition = t3 ? c.fromJSON(t3) : null;
  }
  get hasClipFunction() {
    return this.rasterFunctionDefinition ? JSON.stringify(this.rasterFunctionDefinition).includes('"type":"ClipFunction"') : JSON.stringify(this).includes('"rasterFunction":"Clip"');
  }
  clone() {
    return new c2({ functionName: this.functionName, functionArguments: a(this.functionArguments), outputPixelType: this.outputPixelType, variableName: this.variableName, rasterFunctionDefinition: a(this.rasterFunctionDefinition) });
  }
};
r([m({ json: { type: Object, name: "rasterFunctionArguments" } })], d4.prototype, "functionArguments", null), r([o("functionArguments")], d4.prototype, "readFunctionArguments", null), r([r2("functionArguments")], d4.prototype, "writeFunctionArguments", null), r([m({ json: { type: String, write: { target: "rasterFunction" } } })], d4.prototype, "functionName", void 0), r([o("functionName", ["rasterFunction", "rasterFunctionInfos", "rasterFunctionDefinition"])], d4.prototype, "readFunctionName", null), r([r3({ C128: "c128", C64: "c64", F32: "f32", F64: "f64", S16: "s16", S32: "s32", S8: "s8", U1: "u1", U16: "u16", U2: "u2", U32: "u32", U4: "u4", U8: "u8", UNKNOWN: "unknown" }, { ignoreUnknown: false, default: "unknown" })], d4.prototype, "outputPixelType", void 0), r([m({ type: String, json: { read: true, write: true } })], d4.prototype, "variableName", void 0), r([m()], d4.prototype, "rasterFunctionDefinition", null), r([m(g3)], d4.prototype, "functionDefinition", void 0), r([m()], d4.prototype, "hasClipFunction", null), d4 = c2 = r([a2("esri.layers.support.RasterFunction")], d4);
var N = d4;

// node_modules/@arcgis/core/renderers/FlowRenderer.js
var d5;
var c3 = new n2({ flow_from: "flow-from", flow_to: "flow-to" });
var h3 = d5 = class extends v2(f) {
  constructor(o5) {
    super(o5), this.density = 0.8, this.color = new l([255, 255, 255, 1]), this.maxPathLength = 200, this.trailWidth = 1.5, this.flowSpeed = 10, this.trailLength = 100, this.smoothing = 0, this.flowRepresentation = "flow-from", this.type = "flow", this.authoringInfo = null, this.legendOptions = null, this.trailCap = "butt", this.background = "none";
  }
  clone() {
    var _a, _b;
    const { density: o5, maxPathLength: t3, trailWidth: e2, flowSpeed: r5, trailLength: i10, smoothing: s6, flowRepresentation: n12, trailCap: p13, background: a14 } = this, l8 = this.color.clone(), m10 = (this.visualVariables || []).map((o6) => o6.clone()), c11 = (_a = this.authoringInfo) == null ? void 0 : _a.clone(), h6 = (_b = this.legendOptions) == null ? void 0 : _b.clone();
    return new d5({ density: o5, color: l8, maxPathLength: t3, trailWidth: e2, flowSpeed: r5, trailLength: i10, trailCap: p13, background: a14, smoothing: s6, flowRepresentation: n12, visualVariables: m10, authoringInfo: c11, legendOptions: h6 });
  }
  getSymbol(o5, t3) {
  }
  async getSymbolAsync(o5, t3) {
  }
  getSymbols() {
    return [];
  }
};
r([m({ type: Number, json: { write: true } })], h3.prototype, "density", void 0), r([m({ type: l, json: { write: { allowNull: true } } })], h3.prototype, "color", void 0), r([m({ type: Number, cast: o2, json: { write: true } })], h3.prototype, "maxPathLength", void 0), r([m({ type: Number, cast: o2, json: { write: true } })], h3.prototype, "trailWidth", void 0), r([m({ type: Number, json: { write: true } })], h3.prototype, "flowSpeed", void 0), r([m({ type: Number, json: { write: true } })], h3.prototype, "trailLength", void 0), r([m({ type: Number, cast: o2, json: { write: false } })], h3.prototype, "smoothing", void 0), r([m({ type: c3.apiValues, json: { type: c3.jsonValues, read: { reader: c3.read }, write: { writer: c3.write } } })], h3.prototype, "flowRepresentation", void 0), r([r3({ flowRenderer: "flow" })], h3.prototype, "type", void 0), r([m({ type: j2, json: { write: true } })], h3.prototype, "authoringInfo", void 0), r([m({ type: a6, json: { write: true } })], h3.prototype, "legendOptions", void 0), r([m({ type: String, json: { write: true } })], h3.prototype, "trailCap", void 0), r([m({ type: String, json: { write: true } })], h3.prototype, "background", void 0), h3 = d5 = r([a2("esri.renderers.FlowRenderer")], h3);
var u2 = h3;

// node_modules/@arcgis/core/renderers/support/ColormapInfo.js
var c4 = class extends f {
  constructor() {
    super(...arguments), this.value = null, this.label = null, this.color = null;
  }
};
r([m({ type: Number, json: { write: true } })], c4.prototype, "value", void 0), r([m({ type: String, json: { write: true } })], c4.prototype, "label", void 0), r([m({ type: l, json: { type: [x], write: true } })], c4.prototype, "color", void 0), c4 = r([a2("esri.renderers.support.ColormapInfo")], c4);
var l3 = c4;

// node_modules/@arcgis/core/renderers/RasterColormapRenderer.js
var c5;
var m6 = c5 = class extends f {
  constructor(o5) {
    super(o5), this.colormapInfos = null, this.type = "raster-colormap";
  }
  static createFromColormap(o5, r5) {
    if (!o5) return null;
    const t3 = 5 === o5[0].length, e2 = [...o5].sort((o6, r6) => o6[0] - r6[0]).map((o6) => l3.fromJSON({ value: o6[0], color: t3 ? o6.slice(1, 5) : o6.slice(1, 4).concat([255]), label: r5 ? r5[o6[0]] ?? "" : o6[0] }));
    return new c5({ colormapInfos: e2 });
  }
  static createFromColorramp(o5) {
    const r5 = B(o5);
    return c5.createFromColormap(r5);
  }
  clone() {
    return new c5({ colormapInfos: this.colormapInfos.map((o5) => o5.toJSON()) });
  }
  extractColormap() {
    return this.colormapInfos.map(({ value: o5, color: r5 }) => [o5, r5.r, r5.g, r5.b, r5.a > 1 ? r5.a : 255 * r5.a & 255]).sort((o5, r5) => o5[0] - r5[0]);
  }
};
r([m({ type: [l3], json: { write: true } })], m6.prototype, "colormapInfos", void 0), r([r3({ rasterColormap: "raster-colormap" })], m6.prototype, "type", void 0), m6 = c5 = r([a2("esri.renderers.RasterColormapRenderer")], m6);
var l4 = m6;

// node_modules/@arcgis/core/renderers/RasterShadedReliefRenderer.js
var c6;
var d6 = c6 = class extends f {
  constructor(e2) {
    super(e2), this.altitude = 45, this.azimuth = 315, this.colorRamp = null, this.hillshadeType = "traditional", this.pixelSizePower = 0.664, this.pixelSizeFactor = 0.024, this.scalingType = "none", this.type = "raster-shaded-relief", this.zFactor = 1;
  }
  readColorRamp(e2) {
    return p3(e2);
  }
  clone() {
    return new c6({ hillshadeType: this.hillshadeType, altitude: this.altitude, azimuth: this.azimuth, zFactor: this.zFactor, scalingType: this.scalingType, pixelSizeFactor: this.pixelSizeFactor, pixelSizePower: this.pixelSizePower, colorRamp: a(this.colorRamp) });
  }
};
r([m({ type: Number, json: { write: true } })], d6.prototype, "altitude", void 0), r([m({ type: Number, json: { write: true } })], d6.prototype, "azimuth", void 0), r([m({ types: m2, json: { write: true } })], d6.prototype, "colorRamp", void 0), r([o("colorRamp")], d6.prototype, "readColorRamp", null), r([m({ type: ["traditional", "multi-directional"], json: { write: true } })], d6.prototype, "hillshadeType", void 0), r([m({ type: Number, json: { write: true } })], d6.prototype, "pixelSizePower", void 0), r([m({ type: Number, json: { write: true } })], d6.prototype, "pixelSizeFactor", void 0), r([m({ type: ["none", "adjusted"], json: { write: true } })], d6.prototype, "scalingType", void 0), r([r3({ rasterShadedRelief: "raster-shaded-relief" })], d6.prototype, "type", void 0), r([m({ type: Number, json: { write: true } })], d6.prototype, "zFactor", void 0), d6 = c6 = r([a2("esri.renderers.RasterShadedReliefRenderer")], d6);
var m7 = d6;

// node_modules/@arcgis/core/renderers/RasterStretchRenderer.js
var l5;
var y5 = l5 = class extends f {
  constructor(t3) {
    super(t3), this.colorRamp = null, this.computeGamma = false, this.dynamicRangeAdjustment = false, this.gamma = [], this.maxPercent = null, this.minPercent = null, this.numberOfStandardDeviations = null, this.outputMax = null, this.outputMin = null, this.sigmoidStrengthLevel = null, this.histograms = null, this.useGamma = false, this.stretchType = "none", this.type = "raster-stretch";
  }
  readColorRamp(t3) {
    if (t3) return p3(t3);
  }
  get statistics() {
    return this._get("statistics");
  }
  set statistics(t3) {
    i(n.getLogger(this), "statistics", { replacement: "customStatistics", version: "4.31", warnOnce: true }), this._set("statistics", t3);
  }
  get customStatistics() {
    const t3 = this.statistics;
    return t3 && Array.isArray(t3[0]) ? t3.map((t4) => ({ min: t4[0], max: t4[1], avg: t4[2], stddev: t4[3] })) : t3;
  }
  set customStatistics(t3) {
    this._set("statistics", t3 == null ? void 0 : t3.map((t4) => [t4.min, t4.max, t4.avg ?? 0, t4.stddev ?? 1]));
  }
  readCustomStatistics(t3) {
    return t3 == null ? void 0 : t3.map((t4) => ({ min: t4[0], max: t4[1], avg: t4[2], stddev: t4[3] }));
  }
  writeCustomStatistics(t3, e2, s6) {
    (t3 == null ? void 0 : t3.length) && (e2[s6] = t3.map((t4) => [t4.min, t4.max, t4.avg ?? 0, t4.stddev ?? 1]));
  }
  readStretchType(t3, e2) {
    let s6 = e2.stretchType;
    return "number" == typeof s6 && (s6 = a7[s6]), n7.read(s6);
  }
  clone() {
    return new l5({ stretchType: this.stretchType, outputMin: this.outputMin, outputMax: this.outputMax, useGamma: this.useGamma, computeGamma: this.computeGamma, statistics: a(this.statistics), customStatistics: a(this.customStatistics), gamma: a(this.gamma), sigmoidStrengthLevel: this.sigmoidStrengthLevel, numberOfStandardDeviations: this.numberOfStandardDeviations, minPercent: this.minPercent, maxPercent: this.maxPercent, colorRamp: a(this.colorRamp), histograms: a(this.histograms), dynamicRangeAdjustment: this.dynamicRangeAdjustment });
  }
};
r([m({ types: m2, json: { write: true } })], y5.prototype, "colorRamp", void 0), r([o("colorRamp")], y5.prototype, "readColorRamp", null), r([m({ type: Boolean, json: { write: true } })], y5.prototype, "computeGamma", void 0), r([m({ type: Boolean, json: { write: { target: "dra" }, read: { source: "dra" } } })], y5.prototype, "dynamicRangeAdjustment", void 0), r([m({ type: [Number], json: { write: true } })], y5.prototype, "gamma", void 0), r([m({ type: Number, json: { write: true } })], y5.prototype, "maxPercent", void 0), r([m({ type: Number, json: { write: true } })], y5.prototype, "minPercent", void 0), r([m({ type: Number, json: { write: true } })], y5.prototype, "numberOfStandardDeviations", void 0), r([m({ type: Number, json: { read: { source: "max" }, write: { target: "max" } } })], y5.prototype, "outputMax", void 0), r([m({ type: Number, json: { read: { source: "min" }, write: { target: "min" } } })], y5.prototype, "outputMin", void 0), r([m({ type: Number, json: { write: true } })], y5.prototype, "sigmoidStrengthLevel", void 0), r([m({})], y5.prototype, "statistics", null), r([m()], y5.prototype, "histograms", void 0), r([m({ json: { type: [[Number]], name: "statistics", write: true } })], y5.prototype, "customStatistics", null), r([o("customStatistics")], y5.prototype, "readCustomStatistics", null), r([r2("customStatistics")], y5.prototype, "writeCustomStatistics", null), r([m({ type: Boolean, json: { write: true } })], y5.prototype, "useGamma", void 0), r([m({ type: n7.apiValues, json: { type: n7.jsonValues, write: n7.write } })], y5.prototype, "stretchType", void 0), r([o("stretchType", ["stretchType"])], y5.prototype, "readStretchType", null), r([r3({ rasterStretch: "raster-stretch" })], y5.prototype, "type", void 0), y5 = l5 = r([a2("esri.renderers.RasterStretchRenderer")], y5);
var g4 = y5;

// node_modules/@arcgis/core/renderers/VectorFieldRenderer.js
var S2;
var z2 = /* @__PURE__ */ new Set(["esriMetersPerSecond", "esriKilometersPerHour", "esriKnots", "esriFeetPerSecond", "esriMilesPerHour"]);
var u3 = new n2({ beaufort_ft: "beaufort-ft", beaufort_km: "beaufort-km", beaufort_kn: "beaufort-kn", beaufort_m: "beaufort-m", beaufort_mi: "beaufort-mi", classified_arrow: "classified-arrow", ocean_current_kn: "ocean-current-kn", ocean_current_m: "ocean-current-m", simple_scalar: "simple-scalar", single_arrow: "single-arrow", wind_speed: "wind-barb" });
var Z = new n2({ flow_from: "flow-from", flow_to: "flow-to" });
var b2 = S2 = class extends v2(f) {
  constructor(e2) {
    super(e2), this.attributeField = "Magnitude", this.flowRepresentation = "flow-from", this.rotationType = "arithmetic", this.style = "single-arrow", this.symbolTileSize = 50, this.type = "vector-field";
  }
  readInputUnit(e2, M2) {
    return z2.has(e2) ? s5.fromJSON(e2) : null;
  }
  readOutputUnit(e2, M2) {
    return z2.has(e2) ? s5.fromJSON(e2) : null;
  }
  get styleRenderer() {
    const e2 = this.style, M2 = this.attributeField, i10 = this._createStyleRenderer(e2);
    return i10.field = M2, i10;
  }
  get sizeVariables() {
    const e2 = [];
    if (this.visualVariables) for (const M2 of this.visualVariables) "size" === M2.type && e2.push(M2);
    if (0 === e2.length) {
      const M2 = new b({ field: "Magnitude", minSize: 0.2 * this.symbolTileSize, maxSize: 0.8 * this.symbolTileSize });
      this.visualVariables ? this.visualVariables.push(M2) : this._set("visualVariables", [M2]), e2.push(M2);
    }
    return e2;
  }
  get rotationVariables() {
    const e2 = [];
    if (this.visualVariables) for (const M2 of this.visualVariables) "rotation" === M2.type && e2.push(M2);
    if (0 === e2.length) {
      const M2 = new a4({ field: "Direction", rotationType: this.rotationType });
      this.visualVariables ? this.visualVariables.push(M2) : this._set("visualVariables", [M2]), e2.push(M2);
    }
    return e2;
  }
  clone() {
    return new S2({ attributeField: this.attributeField, flowRepresentation: this.flowRepresentation, rotationType: this.rotationType, symbolTileSize: this.symbolTileSize, style: this.style, visualVariables: a(this.visualVariables), inputUnit: this.inputUnit, outputUnit: this.outputUnit });
  }
  async getGraphicsFromPixelData(e2, M2 = false, t3 = []) {
    var _a;
    const a14 = new Array(), I2 = a8(this.inputUnit, this.outputUnit), r5 = ((_a = this.rotationVariables[0]) == null ? void 0 : _a.rotationType) || this.rotationType, g6 = M2 ? f4(e2.pixelBlock, "vector-uv", r5, I2) : p4(e2.pixelBlock, "vector-magdir", I2);
    if (null == g6) return a14;
    const o5 = e2.extent, A3 = null != g6.mask && g6.mask.length > 0;
    let d10 = 0;
    const D2 = (o5.xmax - o5.xmin) / g6.width, w3 = (o5.ymax - o5.ymin) / g6.height;
    for (let l8 = 0; l8 < g6.height; l8++) for (let e3 = 0; e3 < g6.width; e3++, d10++) {
      let M3 = new j({ x: o5.xmin + e3 * D2 + D2 / 2, y: o5.ymax - l8 * w3 - w3 / 2, spatialReference: o5.spatialReference });
      M3 = (await R(M3))[0];
      const I3 = t3.some((e4) => e4.intersects(M3));
      if ((!A3 || g6.mask[d10]) && !I3) {
        const e4 = { Magnitude: g6.pixels[0][d10], Direction: g6.pixels[1][d10] }, t4 = new d2({ geometry: new j({ x: M3.x, y: M3.y, spatialReference: o5.spatialReference }), attributes: e4 });
        t4.symbol = this._getVisualVariablesAppliedSymbol(t4), a14.push(t4);
      }
    }
    return a14;
  }
  getSymbol(e2, M2) {
  }
  async getSymbolAsync(e2, M2) {
  }
  getSymbols() {
    return [];
  }
  getClassBreakInfos() {
    var _a;
    return (_a = this.styleRenderer) == null ? void 0 : _a.classBreakInfos;
  }
  getDefaultSymbol() {
    var _a;
    return (_a = this.styleRenderer) == null ? void 0 : _a.defaultSymbol;
  }
  _getDefaultSymbol(e2) {
    return new y2({ path: "M14,32 14,18 9,23 16,3 22,23 17,18 17,32 z", outline: new d({ width: 0 }), size: 20, color: e2 || new l([0, 92, 230]) });
  }
  _getVisualVariablesAppliedSymbol(e2) {
    var _a, _b;
    if (!e2) return;
    const M2 = (_b = (_a = this.styleRenderer) == null ? void 0 : _a.getSymbol(e2)) == null ? void 0 : _b.clone(), i10 = this.sizeVariables, t3 = this.rotationVariables;
    if (i10 && i10.length && this.sizeVariables.forEach((i11) => R2(M2, T([i11], e2))), t3 && t3.length) {
      const i11 = "flow-to" === this.flowRepresentation === ("ocean-current-kn" === this.style || "ocean-current-m" === this.style) ? 0 : 180;
      e2.attributes.Direction = e2.attributes.Direction + i11, this.rotationVariables.forEach((i12) => D(M2, h(i12, e2), i12.axis));
    }
    return M2;
  }
  _createStyleRenderer(e2) {
    let M2 = { defaultSymbol: this._getDefaultSymbol(), classBreakInfos: [] };
    switch (e2) {
      case "single-arrow":
        M2 = this._createSingleArrowRenderer();
        break;
      case "beaufort-kn":
        M2 = this._createBeaufortKnotsRenderer();
        break;
      case "beaufort-m":
        M2 = this._createBeaufortMeterRenderer();
        break;
      case "beaufort-ft":
        M2 = this._createBeaufortFeetRenderer();
        break;
      case "beaufort-mi":
        M2 = this._createBeaufortMilesRenderer();
        break;
      case "beaufort-km":
        M2 = this._createBeaufortKilometersRenderer();
        break;
      case "ocean-current-m":
        M2 = this._createCurrentMeterRenderer();
        break;
      case "ocean-current-kn":
        M2 = this._createCurrentKnotsRenderer();
        break;
      case "simple-scalar":
        M2 = this._createSimpleScalarRenderer();
        break;
      case "wind-barb":
        M2 = this._createWindBarbsRenderer();
        break;
      case "classified-arrow":
        M2 = this._createClassifiedArrowRenderer();
    }
    return new z(M2);
  }
  _createSingleArrowRenderer() {
    return { defaultSymbol: this._getDefaultSymbol() };
  }
  _createBeaufortKnotsRenderer() {
    const e2 = [0, 1, 3, 6, 10, 16, 21, 27, 33, 40, 47, 55, 63], i10 = [[40, 146, 199], [89, 162, 186], [129, 179, 171], [160, 194, 155], [191, 212, 138], [218, 230, 119], [250, 250, 100], [252, 213, 83], [252, 179, 102], [250, 141, 52], [247, 110, 42], [240, 71, 29]];
    return { defaultSymbol: this._getDefaultSymbol(new l([214, 47, 39])), classBreakInfos: this._getClassBreaks(e2, i10) };
  }
  _createBeaufortMeterRenderer() {
    const e2 = [0, 0.2, 1.8, 3.3, 5.4, 8.5, 11, 14.1, 17.2, 20.8, 24.4, 28.6, 32.7], i10 = [[69, 117, 181], [101, 137, 184], [132, 158, 186], [162, 180, 189], [192, 204, 190], [222, 227, 191], [255, 255, 191], [255, 220, 161], [250, 185, 132], [245, 152, 105], [237, 117, 81], [232, 21, 21]];
    return { defaultSymbol: this._getDefaultSymbol(new l([214, 47, 39])), classBreakInfos: this._getClassBreaks(e2, i10) };
  }
  _createBeaufortFeetRenderer() {
    const e2 = this._getDefaultSymbol(new l([214, 47, 39]));
    let i10 = [0, 0.2, 1.8, 3.3, 5.4, 8.5, 11, 14.1, 17.2, 20.8, 24.4, 28.6, 32.7];
    const t3 = [[69, 117, 181], [101, 137, 184], [132, 158, 186], [162, 180, 189], [192, 204, 190], [222, 227, 191], [255, 255, 191], [255, 220, 161], [250, 185, 132], [245, 152, 105], [237, 117, 81], [232, 21, 21]], a14 = 3.28084;
    i10 = i10.map((e3) => e3 * a14);
    return { defaultSymbol: e2, classBreakInfos: this._getClassBreaks(i10, t3) };
  }
  _createBeaufortMilesRenderer() {
    const e2 = this._getDefaultSymbol(new l([214, 47, 39]));
    let i10 = [0, 0.2, 1.8, 3.3, 5.4, 8.5, 11, 14.1, 17.2, 20.8, 24.4, 28.6, 32.7];
    const t3 = [[69, 117, 181], [101, 137, 184], [132, 158, 186], [162, 180, 189], [192, 204, 190], [222, 227, 191], [255, 255, 191], [255, 220, 161], [250, 185, 132], [245, 152, 105], [237, 117, 81], [232, 21, 21]], a14 = 2.23694;
    i10 = i10.map((e3) => e3 * a14);
    return { defaultSymbol: e2, classBreakInfos: this._getClassBreaks(i10, t3) };
  }
  _createBeaufortKilometersRenderer() {
    const e2 = this._getDefaultSymbol(new l([214, 47, 39]));
    let i10 = [0, 0.2, 1.8, 3.3, 5.4, 8.5, 11, 14.1, 17.2, 20.8, 24.4, 28.6, 32.7];
    const t3 = [[69, 117, 181], [101, 137, 184], [132, 158, 186], [162, 180, 189], [192, 204, 190], [222, 227, 191], [255, 255, 191], [255, 220, 161], [250, 185, 132], [245, 152, 105], [237, 117, 81], [232, 21, 21]], a14 = 3.6;
    i10 = i10.map((e3) => e3 * a14);
    return { defaultSymbol: e2, classBreakInfos: this._getClassBreaks(i10, t3) };
  }
  _createCurrentMeterRenderer() {
    const e2 = [0, 0.5, 1, 1.5, 2], i10 = [[78, 26, 153], [179, 27, 26], [202, 128, 26], [177, 177, 177]];
    return { defaultSymbol: this._getDefaultSymbol(new l([177, 177, 177])), classBreakInfos: this._getClassBreaks(e2, i10) };
  }
  _createCurrentKnotsRenderer() {
    const e2 = [0, 0.25, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4], i10 = [[0, 0, 0], [0, 37, 100], [78, 26, 153], [151, 0, 100], [179, 27, 26], [177, 78, 26], [202, 128, 26], [177, 179, 52], [177, 177, 177]];
    return { defaultSymbol: this._getDefaultSymbol(new l([177, 177, 177])), classBreakInfos: this._getClassBreaks(e2, i10) };
  }
  _createClassifiedArrowRenderer() {
    var _a;
    const e2 = this._getDefaultSymbol(new l([56, 168, 0]));
    let i10 = [0, 1e-6, 3.5, 7, 10.5, 14];
    if ((_a = this.sizeVariables) == null ? void 0 : _a.length) {
      const e3 = this.sizeVariables[0].minDataValue, M2 = this.sizeVariables[0].maxDataValue;
      if (e3 && M2) {
        const t4 = (M2 - e3) / 5;
        i10 = Array.from(Array(6).keys()).map((M3) => e3 + t4 * M3);
      }
    }
    const t3 = [[56, 168, 0], [139, 309, 0], [255, 255, 0], [255, 128, 0], [255, 0, 0]];
    return { defaultSymbol: e2, classBreakInfos: this._getClassBreaks(i10, t3) };
  }
  _createSimpleScalarRenderer() {
    return { defaultSymbol: n5.fromJSON({ imageData: "iVBORw0KGgoAAAANSUhEUgAAACsAAAArCAQAAABLVLlLAAAABGdBTUEAAYagMeiWXwAAAAJiS0dEAACqjSMyAAAACXBIWXMAAABIAAAASABGyWs+AAAC3ElEQVRIx9XXvW4cVRQH8N982btpsIREJECyiCXsxX4DKh6AliqGKCBBE2SlwlHgAbBD/AKmyEYUeQ1KahPZSZQvBCkQLTHZ7KGY8Xodz4w3a1NwbzVzz/znfJ//zbStVC5q3icKak9GAs2QIdDx3PtW/S011NW3p+M5Eomh11ipTIKe6+4LQzHaQ+G+63pIZNJJQXMpljwTwj1brpgx5w1zZlyx5Z4QnllEIm2xeeSUHBf0hV0bejo1Uh09G3aFvgXk7cCJFBc9EdaRVuHJJaOdKyTV2TVhYLMduNR0Q9gxL5GaaTDw8GzejrDRBpxWoGsySRW0dttKuattwNkIlFw2YXgzOdYq4Ox49PlM+JrKd5OusjTWhBuVxUfMX/KXXZ3WEmkuqa67wspR4BTbwtKr/5u4fFgStse/T7EifFPnnYl9zPq4vmUOPrRndgoHjDti1gOPqlyXoifcRNGQzUd31lDyfHmob1Gp35vSr+P6vilcQ5Egtyd8YF/ySg9NhPM+9M/IOaHwp5+PSZayXTvCogEUwlatC3J8LLwYtcWB8EuDXQVuCkV5/B4eNHb7wGBs87LBDS+xjdVSn09wq1G8dFM+9tSUhIGneLvUdniKxKpTYljCpu3j7rVWlHj/P23v4NPGUEyeCQnexe9lJjzEQqMjJs+EzNAX6B98dBZVRmroJx95x/A/6gln18EyfCUsl+qdXb/tjvfbw+mwforpUOBz4XLVoBwAn3aWnfeH246NyBXhrq7TTN5lNSP9RkU+puUJm3W2Tsdq0nZWM07srk7MwQrZSRysjjGWBLRJNsNbfj2JMR4AbxpU1XLAb9Mxfpsq5EjMuuiR8L0JiHOOBX3hiUvOmavN0nMueSzcceFk0BK4pMqLo7vDD1Z0qrtDx7Itt4Xwm9UqbMmk8S0Dtuzb2pvOU99Z1nLTOfleNmvfZfP2pYZmPfajwosKdDBNpacNpVGGsWX9CyDI8Xq/Sj6QAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDE0LTExLTEwVDAzOjE3OjU4LTA1OjAwF+tHyQAAACV0RVh0ZGF0ZTptb2RpZnkAMjAxNC0xMS0xMFQwMzoxNzo1OC0wNTowMGa2/3UAAAAASUVORK5CYII=", height: 20, width: 20, type: "esriPMS", angle: 0 }) };
  }
  _createWindBarbsRenderer() {
    const e2 = Array.from(Array(31).keys()).map((e3) => 5 * e3), M2 = [{ range: "0-5", path: "M20 20 M5 20 A15 15 0 1 0 35 20 A15 15 0 1 0 5 20 M20 20 M10 20 A10 10 0 1 0 30 20 A10 10 0 1 0 10 20", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTIwIDIwIE01IDIwIEExNSAxNSAwIDEgMCAzNSAyMCBBMTUgMTUgMCAxIDAgNSAyMCBNMjAgMjAgTTEwIDIwIEExMCAxMCAwIDEgMCAzMCAyMCBBMTAgMTAgMCAxIDAgMTAgMjAiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "5-10", path: "M25 0 L25 40 M25 35 L17.5 37.5", imageData: "PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNyA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTTI1IDM1IEwxNy41IDM3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "10-15", path: "M25 0 L25 40 L10 45 L25 40", imageData: "PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNyA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTDEwIDQ1IEwyNSA0MCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "15-20", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L17.5 37.5", imageData: "PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjEyIDAgMTUgNDUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxNy41IDM3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "20-25", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L10 40", imageData: "PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNiA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTDEwIDQ1IEwyNSA0MCBNMjUgMzUgTDEwIDQwIiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+" }, { range: "25-30", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L17.5 32.5", imageData: "PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNiA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTDEwIDQ1IEwyNSA0MCBNMjUgMzUgTDEwIDQwIEwyNSAzNSBNMjUgMzAgTDE3LjUgMzIuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "30-35", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "35-40", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L17.5 27.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxNy41IDI3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "40-45", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "45-50", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L17.5 22.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxNy41IDIyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "50-55", path: "M25 0 L25 40 L10 40 L25 35", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "55-60", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L17.5 32.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxNy41IDMyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "60-65", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "65-70", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L17.5 27.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxNy41IDI3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "70-75", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "75-80", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L17.5 22.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxNy41IDIyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "80-85", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "85-90", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25 L25 20 M25 15 L17.5 17.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSBMMjUgMjAgTTI1IDE1IEwxNy41IDE3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "90-95", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25 L25 20 M25 15 L10 20", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSBMMjUgMjAgTTI1IDE1IEwxMCAyMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "95-100", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25 L25 20 M25 15 L10 20 L25 15 M25 10 L17.5 12.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSBMMjUgMjAgTTI1IDE1IEwxMCAyMCBMMjUgMTUgTTI1IDEwIEwxNy41IDEyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "100-105", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "105-110", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L17.5 27.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDE3LjUgMjcuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "110-115", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+" }, { range: "115-120", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L17.5 22.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDE3LjUgMjIuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "120-125", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+" }, { range: "125-130", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L17.5 17.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDE3LjUgMTcuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "130-135", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+" }, { range: "135-140", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20 M25 15 M25 10 L17.5 12.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIE0yNSAxNSBNMjUgMTAgTDE3LjUgMTIuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "140-145", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20 M25 15 M25 10 L17.5 12.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIE0yNSAxNSBNMjUgMTAgTDEwIDE1IiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+" }, { range: "145-150", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20 M25 15 M25 10 L17.5 12.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIE0yNSAxNSBNMjUgMTAgTDEwIDE1IE0yNSAxMCBNMjUgNSBMMTcuNSA3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }], i10 = n5.fromJSON({ imageData: "iVBORw0KGgoAAAANSUhEUgAAACgAAAApCAQAAADtq6NDAAAABGdBTUEAALGPC/xhBQAAAAFzUkdCAK7OHOkAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAJiS0dEAP+Hj8y/AAAACXBIWXMAAA7DAAAOwwHHb6hkAAAEY0lEQVRIx5XXWWxWRRQH8N+d+31tUdGAVjGglYJABFEBY91jfDAg7piYaFTccA++uMQEFRcSXlATtxiXqMQt4G4iisYl0ai4sIQYtVFZ1KIFKdTS0l4f7vRCS5fPebozc+bM/2z/Mzcx0AgSiUxXnKfIdMn875FIhX53U2n/B/s+kKM4UINTjTBZImixxnrv+9a2iL6zEoUBXcoudrWj/OtHm3wt02lfU9Qao9OnHvIhgmww84MEl1qnxfNmGrqHxAizLdPpC6chGcAxKGGcL+30gOERf1BSpUqVslQSV8d5ReZFe8VQ9avufJn31cWwlJV7iafKStGOE/1qvfH9qUxxu8ydUdmuSKbGO8YUdT2inKLG69pM70tliktl5qIkCAJGmusDG7Vqsc0WjZa4UBlBiA5YZIcjYzB7qDtH5kaUJFLs7RGZTZ42W4PRRmtwvbdt1+wGiaS4drEtDttdZYIDNVuAclR3vA3+dI3qHqmVSy7U6Tv1MScCPvPR7nIpFlsdCy3FdTLPGhK92e2CUITjMJ9ocwKxnsZqc3O3JwMma3d6UVLnyVxB4aXemZqvPqLdpJhW3KVVbY4yYImPo6M5Urv50fj+0z/FG9YaEiENs8UtMfXUaTeTePNHlhXfA1UU+2lyD1Il3Gtt9+adfpNG7dNlpg2U/T3KYLZ2dUWFdTgp3/rQ4sK973qnInV5TIf40x3dhvrJPBiqyWUo4wAtLqhQYS71qK+QKOFRywmGK/kpikzV6WMKhh58vGWs4TIJNjiEYLIuP8Tt4/zmLyqk+AyrJSbF+Qq1DgqRUPMxyl+9q3IQhX/rMCJ6tEunriDs1oSyQZKlr9AkhT2ZIARbJfaJS1vtVbHB+Rgi0RK/y1q1BWsEEyLoz40xtGKcARPVWB1BTPO7f4LNtpkUl1aoMbViLyZo0GRjPD3BxnxjqXeLYlvhqYrzMMG3HoyJXa3JjfnGlbYYFlP7Jh3qKsKY4hQ7TY0nG+xwRL61n63mxHtqNHosigyMLmClNwvuecFnOZB88nNBDzNkzhxEZaKMBVoKapggMzvHHXBEpNSSFAvtcFRsVn0bW8LlMmcXs+c0Kne3gRR32+zg4uXwjC6zit6Wt4a8LXVfcp/MtQXHn2ynGbuCmb8GvvFeJLEE82ReU9/n6+dkq2x3buG9Wn94smcgAw631RPR7BTH+kbmHReZoEpOdEe7zWqZl40s0JWs9Hmv7hjBHqPDwsjGKVJnWWqjbdZp1KhJi0aPmxYZsIRhlttgeF+Jlke41QcOQKoqilSb6HJzSvNG3G/UoWnxwsmt+sVaYwd63dRbqdnMyCPVeyRPvpYgdavM22oGKoMUVRbJfOWMwidJ8Zzb1UvmWK/VVUXzHaTjjrVYh1897HT7xxYEVUaa5SWb/WO+YUWa9SrwvigzM8YlzlYv2GSdVCYxxlBtVnnFq5olwp5/BEk/OLsf5LUmG2+inRJdVvjZ97ZH9/zP34ug1O91pf4p+D+JYBpvrKxfbwAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxNC0xMS0xMFQwMzoxMjowOS0wNTowMB9ViV0AAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTQtMTEtMTBUMDM6MTI6MDktMDU6MDBuCDHhAAAAAElFTkSuQmCC", height: 20, width: 20, type: "esriPMS", angle: 0 }), t3 = e2.map((t4, a14) => {
      let I2;
      if (a14 !== e2.length - 1) if (0 === a14) I2 = { minValue: t4, maxValue: e2[a14 + 1], symbol: i10 };
      else {
        const i11 = n5.fromJSON({ type: "esriPMS", imageData: M2[a14].imageData, contentType: "image/svg+xml", height: 32, width: 32, angle: 0 });
        I2 = { minValue: t4, maxValue: e2[a14 + 1], symbol: i11 };
      }
      return new a5(I2);
    });
    return { defaultSymbol: i10, classBreakInfos: t3 };
  }
  _getClassBreaks(e2, i10) {
    return i10.map((i11, t3) => new a5({ minValue: e2[t3], maxValue: e2[t3 + 1], symbol: this._getDefaultSymbol(new l(i11)) }));
  }
};
r([m({ type: ["Magnitude"], json: { write: true } })], b2.prototype, "attributeField", void 0), r([m({ type: Z.apiValues, json: { type: Z.jsonValues, read: { reader: Z.read }, write: { writer: Z.write } } })], b2.prototype, "flowRepresentation", void 0), r([m({ type: ["geographic", "arithmetic"], json: { write: true } })], b2.prototype, "rotationType", void 0), r([m({ type: u3.apiValues, json: { type: u3.jsonValues, read: { reader: u3.read }, write: { writer: u3.write } } })], b2.prototype, "style", void 0), r([m({ json: { write: true } })], b2.prototype, "symbolTileSize", void 0), r([m({ type: s5.apiValues, json: { type: s5.jsonValues, write: { writer: s5.write } } })], b2.prototype, "inputUnit", void 0), r([o("inputUnit")], b2.prototype, "readInputUnit", null), r([m({ type: s5.apiValues, json: { type: s5.jsonValues, read: { reader: s5.read }, write: { writer: s5.write } } })], b2.prototype, "outputUnit", void 0), r([o("outputUnit")], b2.prototype, "readOutputUnit", null), r([r3({ vectorField: "vector-field" })], b2.prototype, "type", void 0), r([m({ type: z })], b2.prototype, "styleRenderer", null), r([m({ type: b })], b2.prototype, "sizeVariables", null), r([m({ type: a4 })], b2.prototype, "rotationVariables", null), b2 = S2 = r([a2("esri.renderers.VectorFieldRenderer")], b2);
var h4 = b2;

// node_modules/@arcgis/core/rasterRenderers.js
var l6 = { key: "type", base: null, typeMap: { "unique-value": A, "class-breaks": z, "raster-colormap": l4, "raster-stretch": g4, "vector-field": h4, "raster-shaded-relief": m7, flow: u2 } };
var d7 = { ...l6, typeMap: { ...l6.typeMap } };
delete d7.typeMap["vector-field"], delete d7.typeMap.flow;
var p9 = { uniqueValue: A, classBreaks: z, rasterStretch: g4, rasterColormap: l4, vectorField: h4, rasterShadedRelief: m7, flowRenderer: u2 };
function u4(e2) {
  return e2 && p9[e2.type] || null;
}
function c7(r5, s6) {
  if (!r5) return null;
  if ("classBreaks" === r5.type && r5.classificationMethod) {
    const e2 = r5.authoringInfo || { classificationMethod: "" };
    e2.classificationMethod = r5.classificationMethod, r5.authoringInfo = e2;
  }
  "vectorField" === r5.type && r5.visualVariables && !Array.isArray(r5.visualVariables) && (r5.visualVariables = [r5.visualVariables]);
  const t3 = u4(r5);
  if (t3) {
    const e2 = new t3();
    return e2.read(r5, s6), e2;
  }
  return (s6 == null ? void 0 : s6.messages) && r5 && s6.messages.push(new s2("renderer:unsupported", "Renderers of type '" + (r5.type || "unknown") + "' are not supported", { definition: r5, context: s6 })), null;
}

// node_modules/@arcgis/core/renderers/support/RasterPresetRenderer.js
var c8 = class extends i3(f) {
  constructor(e2) {
    super(e2), this.name = void 0, this.method = "none", this.value = void 0, this.bandIds = void 0, this.renderer = void 0;
  }
};
r([m({ type: String, json: { write: true } })], c8.prototype, "name", void 0), r([m({ type: ["raster-function-template", "variable", "none"], json: { write: true } }), r3({ rasterFunctionTemplate: "raster-function-template", variable: "variable", none: "none" })], c8.prototype, "method", void 0), r([m({ type: String, json: { write: true } })], c8.prototype, "value", void 0), r([m({ type: [x], json: { write: true } })], c8.prototype, "bandIds", void 0), r([m({ types: l6, json: { write: true, origins: { "web-scene": { types: d7, write: { overridePolicy: (e2) => ({ enabled: e2 && "vector-field" !== e2.type && "flow" !== e2.type }) } } } } })], c8.prototype, "renderer", void 0), c8 = r([a2("esri.renderers.support.RasterPresetRenderer")], c8);
var d8 = c8;

// node_modules/@arcgis/core/layers/mixins/RasterPresetRendererMixin.js
var o4 = (o5) => {
  let i10 = class extends o5 {
    constructor() {
      super(...arguments), this.activePresetRendererName = null, this.presetRenderers = null;
    }
  };
  return r([m({ type: String, json: { name: "layerDefinition.activePresetRendererName", write: { allowNull: true } } })], i10.prototype, "activePresetRendererName", void 0), r([m({ type: [d8], json: { name: "layerDefinition.presetRenderers", write: true } })], i10.prototype, "presetRenderers", void 0), i10 = r([a2("esri.layers.mixins.RasterPresetRendererMixin")], i10), i10;
};

// node_modules/@arcgis/core/layers/support/MosaicRule.js
var m8;
var h5 = i2()({ MT_FIRST: "first", MT_LAST: "last", MT_MIN: "min", MT_MAX: "max", MT_MEAN: "mean", MT_BLEND: "blend", MT_SUM: "sum" });
var w2 = i2()({ esriMosaicNone: "none", esriMosaicCenter: "center", esriMosaicNadir: "nadir", esriMosaicViewpoint: "viewpoint", esriMosaicAttribute: "attribute", esriMosaicLockRaster: "lock-raster", esriMosaicNorthwest: "northwest", esriMosaicSeamline: "seamline" });
function M(e2) {
  let t3;
  switch (e2 ? e2.toLowerCase().replace("esrimosaic", "") : "") {
    case "byattribute":
    case "attribute":
      t3 = "esriMosaicAttribute";
      break;
    case "lockraster":
      t3 = "esriMosaicLockRaster";
      break;
    case "center":
      t3 = "esriMosaicCenter";
      break;
    case "northwest":
      t3 = "esriMosaicNorthwest";
      break;
    case "nadir":
      t3 = "esriMosaicNadir";
      break;
    case "viewpoint":
      t3 = "esriMosaicViewpoint";
      break;
    case "seamline":
      t3 = "esriMosaicSeamline";
      break;
    default:
      t3 = "esriMosaicNone";
  }
  return w2.fromJSON(t3);
}
var y6 = m8 = class extends f {
  constructor(e2) {
    super(e2), this.ascending = true, this.itemRasterFunction = null, this.lockRasterIds = null, this.method = null, this.multidimensionalDefinition = null, this.objectIds = null, this.operation = null, this.sortField = null, this.sortValue = null, this.viewpoint = null, this.where = null;
  }
  readAscending(e2, t3) {
    return null != t3.ascending ? t3.ascending : null == t3.sortAscending || t3.sortAscending;
  }
  readMethod(e2, t3) {
    return M(t3.mosaicMethod || t3.defaultMosaicMethod);
  }
  writeMultidimensionalDefinition(e2, t3, o5) {
    null != e2 && (e2 = e2.filter(({ variableName: e3, dimensionName: t4 }) => e3 && "*" !== e3 || t4)).length && (t3[o5] = e2.map((e3) => e3.toJSON()));
  }
  readOperation(e2, t3) {
    var _a;
    const o5 = t3.mosaicOperation, r5 = (_a = t3.mosaicOperator) == null ? void 0 : _a.toLowerCase(), i10 = o5 || (r5 ? h5.toJSON(r5) : null);
    return h5.fromJSON(i10) || "first";
  }
  castSortValue(e2) {
    return null == e2 || "string" == typeof e2 || "number" == typeof e2 ? e2 : `${e2}`;
  }
  clone() {
    return new m8({ ascending: this.ascending, itemRasterFunction: a(this.itemRasterFunction), lockRasterIds: a(this.lockRasterIds), method: this.method, multidimensionalDefinition: a(this.multidimensionalDefinition), objectIds: a(this.objectIds), operation: this.operation, sortField: this.sortField, sortValue: this.sortValue, viewpoint: a(this.viewpoint), where: this.where });
  }
};
r([m({ type: Boolean, json: { write: true } })], y6.prototype, "ascending", void 0), r([o("ascending", ["ascending", "sortAscending"])], y6.prototype, "readAscending", null), r([m({ type: N, json: { name: "itemRenderingRule", write: true } })], y6.prototype, "itemRasterFunction", void 0), r([m({ type: [x], json: { write: { overridePolicy() {
  return { enabled: "lock-raster" === this.method };
} } } })], y6.prototype, "lockRasterIds", void 0), r([m({ type: String, json: { type: w2.jsonValues, write: { target: "mosaicMethod", writer: w2.write } } })], y6.prototype, "method", void 0), r([o("method", ["mosaicMethod", "defaultMosaicMethod"])], y6.prototype, "readMethod", null), r([m({ type: [p5], json: { write: true } })], y6.prototype, "multidimensionalDefinition", void 0), r([r2("multidimensionalDefinition")], y6.prototype, "writeMultidimensionalDefinition", null), r([m({ type: [x], json: { name: "fids", write: true } })], y6.prototype, "objectIds", void 0), r([m({ json: { type: h5.jsonValues, read: { reader: h5.read }, write: { target: "mosaicOperation", writer: h5.write } } })], y6.prototype, "operation", void 0), r([o("operation", ["mosaicOperation", "mosaicOperator"])], y6.prototype, "readOperation", null), r([m({ type: String, json: { write: { overridePolicy() {
  return { enabled: "attribute" === this.method };
} } } })], y6.prototype, "sortField", void 0), r([m({ type: [String, Number], json: { write: { allowNull: true, overridePolicy() {
  return { enabled: "attribute" === this.method, allowNull: true };
} } } })], y6.prototype, "sortValue", void 0), r([s3("sortValue")], y6.prototype, "castSortValue", null), r([m({ type: j, json: { write: true } })], y6.prototype, "viewpoint", void 0), r([m({ type: String, json: { write: true } })], y6.prototype, "where", void 0), y6 = m8 = r([a2("esri.layers.support.MosaicRule")], y6);
var f6 = y6;

// node_modules/@arcgis/core/layers/support/MultidimensionalSubset.js
var l7;
var p10 = { base: n3, key: "type", typeMap: { extent: w, polygon: v } };
var u5 = l7 = class extends f {
  constructor(e2) {
    super(e2), this.areaOfInterest = null, this.subsetDefinitions = null;
  }
  get dimensions() {
    const { subsetDefinitions: e2 } = this;
    if (null == e2 || 0 === e2.length) return [];
    const t3 = /* @__PURE__ */ new Map();
    e2.forEach((e3) => {
      if (!e3.dimensionName) return;
      let s7, o5;
      if (Array.isArray(e3.values[0])) {
        const t4 = e3.values;
        s7 = t4[0][0], o5 = t4[e3.values.length - 1][1];
      } else {
        const t4 = e3.values;
        s7 = t4[0], o5 = t4[e3.values.length - 1];
      }
      if (t3.has(e3.dimensionName)) {
        const r5 = t3.get(e3.dimensionName);
        r5[0] = Math.min(s7, r5[0]), r5[1] = Math.max(o5, r5[1]);
      } else t3.set(e3.dimensionName, [s7, o5]);
    });
    const s6 = [];
    for (const o5 of t3) s6.push({ name: o5[0], extent: o5[1] });
    return s6;
  }
  get variables() {
    const { subsetDefinitions: e2 } = this;
    if (null == e2 || 0 === e2.length) return [];
    const t3 = /* @__PURE__ */ new Set();
    return e2.forEach((e3) => {
      e3.variableName && t3.add(e3.variableName);
    }), [...t3];
  }
  clone() {
    var _a;
    const e2 = (_a = this.subsetDefinitions) == null ? void 0 : _a.map((e3) => e3.clone()), t3 = this.areaOfInterest ? this.areaOfInterest.clone() : this.areaOfInterest;
    return new l7({ areaOfInterest: t3, subsetDefinitions: e2 });
  }
};
r([m({ types: p10, json: { read: f2, write: true } })], u5.prototype, "areaOfInterest", void 0), r([m({ readOnly: true })], u5.prototype, "dimensions", null), r([m({ readOnly: true })], u5.prototype, "variables", null), r([m({ type: [p5], json: { write: true } })], u5.prototype, "subsetDefinitions", void 0), u5 = l7 = r([a2("esri.layers.support.MultidimensionalSubset")], u5);
var c9 = u5;

// node_modules/@arcgis/core/layers/support/RasterJobHandler.js
var t2 = class {
  constructor() {
    this._workerThread = null, this._destroyed = false;
  }
  async initialize() {
    const e2 = await p6("RasterWorker");
    this._destroyed ? e2.close() : this._workerThread = e2;
  }
  destroy() {
    this._destroyed = true, this._workerThread && (this._workerThread.close(), this._workerThread = null);
  }
  async convertVectorFieldData(r5, t3) {
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const n12 = await this._workerThread.invoke("convertVectorFieldData", { pixelBlock: r5.pixelBlock.toJSON(), type: r5.dataType }, t3);
    return n12 ? new g2(n12) : null;
  }
  computeStatisticsHistograms(r5, o5) {
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    return this._workerThread.invoke("computeStatisticsHistograms", { pixelBlock: r5.pixelBlock.toJSON() }, o5);
  }
  async decode(r5, t3) {
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const n12 = await this._workerThread.invoke("decode", r5, t3);
    return n12 ? new g2(n12) : null;
  }
  async symbolize(r5, t3) {
    var _a, _b;
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const n12 = { extent: (_a = r5.extent) == null ? void 0 : _a.toJSON(), pixelBlock: (_b = r5.pixelBlock) == null ? void 0 : _b.toJSON(), simpleStretchParams: r5.simpleStretchParams, bandIds: r5.bandIds }, a14 = await this._workerThread.invoke("symbolize", n12, t3);
    return a14 ? new g2(a14) : null;
  }
  async updateSymbolizer(r5, o5) {
    var _a;
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const t3 = (_a = r5 == null ? void 0 : r5.rendererJSON) == null ? void 0 : _a.histograms;
    await Promise.all(this._workerThread.broadcast("updateSymbolizer", { symbolizerJSON: r5.toJSON(), histograms: t3 }, o5));
  }
  async updateRasterFunction(r5, o5) {
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    await Promise.all(this._workerThread.broadcast("updateRasterFunction", { rasterFunctionJSON: r5.toJSON() }, o5));
  }
  async process(r5, t3) {
    var _a, _b;
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const n12 = await this._workerThread.invoke("process", { extent: (_a = r5.extent) == null ? void 0 : _a.toJSON(), primaryPixelSizes: (_b = r5.primaryPixelSizes) == null ? void 0 : _b.map((e2) => null != e2 ? e2.toJSON() : null), primaryPixelBlocks: r5.primaryPixelBlocks.map((e2) => null != e2 ? e2.toJSON() : null), primaryRasterIds: r5.primaryRasterIds }, t3);
    return n12 ? new g2(n12) : null;
  }
  async stretch(r5, t3) {
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    if (!(r5 == null ? void 0 : r5.pixelBlock)) return null;
    const n12 = { srcPixelBlock: r5.pixelBlock.toJSON(), stretchParams: r5.stretchParams }, a14 = await this._workerThread.invoke("stretch", n12, t3);
    return a14 ? new g2(a14) : null;
  }
  async split(r5, t3) {
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    if (!(r5 == null ? void 0 : r5.pixelBlock)) return null;
    const n12 = { srcPixelBlock: r5.pixelBlock.toJSON(), tileSize: r5.tileSize, maximumPyramidLevel: r5.maximumPyramidLevel, useBilinear: r5.useBilinear }, a14 = await this._workerThread.invoke("split", n12, t3);
    return a14 && a14.forEach((e2, r6) => {
      a14.set(r6, e2 ? g2.fromJSON(e2) : null);
    }), a14;
  }
  async clipTile(r5, t3) {
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    if (!(r5 == null ? void 0 : r5.pixelBlock)) return null;
    const n12 = { ...r5, pixelBlock: r5.pixelBlock.toJSON() }, a14 = await this._workerThread.invoke("clipTile", n12, t3);
    return a14 ? g2.fromJSON(a14) : null;
  }
  async estimateStatisticsHistograms(r5, o5) {
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    if (!(r5 == null ? void 0 : r5.pixelBlock)) return null;
    const t3 = { srcPixelBlock: r5.pixelBlock.toJSON() };
    return await this._workerThread.invoke("estimateStatisticsHistograms", t3, o5);
  }
  async mosaicAndTransform(r5, t3) {
    var _a;
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    if (!((_a = r5 == null ? void 0 : r5.srcPixelBlocks) == null ? void 0 : _a.length)) return { pixelBlock: null };
    const n12 = { ...r5, srcPixelBlocks: r5.srcPixelBlocks.map((e2) => null != e2 ? e2.toJSON() : null) }, a14 = await this._workerThread.invoke("mosaicAndTransform", n12, t3);
    return { pixelBlock: a14.pixelBlock ? new g2(a14.pixelBlock) : null, localNorthDirections: a14.localNorthDirections };
  }
  async createFlowMesh(r5, o5) {
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const t3 = { buffer: r5.flowData.data.buffer, maskBuffer: r5.flowData.mask.buffer, width: r5.flowData.width, height: r5.flowData.height }, { meshType: n12, simulationSettings: a14 } = r5, i10 = await this._workerThread.invoke("createFlowMesh", { meshType: n12, flowData: t3, simulationSettings: a14 }, { ...o5, transferList: [t3.buffer, t3.maskBuffer] });
    return { vertexData: new Float32Array(i10.vertexBuffer), indexData: new Uint32Array(i10.indexBuffer) };
  }
  getProjectionOffsetGrid(r5, o5) {
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const t3 = null != r5.datumTransformation ? r5.datumTransformation.steps.map((e2) => ({ wkid: e2.wkid, wkt: e2.wkt, isInverse: e2.isInverse })) : null, n12 = null != r5.rasterTransform ? r5.rasterTransform.toJSON() : null, a14 = { projectedExtent: r5.projectedExtent.toJSON(), srcBufferExtent: r5.srcBufferExtent.toJSON(), pixelSize: r5.pixelSize, hasWrapAround: r5.hasWrapAround, spacing: r5.spacing, datumTransformationSteps: t3, rasterTransform: n12, isAdaptive: r5.isAdaptive, includeGCSGrid: r5.includeGCSGrid };
    return this._workerThread.invoke("getProjectionOffsetGrid", a14, o5);
  }
};

// node_modules/@arcgis/core/renderers/support/rasterRendererHelper.js
var I = 0.25;
var S3 = a3.fromJSON({ type: "multipart", colorRamps: [{ fromColor: [0, 0, 255], toColor: [0, 255, 255] }, { fromColor: [0, 255, 255], toColor: [255, 255, 0] }, { fromColor: [255, 255, 0], toColor: [255, 0, 0] }] });
var k = a3.fromJSON(m3[0]);
var F2 = /* @__PURE__ */ new Set(["scientific", "standard-time", "vector-uv", "vector-magdir", "vector-u", "vector-v", "vector-magnitude", "vector-direction"]);
function L(e2) {
  var _a;
  return (_a = e2.presetRenderers) == null ? void 0 : _a.find(({ method: t3, value: n12 }) => "raster-function-template" === t3 ? n12 === e2.rasterFunctionName : "variable" === t3 && n12 === e2.variableName);
}
function q(e2, t3) {
  const { attributeTable: n12, colormap: a14 } = e2;
  if (o3(e2)) {
    const t4 = Z2(e2);
    if (null != t4) return t4;
  }
  if (t3 == null ? void 0 : t3.rasterFunctionColorRamp) {
    const n13 = N2(e2, t3);
    return n13.colorRamp = t3.rasterFunctionColorRamp, n13;
  }
  if (null != a14) {
    const t4 = H(e2);
    if (null != t4) return t4;
  }
  if (null != n12) {
    const t4 = J(e2);
    if (null != t4) return t4;
  }
  return N2(e2, t3);
}
function B2(e2, t3 = false) {
  const n12 = ["raster-stretch"];
  return u(e2, t3) && n12.push("raster-colormap"), t(e2) && n12.push("unique-value"), r4(e2, t3) && n12.push("class-breaks"), e(e2) && n12.push("raster-shaded-relief"), o3(e2) && n12.push("vector-field"), i5(e2) && n12.push("flow"), n12;
}
function E(e2) {
  return "Function" === e2.datasetFormat && "Colormap" === e2.rasterFunction.functionName ? e2.rasterFunction.colorRamp : void 0;
}
function z4(e2, t3, n12) {
  const a14 = ["nearest", "bilinear", "cubic", "majority"], r5 = n12 == null ? void 0 : n12.toLowerCase().replace("bicubic", "cubic"), l8 = a14.find((e3) => e3 === r5);
  if ("Map" === t3) return l8 ?? "bilinear";
  if ("standard-time" === e2.dataType) return l8 ?? "nearest";
  return "thematic" === e2.dataType || e2.attributeTable || e2.colormap ? "nearest" === l8 || "majority" === l8 ? l8 : "nearest" : l8 ?? "bilinear";
}
function N2(e2, t3) {
  var _a;
  e2 = W(e2, t3 == null ? void 0 : t3.variableName);
  const { bandCount: n12 } = e2;
  let { bandIds: a14, stretchType: r5 } = t3 || {};
  (a14 == null ? void 0 : a14.some((e3) => e3 >= n12)) && (a14 = null);
  let l8 = e2.statistics, s6 = e2.histograms;
  n12 > 1 ? (a14 = (a14 == null ? void 0 : a14.length) ? a14 : U2(e2), l8 = null == l8 ? null : a14 == null ? void 0 : a14.map((e3) => l8[e3]), s6 = null == s6 ? null : a14 == null ? void 0 : a14.map((e3) => s6[e3])) : a14 = [0], null == r5 && (r5 = A2(e2)), (t3 == null ? void 0 : t3.includeStatisticsInStretch) && ("percent-clip" === r5 || "histogram-equalization" === r5) && ((_a = e2.statistics) == null ? void 0 : _a.length) && (r5 = "min-max");
  let i10 = false;
  switch (r5) {
    case "none":
      i10 = false;
      break;
    case "percent-clip":
      i10 = !(s6 == null ? void 0 : s6.length);
      break;
    default:
      i10 = !(l8 == null ? void 0 : l8.length);
  }
  const { dataType: o5 } = e2, u6 = 1 === (a14 == null ? void 0 : a14.length) && F2.has(o5) ? S3 : null, m10 = new g4({ stretchType: r5, dynamicRangeAdjustment: i10, colorRamp: u6, outputMin: 0, outputMax: 255, gamma: 1 === (a14 == null ? void 0 : a14.length) ? [1] : [1, 1, 1], useGamma: false });
  return "percent-clip" === r5 ? m10.maxPercent = m10.minPercent = I : "standard-deviation" === r5 && (m10.numberOfStandardDeviations = 2), i10 || null == e2.multidimensionalInfo && !(t3 == null ? void 0 : t3.includeStatisticsInStretch) || ("percent-clip" === r5 ? m10.histograms = s6 : "min-max" !== r5 && "standard-deviation" !== r5 || (m10.statistics = l8)), m10;
}
function W(e2, t3) {
  const { multidimensionalInfo: n12 } = e2;
  if (!t3 || !n12) return e2;
  const a14 = n12.variables.find((e3) => e3.name === t3);
  if (!a14) return e2;
  if (e2 = e2.clone(), a14) {
    const { statistics: t4, histograms: n13 } = a14;
    (t4 == null ? void 0 : t4.length) && (e2.statistics = t4.map((e3) => ({ min: e3.min, max: e3.max, avg: e3.avg, stddev: e3.stddev }))), (n13 == null ? void 0 : n13.length) && (e2.histograms = n13);
  }
  return e2;
}
function U2(e2) {
  const t3 = e2.bandCount;
  if (1 === t3) return null;
  if (2 === t3) return [0];
  const { bandInfos: n12 } = e2;
  let a14;
  if (n12.length === t3) {
    const { red: e3, green: t4, blue: r5, nir: l8 } = O(n12);
    null != e3 && null != t4 && null != r5 ? a14 = [e3, t4, r5] : null != l8 && null != e3 && null != t4 && (a14 = [l8, e3, t4]);
  }
  return !a14 && t3 >= 3 && (a14 = [0, 1, 2]), a14;
}
function O(e2) {
  const t3 = {};
  for (let n12 = 0; n12 < e2.length; n12++) {
    const a14 = e2[n12], r5 = a14.name.toLowerCase();
    if ("red" === r5) t3.red = n12;
    else if ("green" === r5) t3.green = n12;
    else if ("blue" === r5) t3.blue = n12;
    else if ("nearinfrared" === r5 || "nearinfrared_1" === r5 || "nir" === r5) t3.nir = n12;
    else if (a14.maxWavelength && a14.minWavelength) {
      const e3 = a14.minWavelength, r6 = a14.maxWavelength;
      null == t3.blue && e3 >= 410 && e3 <= 480 && r6 >= 480 && r6 <= 540 ? t3.blue = n12 : null == t3.green && e3 >= 490 && e3 <= 560 && r6 >= 560 && r6 <= 610 ? t3.green = n12 : null == t3.red && e3 >= 595 && e3 <= 670 && r6 >= 660 && r6 <= 730 ? t3.red = n12 : null == t3.nir && e3 >= 700 && e3 <= 860 && r6 >= 800 && r6 <= 950 && (t3.nir = n12);
    }
  }
  return t3;
}
function A2(e2) {
  let t3 = "percent-clip";
  const { pixelType: n12, dataType: a14, histograms: r5, statistics: l8, multidimensionalInfo: s6 } = e2, i10 = F2.has(a14) || "generic" === a14 && null != s6;
  return "u8" !== n12 || "processed" !== a14 && null != r5 && null != l8 ? "u8" === n12 || "elevation" === a14 || i10 ? t3 = "min-max" : null != r5 ? t3 = "percent-clip" : null != l8 && (t3 = "min-max") : t3 = "none", t3;
}
function J(t3, n12, a14, l8) {
  if (!t(t3, n12)) return null;
  const { attributeTable: s6, statistics: o5 } = t3, u6 = P(s6, n12), c11 = _(s6, "red"), f8 = _(s6, "green"), p13 = _(s6, "blue"), b3 = new j2(), h6 = [], g6 = /* @__PURE__ */ new Set(), v3 = !!(c11 && f8 && p13);
  if (null != s6) s6.features.forEach((t4) => {
    const n13 = t4.attributes[u6.name];
    if (!g6.has(t4.attributes[u6.name]) && null != n13) {
      g6.add(n13);
      const a15 = v3 && ("single" === c11.type || "double" === c11.type) && ("single" === f8.type || "double" === f8.type) && ("single" === p13.type || "double" === p13.type) && !s6.features.some((e2) => e2.attributes[c11.name] > 1 || e2.attributes[f8.name] > 1 || e2.attributes[p13.name] > 1), r5 = a15 ? 255 : 1;
      h6.push(new n6({ value: t4.attributes[u6.name], label: t4.attributes[u6.name] + "", symbol: new S({ style: "solid", outline: null, color: new l(v3 ? [t4.attributes[c11.name] * r5, t4.attributes[f8.name] * r5, t4.attributes[p13.name] * r5, 1] : [0, 0, 0, 0]) }) }));
    }
  });
  else if (o5 == null ? void 0 : o5[0]) for (let r5 = o5[0].min; r5 <= o5[0].max; r5++) h6.push(new n6({ value: r5, label: r5.toString(), symbol: new S({ style: "solid", outline: null, color: new l([0, 0, 0, 0]) }) }));
  if (h6.sort((e2, t4) => e2.value && "string" == typeof e2.value.valueOf() ? 0 : e2.value > t4.value ? 1 : -1), !v3) {
    const t4 = B(k, { numColors: h6.length });
    h6.forEach((n13, a15) => n13.symbol.color = new l(t4[a15].slice(1, 4))), b3.colorRamp = k;
  }
  if (a14 || l8) {
    const t4 = a14 || B(l8, { numColors: h6.length }).map((e2) => e2.slice(1));
    h6.forEach((n13, a15) => n13.symbol.color = new l(t4[a15])), b3.colorRamp = l8;
  }
  return new A({ field: u6.name, uniqueValueInfos: h6, authoringInfo: b3 });
}
function P(e2, t3, a14) {
  let r5;
  return null != e2 ? (r5 = t3 ? e2.fields.find((e3) => t3.toLowerCase() === e3.name.toLowerCase()) : G(e2.fields), r5 || (a14 || (r5 = e2.fields.find((e3) => "string" === e3.type)), r5 || (r5 = _(e2, "value")))) : r5 = new y({ name: "value" }), r5;
}
function G(e2) {
  let t3;
  for (let n12 = 0; n12 < e2.length; n12++) {
    const a14 = e2[n12].name.toLowerCase();
    if ("string" === e2[n12].type) {
      if (a14.startsWith("class")) {
        t3 = e2[n12];
        break;
      }
      null == t3 && (a14.endsWith("name") || a14.endsWith("type")) && (t3 = e2[n12]);
    }
  }
  return t3;
}
function _(e2, t3) {
  return null == e2 ? null : e2.fields.find((e3) => e3.name.toLowerCase() === t3);
}
function H(e2) {
  if (!u(e2)) return null;
  let t3;
  const { attributeTable: n12, colormap: a14 } = e2;
  if (null != n12) {
    const e3 = _(n12, "value"), a15 = P(n12, null, true);
    "string" === a15.type && (t3 = {}, n12.features.forEach((n13) => {
      const r5 = n13.attributes;
      t3[r5[e3.name]] = a15 ? r5[a15.name] : r5[e3.name];
    }));
  }
  return l4.createFromColormap(a14, t3);
}
var Y = /* @__PURE__ */ new Map([["m/s", "meter-per-second"], ["km/h", "kilometer-per-hour"], ["knots", "knots"], ["ft/s", "feet-per-second"], ["mph", "mile-per-hour"]]);
function Z2(e2) {
  if (!o3(e2)) return null;
  let t3;
  if (null != e2.statistics && e2.statistics.length && ("vector-magdir" === e2.dataType || "vector-uv" === e2.dataType)) {
    const { minMagnitude: n13, maxMagnitude: a15 } = ne(e2.dataType, e2.statistics);
    t3 = [new b({ field: "Magnitude", minSize: 10, maxSize: 40, minDataValue: n13, maxDataValue: a15 })];
  }
  const n12 = null != e2.multidimensionalInfo ? Y.get(e2.multidimensionalInfo.variables[0].unit) : void 0, a14 = new h4({ visualVariables: t3, inputUnit: n12, rotationType: "geographic" });
  return a14.visualVariables = [...a14.sizeVariables, ...a14.rotationVariables], a14;
}
function $(e2) {
  var _a;
  return { color: (_a = e2.symbolLayers[0].material) == null ? void 0 : _a.color, type: "esriSFS", style: "esriSFSSolid" };
}
function ee(e2) {
  var _a, _b;
  if ("uniqueValue" === e2.type) {
    const t3 = e2.uniqueValueInfos, n12 = t3 == null ? void 0 : t3[0].symbol;
    return ((_a = n12 == null ? void 0 : n12.symbolLayers) == null ? void 0 : _a.length) && (e2.uniqueValueInfos = t3 == null ? void 0 : t3.map((e3) => ({ value: e3.value, label: e3.label, symbol: e3.symbol ? $(e3.symbol) : null }))), e2;
  }
  if ("classBreaks" === e2.type) {
    const t3 = e2.classBreakInfos, n12 = t3[0].symbol;
    return ((_b = n12 == null ? void 0 : n12.symbolLayers) == null ? void 0 : _b.length) && (e2.classBreakInfos = t3.map((e3) => ({ classMinValue: e3.classMinValue, classMaxValue: e3.classMaxValue, label: e3.label, symbol: e3.symbol ? $(e3.symbol) : null }))), e2;
  }
  return e2;
}
function ne(e2, t3) {
  let n12, a14;
  if ("vector-magdir" === e2) n12 = t3[0].min, a14 = t3[0].max;
  else {
    const e3 = t3[0].min, r5 = t3[0].max, l8 = t3[1].min, s6 = t3[1].max;
    n12 = 0, a14 = Math.max(Math.abs(e3), Math.abs(l8), Math.abs(r5), Math.abs(s6));
  }
  return { minMagnitude: n12, maxMagnitude: a14 };
}

// node_modules/@arcgis/core/rest/support/ImageHistogramParameters.js
var y7;
var j3 = y7 = class extends f {
  constructor() {
    super(...arguments), this.geometry = null, this.mosaicRule = null, this.rasterFunction = null, this.pixelSize = null, this.raster = void 0, this.timeExtent = null;
  }
  writeGeometry(t3, e2, r5) {
    null != t3 && (e2.geometryType = p(t3), e2[r5] = t3.toJSON());
  }
  clone() {
    return new y7(a({ geometry: this.geometry, mosaicRule: this.mosaicRule, rasterFunction: this.rasterFunction, pixelSize: this.pixelSize, raster: this.raster, timeExtent: this.timeExtent }));
  }
};
r([m({ types: n4, json: { read: f2 } })], j3.prototype, "geometry", void 0), r([r2("geometry")], j3.prototype, "writeGeometry", null), r([m({ type: f6, json: { write: true } })], j3.prototype, "mosaicRule", void 0), r([m({ type: N, json: { write: true, name: "renderingRule" } })], j3.prototype, "rasterFunction", void 0), r([m({ type: j, json: { write: true } })], j3.prototype, "pixelSize", void 0), r([m({ json: { write: true } })], j3.prototype, "raster", void 0), r([m({ type: p2, json: { read: { source: "time" }, write: { target: "time" } } })], j3.prototype, "timeExtent", void 0), j3 = y7 = r([a2("esri.rest.support.ImageHistogramParameters")], j3);
var g5 = j3;

// node_modules/@arcgis/core/rest/imageService/fetchRasterInfo.js
async function m9(m10, f8, p13) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;
  const c11 = f3(m10), { rasterFunction: d10, sourceJSON: h6 } = f8 || {}, g6 = d10 ? JSON.stringify(d10.rasterFunctionDefinition || d10) : null, y8 = s4({ ...c11.query, renderingRule: g6, f: "json" }), x2 = i4(y8, p13);
  m10 = c11.path;
  const b3 = h6 || await U(m10, x2).then((e2) => e2.data), v3 = b3.hasRasterAttributeTable ? U(`${m10}/rasterAttributeTable`, x2) : null, S4 = b3.hasColormap ? U(`${m10}/colormap`, x2) : null, V = b3.hasHistograms ? U(`${m10}/histograms`, x2) : null, D2 = b3.currentVersion >= 10.3 ? U(`${m10}/keyProperties`, x2) : null, I2 = b3.hasMultidimensions ? U(`${m10}/multidimensionalInfo`, x2) : null, T2 = await Promise.allSettled([v3, S4, V, D2, I2]);
  let R3 = null;
  if (b3.minValues && b3.minValues.length === b3.bandCount) {
    R3 = [];
    for (let e2 = 0; e2 < b3.minValues.length; e2++) R3.push({ min: b3.minValues[e2], max: b3.maxValues[e2], avg: b3.meanValues[e2], stddev: b3.stdvValues[e2] });
  }
  const j4 = w.fromJSON(b3.extent), w3 = Math.ceil(j4.width / b3.pixelSizeX - 0.1), M2 = Math.ceil(j4.height / b3.pixelSizeY - 0.1), N3 = g.fromJSON(b3.spatialReference || b3.extent.spatialReference), J2 = "fulfilled" === T2[0].status ? (_a = T2[0].value) == null ? void 0 : _a.data : null, O2 = ((_b = J2 == null ? void 0 : J2.features) == null ? void 0 : _b.length) ? d3.fromJSON(J2) : null, k2 = "fulfilled" === T2[1].status ? (_c = T2[1].value) == null ? void 0 : _c.data.colormap : null, C = (k2 == null ? void 0 : k2.length) ? k2 : null, P2 = "fulfilled" === T2[2].status ? (_d = T2[2].value) == null ? void 0 : _d.data.histograms : null, z5 = ((_f = (_e = P2 == null ? void 0 : P2[0]) == null ? void 0 : _e.counts) == null ? void 0 : _f.length) ? P2 : null, F3 = "fulfilled" === T2[3].status ? ((_g = T2[3].value) == null ? void 0 : _g.data) ?? {} : {}, $2 = "fulfilled" === T2[4].status ? (_h = T2[4].value) == null ? void 0 : _h.data.multidimensionalInfo : null, H2 = ((_i = $2 == null ? void 0 : $2.variables) == null ? void 0 : _i.length) ? $2 : null;
  H2 && H2.variables.forEach((e2) => {
    var _a2;
    ((_a2 = e2.statistics) == null ? void 0 : _a2.length) && e2.statistics.forEach((e3) => {
      e3.avg = e3.mean, e3.stddev = e3.standardDeviation;
    });
  });
  const { defaultVariable: L2, serviceDataType: A3 } = b3;
  L2 && L2 !== F3.DefaultVariable && (F3.DefaultVariable = L2), (A3 == null ? void 0 : A3.includes("esriImageServiceDataTypeVector")) && !A3.includes(F3.DataType) && (F3.DataType = A3.replace("esriImageServiceDataType", ""));
  let E2 = b3.noDataValue;
  ((_j = b3.noDataValues) == null ? void 0 : _j.length) && b3.noDataValues.some((e2) => e2 !== E2) && (E2 = b3.noDataValues);
  const q2 = b3.transposeInfo ? new n8({ blockWidth: 256, blockHeight: 256, pyramidBlockWidth: 256, pyramidBlockHeight: 256, pyramidScalingFactor: 2, compression: "lerc", origin: new j({ x: b3.extent.xmin, y: b3.extent.ymax, spatialReference: N3 }), firstPyramidLevel: 1, maximumPyramidLevel: Math.max(0, Math.round(Math.log(Math.max(w3, M2)) / Math.LN2 - 8)), transposeInfo: b3.transposeInfo }) : void 0;
  return new m4({ width: w3, height: M2, bandCount: b3.bandCount, extent: w.fromJSON(b3.extent), spatialReference: N3, pixelSize: new j({ x: b3.pixelSizeX, y: b3.pixelSizeY, spatialReference: N3 }), pixelType: b3.pixelType.toLowerCase(), statistics: R3, attributeTable: O2, colormap: C, histograms: z5, keyProperties: F3, noDataValue: E2, multidimensionalInfo: H2, storageInfo: q2 });
}
function f7(e2, t3, a14) {
  return m9(e2, { sourceJSON: t3 }, a14);
}
function p12(e2, t3, a14) {
  return m9(e2, { rasterFunction: t3 }, a14);
}
function c10(e2, t3) {
  e2.attributeTable || (t3.hasRasterAttributeTable = false), e2.histograms || (t3.hasHistograms = false), e2.colormap || (t3.hasColormap = false), e2.multidimensionalInfo || (t3.hasMultidimensions = false);
}

export {
  l6 as l,
  d7 as d,
  c7 as c,
  a9 as a,
  i6 as i,
  n9 as n,
  N,
  f6 as f,
  c9 as c2,
  t2 as t,
  L,
  q,
  B2 as B,
  E,
  z4 as z,
  W,
  U2 as U,
  ee,
  g5 as g,
  f7 as f2,
  p12 as p,
  c10 as c3,
  o4 as o
};
//# sourceMappingURL=chunk-7ALZJRCW.js.map
