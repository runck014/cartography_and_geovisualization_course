import {
  $,
  H,
  It,
  K,
  P as P2,
  U,
  at,
  ht
} from "./chunk-BLBULF2O.js";
import {
  s as s2
} from "./chunk-KI5F6KDS.js";
import {
  x
} from "./chunk-XJHQ5ZJ7.js";
import {
  m,
  p,
  y
} from "./chunk-F26LCWNQ.js";
import {
  P,
  o,
  r,
  t
} from "./chunk-A3J7W53Y.js";
import {
  g
} from "./chunk-DRBJFCLQ.js";
import {
  s2 as s
} from "./chunk-PKLD5YJF.js";

// node_modules/@arcgis/core/layers/graphics/data/geometryUtils.js
var u = new s2();
var f = new s2();
var m2 = new s2();
var c = { esriGeometryPoint: P2, esriGeometryPolyline: $, esriGeometryPolygon: H, esriGeometryMultipoint: U };
function y2(r4, t5, o4, i2 = r4.hasZ, s4 = r4.hasM) {
  if (null == t5) return null;
  const l2 = r4.hasZ && i2, u4 = r4.hasM && s4;
  if (o4) {
    const f4 = at(m2, t5, r4.hasZ, r4.hasM, "esriGeometryPoint", o4, i2, s4);
    return P2(f4, l2, u4);
  }
  return P2(t5, l2, u4);
}
function a(e4, o4, i2, s4, l2, y3, a2 = o4, h4 = i2) {
  var _a, _b, _c;
  const p4 = o4 && a2, G4 = i2 && h4, g3 = null != s4 ? "coords" in s4 ? s4 : s4.geometry : null;
  if (null == g3) return null;
  if (l2) {
    let t5 = ht(f, g3, o4, i2, e4, l2, a2, h4);
    return y3 && (t5 = at(m2, t5, p4, G4, e4, y3)), ((_a = c[e4]) == null ? void 0 : _a.call(c, t5, p4, G4)) ?? null;
  }
  if (y3) {
    const r4 = at(m2, g3, o4, i2, e4, y3, a2, h4);
    return ((_b = c[e4]) == null ? void 0 : _b.call(c, r4, p4, G4)) ?? null;
  }
  return It(u, g3, o4, i2, a2, h4), ((_c = c[e4]) == null ? void 0 : _c.call(c, u, p4, G4)) ?? null;
}
function h(n4) {
  return n4 && p2 in n4 ? JSON.parse(JSON.stringify(n4, G)) : n4;
}
var p2 = "_geVersion";
var G = (n4, e4) => n4 !== p2 ? e4 : void 0;

// node_modules/@arcgis/core/layers/graphics/centroid.js
function t2(t5, n4) {
  return t5 ? n4 ? 4 : 3 : n4 ? 3 : 2;
}
function n(n4, I3, u4, o4) {
  if (!(I3 == null ? void 0 : I3.lengths.length)) return null;
  n4.lengths.length && (n4.lengths.length = 0), n4.coords.length && (n4.coords.length = 0);
  const N2 = n4.coords, l2 = [], s4 = u4 ? [Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY] : [Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY], { lengths: c2, coords: T } = I3, f4 = t2(u4, o4);
  let h4 = 0;
  for (const t5 of c2) {
    const n5 = e(s4, T, h4, t5, u4, o4);
    n5 && l2.push(n5), h4 += t5 * f4;
  }
  if (l2.sort((t5, n5) => {
    let e4 = t5[2] - n5[2];
    return 0 === e4 && u4 && (e4 = t5[4] - n5[4]), e4;
  }), l2.length) {
    let t5 = 6 * l2[0][2];
    N2[0] = l2[0][0] / t5, N2[1] = l2[0][1] / t5, u4 && (t5 = 6 * l2[0][4], N2[2] = 0 !== t5 ? l2[0][3] / t5 : 0), (N2[0] < s4[0] || N2[0] > s4[1] || N2[1] < s4[2] || N2[1] > s4[3] || u4 && (N2[2] < s4[4] || N2[2] > s4[5])) && (N2.length = 0);
  }
  if (!N2.length) {
    const t5 = I3.lengths[0] ? r2(T, 0, c2[0], u4, o4) : null;
    if (!t5) return null;
    N2[0] = t5[0], N2[1] = t5[1], u4 && t5.length > 2 && (N2[2] = t5[2]);
  }
  return n4;
}
function e(n4, e4, r4, I3, u4, o4) {
  const N2 = t2(u4, o4);
  let l2 = r4, s4 = r4 + N2, c2 = 0, T = 0, f4 = 0, h4 = 0, i2 = 0;
  for (let t5 = 0, g3 = I3 - 1; t5 < g3; t5++, l2 += N2, s4 += N2) {
    const t6 = e4[l2], r5 = e4[l2 + 1], I4 = e4[l2 + 2], o5 = e4[s4], N3 = e4[s4 + 1], E2 = e4[s4 + 2];
    let g4 = t6 * N3 - o5 * r5;
    h4 += g4, c2 += (t6 + o5) * g4, T += (r5 + N3) * g4, u4 && (g4 = t6 * E2 - o5 * I4, f4 += (I4 + E2) * g4, i2 += g4), t6 < n4[0] && (n4[0] = t6), t6 > n4[1] && (n4[1] = t6), r5 < n4[2] && (n4[2] = r5), r5 > n4[3] && (n4[3] = r5), u4 && (I4 < n4[4] && (n4[4] = I4), I4 > n4[5] && (n4[5] = I4));
  }
  if (h4 > 0 && (h4 *= -1), i2 > 0 && (i2 *= -1), !h4) return null;
  const E = [c2, T, 0.5 * h4];
  return u4 && (E[3] = f4, E[4] = 0.5 * i2), E;
}
function r2(n4, e4, r4, l2, s4) {
  const c2 = t2(l2, s4);
  let T = e4, f4 = e4 + c2, h4 = 0, i2 = 0, E = 0, g3 = 0;
  for (let t5 = 0, b = r4 - 1; t5 < b; t5++, T += c2, f4 += c2) {
    const t6 = n4[T], e5 = n4[T + 1], r5 = n4[T + 2], s5 = n4[f4], c3 = n4[f4 + 1], b2 = n4[f4 + 2], m3 = l2 ? u2(t6, e5, r5, s5, c3, b2) : I(t6, e5, s5, c3);
    if (m3) if (h4 += m3, l2) {
      const n5 = N(t6, e5, r5, s5, c3, b2);
      i2 += m3 * n5[0], E += m3 * n5[1], g3 += m3 * n5[2];
    } else {
      const n5 = o2(t6, e5, s5, c3);
      i2 += m3 * n5[0], E += m3 * n5[1];
    }
  }
  return h4 > 0 ? l2 ? [i2 / h4, E / h4, g3 / h4] : [i2 / h4, E / h4] : r4 > 0 ? l2 ? [n4[e4], n4[e4 + 1], n4[e4 + 2]] : [n4[e4], n4[e4 + 1]] : null;
}
function I(t5, n4, e4, r4) {
  const I3 = e4 - t5, u4 = r4 - n4;
  return Math.sqrt(I3 * I3 + u4 * u4);
}
function u2(t5, n4, e4, r4, I3, u4) {
  const o4 = r4 - t5, N2 = I3 - n4, l2 = u4 - e4;
  return Math.sqrt(o4 * o4 + N2 * N2 + l2 * l2);
}
function o2(t5, n4, e4, r4) {
  return [t5 + 0.5 * (e4 - t5), n4 + 0.5 * (r4 - n4)];
}
function N(t5, n4, e4, r4, I3, u4) {
  return [t5 + 0.5 * (r4 - t5), n4 + 0.5 * (I3 - n4), e4 + 0.5 * (u4 - e4)];
}

// node_modules/@arcgis/core/geometry/support/intersects.js
function s3(s4) {
  return "mesh" === s4 ? o : P(s4);
}

// node_modules/@arcgis/core/layers/graphics/contains.js
function n2(n4, t5) {
  return n4 ? t5 ? 4 : 3 : t5 ? 3 : 2;
}
function t3(n4, t5, r4, e4) {
  return o3(n4, t5, r4, e4.coords[0], e4.coords[1]);
}
function r3(t5, r4, e4, c2, u4, f4) {
  const s4 = n2(u4, f4), { coords: i2, lengths: l2 } = c2;
  if (!l2) return false;
  for (let n4 = 0, d = 0; n4 < l2.length; n4++, d += s4) if (!o3(t5, r4, e4, i2[d], i2[d + 1])) return false;
  return true;
}
function o3(t5, r4, o4, c2, u4) {
  if (!t5) return false;
  const f4 = n2(r4, o4), { coords: s4, lengths: i2 } = t5;
  let l2 = false, d = 0;
  for (const n4 of i2) l2 = e2(l2, s4, f4, d, n4, c2, u4), d += n4 * f4;
  return l2;
}
function e2(n4, t5, r4, o4, e4, c2, u4) {
  let f4 = n4, s4 = o4;
  for (let i2 = o4, l2 = o4 + e4 * r4; i2 < l2; i2 += r4) {
    s4 = i2 + r4, s4 === l2 && (s4 = o4);
    const n5 = t5[i2], e5 = t5[i2 + 1], d = t5[s4], g3 = t5[s4 + 1];
    (e5 < u4 && g3 >= u4 || g3 < u4 && e5 >= u4) && n5 + (u4 - e5) / (g3 - e5) * (d - n5) < c2 && (f4 = !f4);
  }
  return f4;
}

// node_modules/@arcgis/core/layers/graphics/data/spatialQuerySupport.js
var f3 = "unsupported-query";
var R = { esriSpatialRelIntersects: "intersects", esriSpatialRelContains: "contains", esriSpatialRelCrosses: "crosses", esriSpatialRelDisjoint: "disjoint", esriSpatialRelEnvelopeIntersects: "intersects", esriSpatialRelIndexIntersects: null, esriSpatialRelOverlaps: "overlaps", esriSpatialRelTouches: "touches", esriSpatialRelWithin: "within", esriSpatialRelRelation: null };
var S = { spatialRelationship: { esriSpatialRelIntersects: true, esriSpatialRelContains: true, esriSpatialRelWithin: true, esriSpatialRelCrosses: true, esriSpatialRelDisjoint: true, esriSpatialRelTouches: true, esriSpatialRelOverlaps: true, esriSpatialRelEnvelopeIntersects: true, esriSpatialRelIndexIntersects: false, esriSpatialRelRelation: false }, queryGeometry: { esriGeometryPoint: true, esriGeometryMultiPatch: false, esriGeometryMultipoint: true, esriGeometryPolyline: true, esriGeometryPolygon: true, esriGeometryEnvelope: true }, layerGeometry: { esriGeometryPoint: true, esriGeometryMultiPatch: true, esriGeometryMultipoint: true, esriGeometryPolyline: true, esriGeometryPolygon: true, esriGeometryEnvelope: false } };
function G3(e4) {
  return null != e4 && true === S.spatialRelationship[e4];
}
function g2(e4) {
  return null != e4 && true === S.queryGeometry[p(e4)];
}
function h3(e4) {
  return null != e4 && true === S.layerGeometry[e4];
}
function j() {
  return import("./geometryEngineJSON-T2WTIVKL.js");
}
function P3(e4, n4, l2, c2, f4) {
  if (y(n4) && "esriGeometryPoint" === l2 && ("esriSpatialRelIntersects" === e4 || "esriSpatialRelContains" === e4)) {
    const e5 = K(new s2(), n4, false, false);
    return Promise.resolve((r4) => t3(e5, false, false, r4));
  }
  if (y(n4) && "esriGeometryMultipoint" === l2) {
    const r4 = K(new s2(), n4, false, false);
    if ("esriSpatialRelContains" === e4) return Promise.resolve((e5) => r3(r4, false, false, e5, c2, f4));
  }
  if (m(n4) && "esriGeometryPoint" === l2 && ("esriSpatialRelIntersects" === e4 || "esriSpatialRelContains" === e4)) return Promise.resolve((e5) => t(n4, a(l2, c2, f4, e5)));
  if (m(n4) && "esriGeometryMultipoint" === l2 && "esriSpatialRelContains" === e4) return Promise.resolve((e5) => r(n4, a(l2, c2, f4, e5)));
  if (m(n4) && "esriSpatialRelIntersects" === e4) {
    const e5 = s3(l2);
    return Promise.resolve((r4) => e5(n4, a(l2, c2, f4, r4)));
  }
  return j().then((r4) => {
    const t5 = r4[R[e4]].bind(null, n4.spatialReference, n4);
    return (e5) => t5(a(l2, c2, f4, e5));
  });
}
async function v(r4, t5, i2) {
  var _a;
  const { spatialRel: s4, geometry: o4 } = r4;
  if (o4) {
    if (!G3(s4)) throw new s(f3, "Unsupported query spatial relationship", { query: r4 });
    if (g(o4.spatialReference) && g(i2)) {
      if (!g2(o4)) throw new s(f3, "Unsupported query geometry type", { query: r4 });
      if (!h3(t5)) throw new s(f3, "Unsupported layer geometry type", { query: r4 });
      if (r4.outSR) return x((_a = r4.geometry) == null ? void 0 : _a.spatialReference, r4.outSR);
    }
  }
}
function I2(e4) {
  if (m(e4)) return true;
  if (y(e4)) {
    for (const r4 of e4.rings) {
      if (5 !== r4.length) return false;
      if (r4[0][0] !== r4[1][0] || r4[0][0] !== r4[4][0] || r4[2][0] !== r4[3][0] || r4[0][1] !== r4[3][1] || r4[0][1] !== r4[4][1] || r4[1][1] !== r4[2][1]) return false;
    }
    return true;
  }
  return false;
}

// node_modules/@arcgis/core/layers/graphics/data/timeSupport.js
async function n3(n4, t5) {
  if (!n4) return null;
  const l2 = t5.featureAdapter, { startTimeField: u4, endTimeField: e4 } = n4;
  let r4 = Number.POSITIVE_INFINITY, i2 = Number.NEGATIVE_INFINITY;
  if (u4 && e4) await t5.forEach((n5) => {
    const t6 = l2.getAttribute(n5, u4), o4 = l2.getAttribute(n5, e4);
    null == t6 || isNaN(t6) || (r4 = Math.min(r4, t6)), null == o4 || isNaN(o4) || (i2 = Math.max(i2, o4));
  });
  else {
    const n5 = u4 || e4;
    await t5.forEach((t6) => {
      const u5 = l2.getAttribute(t6, n5);
      null == u5 || isNaN(u5) || (r4 = Math.min(r4, u5), i2 = Math.max(i2, u5));
    });
  }
  return { start: r4, end: i2 };
}
function t4(n4, t5, r4) {
  var _a;
  if (!t5 || !n4) return null;
  const { startTimeField: i2, endTimeField: o4 } = n4;
  if (!i2 && !o4) return null;
  const { start: s4, end: a2 } = t5;
  if (null === s4 && null === a2) return null;
  if (void 0 === s4 && void 0 === a2) return e3();
  const c2 = ((_a = r4.getAttributeAsTimestamp) == null ? void 0 : _a.bind(r4)) ?? r4.getAttribute.bind(r4);
  return i2 && o4 ? l(c2, i2, o4, s4, a2) : u3(c2, i2 || o4, s4, a2);
}
function l(n4, t5, l2, u4, e4) {
  return null != u4 && null != e4 ? (r4) => {
    const i2 = n4(r4, t5), o4 = n4(r4, l2);
    return (null == i2 || i2 <= e4) && (null == o4 || o4 >= u4);
  } : null != u4 ? (t6) => {
    const e5 = n4(t6, l2);
    return null == e5 || e5 >= u4;
  } : null != e4 ? (l3) => {
    const u5 = n4(l3, t5);
    return null == u5 || u5 <= e4;
  } : void 0;
}
function u3(n4, t5, l2, u4) {
  return null != l2 && null != u4 && l2 === u4 ? (u5) => n4(u5, t5) === l2 : null != l2 && null != u4 ? (e4) => {
    const r4 = n4(e4, t5);
    return null != r4 && r4 >= l2 && r4 <= u4;
  } : null != l2 ? (u5) => {
    const e4 = n4(u5, t5);
    return null != e4 && e4 >= l2;
  } : null != u4 ? (l3) => {
    const e4 = n4(l3, t5);
    return null != e4 && e4 <= u4;
  } : void 0;
}
function e3() {
  return () => false;
}

export {
  y2 as y,
  a,
  h,
  n,
  P3 as P,
  v,
  I2 as I,
  n3 as n2,
  t4 as t
};
//# sourceMappingURL=chunk-RSF7AFW5.js.map
