/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.31/esri/copyright.txt for details.
 * v4.31.6
 */
import { r as registerInstance, c as createEvent, g as getElement } from './index-1731abba.js';
import { _ as newWidgetsMeasurement } from './index-a1e05d0a.js';
import { u as usePropertyChange } from './index-b8c7454b.js';
import { m as makeWidgetController } from './useWidget-a0180c4c.js';
import { u as useControllerManager } from './index-e7ca9269.js';
import './component-utils-7177db90.js';

const measurementCss = "arcgis-measurement{}";
const ArcgisMeasurementStyle0 = measurementCss;

const useMeasurementWidget = makeWidgetController(newWidgetsMeasurement);
const ArcgisMeasurement = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = createEvent(this, "arcgisPropertyChange", 7);
        this.manager = useControllerManager(this);
        this.widget = useMeasurementWidget(this);
        this.viewModel = this.widget.viewModel;
        this.arcgisPropertyChange = usePropertyChange()("activeTool", "state");
        this.autoDestroyDisabled = false;
        this.referenceElement = undefined;
        this.activeTool = this.widget.activeTool;
        this.activeWidget = this.widget.activeWidget;
        this.areaUnit = this.widget.areaUnit;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.linearUnit = this.widget.linearUnit;
        this.position = "bottom-left";
        this.state = this.viewModel.state;
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    async clear() {
        this.widget?.clear();
    }
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    async startMeasurement() {
        this.widget?.startMeasurement();
    }
    get el() { return getElement(this); }
};
ArcgisMeasurement.style = ArcgisMeasurementStyle0;

export { ArcgisMeasurement as arcgis_measurement };
