/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.31/esri/copyright.txt for details.
 * v4.31.6
 */
import { r as registerInstance, c as createEvent, g as getElement } from './index-1731abba.js';
import { ab as newWidgetsSlice } from './index-a1e05d0a.js';
import { u as usePropertyChange } from './index-b8c7454b.js';
import { m as makeWidgetController } from './useWidget-a0180c4c.js';
import { u as useControllerManager } from './index-e7ca9269.js';
import './component-utils-7177db90.js';

const sliceCss = "arcgis-slice{}";
const ArcgisSliceStyle0 = sliceCss;

const useSliceWidget = makeWidgetController(newWidgetsSlice);
const ArcgisSlice = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = createEvent(this, "arcgisPropertyChange", 7);
        this.manager = useControllerManager(this);
        this.widget = useSliceWidget(this);
        this.viewModel = this.widget.viewModel;
        this.arcgisPropertyChange = usePropertyChange()("analysis", "state");
        this.autoDestroyDisabled = false;
        this.referenceElement = undefined;
        this.analysis = this.widget.analysis;
        this.excludedLayers = this.viewModel.excludedLayers;
        this.excludeGroundSurface = this.viewModel.excludeGroundSurface;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.headingLevel = this.widget.headingLevel;
        this.shape = this.viewModel.shape;
        this.tiltEnabled = this.viewModel.tiltEnabled;
        this.position = "bottom-left";
        this.state = this.viewModel.state;
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    async clear() {
        this.widget?.viewModel.clear();
    }
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    async start() {
        this.widget?.viewModel.start();
    }
    get el() { return getElement(this); }
};
ArcgisSlice.style = ArcgisSliceStyle0;

export { ArcgisSlice as arcgis_slice };
