/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.31/esri/copyright.txt for details.
 * v4.31.6
 */
import { r as registerInstance, c as createEvent, g as getElement } from './index-1731abba.js';
import { S as newWidgetsHistogramRangeSlider } from './index-a1e05d0a.js';
import { u as usePropertyChange } from './index-b8c7454b.js';
import { m as makeWidgetController } from './useWidget-a0180c4c.js';
import { u as useControllerManager } from './index-e7ca9269.js';
import './component-utils-7177db90.js';

const histogramRangeSliderCss = "arcgis-histogram-range-slider{}";
const ArcgisHistogramRangeSliderStyle0 = histogramRangeSliderCss;

const useHistogramRangeSliderWidget = makeWidgetController(newWidgetsHistogramRangeSlider);
const ArcgisHistogramRangeSlider = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = createEvent(this, "arcgisPropertyChange", 7);
        this.manager = useControllerManager(this);
        this.widget = useHistogramRangeSliderWidget(this);
        this.viewModel = this.widget.viewModel;
        this.arcgisPropertyChange = usePropertyChange()("state");
        this.autoDestroyDisabled = false;
        this.referenceElement = undefined;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.average = this.widget.average;
        this.barCreatedFunction = this.widget.barCreatedFunction;
        this.bins = this.widget.bins;
        this.dataLineCreatedFunction = this.widget.dataLineCreatedFunction;
        this.dataLines = this.widget.dataLines;
        this.excludedBarColor = this.widget.excludedBarColor;
        this.includedBarColor = this.widget.includedBarColor;
        this.labelFormatFunction = this.widget.labelFormatFunction;
        this.max = this.widget.max;
        this.min = this.widget.min;
        this.precision = this.widget.precision;
        this.rangeType = this.widget.rangeType;
        this.standardDeviation = this.widget.standardDeviation;
        this.standardDeviationCount = this.widget.standardDeviationCount;
        this.values = this.widget.values;
        this.position = "bottom-left";
        this.state = this.viewModel.state;
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    /**
     * Generates a SQL where clause based on a given field and the slider's
     * rangeType
     */
    async generateWhereClause(field) {
        return this.widget.generateWhereClause(field);
    }
    get el() { return getElement(this); }
};
ArcgisHistogramRangeSlider.style = ArcgisHistogramRangeSliderStyle0;

export { ArcgisHistogramRangeSlider as arcgis_histogram_range_slider };
