/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.31/esri/copyright.txt for details.
 * v4.31.6
 */
import { r as registerInstance, c as createEvent, h, g as getElement } from './index-1731abba.js';
import { u as usePropertyChange } from './index-b8c7454b.js';
import { t as classes, an as newWidgetsZoomZoomViewModel } from './index-a1e05d0a.js';
import { u as useT9n, m as makeViewModelController } from './useViewModel-4fa38ffe.js';
import { g as globalCss } from './globalCss-22cd71e6.js';
import { u as useControllerManager } from './index-e7ca9269.js';
import './component-utils-7177db90.js';

const css = {
    base: "esri-zoom",
    horizontalLayout: "esri-zoom--horizontal",
};

const zoomCss = ".esri-zoom{display:flex;flex-flow:column nowrap}.esri-zoom .esri-widget--button{box-shadow:none}.esri-zoom .esri-widget--button:first-child{margin-bottom:0}.esri-zoom .esri-widget--button:last-child{border-top:solid 1px var(--calcite-color-border-1)}.esri-zoom.esri-zoom--horizontal{flex-flow:row-reverse nowrap}.esri-zoom.esri-zoom--horizontal .esri-widget--button:last-child{border-top:none}.esri-zoom.esri-zoom--horizontal .esri-widget--button:first-child{border-left:solid 1px var(--calcite-color-border-1)}[dir=\"rtl\"] .esri-zoom.esri-zoom--horizontal .esri-widget--button:first-child{border-top:none}[dir=\"rtl\"] .esri-zoom.esri-zoom--horizontal .esri-widget--button:last-child{border-left:solid 1px var(--calcite-color-border-1)}";
const ArcgisZoomStyle0 = zoomCss;

const useZoomViewModel = makeViewModelController(newWidgetsZoomZoomViewModel);
const ArcgisZoom = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.arcgisPropertyChange = createEvent(this, "arcgisPropertyChange", 7);
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        //--------------------------------------------------------------------------
        //
        //  Controllers
        //
        //--------------------------------------------------------------------------
        this.manager = useControllerManager(this);
        this.messages = useT9n({});
        this.viewModel = useZoomViewModel(this);
        //--------------------------------------------------------------------------
        //
        //  Events
        //
        //--------------------------------------------------------------------------
        this.arcgisPropertyChange = usePropertyChange()("state");
        this.autoDestroyDisabled = false;
        this.icon = "magnifying-glass-plus";
        this.label = undefined;
        this.layout = "vertical";
        this.messageOverrides = undefined;
        this.position = "top-left";
        this.referenceElement = undefined;
        this.state = this.viewModel.state;
        this.canZoomIn = this.viewModel.canZoomIn;
        this.canZoomOut = this.viewModel.canZoomOut;
    }
    //--------------------------------------------------------------------------
    //
    //  Public Methods
    //
    //--------------------------------------------------------------------------
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    /**
     * Zooms the view in by an LOD factor of 0.5.
     */
    async zoomIn() {
        this.viewModel.zoomIn();
    }
    /**
     * Zooms the view out by an LOD factor of 2.
     */
    async zoomOut() {
        this.viewModel.zoomOut();
    }
    render() {
        const rootClasses = {
            [css.horizontalLayout]: this.layout === "horizontal",
        };
        const { canZoomIn, canZoomOut } = this.viewModel;
        const { zoomIn, zoomOut } = this.messages;
        return (h("div", { key: '3505cf460c5f5b75eeae28131135b5e4c20a8db0', class: classes(css.base, globalCss.widget, rootClasses) }, h("calcite-button", { key: '02262f9d62a50258e8075aa752dbbeb65560c83b', class: globalCss.widgetButton, disabled: !canZoomIn, iconStart: "plus", kind: "neutral", label: zoomIn, onClick: this.zoomIn.bind(this), title: zoomIn }), h("calcite-button", { key: 'd5b0f183fbd5035de138a5522b714644ce8eda7e', class: globalCss.widgetButton, disabled: !canZoomOut, iconStart: "minus", kind: "neutral", label: zoomOut, onClick: this.zoomOut.bind(this), title: zoomOut })));
    }
    static get assetsDirs() { return ["assets"]; }
    get el() { return getElement(this); }
};
ArcgisZoom.style = ArcgisZoomStyle0;

export { ArcgisZoom as arcgis_zoom };
