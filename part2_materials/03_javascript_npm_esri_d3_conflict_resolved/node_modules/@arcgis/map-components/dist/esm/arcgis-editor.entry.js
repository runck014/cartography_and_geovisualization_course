/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.31/esri/copyright.txt for details.
 * v4.31.6
 */
import { r as registerInstance, c as createEvent, g as getElement } from './index-1731abba.js';
import { G as newWidgetsEditor } from './index-a1e05d0a.js';
import { u as usePropertyChange } from './index-b8c7454b.js';
import { m as makeWidgetController } from './useWidget-a0180c4c.js';
import { u as useControllerManager } from './index-e7ca9269.js';
import './component-utils-7177db90.js';

const editorCss = "";
const ArcgisEditorStyle0 = editorCss;

const useEditorWidget = makeWidgetController(newWidgetsEditor);
const ArcgisEditor = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = createEvent(this, "arcgisPropertyChange", 7);
        this.manager = useControllerManager(this);
        this.widget = useEditorWidget(this);
        this.viewModel = this.widget.viewModel;
        this.arcgisPropertyChange = usePropertyChange()("activeWorkflow", "state");
        this.autoDestroyDisabled = false;
        this.referenceElement = undefined;
        this.activeWorkflow = this.widget.activeWorkflow;
        this.allowedWorkflows = this.widget.allowedWorkflows;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.labelOptions = this.widget.labelOptions;
        this.layerInfos = this.widget.layerInfos;
        this.snappingOptions = this.widget.snappingOptions;
        this.supportingWidgetDefaults = this.widget.supportingWidgetDefaults;
        this.tooltipOptions = this.widget.tooltipOptions;
        this.headingLevel = this.widget.headingLevel;
        this.hideCreateFeaturesSection = this.widget.visibleElements.createFeaturesSection;
        this.hideEditFeaturesSection = this.widget.visibleElements.editFeaturesSection;
        this.hideLabelsToggle = this.widget.visibleElements.labelsToggle;
        this.hideTooltipsToggle = this.widget.visibleElements.tooltipsToggle;
        this.showSnappingControlsElementsHeader = this.widget.visibleElements.snappingControlsElements.header;
        this.hideSnappingControlsElementsEnabledToggle = this.widget.visibleElements.snappingControlsElements.enabledToggle;
        this.hideSnappingControlsElementsSelfEnabledToggle = this.widget.visibleElements.snappingControlsElements.selfEnabledToggle;
        this.hideSnappingControlsElementsFeatureEnabledToggle = this.widget.visibleElements.snappingControlsElements.featureEnabledToggle;
        this.hideSnappingControlsElementsLayerList = this.widget.visibleElements.snappingControlsElements.layerList;
        this.position = "bottom-left";
        this.state = this.viewModel.state;
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    async cancelWorkflow() {
        await this.widget?.cancelWorkflow();
    }
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    async deleteFeatureFromWorkflow() {
        await this.widget?.deleteFeatureFromWorkflow();
    }
    async startCreateFeaturesWorkflowAtFeatureCreation(info) {
        await this.widget?.startCreateFeaturesWorkflowAtFeatureCreation(info);
    }
    async startCreateFeaturesWorkflowAtFeatureTypeSelection() {
        await this.widget?.startCreateFeaturesWorkflowAtFeatureTypeSelection();
    }
    async startUpdateWorkflowAtFeatureEdit(feature) {
        await this.widget?.startUpdateWorkflowAtFeatureEdit(feature);
    }
    async startUpdateWorkflowAtFeatureSelection() {
        await this.widget?.startUpdateWorkflowAtFeatureSelection();
    }
    async startUpdateWorkflowAtMultipleFeatureSelection(candidates) {
        await this.widget?.startUpdateWorkflowAtMultipleFeatureSelection(candidates);
    }
    get el() { return getElement(this); }
};
ArcgisEditor.style = ArcgisEditorStyle0;

export { ArcgisEditor as arcgis_editor };
