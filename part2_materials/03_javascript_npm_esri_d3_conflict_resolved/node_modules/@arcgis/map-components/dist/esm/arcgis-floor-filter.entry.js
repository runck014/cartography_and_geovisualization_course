/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.31/esri/copyright.txt for details.
 * v4.31.6
 */
import { r as registerInstance, c as createEvent, g as getElement } from './index-1731abba.js';
import { P as newWidgetsFloorFilter } from './index-a1e05d0a.js';
import { m as makeWidgetController } from './useWidget-a0180c4c.js';
import { u as useControllerManager } from './index-e7ca9269.js';
import './component-utils-7177db90.js';

const floorFilterCss = "";
const ArcgisFloorFilterStyle0 = floorFilterCss;

const useFloorFilterWidget = makeWidgetController(newWidgetsFloorFilter);
const ArcgisFloorFilter = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        this.manager = useControllerManager(this);
        this.widget = useFloorFilterWidget(this);
        this.viewModel = this.widget.viewModel;
        this.autoDestroyDisabled = false;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.referenceElement = undefined;
        this.facility = this.widget.facility;
        this.headingLevel = this.widget.headingLevel;
        this.level = this.widget.level;
        this.longNames = this.widget.longNames;
        this.site = this.widget.site;
        this.position = "bottom-left";
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    async updateWebDocument(webMap) {
        this.widget?.updateWebDocument(webMap);
    }
    get el() { return getElement(this); }
};
ArcgisFloorFilter.style = ArcgisFloorFilterStyle0;

export { ArcgisFloorFilter as arcgis_floor_filter };
