import type { EventEmitter } from "../../stencil-public-runtime";
import type { ControllerManager, Use } from "@arcgis/components-controllers";
import type { ArcgisReferenceElement } from "../../utils/component-utils";
import type { Nil } from "@arcgis/components-utils";
declare const useSearchWidget: (component: import("@arcgis/components-controllers").StencilLifecycles & {
    manager: ControllerManager;
    el: HTMLElement;
    autoDestroyDisabled?: boolean;
    destroy?: () => Promise<void>;
} & Pick<__esri.widgetsSearch, "icon" | "label" | "viewModel" | "disabled" | "portal" | "activeMenu" | "activeSourceIndex" | "allPlaceholder" | "maxResults" | "maxSuggestions" | "minSuggestCharacters" | "popupTemplate" | "searchTerm" | "sources"> & {
    reactiveUtils?: typeof 
    /**
     * If true, the component will not be destroyed automatically when it is
     * disconnected from the document. This is useful when you want to move the
     * component to a different place on the page, or temporary hide it. If this
     * is set, make sure to call the \`destroy\` method when you are done to prevent
     * memory leaks.
     */
    __esri.reactiveUtils;
    state?: unknown;
    viewModel?: __esri.SearchViewModel | undefined;
    icon: Nil | string;
    label: Nil | string;
    referenceElement: ArcgisReferenceElement | Nil | string;
    position: __esri.UIPosition;
    arcgisReady: EventEmitter<never> | import("@arcgis/components-controllers").EventEmitter;
    arcgisPropertyChange: import("@arcgis/components-controllers").EventEmitter<{
        name: string;
    }> | undefined;
    el: HTMLElement & {
        childElem?: HTMLElement & {
            ownedBy?: HTMLElement;
        };
        view?: import("../types").ArcGISMapView | import("../types").ArcGISSceneView | Nil;
    };
    autoDestroyDisabled: boolean;
    destroy: () => Promise<void>;
}, options?: {
    editConstructorProperties(props: __esri.widgetsSearchProperties): Promise<__esri.widgetsSearchProperties> | __esri.widgetsSearchProperties;
} | undefined) => __esri.widgetsSearch;
export declare class ArcgisSearch implements Use<typeof useSearchWidget> {
    manager: ControllerManager<this>;
    el: HTMLElement;
    widget: __esri.widgetsSearch;
    viewModel: __esri.SearchViewModel;
    /**
     * If true, the component will not be destroyed automatically when it is
     * disconnected from the document. This is useful when you want to move the
     * component to a different place on the page, or temporary hide it. If this
     * is set, make sure to call the \`destroy\` method when you are done to prevent
     * memory leaks.
     */
    autoDestroyDisabled: boolean;
    referenceElement: ArcgisReferenceElement | Nil | string;
    activeMenu: "source" | "none" | "warning" | "suggestion";
    activeSource: __esri.LayerSearchSource | __esri.LocatorSearchSource;
    activeSourceIndex: number;
    allPlaceholder: string;
    allSources: __esri.Collection<__esri.LayerSearchSource | __esri.LocatorSearchSource>;
    autoSelectDisabled: boolean;
    defaultSources: __esri.Collection<__esri.LayerSearchSource | __esri.LocatorSearchSource>;
    disabled: boolean;
    /**
     * Icon which represents the component.
     * Typically used when the component is controlled by another component (e.g. by the Expand component).
     * Search [Calcite Icons](https://developers.arcgis.com/calcite-design-system/icons/) for possible values.
     */
    icon: string;
    label: string;
    includeDefaultSourcesDisabled: boolean | Function;
    locationDisabled: boolean;
    maxResults: number;
    maxSuggestions: number;
    minSuggestCharacters: number;
    popupDisabled: boolean;
    popupTemplate: __esri.PopupTemplate;
    portal: __esri.Portal;
    resultGraphic: __esri.Graphic;
    resultGraphicDisabled: boolean;
    results: any[];
    searchAllDisabled: boolean;
    searchTerm: string;
    selectedResult: __esri.SearchResult;
    sources: __esri.Collection<__esri.SearchSource>;
    suggestions: __esri.SuggestResult[];
    suggestionsDisabled: boolean;
    position: __esri.UIPosition;
    state: "ready" | "disabled" | "loading" | "searching";
    arcgisReady: EventEmitter<never>;
    arcgisPropertyChange: import("@arcgis/components-controllers").EventEmitter<{
        name: "state";
    }>;
    widgetSearchBlur: EventEmitter<__esri.SearchSearchBlurEvent>;
    widgetSearchClear: EventEmitter<__esri.SearchSearchClearEvent>;
    widgetSearchComplete: EventEmitter<__esri.SearchSearchCompleteEvent>;
    widgetSearchFocus: EventEmitter<__esri.SearchSearchFocusEvent>;
    widgetSearchStart: EventEmitter<__esri.SearchSearchStartEvent>;
    widgetSelectResult: EventEmitter<__esri.SearchSelectResultEvent>;
    widgetSuggestComplete: EventEmitter<__esri.SearchSuggestCompleteEvent>;
    widgetSuggestStart: EventEmitter<__esri.SearchSuggestStartEvent>;
    blurSearch(): Promise<void>;
    clearSearch(): Promise<void>;
    focusSearch(): Promise<void>;
    /** Permanently destroy the component */
    destroy(): Promise<void>;
    search(term: __esri.Geometry | __esri.SuggestResult | number[][] | string): Promise<__esri.SearchResponse>;
    suggest(term: string): Promise<__esri.SuggestResponse>;
}
export {};
