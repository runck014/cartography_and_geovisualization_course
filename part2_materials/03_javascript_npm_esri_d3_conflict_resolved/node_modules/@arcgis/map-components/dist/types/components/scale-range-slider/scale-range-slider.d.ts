import type { EventEmitter } from "../../stencil-public-runtime";
import type { ArcgisReferenceElement } from "../../utils/component-utils";
import type { Use, ControllerManager } from "@arcgis/components-controllers";
import type { Nil } from "@arcgis/components-utils";
declare const useScaleRangeSliderWidget: (component: import("@arcgis/components-controllers").StencilLifecycles & {
    manager: ControllerManager;
    el: HTMLElement;
    autoDestroyDisabled?: boolean;
    destroy?: () => Promise<void>;
} & Pick<__esri.ScaleRangeSlider, "icon" | "label" | "viewModel" | "layer" | "disabled" | "mode" | "maxScale" | "minScale" | "maxScaleLimit" | "minScaleLimit" | "region"> & {
    reactiveUtils?: typeof __esri.reactiveUtils;
    state?: unknown;
    viewModel?: __esri.ScaleRangeSliderViewModel | undefined;
    icon: Nil | string;
    label: Nil | string;
    referenceElement: ArcgisReferenceElement | Nil | string;
    position: __esri.UIPosition;
    arcgisReady: EventEmitter<never> | import("@arcgis/components-controllers").EventEmitter;
    arcgisPropertyChange: import("@arcgis/components-controllers").EventEmitter<{
        name: string;
    }> | undefined;
    el: HTMLElement & {
        childElem?: HTMLElement & {
            ownedBy?: HTMLElement;
        };
        view?: import("../types").ArcGISMapView | import("../types").ArcGISSceneView | Nil;
    };
    autoDestroyDisabled: boolean;
    destroy: () => Promise<void>;
}, options?: {
    editConstructorProperties(props: __esri.ScaleRangeSliderProperties): Promise<__esri.ScaleRangeSliderProperties> | __esri.ScaleRangeSliderProperties;
} | undefined) => __esri.ScaleRangeSlider;
export declare class ArcgisScaleRangeSlider implements Use<typeof useScaleRangeSliderWidget> {
    manager: ControllerManager<this>;
    el: HTMLElement;
    widget: __esri.ScaleRangeSlider;
    viewModel: __esri.ScaleRangeSliderViewModel;
    /**
     * If true, the component will not be destroyed automatically when it is
     * disconnected from the document. This is useful when you want to move the
     * component to a different place on the page, or temporary hide it. If this
     * is set, make sure to call the \`destroy\` method when you are done to prevent
     * memory leaks.
     */
    autoDestroyDisabled: boolean;
    referenceElement: ArcgisReferenceElement | Nil | string;
    disabled: boolean;
    /**
     * Icon which represents the component.
     * Typically used when the component is controlled by another component (e.g. by the Expand component).
     * Search [Calcite Icons](https://developers.arcgis.com/calcite-design-system/icons/) for possible values.
     */
    icon: string;
    label: string;
    layer: __esri.Layer;
    maxScale: number;
    maxScaleLimit: number;
    minScale: number;
    minScaleLimit: number;
    mode: "range" | "max-scale-only" | "min-scale-only";
    region: __esri.SupportedRegion;
    hidePreview: boolean | undefined;
    hideScaleMenusMinScaleMenu: boolean | undefined;
    hideScaleMenusMaxScaleMenu: boolean | undefined;
    position: __esri.UIPosition;
    state: "ready" | "disabled";
    arcgisReady: EventEmitter<never>;
    arcgisPropertyChange: import("@arcgis/components-controllers").EventEmitter<{
        name: "state" | "maxScale" | "minScale";
    }>;
    /** Permanently destroy the component */
    destroy(): Promise<void>;
}
export {};
