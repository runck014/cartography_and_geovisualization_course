/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.31/esri/copyright.txt for details.
 * v4.31.6
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-18a7f5d0.js');
const index$3 = require('./index-5e5de530.js');
const index$2 = require('./index-37d4afd2.js');
const useWidget = require('./useWidget-fb821f71.js');
const index$1 = require('./index-e254d0ee.js');
require('./component-utils-9b190f6f.js');

const measurementCss = "arcgis-measurement{}";
const ArcgisMeasurementStyle0 = measurementCss;

const useMeasurementWidget = useWidget.makeWidgetController(index$3.newWidgetsMeasurement);
const ArcgisMeasurement = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.arcgisReady = index.createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = index.createEvent(this, "arcgisPropertyChange", 7);
        this.manager = index$1.useControllerManager(this);
        this.widget = useMeasurementWidget(this);
        this.viewModel = this.widget.viewModel;
        this.arcgisPropertyChange = index$2.usePropertyChange()("activeTool", "state");
        this.autoDestroyDisabled = false;
        this.referenceElement = undefined;
        this.activeTool = this.widget.activeTool;
        this.activeWidget = this.widget.activeWidget;
        this.areaUnit = this.widget.areaUnit;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.linearUnit = this.widget.linearUnit;
        this.position = "bottom-left";
        this.state = this.viewModel.state;
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    async clear() {
        this.widget?.clear();
    }
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    async startMeasurement() {
        this.widget?.startMeasurement();
    }
    get el() { return index.getElement(this); }
};
ArcgisMeasurement.style = ArcgisMeasurementStyle0;

exports.arcgis_measurement = ArcgisMeasurement;
