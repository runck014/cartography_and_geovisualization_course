/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.31/esri/copyright.txt for details.
 * v4.31.6
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-18a7f5d0.js');
const index$3 = require('./index-5e5de530.js');
const index$2 = require('./index-37d4afd2.js');
const useWidget = require('./useWidget-fb821f71.js');
const index$1 = require('./index-e254d0ee.js');
require('./component-utils-9b190f6f.js');

const elevationProfileCss = "";
const ArcgisElevationProfileStyle0 = elevationProfileCss;

const useElevationProfileWidget = useWidget.makeWidgetController(index$3.newWidgetsElevationProfile);
const ArcgisElevationProfile = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.arcgisReady = index.createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = index.createEvent(this, "arcgisPropertyChange", 7);
        this.manager = index$1.useControllerManager(this);
        this.widget = useElevationProfileWidget(this);
        this.viewModel = this.widget.viewModel;
        this.arcgisPropertyChange = index$2.usePropertyChange()("input", "effectiveUnits", "progress", "state");
        this.autoDestroyDisabled = false;
        this.referenceElement = undefined;
        this.effectiveUnits = this.viewModel.effectiveUnits;
        this.highlightEnabled = this.viewModel.highlightEnabled;
        this.hoveredChartPosition = this.viewModel.hoveredChartPosition;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.input = this.widget.input;
        this.profiles = this.widget.profiles;
        this.progress = this.viewModel.progress;
        this.unit = this.widget.unit;
        this.uniformChartScaling = this.viewModel.uniformChartScaling;
        this.unitOptions = this.widget.unitOptions;
        this.hideLegend = this.widget.visibleElements.legend;
        this.hideChart = this.widget.visibleElements.chart;
        this.hideClearButton = this.widget.visibleElements.clearButton;
        this.hideSettingsButton = this.widget.visibleElements.settingsButton;
        this.hideSketchButton = this.widget.visibleElements.sketchButton;
        this.hideSelectButton = this.widget.visibleElements.selectButton;
        this.hideUnitSelector = this.widget.visibleElements.unitSelector;
        this.hideUniformChartScalingToggle = this.widget.visibleElements.uniformChartScalingToggle;
        this.position = "bottom-left";
        this.state = this.viewModel.state;
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    async start() {
        this.widget.viewModel.start();
    }
    async stop() {
        this.widget.viewModel.stop();
    }
    get el() { return index.getElement(this); }
};
ArcgisElevationProfile.style = ArcgisElevationProfileStyle0;

exports.arcgis_elevation_profile = ArcgisElevationProfile;
