/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import t from"../PopupTemplate.js";import"../renderers/ClassBreaksRenderer.js";import"../renderers/DictionaryRenderer.js";import"../renderers/DotDensityRenderer.js";import"../renderers/HeatmapRenderer.js";import"../renderers/PieChartRenderer.js";import"../renderers/Renderer.js";import"../renderers/SimpleRenderer.js";import"../renderers/UniqueValueRenderer.js";import{read as r}from"../renderers/support/jsonUtils.js";import{rendererTypes as i,webSceneRendererTypes as o}from"../renderers/support/types.js";import s from"../request.js";import{symbolTypes as a}from"../symbols.js";import{ClonableMixin as n}from"../core/Clonable.js";import l from"../core/Collection.js";import p from"../core/Error.js";import{clone as u}from"../core/lang.js";import d from"../core/Logger.js";import{MultiOriginJSONMixin as y}from"../core/MultiOriginJSONSupport.js";import{setDeepValue as c}from"../core/object.js";import{debounce as m,throwIfAbortError as h,whenOrAbort as f}from"../core/promiseUtils.js";import{sqlAnd as b}from"../core/sql.js";import{urlToObject as g,join as w}from"../core/urlUtils.js";import v from"../core/Warning.js";import{property as j}from"../core/accessorSupport/decorators/property.js";import{cast as S}from"../core/accessorSupport/decorators/cast.js";import{reader as F}from"../core/accessorSupport/decorators/reader.js";import{subclass as T}from"../core/accessorSupport/decorators/subclass.js";import{writer as I}from"../core/accessorSupport/decorators/writer.js";import{excludeTables as E}from"../core/accessorSupport/layerContainerType.js";import D from"../form/FormTemplate.js";import L from"../geometry/SpatialReference.js";import _ from"./Layer.js";import{MemorySource as x}from"./graphics/sources/MemorySource.js";import{APIKeyMixin as P}from"./mixins/APIKeyMixin.js";import{ArcGISService as q}from"./mixins/ArcGISService.js";import{BlendLayer as C}from"./mixins/BlendLayer.js";import{CustomParametersMixin as M}from"./mixins/CustomParametersMixin.js";import{EditBusLayer as O}from"./mixins/EditBusLayer.js";import{FeatureEffectLayer as A}from"./mixins/FeatureEffectLayer.js";import{FeatureLayerBase as R}from"./mixins/FeatureLayerBase.js";import{FeatureReductionLayer as V}from"./mixins/FeatureReductionLayer.js";import{OperationalLayer as Q}from"./mixins/OperationalLayer.js";import{OrderedLayer as U}from"./mixins/OrderedLayer.js";import{PortalLayer as B}from"./mixins/PortalLayer.js";import{PublishableLayer as N}from"./mixins/PublishableLayer.js";import{RefreshableLayer as $}from"./mixins/RefreshableLayer.js";import{ScaleRangeLayer as G}from"./mixins/ScaleRangeLayer.js";import{TemporalLayer as J}from"./mixins/TemporalLayer.js";import{titleFromUrlAndName as W,parse as Z,cleanTitle as H}from"./support/arcgisLayerUrl.js";import{attributeTableTemplate as k,id as z,labelsVisible as K,opacityDrawingInfo as X,legendEnabled as Y,listMode as ee,popupEnabled as te,screenSizePerspectiveEnabled as re}from"./support/commonProperties.js";import{ensureLayerCredential as ie,computeEffectiveEditingEnabled as oe,readGlobalIdField as se,readObjectIdField as ae,createDefaultRenderer as ne,addAttachment as le,updateAttachment as pe,applyEdits as ue,uploadAssets as de,createQuery as ye,deleteAttachments as ce,fetchRecomputedExtents as me,getFeatureType as he,computeDomainFromSubtypes as fe,getFeatureSubtype as be,computeDomainFromTypes as ge,queryAttachments as we,queryObjectIds as ve,queryFeatureCount as je,queryExtent as Se,queryRelatedFeatures as Fe,queryRelatedFeaturesCount as Te,validateBinsQuery as Ie,hasDataChanged as Ee,geometryTypeKebabDict as De}from"./support/featureLayerUtils.js";import Le from"./support/FeatureTemplate.js";import _e from"./support/FeatureType.js";import{defineFieldProperties as xe}from"./support/fieldProperties.js";import{fixRendererFields as Pe,fixTimeInfoFields as qe}from"./support/fieldUtils.js";import Ce from"./support/LabelClass.js";import{reader as Me}from"./support/labelingInfo.js";import{getFeatureLayerCapabilities as Oe}from"./support/serviceCapabilitiesUtils.js";import Ae from"./support/TimeInfo.js";import{serviceSupportsSpatialReference as Re}from"./support/versionUtils.js";import{DataLayerSource as Ve}from"./support/source/DataLayerSource.js";import{loadStyleRenderer as Qe}from"../renderers/support/styleUtils.js";import Ue from"../rest/support/FeatureSet.js";import Be from"../rest/support/Query.js";import{createPopupTemplate as Ne}from"../support/popupUtils.js";import{alphaCutoff as $e}from"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js";import{SaveOperationType as Ge}from"../webdoc/interfaces.js";import{opacityToTransparency as Je}from"../webdoc/support/opacityUtils.js";const We="FeatureLayer";function Ze(e,t){return new p("layer:unsupported",`Layer (${e.title}, ${e.id}) of type '${e.declaredClass}' ${t}`,{layer:e})}function He(e){return e&&e instanceof l}const ke=xe();function ze(e,t,r){const i=!!r?.writeLayerSchema;return{enabled:i,ignoreOrigin:i}}let Ke=class extends(R(V(A(N(O(C(U(J(G($(q(Q(B(y(M(P(n(_)))))))))))))))))){constructor(...e){super(...e),this.attributeTableTemplate=null,this.charts=null,this.copyright=null,this.displayField=null,this.dynamicDataSource=null,this.fields=null,this.fieldsIndex=null,this.formTemplate=null,this.fullExtent=null,this.geometryType=null,this.hasM=void 0,this.hasZ=void 0,this.infoFor3D=null,this.isTable=!1,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.outFields=null,this.path=null,this.popupEnabled=!0,this.popupTemplate=null,this.resourceInfo=null,this.screenSizePerspectiveEnabled=!0,this.spatialReference=L.WGS84,this.subtypeCode=null,this.supportedSourceTypes=new Set(["Feature Layer","Oriented Imagery Layer","Table","Catalog Layer"]),this.templates=null,this.timeInfo=null,this.title=null,this.sublayerTitleMode="item-title",this.type="feature",this.typeIdField=null,this.types=null,this.visible=!0,this._debouncedSaveOperations=m((async(e,t,r)=>{const{save:i,saveAs:o}=await import("./save/featureLayerUtils.js");switch(e){case Ge.SAVE:return i(this,t);case Ge.SAVE_AS:return o(this,r,t)}}))}destroy(){this.source?.destroy()}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null;if(this.portalItem?.loaded&&this.source)return this.addResolvingPromise(this.createGraphicsSource(t).then((e=>this.initLayerProperties(e)))),Promise.resolve(this);const r=this.loadFromPortal({supportedTypes:["Feature Service","Feature Collection","Scene Service"]},e).catch(h).then((async()=>{if(this.url&&null==this.layerId&&/FeatureServer|MapServer\/*$/i.test(this.url)){const e=await this._fetchFirstValidLayerId(t);null!=e&&(this.layerId=e)}if(!this.url&&!this._hasMemorySource())throw new p("feature-layer:missing-url-or-source","Feature layer must be created with either a url or a source");return this.initLayerProperties(await this.createGraphicsSource(t))})).then((()=>ie(this,"load",e)));return this.addResolvingPromise(r),Promise.resolve(this)}warnInvisibleDrapedSymbols(){"on-the-ground"===this.elevationInfo?.mode&&"simple"===this.renderer?.type&&"polygon-3d"===this.renderer.symbol?.type&&this.renderer.symbol.symbolLayers.some((e=>"fill"===e.type&&null!=e.material&&((!e.material.color||e.material.color.a*this.opacity<$e)&&(this.loadWarnings.push(new v("feature-layer:invisible-draped-symbols","FeatureLayer has fully transparent symbols which will no longer render or highlight",{layer:this})),!0))))}readCapabilities(e,t){return t=t.layerDefinition||t,Oe(t,this.url)}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("dynamicDataSource"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("gdbVersion"),this.commitProperty("historicMoment"),this.commitProperty("returnZ"),this.commitProperty("capabilities"),this.commitProperty("returnM"),(this._get("createQueryVersion")??0)+1}get editingEnabled(){return!(this.loaded&&!this.capabilities?.operations.supportsEditing)&&(this._isOverridden("editingEnabled")?this._get("editingEnabled"):this._hasMemorySource()||this.userHasEditingPrivileges)}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}readEditingEnabled(e,t){return this._readEditingEnabled(t,!1)}readEditingEnabledFromWebMap(e,t,r){return this._readEditingEnabled(t,!0,r)}writeEditingEnabled(e,t){this._writeEditingEnabled(e,t,!1)}writeEditingEnabledToWebMap(e,t,r,i){this._writeEditingEnabled(e,t,!0,i)}get effectiveEditingEnabled(){return oe(this)}readIsTable(e,t){return"Table"===(t=t?.layerDefinition??t).type||!t.geometryType}writeIsTable(e,t,r,i){i?.writeLayerSchema&&c(r,e?"Table":"Feature Layer",t)}readGlobalIdField(e,t){return se(t.layerDefinition||t)}readObjectIdField(e,t){return ae(t.layerDefinition||t)}get parsedUrl(){const e=g(this.url);return null!=e&&(null!=this.dynamicDataSource?e.path=w(e.path,"dynamicLayer"):null!=this.layerId&&(e.path=w(e.path,this.layerId.toString()))),e}get defaultPopupTemplate(){return this.createPopupTemplate()}set renderer(e){Pe(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,t,i){t=t.layerDefinition||t;const o=t.drawingInfo?.renderer;if(o){const e=r(o,t,i)??void 0;return e||d.getLogger(this).error("Failed to create renderer",{rendererDefinition:t.drawingInfo.renderer,layer:this,context:i}),e}return ne(t,i)}set source(e){const t=this._get("source");t!==e&&(He(t)&&this._resetMemorySource(t),He(e)&&this._initMemorySource(e),this._set("source",e))}castSource(e){return e?Array.isArray(e)||e instanceof l?new x({layer:this,items:e}):e:null}readSource(e,t){const r=Ue.fromJSON(t.featureSet);return new x({layer:this,items:r?.features??[]})}readTemplates(e,t){const r=t.editFieldsInfo,i=r?.creatorField,o=r?.editorField;return e=e?.map((e=>Le.fromJSON(e))),this._fixTemplates(e,i),this._fixTemplates(e,o),e}readTitle(e,t){const r=t.layerDefinition?.name??t.name,i=t.title||t.layerDefinition?.title;if(r){const e=this.portalItem?.title;if("item-title"===this.sublayerTitleMode)return this.url?W(this.url,r):r;let t=r;if(!t&&this.url){const e=Z(this.url);null!=e&&(t=e.title)}if(!t)return;return"item-title-and-service-name"===this.sublayerTitleMode&&e&&e!==t&&(t=e+" - "+t),H(t)}if("item-title"===this.sublayerTitleMode&&i)return i}readTitleFromWebMap(e,t){return t.title||t.layerDefinition?.name}readTypeIdField(e,t){let r=(t=t.layerDefinition||t).typeIdField;if(r&&t.fields){r=r.toLowerCase();const e=t.fields.find((e=>e.name.toLowerCase()===r));e&&(r=e.name)}return r}readTypes(e,t){e=(t=t.layerDefinition||t).types;const r=t.editFieldsInfo,i=r?.creatorField,o=r?.editorField;return e?.map((e=>(e=_e.fromJSON(e),this._fixTemplates(e.templates,i),this._fixTemplates(e.templates,o),e)))}readVisible(e,t){return null!=t.layerDefinition?.defaultVisibility?!!t.layerDefinition.defaultVisibility:null!=t.visibility?!!t.visibility:void 0}async addAttachment(e,t){const r=await le(this,e,t,We);return this.lastEditsEventDate=new Date,r}async updateAttachment(e,t,r){const i=await pe(this,e,t,r,We);return this.lastEditsEventDate=new Date,i}async applyEdits(e,t){return ue(this,e,t)}async uploadAssets(e,t){return de(this,e,t)}on(e,t){return super.on(e,t)}createPopupTemplate(e){return Ne(this,e)}async createGraphicsSource(e){if(this._hasMemorySource()&&this.source)return this.source.load({signal:e});const{default:t}=await f(import("./graphics/sources/FeatureLayerSource.js"),e);return new t({layer:this,supportedSourceTypes:this.supportedSourceTypes}).load({signal:e})}createQuery(){const e=ye(this);e.dynamicDataSource=this.dynamicDataSource;const t=null!=this.subtypeCode?`${this.subtypeField} = ${this.subtypeCode}`:null,r=b(this.definitionExpression,t);return e.where=r||"1=1",e}async deleteAttachments(e,t){const r=await ce(this,e,t,We);return this.lastEditsEventDate=new Date,r}async fetchRecomputedExtents(e){return me(this,e,We)}getFeatureType(e){return he(this.types,this.typeIdField,e)}getFieldDomain(e,t){const r=t?.feature,i=!!this.subtypes?.length;if(i&&!t?.excludeImpliedDomains){const t=fe(this,e);if(t)return t}const o=i&&be(this,r);if(o){const t=o?.domains?.[e];return"inherited"===t?.type?this._getLayerDomain(e):t}const s=this.getFeatureType(r),a=this._getLayerDomain(e);if(s){const t=s.domains&&s.domains[e];if(t&&"inherited"!==t?.type)return t}if(a)return a;if(!t?.excludeImpliedDomains){const t=ge(this,e);if(t)return t}return null}getField(e){return this.fieldsIndex.get(e)}async queryAttachments(e,t){return we(this,e,t,We)}async queryFeatures(e,t){const r=await this.load(),i=await r.source.queryFeatures(Be.from(e)??r.createQuery(),t);if(i?.features)for(const o of i.features)o.layer=o.sourceLayer=r;return i}async queryObjectIds(e,t){return ve(this,e,t,We)}async queryFeatureCount(e,t){return je(this,e,t,We)}async queryExtent(e,t){return Se(this,e,t,We)}async queryRelatedFeatures(e,t){return Fe(this,e,t,We)}async queryRelatedFeaturesCount(e,t){return Te(this,e,t,We)}async queryTopFeatures(e,t){const{source:r,capabilities:i}=await this.load();if(!r.queryTopFeatures||!i?.query?.supportsTopFeaturesQuery)throw new p(We,"Layer source does not support queryTopFeatures capability");const o=await import("../rest/support/TopFeaturesQuery.js"),s=await r.queryTopFeatures(o.default.from(e),t);if(s?.features)for(const a of s.features)a.layer=a.sourceLayer=this;return s}async queryBins(e,t){const{source:r,capabilities:i}=await this.load();if(!r.queryBins||!i?.operations?.supportsQueryBins)throw new p(We,"Layer source does not support queryBins capability");Ie(e,i,We);const o=await import("../rest/support/BinsQuery.js"),s=await r.queryBins(o.default.from(e),t);if(s.features)for(const a of s.features)a.layer=a.sourceLayer=this;return s}async queryTopObjectIds(e,t){const{source:r,capabilities:i}=await this.load();if(!r.queryTopObjectIds||!i?.query.supportsTopFeaturesQuery)throw new p(We,"Layer source does not support queryTopObjectIds capability");const o=await import("../rest/support/TopFeaturesQuery.js");return r.queryTopObjectIds(o.default.from(e),t)}async queryTopFeaturesExtent(e,t){const{source:r,capabilities:i}=await this.load();if(!r.queryTopExtents||!i?.query?.supportsTopFeaturesQuery)throw new p(We,"Layer source does not support queryTopExtents capability");const o=await import("../rest/support/TopFeaturesQuery.js");return r.queryTopExtents(o.default.from(e),t)}async queryTopFeatureCount(e,t){const{source:r,capabilities:i}=await this.load();if(!r.queryTopCount||!i?.query?.supportsTopFeaturesQuery)throw new p(We,"Layer source does not support queryFeatureCount capability");const o=await import("../rest/support/TopFeaturesQuery.js");return r.queryTopCount(o.default.from(e),t)}read(e,t){const r=e.featureCollection;if((r||"Feature Collection"===e.type)&&(this.resourceInfo=e),r){const e=r.layers;e&&1===e.length&&(super.read(e[0],t),null!=r.showLegend&&super.read({showLegend:r.showLegend},t))}super.read(e,t),t&&"service"===t.origin&&(this.revert(["objectIdField","fields","timeInfo","dateFieldsTimeZone"],"service"),this.spatialReference||this.revert(["spatialReference"],"service"))}write(e,t){t={...t,origin:t?.origin??void 0,writeLayerSchema:t?.writeLayerSchema??this._hasMemorySource()};const{origin:r,layerContainerType:i,messages:o}=t;if(this.dynamicDataSource)return o?.push(Ze(this,"using a dynamic data source cannot be written to web scenes, web maps and feature service items")),null;if(this.isTable){if(("web-map"===r||"web-scene"===r)&&"tables"!==i)return o?.push(Ze(this,`a table source can only be written to tables, not ${i}`)),null;if(this._hasMemorySource())return o?.push(Ze(this,"using an in-memory table source cannot be written to web scenes and web maps")),null}else if(this.loaded&&("web-map"===r||"web-scene"===r)&&"tables"===i)return o?.push(Ze(this,"using a non-table source cannot be written to tables in web maps or web scenes")),null;return super.write(e,t)}clone(){if(this._hasMemorySource())throw new p(We,`FeatureLayer (title: ${this.title}, id: ${this.id}) created using in-memory source cannot be cloned`);return super.clone()}serviceSupportsSpatialReference(e){return!!this.loaded&&("memory"===this.source?.type||Re(this,e))}async save(e){return this._debouncedSaveOperations(Ge.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(Ge.SAVE_AS,t,e)}_readEditingEnabled(e,t,r){let i=e.layerDefinition?.capabilities;return i?this._hasEditingCapability(i):(i=e.capabilities,t&&"web-map"===r?.origin&&!this._hasMemorySource()&&i?this._hasEditingCapability(i):void 0)}_hasEditingCapability(e){return e.toLowerCase().split(",").map((e=>e.trim())).includes("editing")}_writeEditingEnabled(e,t,r,i){if(!e){const e=this.capabilities?.operations?.supportsSync?"Query,Sync":"Query";c("layerDefinition.capabilities",e,t),r&&!i?.writeLayerSchema&&(t.capabilities=e)}}_getLayerDomain(e){const t=this.fieldsIndex.get(e);return t?t.domain:null}_fetchFirstValidLayerId(e){return s(this.url??"",{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then((e=>{const t=e.data;if(t)return this.findFirstValidLayerId(t)}))}async initLayerProperties(e){return this._set("source",e),e.sourceJSON&&(this.sourceJSON=e.sourceJSON,this.read(e.sourceJSON,{origin:"service",portalItem:this.portalItem,portal:this.portalItem?.portal,url:this.parsedUrl})),this._verifySource(),this._verifyFields(),Pe(this.renderer,this.fieldsIndex),qe(this.timeInfo,this.fieldsIndex),Qe(this,{origin:"service"})}async hasDataChanged(){return Ee(this)}async fetchPublishingStatus(){const e=this.source;return e?.fetchPublishingStatus?e.fetchPublishingStatus():"unavailable"}_verifyFields(){const e=this.parsedUrl?.path??"undefined";this.objectIdField||console.log("FeatureLayer: 'objectIdField' property is not defined (url: "+e+")"),this.isTable||this._hasMemorySource()||-1!==e.search(/\/FeatureServer\//i)||this.fields?.some((e=>"geometry"===e.type))||console.log("FeatureLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: "+e+")")}_fixTemplates(e,t){e&&e.forEach((e=>{const r=e.prototype?.attributes;r&&t&&delete r[t]}))}_verifySource(){if(this._hasMemorySource()){if(this.url)throw new p("feature-layer:mixed-source-and-url","FeatureLayer cannot be created with both an in-memory source and a url")}else if(!this.url)throw new p("feature-layer:source-or-url-required","FeatureLayer requires either a url, a valid portal item or a source")}_initMemorySource(e){e.forEach((e=>{e.layer=this,e.sourceLayer=this})),this.addHandles([e.on("after-add",(e=>{e.item.layer=this,e.item.sourceLayer=this})),e.on("after-remove",(e=>{e.item.layer=null,e.item.sourceLayer=null}))],"fl-source")}_resetMemorySource(e){e.forEach((e=>{e.layer=null,e.sourceLayer=null})),this.removeHandles("fl-source")}_hasMemorySource(){return!(this.url||!this.source)}findFirstValidLayerId(e){return Array.isArray(e.layers)&&e.layers.length>0?e.layers[0].id:Array.isArray(e.tables)&&e.tables.length>0?e.tables[0].id:void 0}};e([j(k)],Ke.prototype,"attributeTableTemplate",void 0),e([F("service","capabilities")],Ke.prototype,"readCapabilities",null),e([j({json:{origins:{"web-scene":{write:!1}},write:!0}})],Ke.prototype,"charts",void 0),e([j({readOnly:!0})],Ke.prototype,"createQueryVersion",null),e([j({json:{read:{source:"layerDefinition.copyrightText"}}})],Ke.prototype,"copyright",void 0),e([j({json:{read:{source:"layerDefinition.displayField"}}})],Ke.prototype,"displayField",void 0),e([j({types:a,readOnly:!0})],Ke.prototype,"defaultSymbol",void 0),e([j({type:Ve})],Ke.prototype,"dynamicDataSource",void 0),e([j({type:Boolean})],Ke.prototype,"editingEnabled",null),e([F(["portal-item","web-scene"],"editingEnabled",["layerDefinition.capabilities"])],Ke.prototype,"readEditingEnabled",null),e([F("web-map","editingEnabled",["capabilities","layerDefinition.capabilities"])],Ke.prototype,"readEditingEnabledFromWebMap",null),e([I(["portal-item","web-scene"],"editingEnabled",{"layerDefinition.capabilities":{type:String}})],Ke.prototype,"writeEditingEnabled",null),e([I("web-map","editingEnabled",{capabilities:{type:String},"layerDefinition.capabilities":{type:String}})],Ke.prototype,"writeEditingEnabledToWebMap",null),e([j({readOnly:!0})],Ke.prototype,"effectiveEditingEnabled",null),e([j({...ke.fields,json:{read:{source:"layerDefinition.fields"},origins:{service:{name:"fields"},"web-map":{write:{target:"layerDefinition.fields",overridePolicy:ze}}}}})],Ke.prototype,"fields",void 0),e([j(ke.fieldsIndex)],Ke.prototype,"fieldsIndex",void 0),e([j({type:D,json:{name:"formInfo",write:!0,origins:{"web-scene":{read:!1,write:!1}}}})],Ke.prototype,"formTemplate",void 0),e([j({json:{read:{source:"layerDefinition.extent"}}})],Ke.prototype,"fullExtent",void 0),e([j({json:{origins:{"web-map":{write:{target:"layerDefinition.geometryType",overridePolicy:ze,writer(e,t,r){const i=e?De.toJSON(e):null;i&&c(r,i,t)}}}},read:{source:"layerDefinition.geometryType",reader:De.read}}})],Ke.prototype,"geometryType",void 0),e([j({json:{read:{source:"layerDefinition.hasM"}}})],Ke.prototype,"hasM",void 0),e([j({json:{read:{source:"layerDefinition.hasZ"}}})],Ke.prototype,"hasZ",void 0),e([j(z)],Ke.prototype,"id",void 0),e([j({readOnly:!0,json:{origins:{service:{read:!0}},read:!1}})],Ke.prototype,"infoFor3D",void 0),e([j({json:{origins:{"web-map":{write:{target:"layerDefinition.type"}}}}})],Ke.prototype,"isTable",void 0),e([F("service","isTable",["type","geometryType"]),F("isTable",["layerDefinition.type","layerDefinition.geometryType"])],Ke.prototype,"readIsTable",null),e([I("web-map","isTable")],Ke.prototype,"writeIsTable",null),e([j(K)],Ke.prototype,"labelsVisible",void 0),e([j({type:[Ce],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:Me,write:!1},"web-scene":{name:"layerDefinition.drawingInfo.labelingInfo",read:Me,write:{enabled:!0,layerContainerTypes:E}}},name:"layerDefinition.drawingInfo.labelingInfo",read:Me,write:!0}})],Ke.prototype,"labelingInfo",void 0),e([j((()=>{const e=u(X);return e.json.origins["portal-item"]={write:{target:"layerDefinition.drawingInfo.transparency",writer(e,t,r){c(r,Je(e),t)}}},e})())],Ke.prototype,"opacity",void 0),e([j(Y)],Ke.prototype,"legendEnabled",void 0),e([j({type:["show","hide"],json:(()=>{const e=u(ee.json);return e.origins["portal-item"]={read:!1,write:!1},e})()})],Ke.prototype,"listMode",void 0),e([F("globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],Ke.prototype,"readGlobalIdField",null),e([j({json:{origins:{"web-map":{write:{target:"layerDefinition.objectIdField",overridePolicy:ze}}}}})],Ke.prototype,"objectIdField",void 0),e([F("objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],Ke.prototype,"readObjectIdField",null),e([j({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],Ke.prototype,"operationalLayerType",void 0),e([j(ke.outFields)],Ke.prototype,"outFields",void 0),e([j({readOnly:!0})],Ke.prototype,"parsedUrl",null),e([j({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],Ke.prototype,"path",void 0),e([j(te)],Ke.prototype,"popupEnabled",void 0),e([j({type:t,json:{name:"popupInfo",write:!0}})],Ke.prototype,"popupTemplate",void 0),e([j({readOnly:!0})],Ke.prototype,"defaultPopupTemplate",null),e([j({types:i,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{types:o,name:"layerDefinition.drawingInfo.renderer",write:{layerContainerTypes:E,overridePolicy:(e,t,r)=>({ignoreOrigin:r?.writeLayerSchema})}}},write:{target:"layerDefinition.drawingInfo.renderer",overridePolicy:(e,t,r)=>({ignoreOrigin:r?.writeLayerSchema})}}})],Ke.prototype,"renderer",null),e([F("service","renderer",["drawingInfo.renderer","defaultSymbol"]),F("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],Ke.prototype,"readRenderer",null),e([j()],Ke.prototype,"resourceInfo",void 0),e([j((()=>{const e=u(re);return e.json.origins["portal-item"]={read:!1,write:!1},e})())],Ke.prototype,"screenSizePerspectiveEnabled",void 0),e([j({clonable:!1})],Ke.prototype,"source",null),e([S("source")],Ke.prototype,"castSource",null),e([F("portal-item","source",["featureSet"]),F("web-map","source",["featureSet"])],Ke.prototype,"readSource",null),e([j({json:{read:{source:"layerDefinition.extent.spatialReference"}}})],Ke.prototype,"spatialReference",void 0),e([j({type:Number})],Ke.prototype,"subtypeCode",void 0),e([j({type:[Le]})],Ke.prototype,"templates",void 0),e([F("templates",["editFieldsInfo","creatorField","editorField","templates"])],Ke.prototype,"readTemplates",null),e([j({type:Ae})],Ke.prototype,"timeInfo",void 0),e([j()],Ke.prototype,"title",void 0),e([F("service","title",["name"]),F("portal-item","title",["layerDefinition.title","layerDefinition.name","title"])],Ke.prototype,"readTitle",null),e([F("web-map","title",["layerDefinition.name","title"])],Ke.prototype,"readTitleFromWebMap",null),e([j({type:String})],Ke.prototype,"sublayerTitleMode",void 0),e([j({json:{read:!1}})],Ke.prototype,"type",void 0),e([j({type:String})],Ke.prototype,"typeIdField",void 0),e([F("service","typeIdField"),F("typeIdField",["layerDefinition.typeIdField"])],Ke.prototype,"readTypeIdField",null),e([j({type:[_e]})],Ke.prototype,"types",void 0),e([F("service","types",["types"]),F("types",["layerDefinition.types"])],Ke.prototype,"readTypes",null),e([j({type:Boolean,json:{origins:{"portal-item":{write:{target:"layerDefinition.defaultVisibility"}}}}})],Ke.prototype,"visible",void 0),e([F("portal-item","visible",["visibility","layerDefinition.defaultVisibility"])],Ke.prototype,"readVisible",null),Ke=e([T("esri.layers.FeatureLayer")],Ke);const Xe=Ke;export{Xe as default};
