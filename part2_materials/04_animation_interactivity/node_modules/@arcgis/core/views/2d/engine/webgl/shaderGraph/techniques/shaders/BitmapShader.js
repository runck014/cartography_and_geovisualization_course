/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.32/esri/copyright.txt for details.
*/
import{_ as t,a as o}from"../../../../../../../chunks/tslib.es6.js";import{location as i,uniform as e,GraphShaderModule as r,define as s,VertexInput as p,UniformGroup as c,FragmentOutput as n,input as l,FragmentInput as a}from"../../GraphShaderModule.js";import{Vec3 as d,Vec4 as u,texture2D as y,Vec2 as m,Sampler2D as f,Mat3 as g,Float as h}from"../../graph/glsl.js";import{sampleBicubicBSpline as x}from"./bitmapUtils.js";class v extends p{}t([i(0,m)],v.prototype,"position",void 0);class b extends a{}class S extends c{}t([e(f)],S.prototype,"texture",void 0),t([e(g)],S.prototype,"dvsMat3",void 0),t([e(m)],S.prototype,"coordScale",void 0),t([e(h)],S.prototype,"opacity",void 0);class j extends r{constructor(){super(...arguments),this.type="BitmapShader"}vertex(t){const o=this.config.dvsMat3.multiply(new d(t.position.multiply(this.config.coordScale),1));return{glPosition:new u(o,1),texcoord:t.position}}fragment(t){const o=new n;let i;return i=this.bicubic?x(this.config.texture,t.texcoord,this.config.coordScale):y(this.config.texture,t.texcoord),o.fragColor=new u(i.rgb.multiply(this.config.opacity),i.a.multiply(this.config.opacity)),o}}t([e(S)],j.prototype,"config",void 0),t([s],j.prototype,"bicubic",void 0),t([o(0,l(v))],j.prototype,"vertex",null),t([o(0,l(b))],j.prototype,"fragment",null);export{j as BitmapShader};
