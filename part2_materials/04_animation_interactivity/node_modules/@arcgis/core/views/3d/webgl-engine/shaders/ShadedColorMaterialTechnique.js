/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.32/esri/copyright.txt for details.
*/
import{isColorOrColorEmission as e}from"../core/shaderLibrary/ShaderOutput.js";import{ReloadableShaderModule as r}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as t}from"../core/shaderTechnique/ShaderTechnique.js";import{OITPass as o}from"../lib/OITPass.js";import{blending as s,depthWrite as i,getDrawBuffers as n,OITPolygonOffset as a}from"../lib/OrderIndependentTransparency.js";import{VertexAttribute as l}from"../lib/VertexAttribute.js";import{S as d}from"../../../../chunks/ShadedColorMaterial.glsl.js";import{CompareFunction as p}from"../../../webgl/enums.js";import{makePipelineState as m,cullingParams as u,defaultColorWrite as c}from"../../../webgl/renderState.js";class h extends t{constructor(e,t){super(e,t,new r(d,(()=>import("./ShadedColorMaterial.glsl.js"))),f)}initializePipeline(r){const{oitPass:t,output:l,transparent:d,cullFace:h,shadingEnabled:f}=r,S=t===o.NONE,b=t===o.FrontFace;return m({blending:e(l)&&d?s(t):null,culling:u(h),depthTest:{func:b?p.LESS:f?p.LEQUAL:p.LESS},depthWrite:i(r),drawBuffers:n(t,l),colorWrite:c,polygonOffset:S||b?null:a})}}const f=new Map([[l.POSITION,0],[l.NORMAL,1],[l.OFFSET,2]]);export{h as ShadedColorMaterialTechnique,f as vertexAttributeLocations};
