/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.32/esri/copyright.txt for details.
*/
import{_ as o}from"../../../../../../chunks/tslib.es6.js";import{ComponentDataType as e}from"./shader/ComponentData.glsl.js";import{VertexDiscardMode as t}from"./shader/VertexDiscardMode.js";import{ShaderOutput as r}from"../../../core/shaderLibrary/ShaderOutput.js";import{NormalType as s}from"../../../core/shaderLibrary/attributes/NormalAttribute.glsl.js";import{TextureCoordinateType as i}from"../../../core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js";import{EmissionSource as a}from"../../../core/shaderLibrary/output/Emissions.glsl.js";import{NormalsDoubleSidedMode as d}from"../../../core/shaderLibrary/shading/Normals.glsl.js";import{PBRMode as p}from"../../../core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js";import{EllipsoidMode as n}from"../../../core/shaderLibrary/util/EllipsoidMode.js";import{parameter as h,ShaderTechniqueConfiguration as l}from"../../../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{CullFaceOptions as c,AlphaDiscardMode as u}from"../../../lib/basicInterfaces.js";import{OITPass as y}from"../../../lib/OITPass.js";import{BindType as m}from"../../../../../webgl/BindType.js";var v;!function(o){o[o.None=0]="None",o[o.NoOverlay=1]="NoOverlay",o[o.ColorOverlay=2]="ColorOverlay",o[o.ColorOverlayWithWater=3]="ColorOverlayWithWater",o[o.COUNT=4]="COUNT"}(v||(v={}));class T extends l{constructor(o,h){super(),this.spherical=o,this.doublePrecisionRequiresObfuscation=h,this.output=r.Color,this.textureCoordinateType=i.None,this.componentData=e.Uniform,this.cullFace=c.Back,this.vertexDiscardMode=t.None,this.doubleSidedMode=d.WindingOrder,this.alphaDiscardMode=u.Opaque,this.integratedMeshMode=v.None,this.oitPass=y.NONE,this.ellipsoidMode=n.Earth,this.pbrMode=p.Disabled,this.normalType=s.Attribute,this.emissionSource=a.None,this.hasVertexColors=!1,this.hasNormals=!1,this.shadeNormals=!0,this.hasSlicePlane=!1,this.hasColorTexture=!1,this.receiveAmbientOcclusion=!0,this.receiveShadows=!0,this.blendingEnabled=!0,this.screenSpaceReflections=!1,this.hasPolygonOffset=!1,this.hasMetallicRoughnessTexture=!1,this.hasOcclusionTexture=!1,this.hasNormalTexture=!1,this.hasOccludees=!1,this.terrainDepthTest=!1,this.cullAboveTerrain=!1,this.hasNormalTextureTransform=!1,this.cloudReflections=!0,this.snowCover=!1,this.objectAndLayerIdColor=!1,this.discardInvisibleFragments=!1,this.occlusionPass=!1,this.bindType=m.Draw,this.useCustomDTRExponentForWater=!1,this.hasVertexTangents=!1,this.highStepCount=!1,this.instancedDoublePrecision=!1,this.hasModelTransformation=!1,this.useFillLights=!0,this.objectAndLayerIdColorInstanced=!1,this.canHaveOverlay=!0}}o([h({count:r.COUNT})],T.prototype,"output",void 0),o([h({count:i.COUNT})],T.prototype,"textureCoordinateType",void 0),o([h({count:e.COUNT})],T.prototype,"componentData",void 0),o([h({count:c.COUNT})],T.prototype,"cullFace",void 0),o([h({count:t.COUNT})],T.prototype,"vertexDiscardMode",void 0),o([h({count:d.COUNT})],T.prototype,"doubleSidedMode",void 0),o([h({count:u.COUNT})],T.prototype,"alphaDiscardMode",void 0),o([h({count:v.COUNT})],T.prototype,"integratedMeshMode",void 0),o([h({count:y.COUNT})],T.prototype,"oitPass",void 0),o([h({count:n.COUNT})],T.prototype,"ellipsoidMode",void 0),o([h({count:p.COUNT})],T.prototype,"pbrMode",void 0),o([h({count:s.COUNT})],T.prototype,"normalType",void 0),o([h({count:a.COUNT})],T.prototype,"emissionSource",void 0),o([h()],T.prototype,"hasVertexColors",void 0),o([h()],T.prototype,"hasNormals",void 0),o([h()],T.prototype,"shadeNormals",void 0),o([h()],T.prototype,"hasSlicePlane",void 0),o([h()],T.prototype,"hasColorTexture",void 0),o([h()],T.prototype,"receiveAmbientOcclusion",void 0),o([h()],T.prototype,"receiveShadows",void 0),o([h()],T.prototype,"blendingEnabled",void 0),o([h()],T.prototype,"screenSpaceReflections",void 0),o([h()],T.prototype,"hasPolygonOffset",void 0),o([h()],T.prototype,"hasMetallicRoughnessTexture",void 0),o([h()],T.prototype,"hasOcclusionTexture",void 0),o([h()],T.prototype,"hasNormalTexture",void 0),o([h()],T.prototype,"hasOccludees",void 0),o([h()],T.prototype,"terrainDepthTest",void 0),o([h()],T.prototype,"cullAboveTerrain",void 0),o([h()],T.prototype,"hasNormalTextureTransform",void 0),o([h()],T.prototype,"cloudReflections",void 0),o([h()],T.prototype,"snowCover",void 0),o([h()],T.prototype,"objectAndLayerIdColor",void 0);export{T as ComponentTechniqueConfiguration,v as IntegratedMeshMode};
