/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.32/esri/copyright.txt for details.
*/
import{glsl as e,If as t}from"../../../core/shaderModules/glsl.js";import{VertexAttribute as n}from"../../../lib/VertexAttribute.js";import{EdgeType as s}from"./EdgeUtil.glsl.js";function i(i,o){const d=o.type===s.Mixed,r=o.type===s.Solid;i.attributes.add(n.SIDENESS,"vec2"),i.vertex.code.add(e`
    struct UnpackedAttributes {
      vec2 sideness;
      vec2 sidenessNorm;
      float lineWidthPixels;
      float extensionLengthPixels;
      ${t(d,"float type;")}
    };
  `).code.add(e`
    UnpackedAttributes unpackAttributes(ComponentData component) {
      vec2 sidenessNorm = sideness;
      vec2 sideness = sidenessNorm * 2.0 - 1.0;
      float extensionLengthPixels = component.extensionLength;
      float lineWidth = component.lineWidth;
      ${t(d,"if (component.type <= 0.0) {")}
      ${t(!r,"extensionLengthPixels *= variantExtension * 2.0 - 1.0;")}
      ${t(d,"}")}
      return UnpackedAttributes(sideness, sidenessNorm, lineWidth, extensionLengthPixels ${t(d,", component.type")});
    }
  `)}export{i as UnpackAttributes};
