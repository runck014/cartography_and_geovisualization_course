/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.32/esri/copyright.txt for details.
*/
import{ShaderOutput as o,isColorEmission as r,isColorOrColorEmission as l}from"../core/shaderLibrary/ShaderOutput.js";import{Emissions as t}from"../core/shaderLibrary/output/Emissions.glsl.js";import{OutputHighlight as i}from"../core/shaderLibrary/output/OutputHighlight.glsl.js";import{ColorConversion as a}from"../core/shaderLibrary/util/ColorConversion.glsl.js";import{glsl as s,If as u}from"../core/shaderModules/glsl.js";import{OITPass as e}from"../lib/OITPass.js";import{alphaCutoff as n}from"../../../../webscene/support/AlphaCutoff.js";function p(p,d){p.include(i,d),p.include(t,d),p.fragment.include(a);const f=d.output===o.ObjectAndLayerIdColor,c=r(d.output),m=l(d.output)&&d.oitPass===e.ColorAlpha,g=l(d.output)&&d.oitPass!==e.ColorAlpha,C=d.discardInvisibleFragments;let h=0;(g||c||m)&&p.outputs.add("fragColor","vec4",h++),c&&p.outputs.add("fragEmission","vec4",h++),m&&p.outputs.add("fragAlpha","float",h++),p.fragment.code.add(s`
    void outputColorHighlightOID(vec4 finalColor, const in vec3 vWorldPosition) {
      ${u(f,"finalColor.a = 1.0;")}

      ${u(C,`if (finalColor.a < ${s.float(n)}) { discard; }`)}

      finalColor = applySlice(finalColor, vWorldPosition);
      ${u(m,s`fragColor = premultiplyAlpha(finalColor);
             fragAlpha = finalColor.a;`)}
      ${u(g,"fragColor = finalColor;")}
      ${u(c,"fragEmission = finalColor.a * getEmissions();")}
      calculateOcclusionAndOutputHighlight();
      ${u(f,"outputObjectAndLayerIdColor();")}
    }
  `)}export{p as outputColorHighlightOID};
