/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.32/esri/copyright.txt for details.
*/
import{_ as i}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Accessor.js";import has from"../../../../core/has.js";import{lerp as e}from"../../../../core/mathUtils.js";import s from"../../../../core/PooledArray.js";import{property as r}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/Logger.js";import"../../../../core/RandomLCG.js";import{subclass as a}from"../../../../core/accessorSupport/decorators/subclass.js";import{transpose as o}from"../../../../core/libs/gl-matrix-2/math/mat4.js";import{create as c}from"../../../../core/libs/gl-matrix-2/factories/mat4f64.js";import{create as n}from"../../../../core/libs/gl-matrix-2/factories/vec2f64.js";import{t as l,j as h,h as p,i as u,c as d}from"../../../../chunks/vec32.js";import{ZEROS as f,create as _}from"../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{s as m,t as b,b as g}from"../../../../chunks/vec42.js";import{create as v}from"../../../../core/libs/gl-matrix-2/factories/vec4f64.js";import{UpdatingHandles as y}from"../../../../core/support/UpdatingHandles.js";import{getReferenceEllipsoid as G}from"../../../../geometry/ellipsoidUtils.js";import{create as w,empty as S,offset as D,width as N,height as B,expand as I,intersects as j}from"../../../../geometry/support/aaBoundingRect.js";import{d as T,a as C,e as P}from"../../../../chunks/boundedPlane.js";import{create as V}from"../../../../geometry/support/ray.js";import{a as A,h as O,j as x,c as M}from"../../../../chunks/sphere.js";import{drawAccelerationStruct as E,prepare as z,drawPoly as F}from"./deconflictorDebug.js";import{VisibilityGroup as L,VisibilityFlag as X}from"./enums.js";import Y from"../../webgl/RenderCamera.js";import{newIntersector as R}from"../../webgl-engine/lib/Intersector.js";import{StoreResults as H}from"../../webgl-engine/lib/IntersectorInterfaces.js";import{applyPrecomputedScaleFactor as W}from"../../webgl-engine/lib/screenSizePerspectiveUtils.js";import{VertexAttribute as U}from"../../webgl-engine/lib/VertexAttribute.js";import{HUDMaterial as k}from"../../webgl-engine/materials/HUDMaterial.js";import{ScaleInfo as q}from"../../webgl-engine/materials/ScaleInfo.js";const J=_(),K=_(),Q=v(),Z=v(),$=_(),ii=c(),ti=M(),ei=V(),si=_(),ri=w();class ai{constructor(){this.aabr=w(),this.distance=0,this.distanceToTerrain=0,this.culled=!1,this.visible=!1}}class oi{constructor(i,t){this.graphics3DGraphic=i,this.slicePlaneEnabled=t,this.info={}}}var ci;!function(i){i[i.Idle=0]="Idle",i[i.Process=1]="Process",i[i.Sort=2]="Sort",i[i.Deconflict=3]="Deconflict",i[i.NumStates=4]="NumStates"}(ci||(ci={}));class ni{constructor(){this.camera=new Y,this.slicePlane=T(),this.slicePlaneEnabled=!1}copyFrom(i){this.camera.copyFrom(i.camera),C(i.slicePlane,this.slicePlane),this.slicePlaneEnabled=i.slicePlaneEnabled}}let li=class extends t{get dirty(){return this._dirty}get state(){return this._state}constructor(i){super(i),this._dirty=!1,this._viewState=new ni,this._state=ci.Idle,this._active=new Map,this._visible=new Map,this._iterators=new fi,this._accBinsNumX=15,this._accBinsNumY=20,this._accBinsSizeX=0,this._accBinsSizeY=0,this._accBins=null,this.accNumTests=0,this._updatingHandles=new y}destroy(){this._updatingHandles.destroy(),this._active.clear(),this._visible.clear(),this._iterators=null}setDirty(){!this._dirty&&this._active.size>0&&(this._dirty=!0,this.notifyChange("updating"))}get updating(){return this._state!==ci.Idle||this._dirty||this._updatingHandles.updating}get updatingProgress(){if(!this.updating)return 1;const i=this._state/ci.NumStates;return this._dirty?.5*i:i}get running(){return this.view.ready&&null!=this.view.state&&this.updating}runTask(i){switch(this._state){case ci.Idle:this._startUpdate(),i.madeProgress();case ci.Process:if(this._state=ci.Process,!this._processActiveGraphics(i))return;case ci.Sort:if(this._state=ci.Sort,!this._sortVisibleGraphics(i))return;case ci.Deconflict:if(this._state=ci.Deconflict,!this._deconflictVisibleGraphics(i))return;default:E(this,this._visible),this._state=ci.Idle,this.notifyChange("updating")}}modifyGraphics(i,t){t?i.forEach((i=>this.addToActiveGraphics(i))):i.forEach((i=>this.removeFromActiveGraphics(i))),this.setDirty()}layerSupportsDeconfliction(i){if(null==i||"object3d"!==i.type)return!1;const t=i.stageObject;if(1!==(t?.geometries.length??0))return!1;const e=t?.geometries[0],s=e?.material;return s instanceof k}_startUpdate(){z(this.view),this._dirty=!1,this._viewState.copyFrom(this.viewState);const{fullWidth:i,fullHeight:t}=this._viewState.camera;this._initBins(i,t),this._resetIterators()}addToActiveGraphics(i){i.info[this.visibilityGroup]=new ai,this._active.set(i.graphics3DGraphic.graphic.uid,i),this.setDirty()}removeFromActiveGraphics(i){this._visible.delete(i.graphics3DGraphic.graphic.uid),hi(i,this.visibilityGroup),delete i.info[this.visibilityGroup],this._active.delete(i.graphics3DGraphic.graphic.uid),this.setDirty()}_createTerrainIntersector(){const i=R(this.view.state.viewingMode);i.options.store=H.MIN;const t=this.view.basemapTerrain,e=this.view.state.camera;return o(ii,this._viewState.camera.viewInverseTransposeMatrix),s=>{l(K,s,ii),i.reset(e.eye,K,e),t.intersect(i,null,e.eye,K);const r=i.results.ground.dist;return null!=r?r*h(K,e.eye):0}}_processActiveGraphics(i){const t=this._ensureActiveGraphicsIterator(),e=this._viewState.camera.inverseProjectionMatrix,s="global"===this.view.viewingMode&&1===this.view.map.ground.opacity&&this._viewState.camera.relativeElevation>0,r=!!has("enable-feature:non-occluded-hud")&&this.view.map.ground.opacity>0?this._createTerrainIntersector():null,a=s?ti:null;let o=0;for(null!=a&&(l(A(a),f,this._viewState.camera.viewMatrix),a[3]=G(this.view.spatialReference).radius,o=O(a,f));!i.done;){i.madeProgress();const s=t.next();if(!0===s.done)return this._resetActiveGraphicsIterator(),!0;const c=s.value,n=c?.info[this.visibilityGroup];n&&(this._collectGraphics3DGraphics(c,e,a,o,r),n.culled?(this._setGraphicVisibility(c,!1),this._visible.delete(c.graphics3DGraphic.graphic.uid)):this._visible.set(c.graphics3DGraphic.graphic.uid,c))}return!1}_sortVisibleGraphics(i){const t=this._ensureSortGraphicsIterator();for(;!i.done;){const e=t.next();if(i.madeProgress(),!0===e.done)return this._resetSortGraphicsIterator(),!0}return!1}_deconflictVisibleGraphics(i){const t=this._ensureVisibleGraphicsIterator(),e=this.visibilityGroup===L.LABEL;for(;!i.done;){i.madeProgress();const s=t.next();if(!0===s.done)return this._resetVisibleGraphicsIterator(),!0;const r=s.value,a=r.info[this.visibilityGroup];if(!a||a.culled){this._setGraphicVisibility(r,!1);continue}const o=r.graphics3DGraphic,c=!e||o.isVisible();a.visible=c&&!this._isConflicted(r),a.visible&&this._addToBins(r),this._setGraphicVisibility(r,a.visible),F(a,a.visible)}return!1}_resetIterators(){this._iterators.active=null,this._iterators.visible=null,this._iterators.sort=null}_ensureActiveGraphicsIterator(){return this._iterators.active||(this._iterators.active=pi(this._active)),this._iterators.active}_resetActiveGraphicsIterator(){this._iterators.active=null}_ensureVisibleGraphicsIterator(){return this._iterators.visible||(this._iterators.visible=pi(this._visible)),this._iterators.visible}_resetVisibleGraphicsIterator(){this._iterators.visible=null}_ensureSortGraphicsIterator(){return this._iterators.sort||(this._iterators.sort=ui(this._visible,this._iterators.sortArray,this.visibilityGroup)),this._iterators.sort}_resetSortGraphicsIterator(){this._iterators.sort=null}_collectGraphics3DGraphics(i,t,e,s,r){const a=i.graphics3DGraphic;if(a.destroyed)return;const o=i.info[this.visibilityGroup];if(!a.isVisible(L.GRAPHIC,X.DECONFLICTION))return void(o.culled=!0);const c=this.getGraphicsLayers(a);S(o.aabr);let n=null;for(const l of c){if(!this.layerSupportsDeconfliction(l))continue;const a=l.stageObject.geometries[0].material;if(null==n){if(n=gi,this._getProjectionInfo(l,t,n),n.isOutsideScreen||this._isCulledBySlice(i,J)||null!=e&&bi(n,e,s))return void(o.culled=!0);n.distanceToTerrain=r?.(n.positionView)??0}this._expandBoundingRect(o,l,a,n)}null==n?o.culled=!0:(o.distance=n.distance,o.distanceToTerrain=n.distanceToTerrain,o.culled=!1)}_getProjectionInfo(i,t,e){const s=this._viewState.camera,r=i.stageObject,a=r.geometries[0],o=a.material,c=A(r.boundingVolumeWorldSpace.bounds);l(J,c,s.viewMatrix);const n=a.attributes,h=n.get(U.NORMAL).data,d=n.get(U.CENTEROFFSETANDDISTANCE).data;o.applyShaderOffsetsView(J,h,r.transformation,d,s,e.scaleInfo,J),m(Q,J[0],J[1],J[2],1),b(Z,Q,s.projectionMatrix),p(e.positionNDC,Z,1/Z[3]),o.applyShaderOffsetsNDC(e.positionNDC,d,s,e.positionNDC,$),e.distanceWithoutPolygonOffset=s.depthNDCToWorld($[2]),e.distance=$[2]===e.positionNDC[2]?e.distanceWithoutPolygonOffset:s.depthNDCToWorld(e.positionNDC[2]),m(Z,e.positionNDC[0],e.positionNDC[1],e.positionNDC[2],1),b(Q,Z,t),g(Q,Q,1/Q[3]),u(e.positionView,J[0],J[1],J[2])}_isCulledBySlice(i,t){return i.slicePlaneEnabled&&this._viewState.slicePlaneEnabled&&P(this._viewState.slicePlane,t)}_expandBoundingRect(i,t,s,{positionNDC:r,scaleInfo:a}){const{fullWidth:o,fullHeight:c,pixelRatio:n}=this._viewState.camera,l=t.getScreenSize(_i);W(l,a.factor,l),l[0]*=n,l[1]*=n;const h=D(s.calculateRelativeScreenBounds(l,a.factorAlignment.scale*n,ri),e(0,o,.5+.5*r[0]),e(0,c,.5+.5*r[1])),p=this.marginFactor;if(0!==p){const i=p*Math.min(N(h),B(h));h[0]-=i,h[1]-=i,h[2]+=i,h[3]+=i}I(i.aabr,h,i.aabr)}_isConflicted(i){const t=i.graphics3DGraphic.graphic.uid,e=i.info[this.visibilityGroup];let s=!0;for(let r=Math.floor(e.aabr[0]/this._accBinsSizeX);r<=Math.floor(e.aabr[2]/this._accBinsSizeX);r++)if(!(r<0||r>=this._accBinsNumX))for(let i=Math.floor(e.aabr[1]/this._accBinsSizeY);i<=Math.floor(e.aabr[3]/this._accBinsSizeY);i++){if(i<0||i>=this._accBinsNumY)continue;s=!1;const a=this._accBins[r][i];for(let i=0;i<a.length;i++){const s=a.data[i],r=s.info[this.visibilityGroup];if(r&&r.visible&&s.graphics3DGraphic.graphic.uid!==t&&(this.accNumTests++,j(r.aabr,e.aabr)))return!0}}return s}_initBins(i,t){if(null==this._accBins){this._accBins=[];for(let i=0;i<this._accBinsNumX;i++){this._accBins.push([]);const i=this._accBins[this._accBins.length-1];for(let t=0;t<this._accBinsNumY;t++)i.push(new s)}}else for(let e=0;e<this._accBinsNumX;e++)for(let i=0;i<this._accBinsNumY;i++)this._accBins[e][i].clear();this._accBinsSizeX=i/this._accBinsNumX,this._accBinsSizeY=t/this._accBinsNumY,this.accNumTests=0}_addToBins(i){const t=i.info[this.visibilityGroup],e=Math.floor(t.aabr[0]/this._accBinsSizeX),s=Math.floor(t.aabr[2]/this._accBinsSizeX),r=Math.floor(t.aabr[1]/this._accBinsSizeY),a=Math.floor(t.aabr[3]/this._accBinsSizeY);for(let o=e;o<=s;o++)if(!(o<0||o>=this._accBinsNumX))for(let t=r;t<=a;t++)t<0||t>=this._accBinsNumY||this._accBins[o][t].push(i)}_setGraphicVisibility(i,t){const e=i.graphics3DGraphic;e.destroyed||(e.setVisibilityFlag(this.visibilityGroup,X.DECONFLICTION,t),this.visibilityGroup===L.LABEL&&this.view.labeler.setLabelGraphicVisibility(e,t))}};function hi(i,t){const e=i.graphics3DGraphic;e.destroyed||e.setVisibilityFlag(t,X.DECONFLICTION,!0)}function*pi(i){if(Map.prototype.entries){const t=i.entries();for(let i=t.next();!i.done;i=t.next())yield i.value[1]}else yield*i.values()}function*ui(i,t,e){t.clear(),i.forEach(((i,s)=>{const r=t.pushNew();r.id=s,r.visible=i.graphics3DGraphic.getVisibilityFlag(e,X.DECONFLICTION);const a=i.info?.[e];r.prio=i.graphics3DGraphic.deconflictionPriority,r.distance=a?a.distance:Number.MAX_VALUE,r.behindTerrain=!!a&&0!==a.distanceToTerrain&&a.distance>a.distanceToTerrain})),yield;const s=t.iterableSort(((i,t)=>i.behindTerrain!==t.behindTerrain?+i.behindTerrain-+t.behindTerrain:i.prio!==t.prio?t.prio-i.prio:i.distance!==t.distance?i.distance-t.distance:i.visible!==t.visible?+t.visible-+i.visible:i.id-t.id));for(let r=s.next();!r.done;r=s.next())yield;t.forAll((t=>{const e=i.get(t.id);e&&(i.delete(t.id),i.set(t.id,e))})),t.clear()}i([r({constructOnly:!0})],li.prototype,"view",void 0),i([r({type:Boolean,readOnly:!0})],li.prototype,"updating",null),i([r({readOnly:!0})],li.prototype,"_updatingHandles",void 0),li=i([a("esri.views.3d.layers.graphics.Deconflictor")],li);class di{constructor(){this.id=0,this.visible=!1,this.behindTerrain=!1,this.prio=0,this.distance=0}}class fi{constructor(i=null,t=null,e=null){this.active=i,this.visible=t,this.sort=e,this.sortArray=new s({allocator:i=>i||new di})}}const _i=n();class mi{constructor(){this.positionView=_(),this.positionNDC=_(),this.distance=0,this.distanceToTerrain=0,this.distanceWithoutPolygonOffset=0,this.scaleInfo=new q}get isOutsideScreen(){const i=this.positionNDC;return i[0]<-1||i[1]<-1||i[2]<-1||i[0]>=1||i[1]>=1||i[2]>=1}}function bi(i,t,e){return d(ei.direction,i.positionView),u(ei.origin,0,0,0),!!x(t,ei,si)&&i.distanceWithoutPolygonOffset>e}const gi=new mi;export{li as Deconflictor,oi as DeconflictorGraphic,ni as DeconflictorViewState,ci as State};
