/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.32/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import r from"../../../../core/Accessor.js";import{toConst as o}from"../../../../core/compilerUtils.js";import t from"../../../../core/Evented.js";import{property as s}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/Logger.js";import"../../../../core/RandomLCG.js";import{subclass as c}from"../../../../core/accessorSupport/decorators/subclass.js";import{projectBoundingSphere as n}from"../../../../geometry/projection/projectBoundingSphere.js";import{create as i,toRect as p}from"../../../../geometry/support/aaBoundingBox.js";import{create as a,intersects as m}from"../../../../geometry/support/aaBoundingRect.js";import{f as u}from"../../../../chunks/sphere.js";import{ForAllFeaturesReturnType as f}from"../II3SMeshView3D.js";const l=i();let d=class extends r{constructor(e){super(e),this.events=new t}forEach(e){this.forAllFeatures((r=>(e(r),f.CONTINUE)))}forEachBounds(e,r){for(const o of e)r(this.getFeatureExtent(o,l))}forEachInBounds(e,r){this.forAllFeatures((t=>{const s=this.getFeatureExtent(o(t),y);return m(e,p(s,j))&&r(o(t)),f.CONTINUE}),(r=>{if(n(r.node.serviceMbsInIndexSR,this.sourceSpatialReference,h,this.viewSpatialReference),h[0]>=e[0]&&h[2]<=e[2]&&h[1]>=e[1]&&h[3]<=e[3])return f.CONTINUE;const o=Math.max(e[0],Math.min(h[0],e[2])),t=Math.max(e[1],Math.min(h[1],e[3])),s=h[0]-o,c=h[1]-t;return s*s+c*c<=h[3]*h[3]?f.CONTINUE:f.SKIP}))}};e([s({constructOnly:!0})],d.prototype,"featureAdapter",void 0),e([s({constructOnly:!0})],d.prototype,"forAllFeatures",void 0),e([s({constructOnly:!0})],d.prototype,"getFeatureExtent",void 0),e([s({constructOnly:!0})],d.prototype,"sourceSpatialReference",void 0),e([s({constructOnly:!0})],d.prototype,"viewSpatialReference",void 0),d=e([c("esri.views.3d.layers.i3s.I3SQueryFeatureStore")],d);const h=u(0,0,0,0),y=i(),j=a();export{d as I3SQueryFeatureStore};
