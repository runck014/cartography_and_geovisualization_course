/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.32/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../core/Collection.js";import s from"../../core/ReactiveMap.js";import r from"../../core/ReactiveSet.js";import{generateUID as i}from"../../core/uid.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as n}from"../../core/accessorSupport/decorators/subclass.js";import{UpdatingHandles as p}from"../../core/support/UpdatingHandles.js";import{extractSubstitutionTemplatesFromString as l}from"../../layers/support/fieldUtils.js";import{prependExpressionPrefix as a,prependFieldPrefix as d,isExpressionReference as u,extractExpressionNameFromString as m,isLegacyFieldMapsExpressionReference as h}from"./featureFormUtils.js";import c from"./InputBase.js";import{assembleStringFromParts as f,splitStringIntoParts as x}from"./support/textElementInputUtils.js";import{compileTextElementMarkdownToHTML as _}from"./support/textManipulationUtils.js";import{renderingSanitizer as g}from"../support/widgetUtils.js";let y=class extends c{constructor(e){super(e),this.group=null,this.id=`TextElementInput-${i()}`,this.type="text",this._expressionReferences=new s,this._expressionsUsed=new r,this._fieldsUsed=new r,this._literalParts=new t,this._templateParts=new t,this._updatingHandles=new p}initialize(){const{rawText:e}=this;e?"markdown"===this.textFormat?this._updatingHandles.addPromise(_(e).then((e=>this._initializeTextParts(e)))):this._initializeTextParts(e):this._literalParts.push("")}get expressionsUsed(){return Array.from(this._expressionsUsed)}get fieldsIndex(){return this.layer.fieldsIndex}set fieldsIndex(e){this._overrideIfSome("fieldsIndex",e)}get fieldsUsed(){return Array.from(this._fieldsUsed)}get rawText(){return this.element.text}get text(){const e=this._templateParts.map((e=>`${this._expressionReferences.get(e)?.lastEvaluatedValue??""}`));return g.sanitize(f(this._literalParts,e))}get textFormat(){return this.element.textFormat}get updating(){return this._updatingHandles.updating||Array.from(this._expressionReferences.values()).some((e=>e?.updating))}setExpressionExecutor(e,t){this._expressionReferences.set(a(e),t)}setFieldExecutor(e,t){this._expressionReferences.set(d(e),t)}_initializeTextParts(e){const{fieldsIndex:t}=this,{literals:s,templates:r}=x(e),i=[],o=[];for(let n=0;n<r.length;n++){const e=s[n],p=l(r[n])[0];if(u(p))this._expressionsUsed.add(m(p)),this._expressionReferences.set(p,null),i.push(e),o.push(p);else if(h(p)){this._expressionsUsed.add(p);const t=a(p);this._expressionReferences.set(t,null),i.push(e),o.push(t)}else if(t?.has(p)){const s=t.normalizeFieldName(p);this._fieldsUsed.add(s);const r=d(s);this._expressionReferences.set(r,null),i.push(e),o.push(r)}else s[n+1]=e.concat(p,s[n+1])}i.push(s.at(-1)),this._literalParts.addMany(i),this._templateParts.addMany(o)}};e([o()],y.prototype,"expressionsUsed",null),e([o()],y.prototype,"fieldsIndex",null),e([o()],y.prototype,"fieldsUsed",null),e([o()],y.prototype,"group",void 0),e([o()],y.prototype,"id",void 0),e([o()],y.prototype,"rawText",null),e([o()],y.prototype,"text",null),e([o()],y.prototype,"textFormat",null),e([o()],y.prototype,"type",void 0),e([o()],y.prototype,"updating",null),y=e([n("esri.widgets.FeatureForm.TextElementInput")],y);const j=y;export{j as default};
