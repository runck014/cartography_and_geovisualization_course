/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.32/esri/copyright.txt for details.
*/
import{_ as r}from"../../chunks/tslib.es6.js";import o from"../../request.js";import t from"../../core/Collection.js";import e from"../../core/JSONSupport.js";import{urlToObject as s}from"../../core/urlUtils.js";import{property as i}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as c}from"../../core/accessorSupport/decorators/subclass.js";import p from"./SceneModification.js";var n;let m=n=class extends(e.JSONSupportMixin(t.ofType(p))){constructor(r){super(r),this.url=null}clone(){return new n({url:this.url,items:this.items.map((r=>r.clone()))})}toJSON(r){return this.toArray().map((o=>o.toJSON(r))).filter((r=>!!r.geometry))}static fromJSON(r,o){const t=new n;for(const e of r)t.add(p.fromJSON(e,o));return t}static async fromUrl(r,t,e){const i={url:s(r),origin:"service"},c=await o(r,{responseType:"json",signal:e?.signal}),m=t.toJSON(),a=[];for(const o of c.data)a.push(p.fromJSON({...o,geometry:{...o.geometry,spatialReference:m}},i));return new n({url:r,items:a})}};r([i({type:String})],m.prototype,"url",void 0),m=n=r([c("esri.layers.support.SceneModifications")],m);const a=m;export{a as default};
