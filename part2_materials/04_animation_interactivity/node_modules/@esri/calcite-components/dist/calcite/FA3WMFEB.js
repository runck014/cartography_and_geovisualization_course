/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
v3.0.3 */
import{a as j}from"./MOOKY73S.js";import{a as G}from"./B4YIOD3M.js";import{J as Z,e as C,f as w,g as d,w as P,x as f,z as $}from"./74XIV7EB.js";function S(s,i,h){let a=i[0]-s[0],n=h[0]-i[0],o=i[1]-s[1],l=h[1]-i[1],r=o/(a||n<0&&0),e=l/(n||a<0&&0),t=(r*n+e*a)/(a+n);return(Math.sign(r)+Math.sign(e))*Math.min(Math.abs(r),Math.abs(e),.5*Math.abs(t))||0}function H(s,i,h){let a=i[0]-s[0],n=i[1]-s[1];return a?(3*n/a-h)/2:h}function O(s,i,h,a,n){let[o,l]=s,[r,e]=i,t=(r-o)/3,c=n([o+t,l+t*h]).join(","),g=n([r-t,e-t*a]).join(","),p=n([r,e]).join(",");return`C ${c} ${g} ${p}`}function E({width:s,height:i,min:h,max:a}){let n=a[0]-h[0],o=a[1]-h[1];return l=>{let r=(l[0]-h[0])/n*s,e=i-(l[1]-h[1])/o*i;return[r,e]}}function R(s){let[i,h]=s[0],a=[i,h],n=[i,h];return s.reduce(({min:o,max:l},[r,e])=>({min:[Math.min(o[0],r),Math.min(o[1],e)],max:[Math.max(l[0],r),Math.max(l[1],e)]}),{min:a,max:n})}function q({data:s,min:i,max:h,t:a}){if(s.length===0)return"";let[n,o]=a(s[0]),[l,r]=a(i),[e]=a(h),t,c,g,p=s.reduce((x,M,m)=>{if(c=s[m-2],g=s[m-1],m>1){let u=S(c,g,M),k=t===void 0?H(c,g,u):t,L=O(c,g,k,u,a);return t=u,`${x} ${L}`}return x},`M ${l},${r} L ${l},${o} L ${n},${o}`),y=s[s.length-1],v=O(g,y,t,H(g,y,t),a);return`${p} ${v} L ${e},${r} Z`}var I=C`:host{display:block;block-size:100%}.svg{fill:currentColor;stroke:transparent;margin:0;display:block;block-size:100%;inline-size:100%;padding:0}.svg .graph-path--highlight{fill:var(--calcite-graph-highlight-fill-color, var(--calcite-color-brand));opacity:.5}:host([hidden]){display:none}[hidden]{display:none}`,b={svg:"svg",graphPath:"graph-path",graphPathHighlight:"graph-path--highlight"},z=class extends P{constructor(){super(...arguments),this.graphId=`calcite-graph-${G()}`,this.resizeObserver=j("resize",()=>this.requestUpdate()),this.data=[]}static{this.properties={colorStops:0,data:0,highlightMax:9,highlightMin:9,max:11,min:11}}static{this.styles=I}connectedCallback(){super.connectedCallback(),this.resizeObserver?.observe(this.el)}disconnectedCallback(){super.disconnectedCallback(),this.resizeObserver?.disconnect()}render(){let{data:i,colorStops:h,el:a,highlightMax:n,highlightMin:o,min:l,max:r}=this,e=this.graphId,{clientHeight:t,clientWidth:c}=a;if(!i||i.length===0)return w`<svg aria-hidden=true class=${f(b.svg)} height=${t??$} preserveAspectRatio=none viewBox=${`0 0 ${c} ${t}`} width=${c??$}></svg>`;let{min:g,max:p}=R(i),y=g,v=p;(l<g[0]||l>g[0])&&(y=[l,0]),(r>p[0]||r<p[0])&&(v=[r,p[1]]);let x=E({min:y,max:v,width:c,height:t}),[M]=x([o,v[1]]),[m]=x([n,v[1]]),u=q({data:i,min:g,max:p,t:x}),k=h?`url(#linear-gradient-${e})`:void 0;return w`<svg aria-hidden=true class=${f(b.svg)} height=${t??$} preserveAspectRatio=none viewBox=${`0 0 ${c} ${t}`} width=${c??$}>${h?d`<defs><linearGradient .id=${`linear-gradient-${e}`} x1=0 x2=1 y1=0 y2=0>${h.map(({offset:L,color:A,opacity:B})=>d`<stop offset=${`${L*100}%`} stop-color=${A??$} stop-opacity=${B??$} />`)}</linearGradient></defs>`:null}${o!==void 0?[d`<mask height=100% .id=${`${e}1`} width=100% x=0% y=0%><path d=${`
            M 0,0
            L ${M-1},0
            L ${M-1},${t}
            L 0,${t}
            Z
          `} fill=white /></mask>`,d`<mask height=100% .id=${`${e}2`} width=100% x=0% y=0%><path d=${`
            M ${M+1},0
            L ${m-1},0
            L ${m-1},${t}
            L ${M+1}, ${t}
            Z
          `} fill=white /></mask>`,d`<mask height=100% .id=${`${e}3`} width=100% x=0% y=0%><path d=${`
                M ${m+1},0
                L ${c},0
                L ${c},${t}
                L ${m+1}, ${t}
                Z
              `} fill=white /></mask>`,d`<path class=${f(b.graphPath)} d=${u??$} fill=${k??$} mask=${`url(#${e}1)`} />`,d`<path class=${f(b.graphPathHighlight)} d=${u??$} fill=${k??$} mask=${`url(#${e}2)`} />`,d`<path class=${f(b.graphPath)} d=${u??$} fill=${k??$} mask=${`url(#${e}3)`} />`]:d`<path class=${f(b.graphPath)} d=${u??$} fill=${k??$} />`}</svg>`}};Z("calcite-graph",z);export{z as Graph};
