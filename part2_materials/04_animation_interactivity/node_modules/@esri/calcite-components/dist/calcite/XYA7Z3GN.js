/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
v3.0.3 */
import{a as y}from"./6NCXFBVI.js";import{a as z}from"./MOOKY73S.js";import{e as k,r as w}from"./SXYTJEOC.js";import"./B4YIOD3M.js";import{G as g,J as x,K as $,e as f,f as m,g as p,j as r,w as b,x as v}from"./74XIV7EB.js";var R={flipRtl:"flip-rtl"},C={},d={},D={s:16,m:24,l:32};function O({icon:t,scale:i}){let e=D[i],s=N(t),n=s.charAt(s.length-1)==="F";return`${n?s.substring(0,s.length-1):s}${e}${n?"F":""}`}async function L(t){let i=O(t),e=I(i);if(e)return e;d[i]||(d[i]=fetch($(`./assets/icon/${i}.json`)).then(n=>n.json()).catch(()=>(y.error(`${t.icon} (${t.scale}) icon failed to load`),"")));let s=await d[i];return C[i]=s,s}function P(t){return I(O(t))}function I(t){return C[t]}function N(t){let i=!isNaN(Number(t.charAt(0))),e=t.split("-");if(e.length>0){let s=/[a-z]/i;t=e.map((n,a)=>n.replace(s,function(o,c){return a===0&&c===0?o:o.toUpperCase()})).join("")}return i?`i${t}`:t}var j=f`:host{display:inline-flex;color:var(--calcite-icon-color, var(--calcite-ui-icon-color, currentColor))}:host([scale=s]){inline-size:16px;block-size:16px;min-inline-size:16px;min-block-size:16px}:host([scale=m]){inline-size:24px;block-size:24px;min-inline-size:24px;min-block-size:24px}:host([scale=l]){inline-size:32px;block-size:32px;min-inline-size:32px;min-block-size:32px}.flip-rtl{transform:scaleX(-1)}.svg{display:block}:host([hidden]){display:none}[hidden]{display:none}`,u=class extends b{constructor(){super(...arguments),this.visible=!1,this.flipRtl=!1,this.icon=null,this.preload=!1,this.scale="m"}static{this.properties={pathData:16,visible:16,flipRtl:7,icon:3,preload:7,scale:3,textLabel:1}}static{this.styles=j}connectedCallback(){if(super.connectedCallback(),this.preload){this.visible=!0,this.loadIconPathData();return}this.visible||this.waitUntilVisible(()=>{this.visible=!0,this.loadIconPathData()})}willUpdate(i){(i.has("icon")&&(this.hasUpdated||this.icon!==null)||i.has("scale")&&(this.hasUpdated||this.scale!=="m"))&&this.loadIconPathData()}disconnectedCallback(){super.disconnectedCallback(),this.intersectionObserver?.disconnect(),this.intersectionObserver=null}async loadIconPathData(){let{icon:i,scale:e,visible:s}=this;if(!g()||!i||!s)return;let n={icon:i,scale:e},a=P(n)||await L(n);i===this.icon&&(this.pathData=a)}waitUntilVisible(i){if(this.intersectionObserver=z("intersection",e=>{e.forEach(s=>{s.isIntersecting&&(this.intersectionObserver.disconnect(),this.intersectionObserver=null,i())})},{rootMargin:"50px"}),!this.intersectionObserver){i();return}this.intersectionObserver.observe(this.el)}render(){let{el:i,flipRtl:e,pathData:s,scale:n,textLabel:a}=this,o=k(i),c=D[n],h=!!a,U=[].concat(s||"");return this.el.ariaHidden=w(!h),this.el.ariaLabel=h?a:null,this.el.role=h?"img":null,m`<svg aria-hidden=true class=${v({[R.flipRtl]:o==="rtl"&&e,svg:!0})} fill=currentColor height=100% viewBox=${`0 0 ${c} ${c}`} width=100% xmlns=http://www.w3.org/2000/svg>${U.map(l=>typeof l=="string"?p`<path d=${l??r} />`:p`<path d=${l.d??r} opacity=${("opacity"in l?l.opacity:1)??r} />`)}</svg>`}};x("calcite-icon",u);export{u as Icon};
