/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
v3.0.3 */
import{a as w,b}from"./6NJ2XB5D.js";import{a as n,b as c}from"./SZONZQBZ.js";import{l as p}from"./SXYTJEOC.js";import{b as h}from"./H6E5FODU.js";import"./B4YIOD3M.js";import{J as r,e as s,f as e,w as i,x as l,z as d}from"./74XIV7EB.js";var k={button:"button"},F={plus:"plus"},R=s`:host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{display:flex;background-color:transparent}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.interaction-container{display:contents}calcite-button{--tw-shadow: 0 6px 20px -4px rgba(0, 0, 0, .1), 0 4px 12px -2px rgba(0, 0, 0, .08);--tw-shadow-colored: 0 6px 20px -4px var(--tw-shadow-color), 0 4px 12px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}calcite-button:hover{--tw-shadow: var(--calcite-shadow-md);--tw-shadow-colored: var(--calcite-shadow-md);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}calcite-button:active{--tw-shadow: 0 2px 12px -4px rgba(0, 0, 0, .2), 0 2px 4px -2px rgba(0, 0, 0, .16);--tw-shadow-colored: 0 2px 12px -4px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}:host([hidden]){display:none}[hidden]{display:none}`,t=class extends i{constructor(){super(...arguments),this.buttonEl=n(),this.appearance="solid",this.disabled=!1,this.icon=F.plus,this.iconFlipRtl=!1,this.kind="brand",this.loading=!1,this.scale="m",this.textEnabled=!1}static{this.properties={appearance:3,disabled:7,icon:3,iconFlipRtl:7,kind:3,label:1,loading:7,scale:3,text:1,textEnabled:7}}static{this.styles=R}async setFocus(){await h(this),p(this.buttonEl.value)}load(){}updated(){w(this)}loaded(){}render(){let{appearance:x,kind:u,disabled:a,loading:m,scale:f,textEnabled:v,icon:g,label:o,text:y,iconFlipRtl:$}=this,E=v?null:o||y||null;return b({disabled:a,children:e`<calcite-button .appearance=${x==="solid"?"solid":"outline-fill"} class=${l(k.button)} .disabled=${a} .iconFlipRtl=${$?"start":null} .iconStart=${g} .kind=${u} .label=${o} .loading=${m} round .scale=${f} title=${E??d} type=button width=auto ${c(this.buttonEl)}>${this.textEnabled?this.text:null}</calcite-button>`})}};r("calcite-fab",t);export{t as Fab};
