/// <reference types="../../index.d.ts" />
import { default as Color } from 'color';
import { PropertyValues } from 'lit';
import { PublicLitElement as LitElement, JsxNode, TargetedEvent } from '@arcgis/lumina';
import { Scale } from '../interfaces';
import { LoadableComponent } from '../../utils/loadable';
import { NumberingSystem } from '../../utils/locale';
import { ColorPicker } from '../calcite-color-picker/customElement.js';

export declare class ColorPickerHexInput extends LitElement {
    /** When `true`, the component will allow updates to the color's alpha value. */
    alphaChannel: boolean;
    /**
     * When `true`, an empty color (`undefined`) will be allowed as a `value`.
     *
     * When `false`, a color value is enforced, and clearing the input or blurring will restore the last valid `value`.
     */
    allowEmpty: boolean;
    /**
     * Specifies accessible label for the input field.
     *
     * @deprecated use `messages` instead
     */
    hexLabel: string;
    /** Specifies the Unicode numeral system used by the component for localization. */
    numberingSystem?: NumberingSystem;
    /** Specifies the size of the component. */
    scale: Scale;
    /** The hex value. */
    value: string;
    /** Sets focus on the component. */
    setFocus(): Promise<void>;
    /** Emitted when the hex value changes. */
    readonly calciteColorPickerHexInputChange: TargetedEvent<this, undefined>;
}
