import { makeGenericController as l } from "@arcgis/components-controllers";
import { createFocusTrap as p } from "focus-trap";
import { c as v } from "./focusTrapComponent.js";
/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
v3.0.3 */
function o(r, { focusTrapOptions: e }, i) {
  return !e?.extraContainers && !i ? r : [r, ...n(e?.extraContainers), ...n(i)];
}
function n(r = []) {
  return Array.isArray(r) ? r : [r];
}
const F = (r) => l((e, i) => {
  let a, u, c;
  const d = r.focusTrapOptions;
  i.onConnected(() => {
    e[r.triggerProp] && a && s.activate();
  }), i.onUpdate((t) => {
    e.hasUpdated && t.has("focusTrapDisabled") && (e.focusTrapDisabled ? s.deactivate() : s.activate());
  }), i.onDisconnected(() => s.deactivate());
  const s = {
    activate: () => {
      const t = u || e.el;
      if (t.isConnected) {
        if (!a) {
          const f = {
            ...d,
            ...e.focusTrapOptions
          };
          c ||= o(t, e), a = p(c, v(t, f));
        }
        (typeof e.focusTrapDisabledOverride == "function" ? !e.focusTrapDisabledOverride() : !e.focusTrapDisabled) && a.activate();
      }
    },
    deactivate: () => a?.deactivate(),
    overrideFocusTrapEl: (t) => {
      if (a)
        throw new Error("Focus trap already created");
      u = t;
    },
    setExtraContainers: (t) => {
      const f = u || e.el;
      c = o(f, e, t);
    },
    updateContainerElements: () => a?.updateContainerElements(c)
  };
  return s;
});
export {
  F as u
};
